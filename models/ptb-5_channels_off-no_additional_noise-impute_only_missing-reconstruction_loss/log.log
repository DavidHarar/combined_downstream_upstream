2024-10-28 11:25 - INFO - Fit the preprocessing pipeline
2024-10-28 11:25 - INFO - Training using device: cuda
2024-10-28 11:25 - INFO - Creating generators
2024-10-28 11:25 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 11:25 - INFO - * Model:
2024-10-28 11:25 - INFO - * -----------
2024-10-28 11:25 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 11:25 - INFO - * -----------
2024-10-28 11:33 - INFO - ---------------------------------------------
2024-10-28 11:33 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 11:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85834
2024-10-28 11:33 - INFO - 	 Train Loss: 0.075
2024-10-28 11:33 - INFO - 	 Val. Loss: 0.069
2024-10-28 11:33 - INFO - 	 ROC-AUC: 0.985
2024-10-28 11:33 - INFO - 	 PR-AUC: 0.858
2024-10-28 11:33 - INFO - 	 Best Val. Loss: 0.069
2024-10-28 11:33 - INFO - 	 Best ROC-AUC: 0.985
2024-10-28 11:33 - INFO - 	 Best PR-AUC: 0.858
2024-10-28 11:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 11:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-28 11:33 - INFO - ---------------------------------------------
2024-10-28 11:41 - INFO - ---------------------------------------------
2024-10-28 11:41 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-28 11:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87679
2024-10-28 11:41 - INFO - 	 Train Loss: 0.066
2024-10-28 11:41 - INFO - 	 Val. Loss: 0.063
2024-10-28 11:41 - INFO - 	 ROC-AUC: 0.988
2024-10-28 11:41 - INFO - 	 PR-AUC: 0.877
2024-10-28 11:41 - INFO - 	 Best Val. Loss: 0.063
2024-10-28 11:41 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 11:41 - INFO - 	 Best PR-AUC: 0.877
2024-10-28 11:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-28 11:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-28 11:41 - INFO - ---------------------------------------------
2024-10-28 11:49 - INFO - ---------------------------------------------
2024-10-28 11:49 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-28 11:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88765
2024-10-28 11:49 - INFO - 	 Train Loss: 0.064
2024-10-28 11:49 - INFO - 	 Val. Loss: 0.057
2024-10-28 11:49 - INFO - 	 ROC-AUC: 0.989
2024-10-28 11:49 - INFO - 	 PR-AUC: 0.888
2024-10-28 11:49 - INFO - 	 Best Val. Loss: 0.057
2024-10-28 11:49 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 11:49 - INFO - 	 Best PR-AUC: 0.888
2024-10-28 11:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 11:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-28 11:49 - INFO - ---------------------------------------------
2024-10-28 11:57 - INFO - ---------------------------------------------
2024-10-28 11:57 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-28 11:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89284
2024-10-28 11:57 - INFO - 	 Train Loss: 0.062
2024-10-28 11:57 - INFO - 	 Val. Loss: 0.057
2024-10-28 11:57 - INFO - 	 ROC-AUC: 0.989
2024-10-28 11:57 - INFO - 	 PR-AUC: 0.893
2024-10-28 11:57 - INFO - 	 Best Val. Loss: 0.057
2024-10-28 11:57 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 11:57 - INFO - 	 Best PR-AUC: 0.893
2024-10-28 11:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 11:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-28 11:57 - INFO - ---------------------------------------------
2024-10-28 12:05 - INFO - ---------------------------------------------
2024-10-28 12:05 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 12:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89732
2024-10-28 12:05 - INFO - 	 Train Loss: 0.061
2024-10-28 12:05 - INFO - 	 Val. Loss: 0.056
2024-10-28 12:05 - INFO - 	 ROC-AUC: 0.989
2024-10-28 12:05 - INFO - 	 PR-AUC: 0.897
2024-10-28 12:05 - INFO - 	 Best Val. Loss: 0.056
2024-10-28 12:05 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 12:05 - INFO - 	 Best PR-AUC: 0.897
2024-10-28 12:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 12:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-28 12:05 - INFO - ---------------------------------------------
2024-10-28 12:13 - INFO - ---------------------------------------------
2024-10-28 12:13 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 12:13 - INFO - 	 Train Loss: 0.059
2024-10-28 12:13 - INFO - 	 Val. Loss: 0.056
2024-10-28 12:13 - INFO - 	 ROC-AUC: 0.988
2024-10-28 12:13 - INFO - 	 PR-AUC: 0.893
2024-10-28 12:13 - INFO - 	 Best Val. Loss: 0.056
2024-10-28 12:13 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 12:13 - INFO - 	 Best PR-AUC: 0.897
2024-10-28 12:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 12:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-28 12:13 - INFO - ---------------------------------------------
2024-10-28 12:21 - INFO - ---------------------------------------------
2024-10-28 12:21 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-28 12:21 - INFO - 	 Train Loss: 0.058
2024-10-28 12:21 - INFO - 	 Val. Loss: 0.057
2024-10-28 12:21 - INFO - 	 ROC-AUC: 0.989
2024-10-28 12:21 - INFO - 	 PR-AUC: 0.889
2024-10-28 12:21 - INFO - 	 Best Val. Loss: 0.056
2024-10-28 12:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 12:21 - INFO - 	 Best PR-AUC: 0.897
2024-10-28 12:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 12:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-28 12:21 - INFO - ---------------------------------------------
2024-10-28 12:29 - INFO - ---------------------------------------------
2024-10-28 12:29 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-28 12:29 - INFO - 	 Train Loss: 0.056
2024-10-28 12:29 - INFO - 	 Val. Loss: 0.055
2024-10-28 12:29 - INFO - 	 ROC-AUC: 0.990
2024-10-28 12:29 - INFO - 	 PR-AUC: 0.894
2024-10-28 12:29 - INFO - 	 Best Val. Loss: 0.055
2024-10-28 12:29 - INFO - 	 Best ROC-AUC: 0.990
2024-10-28 12:29 - INFO - 	 Best PR-AUC: 0.897
2024-10-28 12:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-28 12:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-28 12:29 - INFO - ---------------------------------------------
2024-10-28 12:40 - INFO - Fit the preprocessing pipeline
2024-10-28 12:40 - INFO - Training using device: cuda
2024-10-28 12:40 - INFO - Creating generators
2024-10-28 12:40 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 12:40 - INFO - * Model:
2024-10-28 12:40 - INFO - * -----------
2024-10-28 12:40 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 12:40 - INFO - * -----------
2024-10-28 12:48 - INFO - ---------------------------------------------
2024-10-28 12:48 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 12:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86209
2024-10-28 12:48 - INFO - 	 Train Loss: 0.075
2024-10-28 12:48 - INFO - 	 Val. Loss: 0.067
2024-10-28 12:48 - INFO - 	 ROC-AUC: 0.986
2024-10-28 12:48 - INFO - 	 PR-AUC: 0.862
2024-10-28 12:48 - INFO - 	 Best Val. Loss: 0.067
2024-10-28 12:48 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 12:48 - INFO - 	 Best PR-AUC: 0.862
2024-10-28 12:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 12:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-28 12:48 - INFO - ---------------------------------------------
2024-10-28 12:56 - INFO - ---------------------------------------------
2024-10-28 12:56 - INFO - Epoch: 02 | Time: 8m 3s
2024-10-28 12:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87158
2024-10-28 12:56 - INFO - 	 Train Loss: 0.061
2024-10-28 12:56 - INFO - 	 Val. Loss: 0.059
2024-10-28 12:56 - INFO - 	 ROC-AUC: 0.987
2024-10-28 12:56 - INFO - 	 PR-AUC: 0.872
2024-10-28 12:56 - INFO - 	 Best Val. Loss: 0.059
2024-10-28 12:56 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 12:56 - INFO - 	 Best PR-AUC: 0.872
2024-10-28 12:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 12:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-28 12:56 - INFO - ---------------------------------------------
2024-10-28 13:04 - INFO - ---------------------------------------------
2024-10-28 13:04 - INFO - Epoch: 03 | Time: 8m 3s
2024-10-28 13:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88061
2024-10-28 13:04 - INFO - 	 Train Loss: 0.058
2024-10-28 13:04 - INFO - 	 Val. Loss: 0.056
2024-10-28 13:04 - INFO - 	 ROC-AUC: 0.988
2024-10-28 13:04 - INFO - 	 PR-AUC: 0.881
2024-10-28 13:04 - INFO - 	 Best Val. Loss: 0.056
2024-10-28 13:04 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 13:04 - INFO - 	 Best PR-AUC: 0.881
2024-10-28 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-28 13:04 - INFO - ---------------------------------------------
2024-10-28 13:12 - INFO - ---------------------------------------------
2024-10-28 13:12 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-28 13:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88803
2024-10-28 13:12 - INFO - 	 Train Loss: 0.057
2024-10-28 13:12 - INFO - 	 Val. Loss: 0.056
2024-10-28 13:12 - INFO - 	 ROC-AUC: 0.986
2024-10-28 13:12 - INFO - 	 PR-AUC: 0.888
2024-10-28 13:12 - INFO - 	 Best Val. Loss: 0.056
2024-10-28 13:12 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 13:12 - INFO - 	 Best PR-AUC: 0.888
2024-10-28 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-28 13:12 - INFO - ---------------------------------------------
2024-10-28 13:20 - INFO - ---------------------------------------------
2024-10-28 13:20 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 13:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8945
2024-10-28 13:20 - INFO - 	 Train Loss: 0.054
2024-10-28 13:20 - INFO - 	 Val. Loss: 0.052
2024-10-28 13:20 - INFO - 	 ROC-AUC: 0.988
2024-10-28 13:20 - INFO - 	 PR-AUC: 0.895
2024-10-28 13:20 - INFO - 	 Best Val. Loss: 0.052
2024-10-28 13:20 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 13:20 - INFO - 	 Best PR-AUC: 0.895
2024-10-28 13:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 13:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-28 13:20 - INFO - ---------------------------------------------
2024-10-28 13:28 - INFO - ---------------------------------------------
2024-10-28 13:28 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 13:28 - INFO - 	 Train Loss: 0.055
2024-10-28 13:28 - INFO - 	 Val. Loss: 0.053
2024-10-28 13:28 - INFO - 	 ROC-AUC: 0.988
2024-10-28 13:28 - INFO - 	 PR-AUC: 0.889
2024-10-28 13:28 - INFO - 	 Best Val. Loss: 0.052
2024-10-28 13:28 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 13:28 - INFO - 	 Best PR-AUC: 0.895
2024-10-28 13:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 13:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-28 13:28 - INFO - ---------------------------------------------
2024-10-28 13:36 - INFO - ---------------------------------------------
2024-10-28 13:36 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-28 13:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89615
2024-10-28 13:36 - INFO - 	 Train Loss: 0.053
2024-10-28 13:36 - INFO - 	 Val. Loss: 0.053
2024-10-28 13:36 - INFO - 	 ROC-AUC: 0.989
2024-10-28 13:36 - INFO - 	 PR-AUC: 0.896
2024-10-28 13:36 - INFO - 	 Best Val. Loss: 0.052
2024-10-28 13:36 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 13:36 - INFO - 	 Best PR-AUC: 0.896
2024-10-28 13:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 13:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-28 13:36 - INFO - ---------------------------------------------
2024-10-28 13:44 - INFO - ---------------------------------------------
2024-10-28 13:44 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-28 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89821
2024-10-28 13:44 - INFO - 	 Train Loss: 0.052
2024-10-28 13:44 - INFO - 	 Val. Loss: 0.051
2024-10-28 13:44 - INFO - 	 ROC-AUC: 0.989
2024-10-28 13:44 - INFO - 	 PR-AUC: 0.898
2024-10-28 13:44 - INFO - 	 Best Val. Loss: 0.051
2024-10-28 13:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 13:44 - INFO - 	 Best PR-AUC: 0.898
2024-10-28 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-28 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-28 13:44 - INFO - ---------------------------------------------
2024-10-28 13:52 - INFO - ---------------------------------------------
2024-10-28 13:52 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-28 13:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90778
2024-10-28 13:52 - INFO - 	 Train Loss: 0.052
2024-10-28 13:52 - INFO - 	 Val. Loss: 0.049
2024-10-28 13:52 - INFO - 	 ROC-AUC: 0.989
2024-10-28 13:52 - INFO - 	 PR-AUC: 0.908
2024-10-28 13:52 - INFO - 	 Best Val. Loss: 0.049
2024-10-28 13:52 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 13:52 - INFO - 	 Best PR-AUC: 0.908
2024-10-28 13:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-28 13:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-28 13:52 - INFO - ---------------------------------------------
2024-10-28 14:00 - INFO - ---------------------------------------------
2024-10-28 14:00 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 14:00 - INFO - 	 Train Loss: 0.051
2024-10-28 14:00 - INFO - 	 Val. Loss: 0.050
2024-10-28 14:00 - INFO - 	 ROC-AUC: 0.988
2024-10-28 14:00 - INFO - 	 PR-AUC: 0.901
2024-10-28 14:00 - INFO - 	 Best Val. Loss: 0.049
2024-10-28 14:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 14:00 - INFO - 	 Best PR-AUC: 0.908
2024-10-28 14:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-28 14:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-28 14:00 - INFO - ---------------------------------------------
2024-10-28 14:03 - INFO - Fit the preprocessing pipeline
2024-10-28 14:03 - INFO - Training using device: cuda
2024-10-28 14:03 - INFO - Creating generators
2024-10-28 14:03 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 14:03 - INFO - * Model:
2024-10-28 14:03 - INFO - * -----------
2024-10-28 14:03 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 14:03 - INFO - * -----------
2024-10-28 14:11 - INFO - ---------------------------------------------
2024-10-28 14:11 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 14:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86115
2024-10-28 14:11 - INFO - 	 Train Loss: 0.068
2024-10-28 14:11 - INFO - 	 Val. Loss: 0.062
2024-10-28 14:11 - INFO - 	 ROC-AUC: 0.986
2024-10-28 14:11 - INFO - 	 PR-AUC: 0.861
2024-10-28 14:11 - INFO - 	 Best Val. Loss: 0.062
2024-10-28 14:11 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 14:11 - INFO - 	 Best PR-AUC: 0.861
2024-10-28 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-28 14:11 - INFO - ---------------------------------------------
2024-10-28 14:19 - INFO - ---------------------------------------------
2024-10-28 14:19 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-28 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87464
2024-10-28 14:19 - INFO - 	 Train Loss: 0.054
2024-10-28 14:19 - INFO - 	 Val. Loss: 0.054
2024-10-28 14:19 - INFO - 	 ROC-AUC: 0.986
2024-10-28 14:19 - INFO - 	 PR-AUC: 0.875
2024-10-28 14:19 - INFO - 	 Best Val. Loss: 0.054
2024-10-28 14:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 14:19 - INFO - 	 Best PR-AUC: 0.875
2024-10-28 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-28 14:19 - INFO - ---------------------------------------------
2024-10-28 14:27 - INFO - ---------------------------------------------
2024-10-28 14:27 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-28 14:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8768
2024-10-28 14:27 - INFO - 	 Train Loss: 0.052
2024-10-28 14:27 - INFO - 	 Val. Loss: 0.051
2024-10-28 14:27 - INFO - 	 ROC-AUC: 0.987
2024-10-28 14:27 - INFO - 	 PR-AUC: 0.877
2024-10-28 14:27 - INFO - 	 Best Val. Loss: 0.051
2024-10-28 14:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 14:27 - INFO - 	 Best PR-AUC: 0.877
2024-10-28 14:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 14:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-28 14:27 - INFO - ---------------------------------------------
2024-10-28 14:35 - INFO - ---------------------------------------------
2024-10-28 14:35 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-28 14:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88986
2024-10-28 14:35 - INFO - 	 Train Loss: 0.051
2024-10-28 14:35 - INFO - 	 Val. Loss: 0.050
2024-10-28 14:35 - INFO - 	 ROC-AUC: 0.987
2024-10-28 14:35 - INFO - 	 PR-AUC: 0.890
2024-10-28 14:35 - INFO - 	 Best Val. Loss: 0.050
2024-10-28 14:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 14:35 - INFO - 	 Best PR-AUC: 0.890
2024-10-28 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-28 14:35 - INFO - ---------------------------------------------
2024-10-28 14:43 - INFO - ---------------------------------------------
2024-10-28 14:43 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 14:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89603
2024-10-28 14:43 - INFO - 	 Train Loss: 0.048
2024-10-28 14:43 - INFO - 	 Val. Loss: 0.045
2024-10-28 14:43 - INFO - 	 ROC-AUC: 0.989
2024-10-28 14:43 - INFO - 	 PR-AUC: 0.896
2024-10-28 14:43 - INFO - 	 Best Val. Loss: 0.045
2024-10-28 14:43 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 14:43 - INFO - 	 Best PR-AUC: 0.896
2024-10-28 14:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 14:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-28 14:43 - INFO - ---------------------------------------------
2024-10-28 14:51 - INFO - ---------------------------------------------
2024-10-28 14:51 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 14:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89871
2024-10-28 14:51 - INFO - 	 Train Loss: 0.049
2024-10-28 14:51 - INFO - 	 Val. Loss: 0.045
2024-10-28 14:51 - INFO - 	 ROC-AUC: 0.988
2024-10-28 14:51 - INFO - 	 PR-AUC: 0.899
2024-10-28 14:51 - INFO - 	 Best Val. Loss: 0.045
2024-10-28 14:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 14:51 - INFO - 	 Best PR-AUC: 0.899
2024-10-28 14:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 14:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-28 14:51 - INFO - ---------------------------------------------
2024-10-28 14:59 - INFO - ---------------------------------------------
2024-10-28 14:59 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-28 14:59 - INFO - 	 Train Loss: 0.047
2024-10-28 14:59 - INFO - 	 Val. Loss: 0.048
2024-10-28 14:59 - INFO - 	 ROC-AUC: 0.988
2024-10-28 14:59 - INFO - 	 PR-AUC: 0.891
2024-10-28 14:59 - INFO - 	 Best Val. Loss: 0.045
2024-10-28 14:59 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 14:59 - INFO - 	 Best PR-AUC: 0.899
2024-10-28 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-28 14:59 - INFO - ---------------------------------------------
2024-10-28 15:07 - INFO - ---------------------------------------------
2024-10-28 15:07 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-28 15:07 - INFO - 	 Train Loss: 0.047
2024-10-28 15:07 - INFO - 	 Val. Loss: 0.045
2024-10-28 15:07 - INFO - 	 ROC-AUC: 0.988
2024-10-28 15:07 - INFO - 	 PR-AUC: 0.896
2024-10-28 15:07 - INFO - 	 Best Val. Loss: 0.045
2024-10-28 15:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 15:07 - INFO - 	 Best PR-AUC: 0.899
2024-10-28 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-28 15:07 - INFO - ---------------------------------------------
2024-10-28 15:15 - INFO - ---------------------------------------------
2024-10-28 15:15 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-28 15:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90105
2024-10-28 15:15 - INFO - 	 Train Loss: 0.046
2024-10-28 15:15 - INFO - 	 Val. Loss: 0.044
2024-10-28 15:15 - INFO - 	 ROC-AUC: 0.989
2024-10-28 15:15 - INFO - 	 PR-AUC: 0.901
2024-10-28 15:15 - INFO - 	 Best Val. Loss: 0.044
2024-10-28 15:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 15:15 - INFO - 	 Best PR-AUC: 0.901
2024-10-28 15:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 15:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-28 15:15 - INFO - ---------------------------------------------
2024-10-28 15:23 - INFO - ---------------------------------------------
2024-10-28 15:23 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 15:23 - INFO - 	 Train Loss: 0.045
2024-10-28 15:23 - INFO - 	 Val. Loss: 0.047
2024-10-28 15:23 - INFO - 	 ROC-AUC: 0.987
2024-10-28 15:23 - INFO - 	 PR-AUC: 0.892
2024-10-28 15:23 - INFO - 	 Best Val. Loss: 0.044
2024-10-28 15:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 15:23 - INFO - 	 Best PR-AUC: 0.901
2024-10-28 15:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 15:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-28 15:23 - INFO - ---------------------------------------------
2024-10-28 15:25 - INFO - Fit the preprocessing pipeline
2024-10-28 15:25 - INFO - Training using device: cuda
2024-10-28 15:25 - INFO - Creating generators
2024-10-28 15:25 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 15:25 - INFO - * Model:
2024-10-28 15:25 - INFO - * -----------
2024-10-28 15:25 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 15:25 - INFO - * -----------
2024-10-28 15:33 - INFO - ---------------------------------------------
2024-10-28 15:33 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 15:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85802
2024-10-28 15:33 - INFO - 	 Train Loss: 0.061
2024-10-28 15:33 - INFO - 	 Val. Loss: 0.055
2024-10-28 15:33 - INFO - 	 ROC-AUC: 0.986
2024-10-28 15:33 - INFO - 	 PR-AUC: 0.858
2024-10-28 15:33 - INFO - 	 Best Val. Loss: 0.055
2024-10-28 15:33 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 15:33 - INFO - 	 Best PR-AUC: 0.858
2024-10-28 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-28 15:33 - INFO - ---------------------------------------------
2024-10-28 15:41 - INFO - ---------------------------------------------
2024-10-28 15:41 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-28 15:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87371
2024-10-28 15:41 - INFO - 	 Train Loss: 0.048
2024-10-28 15:41 - INFO - 	 Val. Loss: 0.048
2024-10-28 15:41 - INFO - 	 ROC-AUC: 0.987
2024-10-28 15:41 - INFO - 	 PR-AUC: 0.874
2024-10-28 15:41 - INFO - 	 Best Val. Loss: 0.048
2024-10-28 15:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 15:41 - INFO - 	 Best PR-AUC: 0.874
2024-10-28 15:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 15:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-28 15:41 - INFO - ---------------------------------------------
2024-10-28 15:49 - INFO - ---------------------------------------------
2024-10-28 15:49 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-28 15:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8747
2024-10-28 15:49 - INFO - 	 Train Loss: 0.046
2024-10-28 15:49 - INFO - 	 Val. Loss: 0.045
2024-10-28 15:49 - INFO - 	 ROC-AUC: 0.987
2024-10-28 15:49 - INFO - 	 PR-AUC: 0.875
2024-10-28 15:49 - INFO - 	 Best Val. Loss: 0.045
2024-10-28 15:49 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 15:49 - INFO - 	 Best PR-AUC: 0.875
2024-10-28 15:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 15:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-28 15:49 - INFO - ---------------------------------------------
2024-10-28 15:58 - INFO - ---------------------------------------------
2024-10-28 15:58 - INFO - Epoch: 04 | Time: 8m 3s
2024-10-28 15:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8837
2024-10-28 15:58 - INFO - 	 Train Loss: 0.045
2024-10-28 15:58 - INFO - 	 Val. Loss: 0.044
2024-10-28 15:58 - INFO - 	 ROC-AUC: 0.986
2024-10-28 15:58 - INFO - 	 PR-AUC: 0.884
2024-10-28 15:58 - INFO - 	 Best Val. Loss: 0.044
2024-10-28 15:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 15:58 - INFO - 	 Best PR-AUC: 0.884
2024-10-28 15:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 15:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-28 15:58 - INFO - ---------------------------------------------
2024-10-28 16:06 - INFO - ---------------------------------------------
2024-10-28 16:06 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 16:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89861
2024-10-28 16:06 - INFO - 	 Train Loss: 0.041
2024-10-28 16:06 - INFO - 	 Val. Loss: 0.039
2024-10-28 16:06 - INFO - 	 ROC-AUC: 0.989
2024-10-28 16:06 - INFO - 	 PR-AUC: 0.899
2024-10-28 16:06 - INFO - 	 Best Val. Loss: 0.039
2024-10-28 16:06 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 16:06 - INFO - 	 Best PR-AUC: 0.899
2024-10-28 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-28 16:06 - INFO - ---------------------------------------------
2024-10-28 16:14 - INFO - ---------------------------------------------
2024-10-28 16:14 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 16:14 - INFO - 	 Train Loss: 0.043
2024-10-28 16:14 - INFO - 	 Val. Loss: 0.039
2024-10-28 16:14 - INFO - 	 ROC-AUC: 0.988
2024-10-28 16:14 - INFO - 	 PR-AUC: 0.898
2024-10-28 16:14 - INFO - 	 Best Val. Loss: 0.039
2024-10-28 16:14 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 16:14 - INFO - 	 Best PR-AUC: 0.899
2024-10-28 16:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 16:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-28 16:14 - INFO - ---------------------------------------------
2024-10-28 16:22 - INFO - ---------------------------------------------
2024-10-28 16:22 - INFO - Epoch: 07 | Time: 8m 3s
2024-10-28 16:22 - INFO - 	 Train Loss: 0.041
2024-10-28 16:22 - INFO - 	 Val. Loss: 0.041
2024-10-28 16:22 - INFO - 	 ROC-AUC: 0.988
2024-10-28 16:22 - INFO - 	 PR-AUC: 0.893
2024-10-28 16:22 - INFO - 	 Best Val. Loss: 0.039
2024-10-28 16:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 16:22 - INFO - 	 Best PR-AUC: 0.899
2024-10-28 16:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 16:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-28 16:22 - INFO - ---------------------------------------------
2024-10-28 16:30 - INFO - ---------------------------------------------
2024-10-28 16:30 - INFO - Epoch: 08 | Time: 8m 3s
2024-10-28 16:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89863
2024-10-28 16:30 - INFO - 	 Train Loss: 0.041
2024-10-28 16:30 - INFO - 	 Val. Loss: 0.039
2024-10-28 16:30 - INFO - 	 ROC-AUC: 0.988
2024-10-28 16:30 - INFO - 	 PR-AUC: 0.899
2024-10-28 16:30 - INFO - 	 Best Val. Loss: 0.039
2024-10-28 16:30 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 16:30 - INFO - 	 Best PR-AUC: 0.899
2024-10-28 16:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 16:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-28 16:30 - INFO - ---------------------------------------------
2024-10-28 16:38 - INFO - ---------------------------------------------
2024-10-28 16:38 - INFO - Epoch: 09 | Time: 8m 3s
2024-10-28 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90248
2024-10-28 16:38 - INFO - 	 Train Loss: 0.039
2024-10-28 16:38 - INFO - 	 Val. Loss: 0.038
2024-10-28 16:38 - INFO - 	 ROC-AUC: 0.989
2024-10-28 16:38 - INFO - 	 PR-AUC: 0.902
2024-10-28 16:38 - INFO - 	 Best Val. Loss: 0.038
2024-10-28 16:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 16:38 - INFO - 	 Best PR-AUC: 0.902
2024-10-28 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 16:38 - INFO - ---------------------------------------------
2024-10-28 16:46 - INFO - ---------------------------------------------
2024-10-28 16:46 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 16:46 - INFO - 	 Train Loss: 0.039
2024-10-28 16:46 - INFO - 	 Val. Loss: 0.039
2024-10-28 16:46 - INFO - 	 ROC-AUC: 0.987
2024-10-28 16:46 - INFO - 	 PR-AUC: 0.897
2024-10-28 16:46 - INFO - 	 Best Val. Loss: 0.038
2024-10-28 16:46 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 16:46 - INFO - 	 Best PR-AUC: 0.902
2024-10-28 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 16:46 - INFO - ---------------------------------------------
2024-10-28 16:48 - INFO - Fit the preprocessing pipeline
2024-10-28 16:48 - INFO - Training using device: cuda
2024-10-28 16:48 - INFO - Creating generators
2024-10-28 16:48 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 16:48 - INFO - * Model:
2024-10-28 16:48 - INFO - * -----------
2024-10-28 16:48 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 16:48 - INFO - * -----------
2024-10-28 16:56 - INFO - ---------------------------------------------
2024-10-28 16:56 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 16:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86533
2024-10-28 16:56 - INFO - 	 Train Loss: 0.054
2024-10-28 16:56 - INFO - 	 Val. Loss: 0.050
2024-10-28 16:56 - INFO - 	 ROC-AUC: 0.986
2024-10-28 16:56 - INFO - 	 PR-AUC: 0.865
2024-10-28 16:56 - INFO - 	 Best Val. Loss: 0.050
2024-10-28 16:56 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 16:56 - INFO - 	 Best PR-AUC: 0.865
2024-10-28 16:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 16:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-28 16:56 - INFO - ---------------------------------------------
2024-10-28 17:04 - INFO - ---------------------------------------------
2024-10-28 17:04 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-28 17:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87494
2024-10-28 17:04 - INFO - 	 Train Loss: 0.041
2024-10-28 17:04 - INFO - 	 Val. Loss: 0.042
2024-10-28 17:04 - INFO - 	 ROC-AUC: 0.987
2024-10-28 17:04 - INFO - 	 PR-AUC: 0.875
2024-10-28 17:04 - INFO - 	 Best Val. Loss: 0.042
2024-10-28 17:04 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 17:04 - INFO - 	 Best PR-AUC: 0.875
2024-10-28 17:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 17:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-28 17:04 - INFO - ---------------------------------------------
2024-10-28 17:12 - INFO - ---------------------------------------------
2024-10-28 17:12 - INFO - Epoch: 03 | Time: 8m 3s
2024-10-28 17:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87532
2024-10-28 17:12 - INFO - 	 Train Loss: 0.039
2024-10-28 17:12 - INFO - 	 Val. Loss: 0.038
2024-10-28 17:12 - INFO - 	 ROC-AUC: 0.987
2024-10-28 17:12 - INFO - 	 PR-AUC: 0.875
2024-10-28 17:12 - INFO - 	 Best Val. Loss: 0.038
2024-10-28 17:12 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 17:12 - INFO - 	 Best PR-AUC: 0.875
2024-10-28 17:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 17:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-28 17:12 - INFO - ---------------------------------------------
2024-10-28 17:20 - INFO - ---------------------------------------------
2024-10-28 17:20 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-28 17:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88228
2024-10-28 17:20 - INFO - 	 Train Loss: 0.038
2024-10-28 17:20 - INFO - 	 Val. Loss: 0.038
2024-10-28 17:20 - INFO - 	 ROC-AUC: 0.987
2024-10-28 17:20 - INFO - 	 PR-AUC: 0.882
2024-10-28 17:20 - INFO - 	 Best Val. Loss: 0.038
2024-10-28 17:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 17:20 - INFO - 	 Best PR-AUC: 0.882
2024-10-28 17:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 17:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-28 17:20 - INFO - ---------------------------------------------
2024-10-28 17:29 - INFO - ---------------------------------------------
2024-10-28 17:29 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88697
2024-10-28 17:29 - INFO - 	 Train Loss: 0.035
2024-10-28 17:29 - INFO - 	 Val. Loss: 0.035
2024-10-28 17:29 - INFO - 	 ROC-AUC: 0.988
2024-10-28 17:29 - INFO - 	 PR-AUC: 0.887
2024-10-28 17:29 - INFO - 	 Best Val. Loss: 0.035
2024-10-28 17:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 17:29 - INFO - 	 Best PR-AUC: 0.887
2024-10-28 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-28 17:29 - INFO - ---------------------------------------------
2024-10-28 17:37 - INFO - ---------------------------------------------
2024-10-28 17:37 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8911
2024-10-28 17:37 - INFO - 	 Train Loss: 0.037
2024-10-28 17:37 - INFO - 	 Val. Loss: 0.033
2024-10-28 17:37 - INFO - 	 ROC-AUC: 0.988
2024-10-28 17:37 - INFO - 	 PR-AUC: 0.891
2024-10-28 17:37 - INFO - 	 Best Val. Loss: 0.033
2024-10-28 17:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 17:37 - INFO - 	 Best PR-AUC: 0.891
2024-10-28 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-28 17:37 - INFO - ---------------------------------------------
2024-10-28 17:45 - INFO - ---------------------------------------------
2024-10-28 17:45 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-28 17:45 - INFO - 	 Train Loss: 0.035
2024-10-28 17:45 - INFO - 	 Val. Loss: 0.034
2024-10-28 17:45 - INFO - 	 ROC-AUC: 0.988
2024-10-28 17:45 - INFO - 	 PR-AUC: 0.888
2024-10-28 17:45 - INFO - 	 Best Val. Loss: 0.033
2024-10-28 17:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 17:45 - INFO - 	 Best PR-AUC: 0.891
2024-10-28 17:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 17:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-28 17:45 - INFO - ---------------------------------------------
2024-10-28 17:53 - INFO - ---------------------------------------------
2024-10-28 17:53 - INFO - Epoch: 08 | Time: 8m 3s
2024-10-28 17:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8916
2024-10-28 17:53 - INFO - 	 Train Loss: 0.035
2024-10-28 17:53 - INFO - 	 Val. Loss: 0.034
2024-10-28 17:53 - INFO - 	 ROC-AUC: 0.988
2024-10-28 17:53 - INFO - 	 PR-AUC: 0.892
2024-10-28 17:53 - INFO - 	 Best Val. Loss: 0.033
2024-10-28 17:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 17:53 - INFO - 	 Best PR-AUC: 0.892
2024-10-28 17:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 17:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-28 17:53 - INFO - ---------------------------------------------
2024-10-28 18:01 - INFO - ---------------------------------------------
2024-10-28 18:01 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-28 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9021
2024-10-28 18:01 - INFO - 	 Train Loss: 0.034
2024-10-28 18:01 - INFO - 	 Val. Loss: 0.032
2024-10-28 18:01 - INFO - 	 ROC-AUC: 0.989
2024-10-28 18:01 - INFO - 	 PR-AUC: 0.902
2024-10-28 18:01 - INFO - 	 Best Val. Loss: 0.032
2024-10-28 18:01 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 18:01 - INFO - 	 Best PR-AUC: 0.902
2024-10-28 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-28 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-28 18:01 - INFO - ---------------------------------------------
2024-10-28 18:09 - INFO - ---------------------------------------------
2024-10-28 18:09 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 18:09 - INFO - 	 Train Loss: 0.033
2024-10-28 18:09 - INFO - 	 Val. Loss: 0.034
2024-10-28 18:09 - INFO - 	 ROC-AUC: 0.987
2024-10-28 18:09 - INFO - 	 PR-AUC: 0.893
2024-10-28 18:09 - INFO - 	 Best Val. Loss: 0.032
2024-10-28 18:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 18:09 - INFO - 	 Best PR-AUC: 0.902
2024-10-28 18:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-28 18:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-28 18:09 - INFO - ---------------------------------------------
2024-10-28 18:11 - INFO - Fit the preprocessing pipeline
2024-10-28 18:11 - INFO - Training using device: cuda
2024-10-28 18:11 - INFO - Creating generators
2024-10-28 18:11 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 18:11 - INFO - * Model:
2024-10-28 18:11 - INFO - * -----------
2024-10-28 18:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 18:11 - INFO - * -----------
2024-10-28 18:19 - INFO - ---------------------------------------------
2024-10-28 18:19 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 18:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8627
2024-10-28 18:19 - INFO - 	 Train Loss: 0.048
2024-10-28 18:19 - INFO - 	 Val. Loss: 0.045
2024-10-28 18:19 - INFO - 	 ROC-AUC: 0.986
2024-10-28 18:19 - INFO - 	 PR-AUC: 0.863
2024-10-28 18:19 - INFO - 	 Best Val. Loss: 0.045
2024-10-28 18:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 18:19 - INFO - 	 Best PR-AUC: 0.863
2024-10-28 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-28 18:19 - INFO - ---------------------------------------------
2024-10-28 18:27 - INFO - ---------------------------------------------
2024-10-28 18:27 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-28 18:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87408
2024-10-28 18:27 - INFO - 	 Train Loss: 0.035
2024-10-28 18:27 - INFO - 	 Val. Loss: 0.037
2024-10-28 18:27 - INFO - 	 ROC-AUC: 0.987
2024-10-28 18:27 - INFO - 	 PR-AUC: 0.874
2024-10-28 18:27 - INFO - 	 Best Val. Loss: 0.037
2024-10-28 18:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 18:27 - INFO - 	 Best PR-AUC: 0.874
2024-10-28 18:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 18:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-28 18:27 - INFO - ---------------------------------------------
2024-10-28 18:35 - INFO - ---------------------------------------------
2024-10-28 18:35 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-28 18:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88234
2024-10-28 18:35 - INFO - 	 Train Loss: 0.033
2024-10-28 18:35 - INFO - 	 Val. Loss: 0.031
2024-10-28 18:35 - INFO - 	 ROC-AUC: 0.988
2024-10-28 18:35 - INFO - 	 PR-AUC: 0.882
2024-10-28 18:35 - INFO - 	 Best Val. Loss: 0.031
2024-10-28 18:35 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 18:35 - INFO - 	 Best PR-AUC: 0.882
2024-10-28 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-28 18:35 - INFO - ---------------------------------------------
2024-10-28 18:43 - INFO - ---------------------------------------------
2024-10-28 18:43 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-28 18:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8824
2024-10-28 18:43 - INFO - 	 Train Loss: 0.031
2024-10-28 18:43 - INFO - 	 Val. Loss: 0.031
2024-10-28 18:43 - INFO - 	 ROC-AUC: 0.987
2024-10-28 18:43 - INFO - 	 PR-AUC: 0.882
2024-10-28 18:43 - INFO - 	 Best Val. Loss: 0.031
2024-10-28 18:43 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 18:43 - INFO - 	 Best PR-AUC: 0.882
2024-10-28 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-28 18:43 - INFO - ---------------------------------------------
2024-10-28 18:51 - INFO - ---------------------------------------------
2024-10-28 18:51 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 18:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89188
2024-10-28 18:51 - INFO - 	 Train Loss: 0.029
2024-10-28 18:51 - INFO - 	 Val. Loss: 0.029
2024-10-28 18:51 - INFO - 	 ROC-AUC: 0.988
2024-10-28 18:51 - INFO - 	 PR-AUC: 0.892
2024-10-28 18:51 - INFO - 	 Best Val. Loss: 0.029
2024-10-28 18:51 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 18:51 - INFO - 	 Best PR-AUC: 0.892
2024-10-28 18:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 18:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-28 18:51 - INFO - ---------------------------------------------
2024-10-28 18:59 - INFO - ---------------------------------------------
2024-10-28 18:59 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 18:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89611
2024-10-28 18:59 - INFO - 	 Train Loss: 0.030
2024-10-28 18:59 - INFO - 	 Val. Loss: 0.027
2024-10-28 18:59 - INFO - 	 ROC-AUC: 0.988
2024-10-28 18:59 - INFO - 	 PR-AUC: 0.896
2024-10-28 18:59 - INFO - 	 Best Val. Loss: 0.027
2024-10-28 18:59 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 18:59 - INFO - 	 Best PR-AUC: 0.896
2024-10-28 18:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 18:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-28 18:59 - INFO - ---------------------------------------------
2024-10-28 19:08 - INFO - ---------------------------------------------
2024-10-28 19:08 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-28 19:08 - INFO - 	 Train Loss: 0.029
2024-10-28 19:08 - INFO - 	 Val. Loss: 0.029
2024-10-28 19:08 - INFO - 	 ROC-AUC: 0.989
2024-10-28 19:08 - INFO - 	 PR-AUC: 0.886
2024-10-28 19:08 - INFO - 	 Best Val. Loss: 0.027
2024-10-28 19:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 19:08 - INFO - 	 Best PR-AUC: 0.896
2024-10-28 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-28 19:08 - INFO - ---------------------------------------------
2024-10-28 19:16 - INFO - ---------------------------------------------
2024-10-28 19:16 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-28 19:16 - INFO - 	 Train Loss: 0.028
2024-10-28 19:16 - INFO - 	 Val. Loss: 0.028
2024-10-28 19:16 - INFO - 	 ROC-AUC: 0.988
2024-10-28 19:16 - INFO - 	 PR-AUC: 0.895
2024-10-28 19:16 - INFO - 	 Best Val. Loss: 0.027
2024-10-28 19:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 19:16 - INFO - 	 Best PR-AUC: 0.896
2024-10-28 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-28 19:16 - INFO - ---------------------------------------------
2024-10-28 19:24 - INFO - ---------------------------------------------
2024-10-28 19:24 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-28 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90224
2024-10-28 19:24 - INFO - 	 Train Loss: 0.028
2024-10-28 19:24 - INFO - 	 Val. Loss: 0.026
2024-10-28 19:24 - INFO - 	 ROC-AUC: 0.990
2024-10-28 19:24 - INFO - 	 PR-AUC: 0.902
2024-10-28 19:24 - INFO - 	 Best Val. Loss: 0.026
2024-10-28 19:24 - INFO - 	 Best ROC-AUC: 0.990
2024-10-28 19:24 - INFO - 	 Best PR-AUC: 0.902
2024-10-28 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 19:24 - INFO - ---------------------------------------------
2024-10-28 19:32 - INFO - ---------------------------------------------
2024-10-28 19:32 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 19:32 - INFO - 	 Train Loss: 0.028
2024-10-28 19:32 - INFO - 	 Val. Loss: 0.028
2024-10-28 19:32 - INFO - 	 ROC-AUC: 0.986
2024-10-28 19:32 - INFO - 	 PR-AUC: 0.887
2024-10-28 19:32 - INFO - 	 Best Val. Loss: 0.026
2024-10-28 19:32 - INFO - 	 Best ROC-AUC: 0.990
2024-10-28 19:32 - INFO - 	 Best PR-AUC: 0.902
2024-10-28 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 19:32 - INFO - ---------------------------------------------
2024-10-28 19:34 - INFO - Fit the preprocessing pipeline
2024-10-28 19:34 - INFO - Training using device: cuda
2024-10-28 19:34 - INFO - Creating generators
2024-10-28 19:34 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 19:34 - INFO - * Model:
2024-10-28 19:34 - INFO - * -----------
2024-10-28 19:34 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 19:34 - INFO - * -----------
2024-10-28 19:42 - INFO - ---------------------------------------------
2024-10-28 19:42 - INFO - Epoch: 01 | Time: 8m 3s
2024-10-28 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8598
2024-10-28 19:42 - INFO - 	 Train Loss: 0.041
2024-10-28 19:42 - INFO - 	 Val. Loss: 0.041
2024-10-28 19:42 - INFO - 	 ROC-AUC: 0.986
2024-10-28 19:42 - INFO - 	 PR-AUC: 0.860
2024-10-28 19:42 - INFO - 	 Best Val. Loss: 0.041
2024-10-28 19:42 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 19:42 - INFO - 	 Best PR-AUC: 0.860
2024-10-28 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-28 19:42 - INFO - ---------------------------------------------
2024-10-28 19:50 - INFO - ---------------------------------------------
2024-10-28 19:50 - INFO - Epoch: 02 | Time: 8m 3s
2024-10-28 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87185
2024-10-28 19:50 - INFO - 	 Train Loss: 0.029
2024-10-28 19:50 - INFO - 	 Val. Loss: 0.032
2024-10-28 19:50 - INFO - 	 ROC-AUC: 0.987
2024-10-28 19:50 - INFO - 	 PR-AUC: 0.872
2024-10-28 19:50 - INFO - 	 Best Val. Loss: 0.032
2024-10-28 19:50 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 19:50 - INFO - 	 Best PR-AUC: 0.872
2024-10-28 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-28 19:50 - INFO - ---------------------------------------------
2024-10-28 19:58 - INFO - ---------------------------------------------
2024-10-28 19:58 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-28 19:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8786
2024-10-28 19:58 - INFO - 	 Train Loss: 0.027
2024-10-28 19:58 - INFO - 	 Val. Loss: 0.026
2024-10-28 19:58 - INFO - 	 ROC-AUC: 0.988
2024-10-28 19:58 - INFO - 	 PR-AUC: 0.879
2024-10-28 19:58 - INFO - 	 Best Val. Loss: 0.026
2024-10-28 19:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 19:58 - INFO - 	 Best PR-AUC: 0.879
2024-10-28 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-28 19:58 - INFO - ---------------------------------------------
2024-10-28 20:06 - INFO - ---------------------------------------------
2024-10-28 20:06 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-28 20:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89053
2024-10-28 20:06 - INFO - 	 Train Loss: 0.025
2024-10-28 20:06 - INFO - 	 Val. Loss: 0.024
2024-10-28 20:06 - INFO - 	 ROC-AUC: 0.987
2024-10-28 20:06 - INFO - 	 PR-AUC: 0.891
2024-10-28 20:06 - INFO - 	 Best Val. Loss: 0.024
2024-10-28 20:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 20:06 - INFO - 	 Best PR-AUC: 0.891
2024-10-28 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-28 20:06 - INFO - ---------------------------------------------
2024-10-28 20:14 - INFO - ---------------------------------------------
2024-10-28 20:14 - INFO - Epoch: 05 | Time: 8m 3s
2024-10-28 20:14 - INFO - 	 Train Loss: 0.023
2024-10-28 20:14 - INFO - 	 Val. Loss: 0.022
2024-10-28 20:14 - INFO - 	 ROC-AUC: 0.989
2024-10-28 20:14 - INFO - 	 PR-AUC: 0.890
2024-10-28 20:14 - INFO - 	 Best Val. Loss: 0.022
2024-10-28 20:14 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 20:14 - INFO - 	 Best PR-AUC: 0.891
2024-10-28 20:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 20:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-28 20:14 - INFO - ---------------------------------------------
2024-10-28 20:22 - INFO - ---------------------------------------------
2024-10-28 20:22 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 20:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89443
2024-10-28 20:22 - INFO - 	 Train Loss: 0.024
2024-10-28 20:22 - INFO - 	 Val. Loss: 0.021
2024-10-28 20:22 - INFO - 	 ROC-AUC: 0.989
2024-10-28 20:22 - INFO - 	 PR-AUC: 0.894
2024-10-28 20:22 - INFO - 	 Best Val. Loss: 0.021
2024-10-28 20:22 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 20:22 - INFO - 	 Best PR-AUC: 0.894
2024-10-28 20:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 20:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-28 20:22 - INFO - ---------------------------------------------
2024-10-28 20:30 - INFO - ---------------------------------------------
2024-10-28 20:30 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-28 20:30 - INFO - 	 Train Loss: 0.023
2024-10-28 20:30 - INFO - 	 Val. Loss: 0.023
2024-10-28 20:30 - INFO - 	 ROC-AUC: 0.988
2024-10-28 20:30 - INFO - 	 PR-AUC: 0.888
2024-10-28 20:30 - INFO - 	 Best Val. Loss: 0.021
2024-10-28 20:30 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 20:30 - INFO - 	 Best PR-AUC: 0.894
2024-10-28 20:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 20:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-28 20:30 - INFO - ---------------------------------------------
2024-10-28 20:39 - INFO - ---------------------------------------------
2024-10-28 20:39 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-28 20:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8985
2024-10-28 20:39 - INFO - 	 Train Loss: 0.023
2024-10-28 20:39 - INFO - 	 Val. Loss: 0.021
2024-10-28 20:39 - INFO - 	 ROC-AUC: 0.988
2024-10-28 20:39 - INFO - 	 PR-AUC: 0.898
2024-10-28 20:39 - INFO - 	 Best Val. Loss: 0.021
2024-10-28 20:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 20:39 - INFO - 	 Best PR-AUC: 0.898
2024-10-28 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-28 20:39 - INFO - ---------------------------------------------
2024-10-28 20:47 - INFO - ---------------------------------------------
2024-10-28 20:47 - INFO - Epoch: 09 | Time: 8m 3s
2024-10-28 20:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9104
2024-10-28 20:47 - INFO - 	 Train Loss: 0.022
2024-10-28 20:47 - INFO - 	 Val. Loss: 0.019
2024-10-28 20:47 - INFO - 	 ROC-AUC: 0.990
2024-10-28 20:47 - INFO - 	 PR-AUC: 0.910
2024-10-28 20:47 - INFO - 	 Best Val. Loss: 0.019
2024-10-28 20:47 - INFO - 	 Best ROC-AUC: 0.990
2024-10-28 20:47 - INFO - 	 Best PR-AUC: 0.910
2024-10-28 20:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 20:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-28 20:47 - INFO - ---------------------------------------------
2024-10-28 20:55 - INFO - ---------------------------------------------
2024-10-28 20:55 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 20:55 - INFO - 	 Train Loss: 0.022
2024-10-28 20:55 - INFO - 	 Val. Loss: 0.021
2024-10-28 20:55 - INFO - 	 ROC-AUC: 0.987
2024-10-28 20:55 - INFO - 	 PR-AUC: 0.901
2024-10-28 20:55 - INFO - 	 Best Val. Loss: 0.019
2024-10-28 20:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-28 20:55 - INFO - 	 Best PR-AUC: 0.910
2024-10-28 20:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 20:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-28 20:55 - INFO - ---------------------------------------------
2024-10-28 20:57 - INFO - Fit the preprocessing pipeline
2024-10-28 20:57 - INFO - Training using device: cuda
2024-10-28 20:57 - INFO - Creating generators
2024-10-28 20:57 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 20:57 - INFO - * Model:
2024-10-28 20:57 - INFO - * -----------
2024-10-28 20:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 20:57 - INFO - * -----------
2024-10-28 21:05 - INFO - ---------------------------------------------
2024-10-28 21:05 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 21:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86153
2024-10-28 21:05 - INFO - 	 Train Loss: 0.034
2024-10-28 21:05 - INFO - 	 Val. Loss: 0.037
2024-10-28 21:05 - INFO - 	 ROC-AUC: 0.986
2024-10-28 21:05 - INFO - 	 PR-AUC: 0.862
2024-10-28 21:05 - INFO - 	 Best Val. Loss: 0.037
2024-10-28 21:05 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 21:05 - INFO - 	 Best PR-AUC: 0.862
2024-10-28 21:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 21:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-28 21:05 - INFO - ---------------------------------------------
2024-10-28 21:13 - INFO - ---------------------------------------------
2024-10-28 21:13 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-28 21:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87639
2024-10-28 21:13 - INFO - 	 Train Loss: 0.022
2024-10-28 21:13 - INFO - 	 Val. Loss: 0.026
2024-10-28 21:13 - INFO - 	 ROC-AUC: 0.987
2024-10-28 21:13 - INFO - 	 PR-AUC: 0.876
2024-10-28 21:13 - INFO - 	 Best Val. Loss: 0.026
2024-10-28 21:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 21:13 - INFO - 	 Best PR-AUC: 0.876
2024-10-28 21:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 21:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-28 21:13 - INFO - ---------------------------------------------
2024-10-28 21:21 - INFO - ---------------------------------------------
2024-10-28 21:21 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-28 21:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87776
2024-10-28 21:21 - INFO - 	 Train Loss: 0.020
2024-10-28 21:21 - INFO - 	 Val. Loss: 0.020
2024-10-28 21:21 - INFO - 	 ROC-AUC: 0.987
2024-10-28 21:21 - INFO - 	 PR-AUC: 0.878
2024-10-28 21:21 - INFO - 	 Best Val. Loss: 0.020
2024-10-28 21:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 21:21 - INFO - 	 Best PR-AUC: 0.878
2024-10-28 21:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 21:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-28 21:21 - INFO - ---------------------------------------------
2024-10-28 21:29 - INFO - ---------------------------------------------
2024-10-28 21:29 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-28 21:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88752
2024-10-28 21:29 - INFO - 	 Train Loss: 0.019
2024-10-28 21:29 - INFO - 	 Val. Loss: 0.018
2024-10-28 21:29 - INFO - 	 ROC-AUC: 0.987
2024-10-28 21:29 - INFO - 	 PR-AUC: 0.888
2024-10-28 21:29 - INFO - 	 Best Val. Loss: 0.018
2024-10-28 21:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 21:29 - INFO - 	 Best PR-AUC: 0.888
2024-10-28 21:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 21:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-28 21:29 - INFO - ---------------------------------------------
2024-10-28 21:37 - INFO - ---------------------------------------------
2024-10-28 21:37 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 21:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89063
2024-10-28 21:37 - INFO - 	 Train Loss: 0.017
2024-10-28 21:37 - INFO - 	 Val. Loss: 0.016
2024-10-28 21:37 - INFO - 	 ROC-AUC: 0.988
2024-10-28 21:37 - INFO - 	 PR-AUC: 0.891
2024-10-28 21:37 - INFO - 	 Best Val. Loss: 0.016
2024-10-28 21:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 21:37 - INFO - 	 Best PR-AUC: 0.891
2024-10-28 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-28 21:37 - INFO - ---------------------------------------------
2024-10-28 21:45 - INFO - ---------------------------------------------
2024-10-28 21:45 - INFO - Epoch: 06 | Time: 8m 3s
2024-10-28 21:45 - INFO - 	 Train Loss: 0.018
2024-10-28 21:45 - INFO - 	 Val. Loss: 0.016
2024-10-28 21:45 - INFO - 	 ROC-AUC: 0.988
2024-10-28 21:45 - INFO - 	 PR-AUC: 0.888
2024-10-28 21:45 - INFO - 	 Best Val. Loss: 0.016
2024-10-28 21:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 21:45 - INFO - 	 Best PR-AUC: 0.891
2024-10-28 21:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 21:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-28 21:45 - INFO - ---------------------------------------------
2024-10-28 21:53 - INFO - ---------------------------------------------
2024-10-28 21:53 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-28 21:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89232
2024-10-28 21:53 - INFO - 	 Train Loss: 0.017
2024-10-28 21:53 - INFO - 	 Val. Loss: 0.017
2024-10-28 21:53 - INFO - 	 ROC-AUC: 0.989
2024-10-28 21:53 - INFO - 	 PR-AUC: 0.892
2024-10-28 21:53 - INFO - 	 Best Val. Loss: 0.016
2024-10-28 21:53 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 21:53 - INFO - 	 Best PR-AUC: 0.892
2024-10-28 21:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 21:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-28 21:53 - INFO - ---------------------------------------------
2024-10-28 22:01 - INFO - ---------------------------------------------
2024-10-28 22:01 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-28 22:01 - INFO - 	 Train Loss: 0.016
2024-10-28 22:01 - INFO - 	 Val. Loss: 0.018
2024-10-28 22:01 - INFO - 	 ROC-AUC: 0.986
2024-10-28 22:01 - INFO - 	 PR-AUC: 0.875
2024-10-28 22:01 - INFO - 	 Best Val. Loss: 0.016
2024-10-28 22:01 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 22:01 - INFO - 	 Best PR-AUC: 0.892
2024-10-28 22:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 22:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-28 22:01 - INFO - ---------------------------------------------
2024-10-28 22:09 - INFO - ---------------------------------------------
2024-10-28 22:09 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-28 22:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9043
2024-10-28 22:09 - INFO - 	 Train Loss: 0.016
2024-10-28 22:09 - INFO - 	 Val. Loss: 0.014
2024-10-28 22:09 - INFO - 	 ROC-AUC: 0.989
2024-10-28 22:09 - INFO - 	 PR-AUC: 0.904
2024-10-28 22:09 - INFO - 	 Best Val. Loss: 0.014
2024-10-28 22:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 22:09 - INFO - 	 Best PR-AUC: 0.904
2024-10-28 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 22:09 - INFO - ---------------------------------------------
2024-10-28 22:18 - INFO - ---------------------------------------------
2024-10-28 22:18 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 22:18 - INFO - 	 Train Loss: 0.016
2024-10-28 22:18 - INFO - 	 Val. Loss: 0.015
2024-10-28 22:18 - INFO - 	 ROC-AUC: 0.987
2024-10-28 22:18 - INFO - 	 PR-AUC: 0.890
2024-10-28 22:18 - INFO - 	 Best Val. Loss: 0.014
2024-10-28 22:18 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 22:18 - INFO - 	 Best PR-AUC: 0.904
2024-10-28 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 22:18 - INFO - ---------------------------------------------
2024-10-28 22:20 - INFO - Fit the preprocessing pipeline
2024-10-28 22:20 - INFO - Training using device: cuda
2024-10-28 22:20 - INFO - Creating generators
2024-10-28 22:20 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 22:20 - INFO - * Model:
2024-10-28 22:20 - INFO - * -----------
2024-10-28 22:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 22:20 - INFO - * -----------
2024-10-28 22:28 - INFO - ---------------------------------------------
2024-10-28 22:28 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 22:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86553
2024-10-28 22:28 - INFO - 	 Train Loss: 0.027
2024-10-28 22:28 - INFO - 	 Val. Loss: 0.032
2024-10-28 22:28 - INFO - 	 ROC-AUC: 0.986
2024-10-28 22:28 - INFO - 	 PR-AUC: 0.866
2024-10-28 22:28 - INFO - 	 Best Val. Loss: 0.032
2024-10-28 22:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 22:28 - INFO - 	 Best PR-AUC: 0.866
2024-10-28 22:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-28 22:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-28 22:28 - INFO - ---------------------------------------------
2024-10-28 22:36 - INFO - ---------------------------------------------
2024-10-28 22:36 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-28 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86997
2024-10-28 22:36 - INFO - 	 Train Loss: 0.016
2024-10-28 22:36 - INFO - 	 Val. Loss: 0.021
2024-10-28 22:36 - INFO - 	 ROC-AUC: 0.987
2024-10-28 22:36 - INFO - 	 PR-AUC: 0.870
2024-10-28 22:36 - INFO - 	 Best Val. Loss: 0.021
2024-10-28 22:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-28 22:36 - INFO - 	 Best PR-AUC: 0.870
2024-10-28 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-28 22:36 - INFO - ---------------------------------------------
2024-10-28 22:44 - INFO - ---------------------------------------------
2024-10-28 22:44 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-28 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87506
2024-10-28 22:44 - INFO - 	 Train Loss: 0.014
2024-10-28 22:44 - INFO - 	 Val. Loss: 0.014
2024-10-28 22:44 - INFO - 	 ROC-AUC: 0.988
2024-10-28 22:44 - INFO - 	 PR-AUC: 0.875
2024-10-28 22:44 - INFO - 	 Best Val. Loss: 0.014
2024-10-28 22:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 22:44 - INFO - 	 Best PR-AUC: 0.875
2024-10-28 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-28 22:44 - INFO - ---------------------------------------------
2024-10-28 22:52 - INFO - ---------------------------------------------
2024-10-28 22:52 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-28 22:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88209
2024-10-28 22:52 - INFO - 	 Train Loss: 0.012
2024-10-28 22:52 - INFO - 	 Val. Loss: 0.012
2024-10-28 22:52 - INFO - 	 ROC-AUC: 0.987
2024-10-28 22:52 - INFO - 	 PR-AUC: 0.882
2024-10-28 22:52 - INFO - 	 Best Val. Loss: 0.012
2024-10-28 22:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 22:52 - INFO - 	 Best PR-AUC: 0.882
2024-10-28 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-28 22:52 - INFO - ---------------------------------------------
2024-10-28 23:00 - INFO - ---------------------------------------------
2024-10-28 23:00 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-28 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88579
2024-10-28 23:00 - INFO - 	 Train Loss: 0.010
2024-10-28 23:00 - INFO - 	 Val. Loss: 0.010
2024-10-28 23:00 - INFO - 	 ROC-AUC: 0.988
2024-10-28 23:00 - INFO - 	 PR-AUC: 0.886
2024-10-28 23:00 - INFO - 	 Best Val. Loss: 0.010
2024-10-28 23:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 23:00 - INFO - 	 Best PR-AUC: 0.886
2024-10-28 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-28 23:00 - INFO - ---------------------------------------------
2024-10-28 23:08 - INFO - ---------------------------------------------
2024-10-28 23:08 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-28 23:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89469
2024-10-28 23:08 - INFO - 	 Train Loss: 0.012
2024-10-28 23:08 - INFO - 	 Val. Loss: 0.010
2024-10-28 23:08 - INFO - 	 ROC-AUC: 0.988
2024-10-28 23:08 - INFO - 	 PR-AUC: 0.895
2024-10-28 23:08 - INFO - 	 Best Val. Loss: 0.010
2024-10-28 23:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 23:08 - INFO - 	 Best PR-AUC: 0.895
2024-10-28 23:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-28 23:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-28 23:08 - INFO - ---------------------------------------------
2024-10-28 23:16 - INFO - ---------------------------------------------
2024-10-28 23:16 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-28 23:16 - INFO - 	 Train Loss: 0.011
2024-10-28 23:16 - INFO - 	 Val. Loss: 0.011
2024-10-28 23:16 - INFO - 	 ROC-AUC: 0.989
2024-10-28 23:16 - INFO - 	 PR-AUC: 0.893
2024-10-28 23:16 - INFO - 	 Best Val. Loss: 0.010
2024-10-28 23:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 23:16 - INFO - 	 Best PR-AUC: 0.895
2024-10-28 23:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 23:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-28 23:16 - INFO - ---------------------------------------------
2024-10-28 23:24 - INFO - ---------------------------------------------
2024-10-28 23:24 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-28 23:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89658
2024-10-28 23:24 - INFO - 	 Train Loss: 0.011
2024-10-28 23:24 - INFO - 	 Val. Loss: 0.009
2024-10-28 23:24 - INFO - 	 ROC-AUC: 0.988
2024-10-28 23:24 - INFO - 	 PR-AUC: 0.897
2024-10-28 23:24 - INFO - 	 Best Val. Loss: 0.009
2024-10-28 23:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 23:24 - INFO - 	 Best PR-AUC: 0.897
2024-10-28 23:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 23:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-28 23:24 - INFO - ---------------------------------------------
2024-10-28 23:32 - INFO - ---------------------------------------------
2024-10-28 23:32 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-28 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90569
2024-10-28 23:32 - INFO - 	 Train Loss: 0.010
2024-10-28 23:32 - INFO - 	 Val. Loss: 0.008
2024-10-28 23:32 - INFO - 	 ROC-AUC: 0.989
2024-10-28 23:32 - INFO - 	 PR-AUC: 0.906
2024-10-28 23:32 - INFO - 	 Best Val. Loss: 0.008
2024-10-28 23:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 23:32 - INFO - 	 Best PR-AUC: 0.906
2024-10-28 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 23:32 - INFO - ---------------------------------------------
2024-10-28 23:40 - INFO - ---------------------------------------------
2024-10-28 23:40 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-28 23:40 - INFO - 	 Train Loss: 0.010
2024-10-28 23:40 - INFO - 	 Val. Loss: 0.009
2024-10-28 23:40 - INFO - 	 ROC-AUC: 0.988
2024-10-28 23:40 - INFO - 	 PR-AUC: 0.896
2024-10-28 23:40 - INFO - 	 Best Val. Loss: 0.008
2024-10-28 23:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-28 23:40 - INFO - 	 Best PR-AUC: 0.906
2024-10-28 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-28 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-28 23:40 - INFO - ---------------------------------------------
2024-10-28 23:43 - INFO - Fit the preprocessing pipeline
2024-10-28 23:43 - INFO - Training using device: cuda
2024-10-28 23:43 - INFO - Creating generators
2024-10-28 23:43 - INFO - The model has 2,246,929 trainable parameters
2024-10-28 23:43 - INFO - * Model:
2024-10-28 23:43 - INFO - * -----------
2024-10-28 23:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-28 23:43 - INFO - * -----------
2024-10-28 23:51 - INFO - ---------------------------------------------
2024-10-28 23:51 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-28 23:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85697
2024-10-28 23:51 - INFO - 	 Train Loss: 0.020
2024-10-28 23:51 - INFO - 	 Val. Loss: 0.027
2024-10-28 23:51 - INFO - 	 ROC-AUC: 0.986
2024-10-28 23:51 - INFO - 	 PR-AUC: 0.857
2024-10-28 23:51 - INFO - 	 Best Val. Loss: 0.027
2024-10-28 23:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-28 23:51 - INFO - 	 Best PR-AUC: 0.857
2024-10-28 23:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 23:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-28 23:51 - INFO - ---------------------------------------------
2024-10-28 23:59 - INFO - ---------------------------------------------
2024-10-28 23:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-28 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87025
2024-10-28 23:59 - INFO - 	 Train Loss: 0.009
2024-10-28 23:59 - INFO - 	 Val. Loss: 0.016
2024-10-28 23:59 - INFO - 	 ROC-AUC: 0.988
2024-10-28 23:59 - INFO - 	 PR-AUC: 0.870
2024-10-28 23:59 - INFO - 	 Best Val. Loss: 0.016
2024-10-28 23:59 - INFO - 	 Best ROC-AUC: 0.988
2024-10-28 23:59 - INFO - 	 Best PR-AUC: 0.870
2024-10-28 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-28 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-28 23:59 - INFO - ---------------------------------------------
2024-10-29 00:07 - INFO - ---------------------------------------------
2024-10-29 00:07 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-29 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88046
2024-10-29 00:07 - INFO - 	 Train Loss: 0.008
2024-10-29 00:07 - INFO - 	 Val. Loss: 0.008
2024-10-29 00:07 - INFO - 	 ROC-AUC: 0.989
2024-10-29 00:07 - INFO - 	 PR-AUC: 0.880
2024-10-29 00:07 - INFO - 	 Best Val. Loss: 0.008
2024-10-29 00:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-29 00:07 - INFO - 	 Best PR-AUC: 0.880
2024-10-29 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-29 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-29 00:07 - INFO - ---------------------------------------------
2024-10-29 00:15 - INFO - ---------------------------------------------
2024-10-29 00:15 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-29 00:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89558
2024-10-29 00:15 - INFO - 	 Train Loss: 0.006
2024-10-29 00:15 - INFO - 	 Val. Loss: 0.005
2024-10-29 00:15 - INFO - 	 ROC-AUC: 0.989
2024-10-29 00:15 - INFO - 	 PR-AUC: 0.896
2024-10-29 00:15 - INFO - 	 Best Val. Loss: 0.005
2024-10-29 00:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-29 00:15 - INFO - 	 Best PR-AUC: 0.896
2024-10-29 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-29 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-29 00:15 - INFO - ---------------------------------------------
2024-10-29 00:23 - INFO - ---------------------------------------------
2024-10-29 00:23 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-29 00:23 - INFO - 	 Train Loss: 0.004
2024-10-29 00:23 - INFO - 	 Val. Loss: 0.004
2024-10-29 00:23 - INFO - 	 ROC-AUC: 0.988
2024-10-29 00:23 - INFO - 	 PR-AUC: 0.891
2024-10-29 00:23 - INFO - 	 Best Val. Loss: 0.004
2024-10-29 00:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-29 00:23 - INFO - 	 Best PR-AUC: 0.896
2024-10-29 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-29 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-29 00:23 - INFO - ---------------------------------------------
2024-10-29 00:31 - INFO - ---------------------------------------------
2024-10-29 00:31 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-29 00:31 - INFO - 	 Train Loss: 0.006
2024-10-29 00:31 - INFO - 	 Val. Loss: 0.004
2024-10-29 00:31 - INFO - 	 ROC-AUC: 0.989
2024-10-29 00:31 - INFO - 	 PR-AUC: 0.891
2024-10-29 00:31 - INFO - 	 Best Val. Loss: 0.004
2024-10-29 00:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-29 00:31 - INFO - 	 Best PR-AUC: 0.896
2024-10-29 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-29 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-29 00:31 - INFO - ---------------------------------------------
2024-10-29 00:39 - INFO - ---------------------------------------------
2024-10-29 00:39 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-29 00:39 - INFO - 	 Train Loss: 0.005
2024-10-29 00:39 - INFO - 	 Val. Loss: 0.004
2024-10-29 00:39 - INFO - 	 ROC-AUC: 0.988
2024-10-29 00:39 - INFO - 	 PR-AUC: 0.892
2024-10-29 00:39 - INFO - 	 Best Val. Loss: 0.004
2024-10-29 00:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-29 00:39 - INFO - 	 Best PR-AUC: 0.896
2024-10-29 00:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-29 00:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-29 00:39 - INFO - ---------------------------------------------
