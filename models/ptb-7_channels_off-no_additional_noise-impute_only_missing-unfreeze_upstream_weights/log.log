2024-11-28 19:00 - INFO - Fit the preprocessing pipeline
2024-11-28 19:00 - INFO - Training using device: cuda
2024-11-28 19:00 - INFO - Creating generators
2024-11-28 19:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 19:00 - INFO - * Model:
2024-11-28 19:00 - INFO - * -----------
2024-11-28 19:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 19:00 - INFO - * -----------
2024-11-28 19:08 - INFO - ---------------------------------------------
2024-11-28 19:08 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-28 19:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82982
2024-11-28 19:08 - INFO - 	 Train Loss: 0.086
2024-11-28 19:08 - INFO - 	 Val. Loss: 0.072
2024-11-28 19:08 - INFO - 	 ROC-AUC: 0.983
2024-11-28 19:08 - INFO - 	 PR-AUC: 0.830
2024-11-28 19:08 - INFO - 	 Best Val. Loss: 0.072
2024-11-28 19:08 - INFO - 	 Best ROC-AUC: 0.983
2024-11-28 19:08 - INFO - 	 Best PR-AUC: 0.830
2024-11-28 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-28 19:08 - INFO - ---------------------------------------------
2024-11-28 19:16 - INFO - ---------------------------------------------
2024-11-28 19:16 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85732
2024-11-28 19:16 - INFO - 	 Train Loss: 0.073
2024-11-28 19:16 - INFO - 	 Val. Loss: 0.066
2024-11-28 19:16 - INFO - 	 ROC-AUC: 0.986
2024-11-28 19:16 - INFO - 	 PR-AUC: 0.857
2024-11-28 19:16 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 19:16 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 19:16 - INFO - 	 Best PR-AUC: 0.857
2024-11-28 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-28 19:16 - INFO - ---------------------------------------------
2024-11-28 19:24 - INFO - ---------------------------------------------
2024-11-28 19:24 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87333
2024-11-28 19:24 - INFO - 	 Train Loss: 0.070
2024-11-28 19:24 - INFO - 	 Val. Loss: 0.062
2024-11-28 19:24 - INFO - 	 ROC-AUC: 0.987
2024-11-28 19:24 - INFO - 	 PR-AUC: 0.873
2024-11-28 19:24 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 19:24 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 19:24 - INFO - 	 Best PR-AUC: 0.873
2024-11-28 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-28 19:24 - INFO - ---------------------------------------------
2024-11-28 19:32 - INFO - ---------------------------------------------
2024-11-28 19:32 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 19:32 - INFO - 	 Train Loss: 0.068
2024-11-28 19:32 - INFO - 	 Val. Loss: 0.064
2024-11-28 19:32 - INFO - 	 ROC-AUC: 0.987
2024-11-28 19:32 - INFO - 	 PR-AUC: 0.865
2024-11-28 19:32 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 19:32 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 19:32 - INFO - 	 Best PR-AUC: 0.873
2024-11-28 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-28 19:32 - INFO - ---------------------------------------------
2024-11-28 19:40 - INFO - ---------------------------------------------
2024-11-28 19:40 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 19:40 - INFO - 	 Train Loss: 0.066
2024-11-28 19:40 - INFO - 	 Val. Loss: 0.061
2024-11-28 19:40 - INFO - 	 ROC-AUC: 0.987
2024-11-28 19:40 - INFO - 	 PR-AUC: 0.870
2024-11-28 19:40 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 19:40 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 19:40 - INFO - 	 Best PR-AUC: 0.873
2024-11-28 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-28 19:40 - INFO - ---------------------------------------------
2024-11-28 19:48 - INFO - ---------------------------------------------
2024-11-28 19:48 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87524
2024-11-28 19:48 - INFO - 	 Train Loss: 0.067
2024-11-28 19:48 - INFO - 	 Val. Loss: 0.061
2024-11-28 19:48 - INFO - 	 ROC-AUC: 0.987
2024-11-28 19:48 - INFO - 	 PR-AUC: 0.875
2024-11-28 19:48 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 19:48 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 19:48 - INFO - 	 Best PR-AUC: 0.875
2024-11-28 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-28 19:48 - INFO - ---------------------------------------------
2024-11-28 19:56 - INFO - ---------------------------------------------
2024-11-28 19:56 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-28 19:56 - INFO - 	 Train Loss: 0.064
2024-11-28 19:56 - INFO - 	 Val. Loss: 0.062
2024-11-28 19:56 - INFO - 	 ROC-AUC: 0.987
2024-11-28 19:56 - INFO - 	 PR-AUC: 0.868
2024-11-28 19:56 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 19:56 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 19:56 - INFO - 	 Best PR-AUC: 0.875
2024-11-28 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-28 19:56 - INFO - ---------------------------------------------
2024-11-28 20:04 - INFO - ---------------------------------------------
2024-11-28 20:04 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88902
2024-11-28 20:04 - INFO - 	 Train Loss: 0.064
2024-11-28 20:04 - INFO - 	 Val. Loss: 0.058
2024-11-28 20:04 - INFO - 	 ROC-AUC: 0.988
2024-11-28 20:04 - INFO - 	 PR-AUC: 0.889
2024-11-28 20:04 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 20:04 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 20:04 - INFO - 	 Best PR-AUC: 0.889
2024-11-28 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-28 20:04 - INFO - ---------------------------------------------
2024-11-28 20:12 - INFO - ---------------------------------------------
2024-11-28 20:12 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 20:12 - INFO - 	 Train Loss: 0.062
2024-11-28 20:12 - INFO - 	 Val. Loss: 0.059
2024-11-28 20:12 - INFO - 	 ROC-AUC: 0.988
2024-11-28 20:12 - INFO - 	 PR-AUC: 0.883
2024-11-28 20:12 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 20:12 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 20:12 - INFO - 	 Best PR-AUC: 0.889
2024-11-28 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-28 20:12 - INFO - ---------------------------------------------
2024-11-28 20:20 - INFO - ---------------------------------------------
2024-11-28 20:20 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 20:20 - INFO - 	 Train Loss: 0.061
2024-11-28 20:20 - INFO - 	 Val. Loss: 0.059
2024-11-28 20:20 - INFO - 	 ROC-AUC: 0.987
2024-11-28 20:20 - INFO - 	 PR-AUC: 0.883
2024-11-28 20:20 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 20:20 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 20:20 - INFO - 	 Best PR-AUC: 0.889
2024-11-28 20:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 20:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-28 20:20 - INFO - ---------------------------------------------
2024-11-28 20:22 - INFO - Fit the preprocessing pipeline
2024-11-28 20:22 - INFO - Training using device: cuda
2024-11-28 20:22 - INFO - Creating generators
2024-11-28 20:23 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 20:23 - INFO - * Model:
2024-11-28 20:23 - INFO - * -----------
2024-11-28 20:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 20:23 - INFO - * -----------
2024-11-28 20:31 - INFO - ---------------------------------------------
2024-11-28 20:31 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 20:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85469
2024-11-28 20:31 - INFO - 	 Train Loss: 0.086
2024-11-28 20:31 - INFO - 	 Val. Loss: 0.066
2024-11-28 20:31 - INFO - 	 ROC-AUC: 0.986
2024-11-28 20:31 - INFO - 	 PR-AUC: 0.855
2024-11-28 20:31 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 20:31 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 20:31 - INFO - 	 Best PR-AUC: 0.855
2024-11-28 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-28 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-28 20:31 - INFO - ---------------------------------------------
2024-11-28 20:39 - INFO - ---------------------------------------------
2024-11-28 20:39 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 20:39 - INFO - 	 Train Loss: 0.073
2024-11-28 20:39 - INFO - 	 Val. Loss: 0.071
2024-11-28 20:39 - INFO - 	 ROC-AUC: 0.984
2024-11-28 20:39 - INFO - 	 PR-AUC: 0.835
2024-11-28 20:39 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 20:39 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 20:39 - INFO - 	 Best PR-AUC: 0.855
2024-11-28 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-28 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-28 20:39 - INFO - ---------------------------------------------
2024-11-28 20:47 - INFO - ---------------------------------------------
2024-11-28 20:47 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 20:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86618
2024-11-28 20:47 - INFO - 	 Train Loss: 0.071
2024-11-28 20:47 - INFO - 	 Val. Loss: 0.062
2024-11-28 20:47 - INFO - 	 ROC-AUC: 0.987
2024-11-28 20:47 - INFO - 	 PR-AUC: 0.866
2024-11-28 20:47 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 20:47 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 20:47 - INFO - 	 Best PR-AUC: 0.866
2024-11-28 20:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 20:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-28 20:47 - INFO - ---------------------------------------------
2024-11-28 20:55 - INFO - ---------------------------------------------
2024-11-28 20:55 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 20:55 - INFO - 	 Train Loss: 0.068
2024-11-28 20:55 - INFO - 	 Val. Loss: 0.064
2024-11-28 20:55 - INFO - 	 ROC-AUC: 0.986
2024-11-28 20:55 - INFO - 	 PR-AUC: 0.866
2024-11-28 20:55 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 20:55 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 20:55 - INFO - 	 Best PR-AUC: 0.866
2024-11-28 20:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 20:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-28 20:55 - INFO - ---------------------------------------------
2024-11-28 21:03 - INFO - ---------------------------------------------
2024-11-28 21:03 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 21:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8768
2024-11-28 21:03 - INFO - 	 Train Loss: 0.067
2024-11-28 21:03 - INFO - 	 Val. Loss: 0.061
2024-11-28 21:03 - INFO - 	 ROC-AUC: 0.987
2024-11-28 21:03 - INFO - 	 PR-AUC: 0.877
2024-11-28 21:03 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 21:03 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 21:03 - INFO - 	 Best PR-AUC: 0.877
2024-11-28 21:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 21:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-28 21:03 - INFO - ---------------------------------------------
2024-11-28 21:11 - INFO - ---------------------------------------------
2024-11-28 21:11 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 21:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88434
2024-11-28 21:11 - INFO - 	 Train Loss: 0.064
2024-11-28 21:11 - INFO - 	 Val. Loss: 0.059
2024-11-28 21:11 - INFO - 	 ROC-AUC: 0.987
2024-11-28 21:11 - INFO - 	 PR-AUC: 0.884
2024-11-28 21:11 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 21:11 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 21:11 - INFO - 	 Best PR-AUC: 0.884
2024-11-28 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-28 21:11 - INFO - ---------------------------------------------
2024-11-28 21:19 - INFO - ---------------------------------------------
2024-11-28 21:19 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-28 21:19 - INFO - 	 Train Loss: 0.064
2024-11-28 21:19 - INFO - 	 Val. Loss: 0.062
2024-11-28 21:19 - INFO - 	 ROC-AUC: 0.986
2024-11-28 21:19 - INFO - 	 PR-AUC: 0.879
2024-11-28 21:19 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 21:19 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 21:19 - INFO - 	 Best PR-AUC: 0.884
2024-11-28 21:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 21:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-28 21:19 - INFO - ---------------------------------------------
2024-11-28 21:27 - INFO - ---------------------------------------------
2024-11-28 21:27 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 21:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88571
2024-11-28 21:27 - INFO - 	 Train Loss: 0.063
2024-11-28 21:27 - INFO - 	 Val. Loss: 0.060
2024-11-28 21:27 - INFO - 	 ROC-AUC: 0.987
2024-11-28 21:27 - INFO - 	 PR-AUC: 0.886
2024-11-28 21:27 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 21:27 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 21:27 - INFO - 	 Best PR-AUC: 0.886
2024-11-28 21:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 21:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-28 21:27 - INFO - ---------------------------------------------
2024-11-28 21:35 - INFO - ---------------------------------------------
2024-11-28 21:35 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 21:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88605
2024-11-28 21:35 - INFO - 	 Train Loss: 0.063
2024-11-28 21:35 - INFO - 	 Val. Loss: 0.059
2024-11-28 21:35 - INFO - 	 ROC-AUC: 0.987
2024-11-28 21:35 - INFO - 	 PR-AUC: 0.886
2024-11-28 21:35 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 21:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 21:35 - INFO - 	 Best PR-AUC: 0.886
2024-11-28 21:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 21:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-28 21:35 - INFO - ---------------------------------------------
2024-11-28 21:43 - INFO - ---------------------------------------------
2024-11-28 21:43 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-28 21:43 - INFO - 	 Train Loss: 0.061
2024-11-28 21:43 - INFO - 	 Val. Loss: 0.066
2024-11-28 21:43 - INFO - 	 ROC-AUC: 0.986
2024-11-28 21:43 - INFO - 	 PR-AUC: 0.861
2024-11-28 21:43 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 21:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 21:43 - INFO - 	 Best PR-AUC: 0.886
2024-11-28 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-28 21:43 - INFO - ---------------------------------------------
2024-11-28 21:45 - INFO - Fit the preprocessing pipeline
2024-11-28 21:45 - INFO - Training using device: cuda
2024-11-28 21:45 - INFO - Creating generators
2024-11-28 21:45 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 21:45 - INFO - * Model:
2024-11-28 21:45 - INFO - * -----------
2024-11-28 21:45 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 21:45 - INFO - * -----------
2024-11-28 21:53 - INFO - ---------------------------------------------
2024-11-28 21:53 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 21:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83951
2024-11-28 21:53 - INFO - 	 Train Loss: 0.087
2024-11-28 21:53 - INFO - 	 Val. Loss: 0.072
2024-11-28 21:53 - INFO - 	 ROC-AUC: 0.984
2024-11-28 21:53 - INFO - 	 PR-AUC: 0.840
2024-11-28 21:53 - INFO - 	 Best Val. Loss: 0.072
2024-11-28 21:53 - INFO - 	 Best ROC-AUC: 0.984
2024-11-28 21:53 - INFO - 	 Best PR-AUC: 0.840
2024-11-28 21:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-28 21:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-28 21:53 - INFO - ---------------------------------------------
2024-11-28 22:01 - INFO - ---------------------------------------------
2024-11-28 22:01 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-28 22:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85808
2024-11-28 22:01 - INFO - 	 Train Loss: 0.073
2024-11-28 22:01 - INFO - 	 Val. Loss: 0.066
2024-11-28 22:01 - INFO - 	 ROC-AUC: 0.986
2024-11-28 22:01 - INFO - 	 PR-AUC: 0.858
2024-11-28 22:01 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 22:01 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 22:01 - INFO - 	 Best PR-AUC: 0.858
2024-11-28 22:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-28 22:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-28 22:01 - INFO - ---------------------------------------------
2024-11-28 22:09 - INFO - ---------------------------------------------
2024-11-28 22:09 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 22:09 - INFO - 	 Train Loss: 0.069
2024-11-28 22:09 - INFO - 	 Val. Loss: 0.065
2024-11-28 22:09 - INFO - 	 ROC-AUC: 0.986
2024-11-28 22:09 - INFO - 	 PR-AUC: 0.857
2024-11-28 22:09 - INFO - 	 Best Val. Loss: 0.065
2024-11-28 22:09 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 22:09 - INFO - 	 Best PR-AUC: 0.858
2024-11-28 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-28 22:09 - INFO - ---------------------------------------------
2024-11-28 22:17 - INFO - ---------------------------------------------
2024-11-28 22:17 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86875
2024-11-28 22:17 - INFO - 	 Train Loss: 0.068
2024-11-28 22:17 - INFO - 	 Val. Loss: 0.061
2024-11-28 22:17 - INFO - 	 ROC-AUC: 0.988
2024-11-28 22:17 - INFO - 	 PR-AUC: 0.869
2024-11-28 22:17 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 22:17 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 22:17 - INFO - 	 Best PR-AUC: 0.869
2024-11-28 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-28 22:17 - INFO - ---------------------------------------------
2024-11-28 22:25 - INFO - ---------------------------------------------
2024-11-28 22:25 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-28 22:25 - INFO - 	 Train Loss: 0.067
2024-11-28 22:25 - INFO - 	 Val. Loss: 0.064
2024-11-28 22:25 - INFO - 	 ROC-AUC: 0.986
2024-11-28 22:25 - INFO - 	 PR-AUC: 0.866
2024-11-28 22:25 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 22:25 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 22:25 - INFO - 	 Best PR-AUC: 0.869
2024-11-28 22:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 22:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-28 22:25 - INFO - ---------------------------------------------
2024-11-28 22:33 - INFO - ---------------------------------------------
2024-11-28 22:33 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 22:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86999
2024-11-28 22:33 - INFO - 	 Train Loss: 0.065
2024-11-28 22:33 - INFO - 	 Val. Loss: 0.060
2024-11-28 22:33 - INFO - 	 ROC-AUC: 0.988
2024-11-28 22:33 - INFO - 	 PR-AUC: 0.870
2024-11-28 22:33 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 22:33 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 22:33 - INFO - 	 Best PR-AUC: 0.870
2024-11-28 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-28 22:33 - INFO - ---------------------------------------------
2024-11-28 22:41 - INFO - ---------------------------------------------
2024-11-28 22:41 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-28 22:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87734
2024-11-28 22:41 - INFO - 	 Train Loss: 0.064
2024-11-28 22:41 - INFO - 	 Val. Loss: 0.062
2024-11-28 22:41 - INFO - 	 ROC-AUC: 0.988
2024-11-28 22:41 - INFO - 	 PR-AUC: 0.877
2024-11-28 22:41 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 22:41 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 22:41 - INFO - 	 Best PR-AUC: 0.877
2024-11-28 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-28 22:41 - INFO - ---------------------------------------------
2024-11-28 22:49 - INFO - ---------------------------------------------
2024-11-28 22:49 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 22:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87846
2024-11-28 22:49 - INFO - 	 Train Loss: 0.062
2024-11-28 22:49 - INFO - 	 Val. Loss: 0.060
2024-11-28 22:49 - INFO - 	 ROC-AUC: 0.987
2024-11-28 22:49 - INFO - 	 PR-AUC: 0.878
2024-11-28 22:49 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 22:49 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 22:49 - INFO - 	 Best PR-AUC: 0.878
2024-11-28 22:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 22:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-28 22:49 - INFO - ---------------------------------------------
2024-11-28 22:58 - INFO - ---------------------------------------------
2024-11-28 22:58 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 22:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88922
2024-11-28 22:58 - INFO - 	 Train Loss: 0.062
2024-11-28 22:58 - INFO - 	 Val. Loss: 0.058
2024-11-28 22:58 - INFO - 	 ROC-AUC: 0.988
2024-11-28 22:58 - INFO - 	 PR-AUC: 0.889
2024-11-28 22:58 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 22:58 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 22:58 - INFO - 	 Best PR-AUC: 0.889
2024-11-28 22:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-28 22:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-28 22:58 - INFO - ---------------------------------------------
2024-11-28 23:06 - INFO - ---------------------------------------------
2024-11-28 23:06 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 23:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89322
2024-11-28 23:06 - INFO - 	 Train Loss: 0.061
2024-11-28 23:06 - INFO - 	 Val. Loss: 0.057
2024-11-28 23:06 - INFO - 	 ROC-AUC: 0.989
2024-11-28 23:06 - INFO - 	 PR-AUC: 0.893
2024-11-28 23:06 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 23:06 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 23:06 - INFO - 	 Best PR-AUC: 0.893
2024-11-28 23:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 23:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-28 23:06 - INFO - ---------------------------------------------
2024-11-28 23:08 - INFO - Fit the preprocessing pipeline
2024-11-28 23:08 - INFO - Training using device: cuda
2024-11-28 23:08 - INFO - Creating generators
2024-11-28 23:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 23:08 - INFO - * Model:
2024-11-28 23:08 - INFO - * -----------
2024-11-28 23:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 23:08 - INFO - * -----------
2024-11-28 23:16 - INFO - ---------------------------------------------
2024-11-28 23:16 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-28 23:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83691
2024-11-28 23:16 - INFO - 	 Train Loss: 0.087
2024-11-28 23:16 - INFO - 	 Val. Loss: 0.068
2024-11-28 23:16 - INFO - 	 ROC-AUC: 0.985
2024-11-28 23:16 - INFO - 	 PR-AUC: 0.837
2024-11-28 23:16 - INFO - 	 Best Val. Loss: 0.068
2024-11-28 23:16 - INFO - 	 Best ROC-AUC: 0.985
2024-11-28 23:16 - INFO - 	 Best PR-AUC: 0.837
2024-11-28 23:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-28 23:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-28 23:16 - INFO - ---------------------------------------------
2024-11-28 23:24 - INFO - ---------------------------------------------
2024-11-28 23:24 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 23:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85165
2024-11-28 23:24 - INFO - 	 Train Loss: 0.074
2024-11-28 23:24 - INFO - 	 Val. Loss: 0.067
2024-11-28 23:24 - INFO - 	 ROC-AUC: 0.986
2024-11-28 23:24 - INFO - 	 PR-AUC: 0.852
2024-11-28 23:24 - INFO - 	 Best Val. Loss: 0.067
2024-11-28 23:24 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 23:24 - INFO - 	 Best PR-AUC: 0.852
2024-11-28 23:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 23:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-28 23:24 - INFO - ---------------------------------------------
2024-11-28 23:32 - INFO - ---------------------------------------------
2024-11-28 23:32 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86549
2024-11-28 23:32 - INFO - 	 Train Loss: 0.071
2024-11-28 23:32 - INFO - 	 Val. Loss: 0.065
2024-11-28 23:32 - INFO - 	 ROC-AUC: 0.986
2024-11-28 23:32 - INFO - 	 PR-AUC: 0.865
2024-11-28 23:32 - INFO - 	 Best Val. Loss: 0.065
2024-11-28 23:32 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 23:32 - INFO - 	 Best PR-AUC: 0.865
2024-11-28 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-28 23:32 - INFO - ---------------------------------------------
2024-11-28 23:40 - INFO - ---------------------------------------------
2024-11-28 23:40 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 23:40 - INFO - 	 Train Loss: 0.068
2024-11-28 23:40 - INFO - 	 Val. Loss: 0.067
2024-11-28 23:40 - INFO - 	 ROC-AUC: 0.986
2024-11-28 23:40 - INFO - 	 PR-AUC: 0.859
2024-11-28 23:40 - INFO - 	 Best Val. Loss: 0.065
2024-11-28 23:40 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 23:40 - INFO - 	 Best PR-AUC: 0.865
2024-11-28 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-28 23:40 - INFO - ---------------------------------------------
2024-11-28 23:48 - INFO - ---------------------------------------------
2024-11-28 23:48 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 23:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88469
2024-11-28 23:48 - INFO - 	 Train Loss: 0.066
2024-11-28 23:48 - INFO - 	 Val. Loss: 0.059
2024-11-28 23:48 - INFO - 	 ROC-AUC: 0.987
2024-11-28 23:48 - INFO - 	 PR-AUC: 0.885
2024-11-28 23:48 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 23:48 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 23:48 - INFO - 	 Best PR-AUC: 0.885
2024-11-28 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-28 23:48 - INFO - ---------------------------------------------
2024-11-28 23:56 - INFO - ---------------------------------------------
2024-11-28 23:56 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-28 23:56 - INFO - 	 Train Loss: 0.066
2024-11-28 23:56 - INFO - 	 Val. Loss: 0.061
2024-11-28 23:56 - INFO - 	 ROC-AUC: 0.987
2024-11-28 23:56 - INFO - 	 PR-AUC: 0.874
2024-11-28 23:56 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 23:56 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 23:56 - INFO - 	 Best PR-AUC: 0.885
2024-11-28 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-28 23:56 - INFO - ---------------------------------------------
2024-11-29 00:04 - INFO - ---------------------------------------------
2024-11-29 00:04 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-29 00:04 - INFO - 	 Train Loss: 0.064
2024-11-29 00:04 - INFO - 	 Val. Loss: 0.059
2024-11-29 00:04 - INFO - 	 ROC-AUC: 0.988
2024-11-29 00:04 - INFO - 	 PR-AUC: 0.878
2024-11-29 00:04 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 00:04 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 00:04 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-29 00:04 - INFO - ---------------------------------------------
2024-11-29 00:12 - INFO - ---------------------------------------------
2024-11-29 00:12 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-29 00:12 - INFO - 	 Train Loss: 0.063
2024-11-29 00:12 - INFO - 	 Val. Loss: 0.062
2024-11-29 00:12 - INFO - 	 ROC-AUC: 0.987
2024-11-29 00:12 - INFO - 	 PR-AUC: 0.875
2024-11-29 00:12 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 00:12 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 00:12 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 00:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 00:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-29 00:12 - INFO - ---------------------------------------------
2024-11-29 00:20 - INFO - ---------------------------------------------
2024-11-29 00:20 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-29 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89636
2024-11-29 00:20 - INFO - 	 Train Loss: 0.063
2024-11-29 00:20 - INFO - 	 Val. Loss: 0.057
2024-11-29 00:20 - INFO - 	 ROC-AUC: 0.988
2024-11-29 00:20 - INFO - 	 PR-AUC: 0.896
2024-11-29 00:20 - INFO - 	 Best Val. Loss: 0.057
2024-11-29 00:20 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 00:20 - INFO - 	 Best PR-AUC: 0.896
2024-11-29 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-29 00:20 - INFO - ---------------------------------------------
2024-11-29 00:28 - INFO - ---------------------------------------------
2024-11-29 00:28 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-29 00:28 - INFO - 	 Train Loss: 0.064
2024-11-29 00:28 - INFO - 	 Val. Loss: 0.057
2024-11-29 00:28 - INFO - 	 ROC-AUC: 0.989
2024-11-29 00:28 - INFO - 	 PR-AUC: 0.887
2024-11-29 00:28 - INFO - 	 Best Val. Loss: 0.057
2024-11-29 00:28 - INFO - 	 Best ROC-AUC: 0.989
2024-11-29 00:28 - INFO - 	 Best PR-AUC: 0.896
2024-11-29 00:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 00:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-29 00:28 - INFO - ---------------------------------------------
2024-11-29 00:31 - INFO - Fit the preprocessing pipeline
2024-11-29 00:31 - INFO - Training using device: cuda
2024-11-29 00:31 - INFO - Creating generators
2024-11-29 00:31 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 00:31 - INFO - * Model:
2024-11-29 00:31 - INFO - * -----------
2024-11-29 00:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 00:31 - INFO - * -----------
2024-11-29 00:39 - INFO - ---------------------------------------------
2024-11-29 00:39 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 00:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84561
2024-11-29 00:39 - INFO - 	 Train Loss: 0.085
2024-11-29 00:39 - INFO - 	 Val. Loss: 0.068
2024-11-29 00:39 - INFO - 	 ROC-AUC: 0.984
2024-11-29 00:39 - INFO - 	 PR-AUC: 0.846
2024-11-29 00:39 - INFO - 	 Best Val. Loss: 0.068
2024-11-29 00:39 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 00:39 - INFO - 	 Best PR-AUC: 0.846
2024-11-29 00:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 00:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-29 00:39 - INFO - ---------------------------------------------
2024-11-29 00:47 - INFO - ---------------------------------------------
2024-11-29 00:47 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-29 00:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85373
2024-11-29 00:47 - INFO - 	 Train Loss: 0.074
2024-11-29 00:47 - INFO - 	 Val. Loss: 0.067
2024-11-29 00:47 - INFO - 	 ROC-AUC: 0.985
2024-11-29 00:47 - INFO - 	 PR-AUC: 0.854
2024-11-29 00:47 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 00:47 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 00:47 - INFO - 	 Best PR-AUC: 0.854
2024-11-29 00:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 00:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-29 00:47 - INFO - ---------------------------------------------
2024-11-29 00:55 - INFO - ---------------------------------------------
2024-11-29 00:55 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-29 00:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86925
2024-11-29 00:55 - INFO - 	 Train Loss: 0.070
2024-11-29 00:55 - INFO - 	 Val. Loss: 0.063
2024-11-29 00:55 - INFO - 	 ROC-AUC: 0.987
2024-11-29 00:55 - INFO - 	 PR-AUC: 0.869
2024-11-29 00:55 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 00:55 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 00:55 - INFO - 	 Best PR-AUC: 0.869
2024-11-29 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-29 00:55 - INFO - ---------------------------------------------
2024-11-29 01:03 - INFO - ---------------------------------------------
2024-11-29 01:03 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-29 01:03 - INFO - 	 Train Loss: 0.069
2024-11-29 01:03 - INFO - 	 Val. Loss: 0.064
2024-11-29 01:03 - INFO - 	 ROC-AUC: 0.985
2024-11-29 01:03 - INFO - 	 PR-AUC: 0.868
2024-11-29 01:03 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 01:03 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 01:03 - INFO - 	 Best PR-AUC: 0.869
2024-11-29 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-29 01:03 - INFO - ---------------------------------------------
2024-11-29 01:11 - INFO - ---------------------------------------------
2024-11-29 01:11 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 01:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87597
2024-11-29 01:11 - INFO - 	 Train Loss: 0.067
2024-11-29 01:11 - INFO - 	 Val. Loss: 0.061
2024-11-29 01:11 - INFO - 	 ROC-AUC: 0.987
2024-11-29 01:11 - INFO - 	 PR-AUC: 0.876
2024-11-29 01:11 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 01:11 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 01:11 - INFO - 	 Best PR-AUC: 0.876
2024-11-29 01:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 01:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 01:11 - INFO - ---------------------------------------------
2024-11-29 01:19 - INFO - ---------------------------------------------
2024-11-29 01:19 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-29 01:19 - INFO - 	 Train Loss: 0.066
2024-11-29 01:19 - INFO - 	 Val. Loss: 0.062
2024-11-29 01:19 - INFO - 	 ROC-AUC: 0.987
2024-11-29 01:19 - INFO - 	 PR-AUC: 0.870
2024-11-29 01:19 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 01:19 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 01:19 - INFO - 	 Best PR-AUC: 0.876
2024-11-29 01:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 01:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 01:19 - INFO - ---------------------------------------------
2024-11-29 01:27 - INFO - ---------------------------------------------
2024-11-29 01:27 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-29 01:27 - INFO - 	 Train Loss: 0.064
2024-11-29 01:27 - INFO - 	 Val. Loss: 0.062
2024-11-29 01:27 - INFO - 	 ROC-AUC: 0.987
2024-11-29 01:27 - INFO - 	 PR-AUC: 0.862
2024-11-29 01:27 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 01:27 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 01:27 - INFO - 	 Best PR-AUC: 0.876
2024-11-29 01:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 01:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 01:27 - INFO - ---------------------------------------------
2024-11-29 01:35 - INFO - ---------------------------------------------
2024-11-29 01:35 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-29 01:35 - INFO - 	 Train Loss: 0.063
2024-11-29 01:35 - INFO - 	 Val. Loss: 0.062
2024-11-29 01:35 - INFO - 	 ROC-AUC: 0.986
2024-11-29 01:35 - INFO - 	 PR-AUC: 0.872
2024-11-29 01:35 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 01:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 01:35 - INFO - 	 Best PR-AUC: 0.876
2024-11-29 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 01:35 - INFO - ---------------------------------------------
2024-11-29 01:43 - INFO - ---------------------------------------------
2024-11-29 01:43 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-29 01:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87687
2024-11-29 01:43 - INFO - 	 Train Loss: 0.063
2024-11-29 01:43 - INFO - 	 Val. Loss: 0.061
2024-11-29 01:43 - INFO - 	 ROC-AUC: 0.987
2024-11-29 01:43 - INFO - 	 PR-AUC: 0.877
2024-11-29 01:43 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 01:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 01:43 - INFO - 	 Best PR-AUC: 0.877
2024-11-29 01:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 01:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-29 01:43 - INFO - ---------------------------------------------
2024-11-29 01:51 - INFO - ---------------------------------------------
2024-11-29 01:51 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-29 01:51 - INFO - 	 Train Loss: 0.062
2024-11-29 01:51 - INFO - 	 Val. Loss: 0.061
2024-11-29 01:51 - INFO - 	 ROC-AUC: 0.986
2024-11-29 01:51 - INFO - 	 PR-AUC: 0.876
2024-11-29 01:51 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 01:51 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 01:51 - INFO - 	 Best PR-AUC: 0.877
2024-11-29 01:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 01:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-29 01:51 - INFO - ---------------------------------------------
2024-11-29 01:53 - INFO - Fit the preprocessing pipeline
2024-11-29 01:53 - INFO - Training using device: cuda
2024-11-29 01:53 - INFO - Creating generators
2024-11-29 01:53 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 01:53 - INFO - * Model:
2024-11-29 01:53 - INFO - * -----------
2024-11-29 01:53 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 01:53 - INFO - * -----------
2024-11-29 02:01 - INFO - ---------------------------------------------
2024-11-29 02:01 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 02:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8369
2024-11-29 02:01 - INFO - 	 Train Loss: 0.086
2024-11-29 02:01 - INFO - 	 Val. Loss: 0.069
2024-11-29 02:01 - INFO - 	 ROC-AUC: 0.985
2024-11-29 02:01 - INFO - 	 PR-AUC: 0.837
2024-11-29 02:01 - INFO - 	 Best Val. Loss: 0.069
2024-11-29 02:01 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 02:01 - INFO - 	 Best PR-AUC: 0.837
2024-11-29 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-29 02:01 - INFO - ---------------------------------------------
2024-11-29 02:09 - INFO - ---------------------------------------------
2024-11-29 02:09 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 02:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86931
2024-11-29 02:09 - INFO - 	 Train Loss: 0.074
2024-11-29 02:09 - INFO - 	 Val. Loss: 0.063
2024-11-29 02:09 - INFO - 	 ROC-AUC: 0.986
2024-11-29 02:09 - INFO - 	 PR-AUC: 0.869
2024-11-29 02:09 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 02:09 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 02:09 - INFO - 	 Best PR-AUC: 0.869
2024-11-29 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-29 02:09 - INFO - ---------------------------------------------
2024-11-29 02:17 - INFO - ---------------------------------------------
2024-11-29 02:17 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 02:17 - INFO - 	 Train Loss: 0.071
2024-11-29 02:17 - INFO - 	 Val. Loss: 0.064
2024-11-29 02:17 - INFO - 	 ROC-AUC: 0.987
2024-11-29 02:17 - INFO - 	 PR-AUC: 0.868
2024-11-29 02:17 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 02:17 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 02:17 - INFO - 	 Best PR-AUC: 0.869
2024-11-29 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-29 02:17 - INFO - ---------------------------------------------
2024-11-29 02:26 - INFO - ---------------------------------------------
2024-11-29 02:26 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 02:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8854
2024-11-29 02:26 - INFO - 	 Train Loss: 0.068
2024-11-29 02:26 - INFO - 	 Val. Loss: 0.060
2024-11-29 02:26 - INFO - 	 ROC-AUC: 0.987
2024-11-29 02:26 - INFO - 	 PR-AUC: 0.885
2024-11-29 02:26 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 02:26 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 02:26 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-29 02:26 - INFO - ---------------------------------------------
2024-11-29 02:34 - INFO - ---------------------------------------------
2024-11-29 02:34 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-29 02:34 - INFO - 	 Train Loss: 0.067
2024-11-29 02:34 - INFO - 	 Val. Loss: 0.064
2024-11-29 02:34 - INFO - 	 ROC-AUC: 0.986
2024-11-29 02:34 - INFO - 	 PR-AUC: 0.862
2024-11-29 02:34 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 02:34 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 02:34 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 02:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 02:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-29 02:34 - INFO - ---------------------------------------------
2024-11-29 02:42 - INFO - ---------------------------------------------
2024-11-29 02:42 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 02:42 - INFO - 	 Train Loss: 0.065
2024-11-29 02:42 - INFO - 	 Val. Loss: 0.060
2024-11-29 02:42 - INFO - 	 ROC-AUC: 0.988
2024-11-29 02:42 - INFO - 	 PR-AUC: 0.881
2024-11-29 02:42 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 02:42 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 02:42 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 02:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 02:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-29 02:42 - INFO - ---------------------------------------------
2024-11-29 02:50 - INFO - ---------------------------------------------
2024-11-29 02:50 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 02:50 - INFO - 	 Train Loss: 0.064
2024-11-29 02:50 - INFO - 	 Val. Loss: 0.061
2024-11-29 02:50 - INFO - 	 ROC-AUC: 0.987
2024-11-29 02:50 - INFO - 	 PR-AUC: 0.872
2024-11-29 02:50 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 02:50 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 02:50 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 02:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 02:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-29 02:50 - INFO - ---------------------------------------------
2024-11-29 03:00 - INFO - Fit the preprocessing pipeline
2024-11-29 03:00 - INFO - Training using device: cuda
2024-11-29 03:00 - INFO - Creating generators
2024-11-29 03:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 03:00 - INFO - * Model:
2024-11-29 03:00 - INFO - * -----------
2024-11-29 03:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 03:00 - INFO - * -----------
2024-11-29 03:08 - INFO - ---------------------------------------------
2024-11-29 03:08 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 03:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85269
2024-11-29 03:08 - INFO - 	 Train Loss: 0.087
2024-11-29 03:08 - INFO - 	 Val. Loss: 0.067
2024-11-29 03:08 - INFO - 	 ROC-AUC: 0.986
2024-11-29 03:08 - INFO - 	 PR-AUC: 0.853
2024-11-29 03:08 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 03:08 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 03:08 - INFO - 	 Best PR-AUC: 0.853
2024-11-29 03:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 03:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-29 03:08 - INFO - ---------------------------------------------
2024-11-29 03:16 - INFO - ---------------------------------------------
2024-11-29 03:16 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-29 03:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85458
2024-11-29 03:16 - INFO - 	 Train Loss: 0.073
2024-11-29 03:16 - INFO - 	 Val. Loss: 0.066
2024-11-29 03:16 - INFO - 	 ROC-AUC: 0.986
2024-11-29 03:16 - INFO - 	 PR-AUC: 0.855
2024-11-29 03:16 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 03:16 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 03:16 - INFO - 	 Best PR-AUC: 0.855
2024-11-29 03:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 03:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-29 03:16 - INFO - ---------------------------------------------
2024-11-29 03:24 - INFO - ---------------------------------------------
2024-11-29 03:24 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-29 03:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86009
2024-11-29 03:24 - INFO - 	 Train Loss: 0.070
2024-11-29 03:24 - INFO - 	 Val. Loss: 0.063
2024-11-29 03:24 - INFO - 	 ROC-AUC: 0.986
2024-11-29 03:24 - INFO - 	 PR-AUC: 0.860
2024-11-29 03:24 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 03:24 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 03:24 - INFO - 	 Best PR-AUC: 0.860
2024-11-29 03:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 03:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-29 03:24 - INFO - ---------------------------------------------
2024-11-29 03:32 - INFO - ---------------------------------------------
2024-11-29 03:32 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 03:32 - INFO - 	 Train Loss: 0.068
2024-11-29 03:32 - INFO - 	 Val. Loss: 0.064
2024-11-29 03:32 - INFO - 	 ROC-AUC: 0.986
2024-11-29 03:32 - INFO - 	 PR-AUC: 0.857
2024-11-29 03:32 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 03:32 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 03:32 - INFO - 	 Best PR-AUC: 0.860
2024-11-29 03:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 03:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-29 03:32 - INFO - ---------------------------------------------
2024-11-29 03:40 - INFO - ---------------------------------------------
2024-11-29 03:40 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 03:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8717
2024-11-29 03:40 - INFO - 	 Train Loss: 0.067
2024-11-29 03:40 - INFO - 	 Val. Loss: 0.061
2024-11-29 03:40 - INFO - 	 ROC-AUC: 0.988
2024-11-29 03:40 - INFO - 	 PR-AUC: 0.872
2024-11-29 03:40 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 03:40 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 03:40 - INFO - 	 Best PR-AUC: 0.872
2024-11-29 03:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 03:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-29 03:40 - INFO - ---------------------------------------------
2024-11-29 03:48 - INFO - ---------------------------------------------
2024-11-29 03:48 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 03:48 - INFO - 	 Train Loss: 0.065
2024-11-29 03:48 - INFO - 	 Val. Loss: 0.060
2024-11-29 03:48 - INFO - 	 ROC-AUC: 0.987
2024-11-29 03:48 - INFO - 	 PR-AUC: 0.871
2024-11-29 03:48 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 03:48 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 03:48 - INFO - 	 Best PR-AUC: 0.872
2024-11-29 03:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 03:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-29 03:48 - INFO - ---------------------------------------------
2024-11-29 03:56 - INFO - ---------------------------------------------
2024-11-29 03:56 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 03:56 - INFO - 	 Train Loss: 0.065
2024-11-29 03:56 - INFO - 	 Val. Loss: 0.063
2024-11-29 03:56 - INFO - 	 ROC-AUC: 0.986
2024-11-29 03:56 - INFO - 	 PR-AUC: 0.871
2024-11-29 03:56 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 03:56 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 03:56 - INFO - 	 Best PR-AUC: 0.872
2024-11-29 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-29 03:56 - INFO - ---------------------------------------------
2024-11-29 04:04 - INFO - ---------------------------------------------
2024-11-29 04:04 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 04:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87764
2024-11-29 04:04 - INFO - 	 Train Loss: 0.063
2024-11-29 04:04 - INFO - 	 Val. Loss: 0.061
2024-11-29 04:04 - INFO - 	 ROC-AUC: 0.987
2024-11-29 04:04 - INFO - 	 PR-AUC: 0.878
2024-11-29 04:04 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 04:04 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 04:04 - INFO - 	 Best PR-AUC: 0.878
2024-11-29 04:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 04:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 04:04 - INFO - ---------------------------------------------
2024-11-29 04:12 - INFO - ---------------------------------------------
2024-11-29 04:12 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 04:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88271
2024-11-29 04:12 - INFO - 	 Train Loss: 0.063
2024-11-29 04:12 - INFO - 	 Val. Loss: 0.060
2024-11-29 04:12 - INFO - 	 ROC-AUC: 0.987
2024-11-29 04:12 - INFO - 	 PR-AUC: 0.883
2024-11-29 04:12 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 04:12 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 04:12 - INFO - 	 Best PR-AUC: 0.883
2024-11-29 04:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 04:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-29 04:12 - INFO - ---------------------------------------------
2024-11-29 04:20 - INFO - ---------------------------------------------
2024-11-29 04:20 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 04:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89585
2024-11-29 04:20 - INFO - 	 Train Loss: 0.062
2024-11-29 04:20 - INFO - 	 Val. Loss: 0.056
2024-11-29 04:20 - INFO - 	 ROC-AUC: 0.988
2024-11-29 04:20 - INFO - 	 PR-AUC: 0.896
2024-11-29 04:20 - INFO - 	 Best Val. Loss: 0.056
2024-11-29 04:20 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 04:20 - INFO - 	 Best PR-AUC: 0.896
2024-11-29 04:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 04:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-11-29 04:20 - INFO - ---------------------------------------------
2024-11-29 04:23 - INFO - Fit the preprocessing pipeline
2024-11-29 04:23 - INFO - Training using device: cuda
2024-11-29 04:23 - INFO - Creating generators
2024-11-29 04:23 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 04:23 - INFO - * Model:
2024-11-29 04:23 - INFO - * -----------
2024-11-29 04:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 04:23 - INFO - * -----------
2024-11-29 04:31 - INFO - ---------------------------------------------
2024-11-29 04:31 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 04:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83201
2024-11-29 04:31 - INFO - 	 Train Loss: 0.086
2024-11-29 04:31 - INFO - 	 Val. Loss: 0.075
2024-11-29 04:31 - INFO - 	 ROC-AUC: 0.982
2024-11-29 04:31 - INFO - 	 PR-AUC: 0.832
2024-11-29 04:31 - INFO - 	 Best Val. Loss: 0.075
2024-11-29 04:31 - INFO - 	 Best ROC-AUC: 0.982
2024-11-29 04:31 - INFO - 	 Best PR-AUC: 0.832
2024-11-29 04:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-29 04:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-11-29 04:31 - INFO - ---------------------------------------------
2024-11-29 04:39 - INFO - ---------------------------------------------
2024-11-29 04:39 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 04:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.863
2024-11-29 04:39 - INFO - 	 Train Loss: 0.074
2024-11-29 04:39 - INFO - 	 Val. Loss: 0.064
2024-11-29 04:39 - INFO - 	 ROC-AUC: 0.986
2024-11-29 04:39 - INFO - 	 PR-AUC: 0.863
2024-11-29 04:39 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 04:39 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 04:39 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 04:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 04:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-29 04:39 - INFO - ---------------------------------------------
2024-11-29 04:47 - INFO - ---------------------------------------------
2024-11-29 04:47 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 04:47 - INFO - 	 Train Loss: 0.070
2024-11-29 04:47 - INFO - 	 Val. Loss: 0.064
2024-11-29 04:47 - INFO - 	 ROC-AUC: 0.987
2024-11-29 04:47 - INFO - 	 PR-AUC: 0.854
2024-11-29 04:47 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 04:47 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 04:47 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 04:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 04:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-29 04:47 - INFO - ---------------------------------------------
2024-11-29 04:55 - INFO - ---------------------------------------------
2024-11-29 04:55 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 04:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87155
2024-11-29 04:55 - INFO - 	 Train Loss: 0.067
2024-11-29 04:55 - INFO - 	 Val. Loss: 0.062
2024-11-29 04:55 - INFO - 	 ROC-AUC: 0.987
2024-11-29 04:55 - INFO - 	 PR-AUC: 0.872
2024-11-29 04:55 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 04:55 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 04:55 - INFO - 	 Best PR-AUC: 0.872
2024-11-29 04:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 04:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-29 04:55 - INFO - ---------------------------------------------
2024-11-29 05:03 - INFO - ---------------------------------------------
2024-11-29 05:03 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 05:03 - INFO - 	 Train Loss: 0.066
2024-11-29 05:03 - INFO - 	 Val. Loss: 0.067
2024-11-29 05:03 - INFO - 	 ROC-AUC: 0.986
2024-11-29 05:03 - INFO - 	 PR-AUC: 0.854
2024-11-29 05:03 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 05:03 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 05:03 - INFO - 	 Best PR-AUC: 0.872
2024-11-29 05:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 05:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-29 05:03 - INFO - ---------------------------------------------
2024-11-29 05:11 - INFO - ---------------------------------------------
2024-11-29 05:11 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 05:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88521
2024-11-29 05:11 - INFO - 	 Train Loss: 0.066
2024-11-29 05:11 - INFO - 	 Val. Loss: 0.059
2024-11-29 05:11 - INFO - 	 ROC-AUC: 0.988
2024-11-29 05:11 - INFO - 	 PR-AUC: 0.885
2024-11-29 05:11 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 05:11 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 05:11 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 05:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 05:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-29 05:11 - INFO - ---------------------------------------------
2024-11-29 05:19 - INFO - ---------------------------------------------
2024-11-29 05:19 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 05:19 - INFO - 	 Train Loss: 0.064
2024-11-29 05:19 - INFO - 	 Val. Loss: 0.062
2024-11-29 05:19 - INFO - 	 ROC-AUC: 0.987
2024-11-29 05:19 - INFO - 	 PR-AUC: 0.870
2024-11-29 05:19 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 05:19 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 05:19 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-29 05:19 - INFO - ---------------------------------------------
2024-11-29 05:27 - INFO - ---------------------------------------------
2024-11-29 05:27 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 05:27 - INFO - 	 Train Loss: 0.064
2024-11-29 05:27 - INFO - 	 Val. Loss: 0.059
2024-11-29 05:27 - INFO - 	 ROC-AUC: 0.988
2024-11-29 05:27 - INFO - 	 PR-AUC: 0.882
2024-11-29 05:27 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 05:27 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 05:27 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 05:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 05:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-29 05:27 - INFO - ---------------------------------------------
2024-11-29 05:35 - INFO - ---------------------------------------------
2024-11-29 05:35 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 05:35 - INFO - 	 Train Loss: 0.064
2024-11-29 05:35 - INFO - 	 Val. Loss: 0.061
2024-11-29 05:35 - INFO - 	 ROC-AUC: 0.987
2024-11-29 05:35 - INFO - 	 PR-AUC: 0.873
2024-11-29 05:35 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 05:35 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 05:35 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 05:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 05:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-29 05:35 - INFO - ---------------------------------------------
2024-11-29 05:45 - INFO - Fit the preprocessing pipeline
2024-11-29 05:45 - INFO - Training using device: cuda
2024-11-29 05:45 - INFO - Creating generators
2024-11-29 05:45 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 05:45 - INFO - * Model:
2024-11-29 05:45 - INFO - * -----------
2024-11-29 05:45 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 05:45 - INFO - * -----------
2024-11-29 05:53 - INFO - ---------------------------------------------
2024-11-29 05:53 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84717
2024-11-29 05:53 - INFO - 	 Train Loss: 0.087
2024-11-29 05:53 - INFO - 	 Val. Loss: 0.072
2024-11-29 05:53 - INFO - 	 ROC-AUC: 0.983
2024-11-29 05:53 - INFO - 	 PR-AUC: 0.847
2024-11-29 05:53 - INFO - 	 Best Val. Loss: 0.072
2024-11-29 05:53 - INFO - 	 Best ROC-AUC: 0.983
2024-11-29 05:53 - INFO - 	 Best PR-AUC: 0.847
2024-11-29 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-29 05:53 - INFO - ---------------------------------------------
2024-11-29 06:01 - INFO - ---------------------------------------------
2024-11-29 06:01 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85374
2024-11-29 06:01 - INFO - 	 Train Loss: 0.074
2024-11-29 06:01 - INFO - 	 Val. Loss: 0.066
2024-11-29 06:01 - INFO - 	 ROC-AUC: 0.986
2024-11-29 06:01 - INFO - 	 PR-AUC: 0.854
2024-11-29 06:01 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 06:01 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 06:01 - INFO - 	 Best PR-AUC: 0.854
2024-11-29 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-11-29 06:01 - INFO - ---------------------------------------------
2024-11-29 06:09 - INFO - ---------------------------------------------
2024-11-29 06:09 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 06:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87082
2024-11-29 06:09 - INFO - 	 Train Loss: 0.069
2024-11-29 06:09 - INFO - 	 Val. Loss: 0.061
2024-11-29 06:09 - INFO - 	 ROC-AUC: 0.988
2024-11-29 06:09 - INFO - 	 PR-AUC: 0.871
2024-11-29 06:09 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 06:09 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 06:09 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-29 06:09 - INFO - ---------------------------------------------
2024-11-29 06:17 - INFO - ---------------------------------------------
2024-11-29 06:17 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 06:17 - INFO - 	 Train Loss: 0.069
2024-11-29 06:17 - INFO - 	 Val. Loss: 0.061
2024-11-29 06:17 - INFO - 	 ROC-AUC: 0.987
2024-11-29 06:17 - INFO - 	 PR-AUC: 0.868
2024-11-29 06:17 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 06:17 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 06:17 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-29 06:17 - INFO - ---------------------------------------------
2024-11-29 06:26 - INFO - ---------------------------------------------
2024-11-29 06:26 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 06:26 - INFO - 	 Train Loss: 0.067
2024-11-29 06:26 - INFO - 	 Val. Loss: 0.063
2024-11-29 06:26 - INFO - 	 ROC-AUC: 0.987
2024-11-29 06:26 - INFO - 	 PR-AUC: 0.868
2024-11-29 06:26 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 06:26 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 06:26 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 06:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 06:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-29 06:26 - INFO - ---------------------------------------------
2024-11-29 06:34 - INFO - ---------------------------------------------
2024-11-29 06:34 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 06:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87467
2024-11-29 06:34 - INFO - 	 Train Loss: 0.066
2024-11-29 06:34 - INFO - 	 Val. Loss: 0.061
2024-11-29 06:34 - INFO - 	 ROC-AUC: 0.988
2024-11-29 06:34 - INFO - 	 PR-AUC: 0.875
2024-11-29 06:34 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 06:34 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 06:34 - INFO - 	 Best PR-AUC: 0.875
2024-11-29 06:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 06:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-29 06:34 - INFO - ---------------------------------------------
2024-11-29 06:42 - INFO - ---------------------------------------------
2024-11-29 06:42 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 06:42 - INFO - 	 Train Loss: 0.064
2024-11-29 06:42 - INFO - 	 Val. Loss: 0.061
2024-11-29 06:42 - INFO - 	 ROC-AUC: 0.988
2024-11-29 06:42 - INFO - 	 PR-AUC: 0.865
2024-11-29 06:42 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 06:42 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 06:42 - INFO - 	 Best PR-AUC: 0.875
2024-11-29 06:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 06:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-29 06:42 - INFO - ---------------------------------------------
2024-11-29 06:50 - INFO - ---------------------------------------------
2024-11-29 06:50 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 06:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88005
2024-11-29 06:50 - INFO - 	 Train Loss: 0.064
2024-11-29 06:50 - INFO - 	 Val. Loss: 0.060
2024-11-29 06:50 - INFO - 	 ROC-AUC: 0.987
2024-11-29 06:50 - INFO - 	 PR-AUC: 0.880
2024-11-29 06:50 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 06:50 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 06:50 - INFO - 	 Best PR-AUC: 0.880
2024-11-29 06:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 06:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-29 06:50 - INFO - ---------------------------------------------
2024-11-29 06:58 - INFO - ---------------------------------------------
2024-11-29 06:58 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 06:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88528
2024-11-29 06:58 - INFO - 	 Train Loss: 0.062
2024-11-29 06:58 - INFO - 	 Val. Loss: 0.058
2024-11-29 06:58 - INFO - 	 ROC-AUC: 0.989
2024-11-29 06:58 - INFO - 	 PR-AUC: 0.885
2024-11-29 06:58 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 06:58 - INFO - 	 Best ROC-AUC: 0.989
2024-11-29 06:58 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-29 06:58 - INFO - ---------------------------------------------
2024-11-29 07:06 - INFO - ---------------------------------------------
2024-11-29 07:06 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 07:06 - INFO - 	 Train Loss: 0.062
2024-11-29 07:06 - INFO - 	 Val. Loss: 0.059
2024-11-29 07:06 - INFO - 	 ROC-AUC: 0.987
2024-11-29 07:06 - INFO - 	 PR-AUC: 0.882
2024-11-29 07:06 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 07:06 - INFO - 	 Best ROC-AUC: 0.989
2024-11-29 07:06 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 07:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 07:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-29 07:06 - INFO - ---------------------------------------------
2024-11-29 07:08 - INFO - Fit the preprocessing pipeline
2024-11-29 07:08 - INFO - Training using device: cuda
2024-11-29 07:08 - INFO - Creating generators
2024-11-29 07:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 07:08 - INFO - * Model:
2024-11-29 07:08 - INFO - * -----------
2024-11-29 07:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 07:08 - INFO - * -----------
2024-11-29 07:16 - INFO - ---------------------------------------------
2024-11-29 07:16 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 07:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8591
2024-11-29 07:16 - INFO - 	 Train Loss: 0.085
2024-11-29 07:16 - INFO - 	 Val. Loss: 0.067
2024-11-29 07:16 - INFO - 	 ROC-AUC: 0.985
2024-11-29 07:16 - INFO - 	 PR-AUC: 0.859
2024-11-29 07:16 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 07:16 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 07:16 - INFO - 	 Best PR-AUC: 0.859
2024-11-29 07:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 07:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-29 07:16 - INFO - ---------------------------------------------
2024-11-29 07:24 - INFO - ---------------------------------------------
2024-11-29 07:24 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 07:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85919
2024-11-29 07:24 - INFO - 	 Train Loss: 0.073
2024-11-29 07:24 - INFO - 	 Val. Loss: 0.063
2024-11-29 07:24 - INFO - 	 ROC-AUC: 0.987
2024-11-29 07:24 - INFO - 	 PR-AUC: 0.859
2024-11-29 07:24 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 07:24 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 07:24 - INFO - 	 Best PR-AUC: 0.859
2024-11-29 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-29 07:24 - INFO - ---------------------------------------------
2024-11-29 07:32 - INFO - ---------------------------------------------
2024-11-29 07:32 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 07:32 - INFO - 	 Train Loss: 0.070
2024-11-29 07:32 - INFO - 	 Val. Loss: 0.065
2024-11-29 07:32 - INFO - 	 ROC-AUC: 0.986
2024-11-29 07:32 - INFO - 	 PR-AUC: 0.852
2024-11-29 07:32 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 07:32 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 07:32 - INFO - 	 Best PR-AUC: 0.859
2024-11-29 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-29 07:32 - INFO - ---------------------------------------------
2024-11-29 07:40 - INFO - ---------------------------------------------
2024-11-29 07:40 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 07:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87001
2024-11-29 07:40 - INFO - 	 Train Loss: 0.067
2024-11-29 07:40 - INFO - 	 Val. Loss: 0.062
2024-11-29 07:40 - INFO - 	 ROC-AUC: 0.987
2024-11-29 07:40 - INFO - 	 PR-AUC: 0.870
2024-11-29 07:40 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 07:40 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 07:40 - INFO - 	 Best PR-AUC: 0.870
2024-11-29 07:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 07:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-29 07:40 - INFO - ---------------------------------------------
2024-11-29 07:48 - INFO - ---------------------------------------------
2024-11-29 07:48 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-29 07:48 - INFO - 	 Train Loss: 0.066
2024-11-29 07:48 - INFO - 	 Val. Loss: 0.062
2024-11-29 07:48 - INFO - 	 ROC-AUC: 0.987
2024-11-29 07:48 - INFO - 	 PR-AUC: 0.867
2024-11-29 07:48 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 07:48 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 07:48 - INFO - 	 Best PR-AUC: 0.870
2024-11-29 07:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 07:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-29 07:48 - INFO - ---------------------------------------------
2024-11-29 07:56 - INFO - ---------------------------------------------
2024-11-29 07:56 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-29 07:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87903
2024-11-29 07:56 - INFO - 	 Train Loss: 0.066
2024-11-29 07:56 - INFO - 	 Val. Loss: 0.059
2024-11-29 07:56 - INFO - 	 ROC-AUC: 0.987
2024-11-29 07:56 - INFO - 	 PR-AUC: 0.879
2024-11-29 07:56 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 07:56 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 07:56 - INFO - 	 Best PR-AUC: 0.879
2024-11-29 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-29 07:56 - INFO - ---------------------------------------------
2024-11-29 08:04 - INFO - ---------------------------------------------
2024-11-29 08:04 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 08:04 - INFO - 	 Train Loss: 0.064
2024-11-29 08:04 - INFO - 	 Val. Loss: 0.058
2024-11-29 08:04 - INFO - 	 ROC-AUC: 0.988
2024-11-29 08:04 - INFO - 	 PR-AUC: 0.878
2024-11-29 08:04 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 08:04 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 08:04 - INFO - 	 Best PR-AUC: 0.879
2024-11-29 08:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 08:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-29 08:04 - INFO - ---------------------------------------------
2024-11-29 08:12 - INFO - ---------------------------------------------
2024-11-29 08:12 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 08:12 - INFO - 	 Train Loss: 0.064
2024-11-29 08:12 - INFO - 	 Val. Loss: 0.061
2024-11-29 08:12 - INFO - 	 ROC-AUC: 0.987
2024-11-29 08:12 - INFO - 	 PR-AUC: 0.870
2024-11-29 08:12 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 08:12 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 08:12 - INFO - 	 Best PR-AUC: 0.879
2024-11-29 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-29 08:12 - INFO - ---------------------------------------------
2024-11-29 08:20 - INFO - ---------------------------------------------
2024-11-29 08:20 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 08:20 - INFO - 	 Train Loss: 0.062
2024-11-29 08:20 - INFO - 	 Val. Loss: 0.060
2024-11-29 08:20 - INFO - 	 ROC-AUC: 0.988
2024-11-29 08:20 - INFO - 	 PR-AUC: 0.878
2024-11-29 08:20 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 08:20 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 08:20 - INFO - 	 Best PR-AUC: 0.879
2024-11-29 08:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 08:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-29 08:20 - INFO - ---------------------------------------------
2024-11-29 08:28 - INFO - ---------------------------------------------
2024-11-29 08:28 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 08:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88121
2024-11-29 08:28 - INFO - 	 Train Loss: 0.062
2024-11-29 08:28 - INFO - 	 Val. Loss: 0.060
2024-11-29 08:28 - INFO - 	 ROC-AUC: 0.987
2024-11-29 08:28 - INFO - 	 PR-AUC: 0.881
2024-11-29 08:28 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 08:28 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 08:28 - INFO - 	 Best PR-AUC: 0.881
2024-11-29 08:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 08:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-29 08:28 - INFO - ---------------------------------------------
2024-11-29 08:31 - INFO - Fit the preprocessing pipeline
2024-11-29 08:31 - INFO - Training using device: cuda
2024-11-29 08:31 - INFO - Creating generators
2024-11-29 08:31 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 08:31 - INFO - * Model:
2024-11-29 08:31 - INFO - * -----------
2024-11-29 08:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 08:31 - INFO - * -----------
2024-11-29 08:39 - INFO - ---------------------------------------------
2024-11-29 08:39 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83864
2024-11-29 08:39 - INFO - 	 Train Loss: 0.085
2024-11-29 08:39 - INFO - 	 Val. Loss: 0.072
2024-11-29 08:39 - INFO - 	 ROC-AUC: 0.984
2024-11-29 08:39 - INFO - 	 PR-AUC: 0.839
2024-11-29 08:39 - INFO - 	 Best Val. Loss: 0.072
2024-11-29 08:39 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 08:39 - INFO - 	 Best PR-AUC: 0.839
2024-11-29 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-11-29 08:39 - INFO - ---------------------------------------------
2024-11-29 08:47 - INFO - ---------------------------------------------
2024-11-29 08:47 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-29 08:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84909
2024-11-29 08:47 - INFO - 	 Train Loss: 0.074
2024-11-29 08:47 - INFO - 	 Val. Loss: 0.070
2024-11-29 08:47 - INFO - 	 ROC-AUC: 0.984
2024-11-29 08:47 - INFO - 	 PR-AUC: 0.849
2024-11-29 08:47 - INFO - 	 Best Val. Loss: 0.070
2024-11-29 08:47 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 08:47 - INFO - 	 Best PR-AUC: 0.849
2024-11-29 08:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 08:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-11-29 08:47 - INFO - ---------------------------------------------
2024-11-29 08:55 - INFO - ---------------------------------------------
2024-11-29 08:55 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 08:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86329
2024-11-29 08:55 - INFO - 	 Train Loss: 0.070
2024-11-29 08:55 - INFO - 	 Val. Loss: 0.063
2024-11-29 08:55 - INFO - 	 ROC-AUC: 0.987
2024-11-29 08:55 - INFO - 	 PR-AUC: 0.863
2024-11-29 08:55 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 08:55 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 08:55 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 08:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 08:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-29 08:55 - INFO - ---------------------------------------------
2024-11-29 09:03 - INFO - ---------------------------------------------
2024-11-29 09:03 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 09:03 - INFO - 	 Train Loss: 0.068
2024-11-29 09:03 - INFO - 	 Val. Loss: 0.065
2024-11-29 09:03 - INFO - 	 ROC-AUC: 0.985
2024-11-29 09:03 - INFO - 	 PR-AUC: 0.863
2024-11-29 09:03 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 09:03 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 09:03 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 09:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 09:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-29 09:03 - INFO - ---------------------------------------------
2024-11-29 09:11 - INFO - ---------------------------------------------
2024-11-29 09:11 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-29 09:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87071
2024-11-29 09:11 - INFO - 	 Train Loss: 0.066
2024-11-29 09:11 - INFO - 	 Val. Loss: 0.062
2024-11-29 09:11 - INFO - 	 ROC-AUC: 0.987
2024-11-29 09:11 - INFO - 	 PR-AUC: 0.871
2024-11-29 09:11 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 09:11 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 09:11 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 09:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 09:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-29 09:11 - INFO - ---------------------------------------------
2024-11-29 09:19 - INFO - ---------------------------------------------
2024-11-29 09:19 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87419
2024-11-29 09:19 - INFO - 	 Train Loss: 0.066
2024-11-29 09:19 - INFO - 	 Val. Loss: 0.062
2024-11-29 09:19 - INFO - 	 ROC-AUC: 0.987
2024-11-29 09:19 - INFO - 	 PR-AUC: 0.874
2024-11-29 09:19 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 09:19 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 09:19 - INFO - 	 Best PR-AUC: 0.874
2024-11-29 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-29 09:19 - INFO - ---------------------------------------------
2024-11-29 09:27 - INFO - ---------------------------------------------
2024-11-29 09:27 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 09:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87595
2024-11-29 09:27 - INFO - 	 Train Loss: 0.064
2024-11-29 09:27 - INFO - 	 Val. Loss: 0.060
2024-11-29 09:27 - INFO - 	 ROC-AUC: 0.987
2024-11-29 09:27 - INFO - 	 PR-AUC: 0.876
2024-11-29 09:27 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 09:27 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 09:27 - INFO - 	 Best PR-AUC: 0.876
2024-11-29 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-29 09:27 - INFO - ---------------------------------------------
2024-11-29 09:35 - INFO - ---------------------------------------------
2024-11-29 09:35 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 09:35 - INFO - 	 Train Loss: 0.064
2024-11-29 09:35 - INFO - 	 Val. Loss: 0.064
2024-11-29 09:35 - INFO - 	 ROC-AUC: 0.987
2024-11-29 09:35 - INFO - 	 PR-AUC: 0.861
2024-11-29 09:35 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 09:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 09:35 - INFO - 	 Best PR-AUC: 0.876
2024-11-29 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-29 09:35 - INFO - ---------------------------------------------
2024-11-29 09:43 - INFO - ---------------------------------------------
2024-11-29 09:43 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 09:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87796
2024-11-29 09:43 - INFO - 	 Train Loss: 0.064
2024-11-29 09:43 - INFO - 	 Val. Loss: 0.060
2024-11-29 09:43 - INFO - 	 ROC-AUC: 0.987
2024-11-29 09:43 - INFO - 	 PR-AUC: 0.878
2024-11-29 09:43 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 09:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 09:43 - INFO - 	 Best PR-AUC: 0.878
2024-11-29 09:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 09:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-29 09:43 - INFO - ---------------------------------------------
2024-11-29 09:51 - INFO - ---------------------------------------------
2024-11-29 09:51 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 09:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88834
2024-11-29 09:51 - INFO - 	 Train Loss: 0.062
2024-11-29 09:51 - INFO - 	 Val. Loss: 0.059
2024-11-29 09:51 - INFO - 	 ROC-AUC: 0.988
2024-11-29 09:51 - INFO - 	 PR-AUC: 0.888
2024-11-29 09:51 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 09:51 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 09:51 - INFO - 	 Best PR-AUC: 0.888
2024-11-29 09:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 09:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-29 09:51 - INFO - ---------------------------------------------
2024-11-29 09:53 - INFO - Fit the preprocessing pipeline
2024-11-29 09:53 - INFO - Training using device: cuda
2024-11-29 09:53 - INFO - Creating generators
2024-11-29 09:53 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 09:53 - INFO - * Model:
2024-11-29 09:53 - INFO - * -----------
2024-11-29 09:53 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 09:53 - INFO - * -----------
2024-11-29 10:01 - INFO - ---------------------------------------------
2024-11-29 10:01 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 10:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84301
2024-11-29 10:01 - INFO - 	 Train Loss: 0.085
2024-11-29 10:01 - INFO - 	 Val. Loss: 0.069
2024-11-29 10:01 - INFO - 	 ROC-AUC: 0.985
2024-11-29 10:01 - INFO - 	 PR-AUC: 0.843
2024-11-29 10:01 - INFO - 	 Best Val. Loss: 0.069
2024-11-29 10:01 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 10:01 - INFO - 	 Best PR-AUC: 0.843
2024-11-29 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-29 10:01 - INFO - ---------------------------------------------
2024-11-29 10:09 - INFO - ---------------------------------------------
2024-11-29 10:09 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86176
2024-11-29 10:09 - INFO - 	 Train Loss: 0.073
2024-11-29 10:09 - INFO - 	 Val. Loss: 0.065
2024-11-29 10:09 - INFO - 	 ROC-AUC: 0.986
2024-11-29 10:09 - INFO - 	 PR-AUC: 0.862
2024-11-29 10:09 - INFO - 	 Best Val. Loss: 0.065
2024-11-29 10:09 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 10:09 - INFO - 	 Best PR-AUC: 0.862
2024-11-29 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-29 10:09 - INFO - ---------------------------------------------
2024-11-29 10:17 - INFO - ---------------------------------------------
2024-11-29 10:17 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-29 10:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86299
2024-11-29 10:17 - INFO - 	 Train Loss: 0.070
2024-11-29 10:17 - INFO - 	 Val. Loss: 0.061
2024-11-29 10:17 - INFO - 	 ROC-AUC: 0.987
2024-11-29 10:17 - INFO - 	 PR-AUC: 0.863
2024-11-29 10:17 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 10:17 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 10:17 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 10:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 10:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-29 10:17 - INFO - ---------------------------------------------
2024-11-29 10:25 - INFO - ---------------------------------------------
2024-11-29 10:25 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86848
2024-11-29 10:25 - INFO - 	 Train Loss: 0.067
2024-11-29 10:25 - INFO - 	 Val. Loss: 0.063
2024-11-29 10:25 - INFO - 	 ROC-AUC: 0.986
2024-11-29 10:25 - INFO - 	 PR-AUC: 0.868
2024-11-29 10:25 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 10:25 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 10:25 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-29 10:25 - INFO - ---------------------------------------------
2024-11-29 10:34 - INFO - ---------------------------------------------
2024-11-29 10:34 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-29 10:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8754
2024-11-29 10:34 - INFO - 	 Train Loss: 0.066
2024-11-29 10:34 - INFO - 	 Val. Loss: 0.060
2024-11-29 10:34 - INFO - 	 ROC-AUC: 0.987
2024-11-29 10:34 - INFO - 	 PR-AUC: 0.875
2024-11-29 10:34 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 10:34 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 10:34 - INFO - 	 Best PR-AUC: 0.875
2024-11-29 10:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 10:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 10:34 - INFO - ---------------------------------------------
2024-11-29 10:42 - INFO - ---------------------------------------------
2024-11-29 10:42 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 10:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87697
2024-11-29 10:42 - INFO - 	 Train Loss: 0.066
2024-11-29 10:42 - INFO - 	 Val. Loss: 0.060
2024-11-29 10:42 - INFO - 	 ROC-AUC: 0.988
2024-11-29 10:42 - INFO - 	 PR-AUC: 0.877
2024-11-29 10:42 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 10:42 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 10:42 - INFO - 	 Best PR-AUC: 0.877
2024-11-29 10:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 10:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-29 10:42 - INFO - ---------------------------------------------
2024-11-29 10:50 - INFO - ---------------------------------------------
2024-11-29 10:50 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 10:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88328
2024-11-29 10:50 - INFO - 	 Train Loss: 0.064
2024-11-29 10:50 - INFO - 	 Val. Loss: 0.060
2024-11-29 10:50 - INFO - 	 ROC-AUC: 0.987
2024-11-29 10:50 - INFO - 	 PR-AUC: 0.883
2024-11-29 10:50 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 10:50 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 10:50 - INFO - 	 Best PR-AUC: 0.883
2024-11-29 10:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 10:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 10:50 - INFO - ---------------------------------------------
2024-11-29 10:58 - INFO - ---------------------------------------------
2024-11-29 10:58 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 10:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88691
2024-11-29 10:58 - INFO - 	 Train Loss: 0.064
2024-11-29 10:58 - INFO - 	 Val. Loss: 0.059
2024-11-29 10:58 - INFO - 	 ROC-AUC: 0.987
2024-11-29 10:58 - INFO - 	 PR-AUC: 0.887
2024-11-29 10:58 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 10:58 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 10:58 - INFO - 	 Best PR-AUC: 0.887
2024-11-29 10:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 10:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 10:58 - INFO - ---------------------------------------------
2024-11-29 11:06 - INFO - ---------------------------------------------
2024-11-29 11:06 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 11:06 - INFO - 	 Train Loss: 0.063
2024-11-29 11:06 - INFO - 	 Val. Loss: 0.061
2024-11-29 11:06 - INFO - 	 ROC-AUC: 0.987
2024-11-29 11:06 - INFO - 	 PR-AUC: 0.883
2024-11-29 11:06 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 11:06 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 11:06 - INFO - 	 Best PR-AUC: 0.887
2024-11-29 11:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 11:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 11:06 - INFO - ---------------------------------------------
2024-11-29 11:14 - INFO - ---------------------------------------------
2024-11-29 11:14 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 11:14 - INFO - 	 Train Loss: 0.062
2024-11-29 11:14 - INFO - 	 Val. Loss: 0.060
2024-11-29 11:14 - INFO - 	 ROC-AUC: 0.986
2024-11-29 11:14 - INFO - 	 PR-AUC: 0.883
2024-11-29 11:14 - INFO - 	 Best Val. Loss: 0.059
2024-11-29 11:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 11:14 - INFO - 	 Best PR-AUC: 0.887
2024-11-29 11:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 11:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 11:14 - INFO - ---------------------------------------------
2024-11-29 11:16 - INFO - Fit the preprocessing pipeline
2024-11-29 11:16 - INFO - Training using device: cuda
2024-11-29 11:16 - INFO - Creating generators
2024-11-29 11:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 11:16 - INFO - * Model:
2024-11-29 11:16 - INFO - * -----------
2024-11-29 11:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 11:16 - INFO - * -----------
2024-11-29 11:24 - INFO - ---------------------------------------------
2024-11-29 11:24 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 11:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85413
2024-11-29 11:24 - INFO - 	 Train Loss: 0.085
2024-11-29 11:24 - INFO - 	 Val. Loss: 0.068
2024-11-29 11:24 - INFO - 	 ROC-AUC: 0.984
2024-11-29 11:24 - INFO - 	 PR-AUC: 0.854
2024-11-29 11:24 - INFO - 	 Best Val. Loss: 0.068
2024-11-29 11:24 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 11:24 - INFO - 	 Best PR-AUC: 0.854
2024-11-29 11:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 11:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-11-29 11:24 - INFO - ---------------------------------------------
2024-11-29 11:32 - INFO - ---------------------------------------------
2024-11-29 11:32 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 11:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86503
2024-11-29 11:32 - INFO - 	 Train Loss: 0.074
2024-11-29 11:32 - INFO - 	 Val. Loss: 0.065
2024-11-29 11:32 - INFO - 	 ROC-AUC: 0.987
2024-11-29 11:32 - INFO - 	 PR-AUC: 0.865
2024-11-29 11:32 - INFO - 	 Best Val. Loss: 0.065
2024-11-29 11:32 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 11:32 - INFO - 	 Best PR-AUC: 0.865
2024-11-29 11:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 11:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-29 11:32 - INFO - ---------------------------------------------
2024-11-29 11:40 - INFO - ---------------------------------------------
2024-11-29 11:40 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 11:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87084
2024-11-29 11:40 - INFO - 	 Train Loss: 0.070
2024-11-29 11:40 - INFO - 	 Val. Loss: 0.064
2024-11-29 11:40 - INFO - 	 ROC-AUC: 0.986
2024-11-29 11:40 - INFO - 	 PR-AUC: 0.871
2024-11-29 11:40 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 11:40 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 11:40 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-29 11:40 - INFO - ---------------------------------------------
2024-11-29 11:48 - INFO - ---------------------------------------------
2024-11-29 11:48 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 11:48 - INFO - 	 Train Loss: 0.068
2024-11-29 11:48 - INFO - 	 Val. Loss: 0.063
2024-11-29 11:48 - INFO - 	 ROC-AUC: 0.986
2024-11-29 11:48 - INFO - 	 PR-AUC: 0.866
2024-11-29 11:48 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 11:48 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 11:48 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-29 11:48 - INFO - ---------------------------------------------
2024-11-29 11:56 - INFO - ---------------------------------------------
2024-11-29 11:56 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-29 11:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87819
2024-11-29 11:56 - INFO - 	 Train Loss: 0.066
2024-11-29 11:56 - INFO - 	 Val. Loss: 0.060
2024-11-29 11:56 - INFO - 	 ROC-AUC: 0.987
2024-11-29 11:56 - INFO - 	 PR-AUC: 0.878
2024-11-29 11:56 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 11:56 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 11:56 - INFO - 	 Best PR-AUC: 0.878
2024-11-29 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-29 11:56 - INFO - ---------------------------------------------
2024-11-29 12:04 - INFO - ---------------------------------------------
2024-11-29 12:04 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-29 12:04 - INFO - 	 Train Loss: 0.066
2024-11-29 12:04 - INFO - 	 Val. Loss: 0.062
2024-11-29 12:04 - INFO - 	 ROC-AUC: 0.987
2024-11-29 12:04 - INFO - 	 PR-AUC: 0.871
2024-11-29 12:04 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 12:04 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 12:04 - INFO - 	 Best PR-AUC: 0.878
2024-11-29 12:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 12:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-29 12:04 - INFO - ---------------------------------------------
2024-11-29 12:12 - INFO - ---------------------------------------------
2024-11-29 12:12 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-29 12:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88512
2024-11-29 12:12 - INFO - 	 Train Loss: 0.065
2024-11-29 12:12 - INFO - 	 Val. Loss: 0.057
2024-11-29 12:12 - INFO - 	 ROC-AUC: 0.988
2024-11-29 12:12 - INFO - 	 PR-AUC: 0.885
2024-11-29 12:12 - INFO - 	 Best Val. Loss: 0.057
2024-11-29 12:12 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 12:12 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 12:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 12:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 12:12 - INFO - ---------------------------------------------
2024-11-29 12:20 - INFO - ---------------------------------------------
2024-11-29 12:20 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 12:20 - INFO - 	 Train Loss: 0.063
2024-11-29 12:20 - INFO - 	 Val. Loss: 0.060
2024-11-29 12:20 - INFO - 	 ROC-AUC: 0.987
2024-11-29 12:20 - INFO - 	 PR-AUC: 0.880
2024-11-29 12:20 - INFO - 	 Best Val. Loss: 0.057
2024-11-29 12:20 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 12:20 - INFO - 	 Best PR-AUC: 0.885
2024-11-29 12:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 12:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 12:20 - INFO - ---------------------------------------------
2024-11-29 12:28 - INFO - ---------------------------------------------
2024-11-29 12:28 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 12:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88867
2024-11-29 12:28 - INFO - 	 Train Loss: 0.063
2024-11-29 12:28 - INFO - 	 Val. Loss: 0.059
2024-11-29 12:28 - INFO - 	 ROC-AUC: 0.987
2024-11-29 12:28 - INFO - 	 PR-AUC: 0.889
2024-11-29 12:28 - INFO - 	 Best Val. Loss: 0.057
2024-11-29 12:28 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 12:28 - INFO - 	 Best PR-AUC: 0.889
2024-11-29 12:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 12:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-29 12:28 - INFO - ---------------------------------------------
2024-11-29 12:36 - INFO - ---------------------------------------------
2024-11-29 12:36 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 12:36 - INFO - 	 Train Loss: 0.061
2024-11-29 12:36 - INFO - 	 Val. Loss: 0.058
2024-11-29 12:36 - INFO - 	 ROC-AUC: 0.988
2024-11-29 12:36 - INFO - 	 PR-AUC: 0.888
2024-11-29 12:36 - INFO - 	 Best Val. Loss: 0.057
2024-11-29 12:36 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 12:36 - INFO - 	 Best PR-AUC: 0.889
2024-11-29 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-29 12:36 - INFO - ---------------------------------------------
2024-11-29 12:39 - INFO - Fit the preprocessing pipeline
2024-11-29 12:39 - INFO - Training using device: cuda
2024-11-29 12:39 - INFO - Creating generators
2024-11-29 12:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 12:39 - INFO - * Model:
2024-11-29 12:39 - INFO - * -----------
2024-11-29 12:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 12:39 - INFO - * -----------
2024-11-29 12:47 - INFO - ---------------------------------------------
2024-11-29 12:47 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 12:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83532
2024-11-29 12:47 - INFO - 	 Train Loss: 0.088
2024-11-29 12:47 - INFO - 	 Val. Loss: 0.072
2024-11-29 12:47 - INFO - 	 ROC-AUC: 0.983
2024-11-29 12:47 - INFO - 	 PR-AUC: 0.835
2024-11-29 12:47 - INFO - 	 Best Val. Loss: 0.072
2024-11-29 12:47 - INFO - 	 Best ROC-AUC: 0.983
2024-11-29 12:47 - INFO - 	 Best PR-AUC: 0.835
2024-11-29 12:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 12:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-29 12:47 - INFO - ---------------------------------------------
2024-11-29 12:55 - INFO - ---------------------------------------------
2024-11-29 12:55 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-29 12:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87274
2024-11-29 12:55 - INFO - 	 Train Loss: 0.074
2024-11-29 12:55 - INFO - 	 Val. Loss: 0.064
2024-11-29 12:55 - INFO - 	 ROC-AUC: 0.986
2024-11-29 12:55 - INFO - 	 PR-AUC: 0.873
2024-11-29 12:55 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 12:55 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 12:55 - INFO - 	 Best PR-AUC: 0.873
2024-11-29 12:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 12:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-29 12:55 - INFO - ---------------------------------------------
2024-11-29 13:03 - INFO - ---------------------------------------------
2024-11-29 13:03 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-29 13:03 - INFO - 	 Train Loss: 0.070
2024-11-29 13:03 - INFO - 	 Val. Loss: 0.063
2024-11-29 13:03 - INFO - 	 ROC-AUC: 0.987
2024-11-29 13:03 - INFO - 	 PR-AUC: 0.860
2024-11-29 13:03 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 13:03 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 13:03 - INFO - 	 Best PR-AUC: 0.873
2024-11-29 13:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 13:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-29 13:03 - INFO - ---------------------------------------------
2024-11-29 13:11 - INFO - ---------------------------------------------
2024-11-29 13:11 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-29 13:11 - INFO - 	 Train Loss: 0.068
2024-11-29 13:11 - INFO - 	 Val. Loss: 0.061
2024-11-29 13:11 - INFO - 	 ROC-AUC: 0.987
2024-11-29 13:11 - INFO - 	 PR-AUC: 0.868
2024-11-29 13:11 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 13:11 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 13:11 - INFO - 	 Best PR-AUC: 0.873
2024-11-29 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-29 13:11 - INFO - ---------------------------------------------
2024-11-29 13:19 - INFO - ---------------------------------------------
2024-11-29 13:19 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-29 13:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8871
2024-11-29 13:19 - INFO - 	 Train Loss: 0.066
2024-11-29 13:19 - INFO - 	 Val. Loss: 0.058
2024-11-29 13:19 - INFO - 	 ROC-AUC: 0.988
2024-11-29 13:19 - INFO - 	 PR-AUC: 0.887
2024-11-29 13:19 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 13:19 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 13:19 - INFO - 	 Best PR-AUC: 0.887
2024-11-29 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-29 13:19 - INFO - ---------------------------------------------
2024-11-29 13:27 - INFO - ---------------------------------------------
2024-11-29 13:27 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-29 13:27 - INFO - 	 Train Loss: 0.065
2024-11-29 13:27 - INFO - 	 Val. Loss: 0.061
2024-11-29 13:27 - INFO - 	 ROC-AUC: 0.987
2024-11-29 13:27 - INFO - 	 PR-AUC: 0.873
2024-11-29 13:27 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 13:27 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 13:27 - INFO - 	 Best PR-AUC: 0.887
2024-11-29 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-29 13:27 - INFO - ---------------------------------------------
2024-11-29 13:35 - INFO - ---------------------------------------------
2024-11-29 13:35 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-29 13:35 - INFO - 	 Train Loss: 0.065
2024-11-29 13:35 - INFO - 	 Val. Loss: 0.065
2024-11-29 13:35 - INFO - 	 ROC-AUC: 0.987
2024-11-29 13:35 - INFO - 	 PR-AUC: 0.866
2024-11-29 13:35 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 13:35 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 13:35 - INFO - 	 Best PR-AUC: 0.887
2024-11-29 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-29 13:35 - INFO - ---------------------------------------------
2024-11-29 13:43 - INFO - ---------------------------------------------
2024-11-29 13:43 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-29 13:43 - INFO - 	 Train Loss: 0.063
2024-11-29 13:43 - INFO - 	 Val. Loss: 0.061
2024-11-29 13:43 - INFO - 	 ROC-AUC: 0.987
2024-11-29 13:43 - INFO - 	 PR-AUC: 0.876
2024-11-29 13:43 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 13:43 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 13:43 - INFO - 	 Best PR-AUC: 0.887
2024-11-29 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-29 13:43 - INFO - ---------------------------------------------
2024-11-29 13:54 - INFO - Fit the preprocessing pipeline
2024-11-29 13:54 - INFO - Training using device: cuda
2024-11-29 13:54 - INFO - Creating generators
2024-11-29 13:54 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 13:54 - INFO - * Model:
2024-11-29 13:54 - INFO - * -----------
2024-11-29 13:54 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 13:54 - INFO - * -----------
2024-11-29 14:02 - INFO - ---------------------------------------------
2024-11-29 14:02 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 14:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82892
2024-11-29 14:02 - INFO - 	 Train Loss: 0.086
2024-11-29 14:02 - INFO - 	 Val. Loss: 0.072
2024-11-29 14:02 - INFO - 	 ROC-AUC: 0.983
2024-11-29 14:02 - INFO - 	 PR-AUC: 0.829
2024-11-29 14:02 - INFO - 	 Best Val. Loss: 0.072
2024-11-29 14:02 - INFO - 	 Best ROC-AUC: 0.983
2024-11-29 14:02 - INFO - 	 Best PR-AUC: 0.829
2024-11-29 14:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 14:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-29 14:02 - INFO - ---------------------------------------------
2024-11-29 14:10 - INFO - ---------------------------------------------
2024-11-29 14:10 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 14:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8494
2024-11-29 14:10 - INFO - 	 Train Loss: 0.073
2024-11-29 14:10 - INFO - 	 Val. Loss: 0.069
2024-11-29 14:10 - INFO - 	 ROC-AUC: 0.985
2024-11-29 14:10 - INFO - 	 PR-AUC: 0.849
2024-11-29 14:10 - INFO - 	 Best Val. Loss: 0.069
2024-11-29 14:10 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 14:10 - INFO - 	 Best PR-AUC: 0.849
2024-11-29 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-29 14:10 - INFO - ---------------------------------------------
2024-11-29 14:18 - INFO - ---------------------------------------------
2024-11-29 14:18 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-29 14:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87301
2024-11-29 14:18 - INFO - 	 Train Loss: 0.070
2024-11-29 14:18 - INFO - 	 Val. Loss: 0.062
2024-11-29 14:18 - INFO - 	 ROC-AUC: 0.987
2024-11-29 14:18 - INFO - 	 PR-AUC: 0.873
2024-11-29 14:18 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 14:18 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 14:18 - INFO - 	 Best PR-AUC: 0.873
2024-11-29 14:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 14:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 14:18 - INFO - ---------------------------------------------
2024-11-29 14:26 - INFO - ---------------------------------------------
2024-11-29 14:26 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 14:26 - INFO - 	 Train Loss: 0.070
2024-11-29 14:26 - INFO - 	 Val. Loss: 0.062
2024-11-29 14:26 - INFO - 	 ROC-AUC: 0.987
2024-11-29 14:26 - INFO - 	 PR-AUC: 0.869
2024-11-29 14:26 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 14:26 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 14:26 - INFO - 	 Best PR-AUC: 0.873
2024-11-29 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 14:26 - INFO - ---------------------------------------------
2024-11-29 14:34 - INFO - ---------------------------------------------
2024-11-29 14:34 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 14:34 - INFO - 	 Train Loss: 0.066
2024-11-29 14:34 - INFO - 	 Val. Loss: 0.062
2024-11-29 14:34 - INFO - 	 ROC-AUC: 0.987
2024-11-29 14:34 - INFO - 	 PR-AUC: 0.872
2024-11-29 14:34 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 14:34 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 14:34 - INFO - 	 Best PR-AUC: 0.873
2024-11-29 14:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 14:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-29 14:34 - INFO - ---------------------------------------------
2024-11-29 14:42 - INFO - ---------------------------------------------
2024-11-29 14:42 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-29 14:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88073
2024-11-29 14:42 - INFO - 	 Train Loss: 0.064
2024-11-29 14:42 - INFO - 	 Val. Loss: 0.060
2024-11-29 14:42 - INFO - 	 ROC-AUC: 0.988
2024-11-29 14:42 - INFO - 	 PR-AUC: 0.881
2024-11-29 14:42 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 14:42 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 14:42 - INFO - 	 Best PR-AUC: 0.881
2024-11-29 14:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 14:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-29 14:42 - INFO - ---------------------------------------------
2024-11-29 14:50 - INFO - ---------------------------------------------
2024-11-29 14:50 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 14:50 - INFO - 	 Train Loss: 0.065
2024-11-29 14:50 - INFO - 	 Val. Loss: 0.062
2024-11-29 14:50 - INFO - 	 ROC-AUC: 0.987
2024-11-29 14:50 - INFO - 	 PR-AUC: 0.874
2024-11-29 14:50 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 14:50 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 14:50 - INFO - 	 Best PR-AUC: 0.881
2024-11-29 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-29 14:50 - INFO - ---------------------------------------------
2024-11-29 14:58 - INFO - ---------------------------------------------
2024-11-29 14:58 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-29 14:58 - INFO - 	 Train Loss: 0.064
2024-11-29 14:58 - INFO - 	 Val. Loss: 0.061
2024-11-29 14:58 - INFO - 	 ROC-AUC: 0.987
2024-11-29 14:58 - INFO - 	 PR-AUC: 0.867
2024-11-29 14:58 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 14:58 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 14:58 - INFO - 	 Best PR-AUC: 0.881
2024-11-29 14:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 14:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-29 14:58 - INFO - ---------------------------------------------
2024-11-29 15:06 - INFO - ---------------------------------------------
2024-11-29 15:06 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-29 15:06 - INFO - 	 Train Loss: 0.063
2024-11-29 15:06 - INFO - 	 Val. Loss: 0.061
2024-11-29 15:06 - INFO - 	 ROC-AUC: 0.987
2024-11-29 15:06 - INFO - 	 PR-AUC: 0.873
2024-11-29 15:06 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 15:06 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 15:06 - INFO - 	 Best PR-AUC: 0.881
2024-11-29 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-29 15:06 - INFO - ---------------------------------------------
2024-11-29 15:14 - INFO - ---------------------------------------------
2024-11-29 15:14 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 15:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.888
2024-11-29 15:14 - INFO - 	 Train Loss: 0.062
2024-11-29 15:14 - INFO - 	 Val. Loss: 0.058
2024-11-29 15:14 - INFO - 	 ROC-AUC: 0.987
2024-11-29 15:14 - INFO - 	 PR-AUC: 0.888
2024-11-29 15:14 - INFO - 	 Best Val. Loss: 0.058
2024-11-29 15:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 15:14 - INFO - 	 Best PR-AUC: 0.888
2024-11-29 15:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 15:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-29 15:14 - INFO - ---------------------------------------------
