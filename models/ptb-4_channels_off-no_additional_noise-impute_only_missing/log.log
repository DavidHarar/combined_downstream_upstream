2024-10-15 14:23 - INFO - Fit the preprocessing pipeline
2024-10-15 14:23 - INFO - Training using device: cuda
2024-10-15 14:23 - INFO - Creating generators
2024-10-15 14:23 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 14:23 - INFO - * Model:
2024-10-15 14:23 - INFO - * -----------
2024-10-15 14:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 14:23 - INFO - * -----------
2024-10-15 14:31 - INFO - ---------------------------------------------
2024-10-15 14:31 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-15 14:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8844
2024-10-15 14:31 - INFO - 	 Train Loss: 0.071
2024-10-15 14:31 - INFO - 	 Val. Loss: 0.059
2024-10-15 14:31 - INFO - 	 ROC-AUC: 0.988
2024-10-15 14:31 - INFO - 	 PR-AUC: 0.884
2024-10-15 14:31 - INFO - 	 Best Val. Loss: 0.059
2024-10-15 14:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-15 14:31 - INFO - 	 Best PR-AUC: 0.884
2024-10-15 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-15 14:31 - INFO - ---------------------------------------------
2024-10-15 14:39 - INFO - ---------------------------------------------
2024-10-15 14:39 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 14:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88672
2024-10-15 14:39 - INFO - 	 Train Loss: 0.063
2024-10-15 14:39 - INFO - 	 Val. Loss: 0.064
2024-10-15 14:39 - INFO - 	 ROC-AUC: 0.988
2024-10-15 14:39 - INFO - 	 PR-AUC: 0.887
2024-10-15 14:39 - INFO - 	 Best Val. Loss: 0.059
2024-10-15 14:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-15 14:39 - INFO - 	 Best PR-AUC: 0.887
2024-10-15 14:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 14:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-15 14:39 - INFO - ---------------------------------------------
2024-10-15 14:47 - INFO - ---------------------------------------------
2024-10-15 14:47 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90242
2024-10-15 14:47 - INFO - 	 Train Loss: 0.060
2024-10-15 14:47 - INFO - 	 Val. Loss: 0.055
2024-10-15 14:47 - INFO - 	 ROC-AUC: 0.989
2024-10-15 14:47 - INFO - 	 PR-AUC: 0.902
2024-10-15 14:47 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 14:47 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 14:47 - INFO - 	 Best PR-AUC: 0.902
2024-10-15 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-15 14:47 - INFO - ---------------------------------------------
2024-10-15 14:55 - INFO - ---------------------------------------------
2024-10-15 14:55 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 14:55 - INFO - 	 Train Loss: 0.059
2024-10-15 14:55 - INFO - 	 Val. Loss: 0.056
2024-10-15 14:55 - INFO - 	 ROC-AUC: 0.989
2024-10-15 14:55 - INFO - 	 PR-AUC: 0.896
2024-10-15 14:55 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 14:55 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 14:55 - INFO - 	 Best PR-AUC: 0.902
2024-10-15 14:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 14:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-15 14:55 - INFO - ---------------------------------------------
2024-10-15 15:03 - INFO - ---------------------------------------------
2024-10-15 15:03 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 15:03 - INFO - 	 Train Loss: 0.057
2024-10-15 15:03 - INFO - 	 Val. Loss: 0.056
2024-10-15 15:03 - INFO - 	 ROC-AUC: 0.989
2024-10-15 15:03 - INFO - 	 PR-AUC: 0.899
2024-10-15 15:03 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 15:03 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 15:03 - INFO - 	 Best PR-AUC: 0.902
2024-10-15 15:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 15:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-15 15:03 - INFO - ---------------------------------------------
2024-10-15 15:11 - INFO - ---------------------------------------------
2024-10-15 15:11 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-15 15:11 - INFO - 	 Train Loss: 0.056
2024-10-15 15:11 - INFO - 	 Val. Loss: 0.055
2024-10-15 15:11 - INFO - 	 ROC-AUC: 0.989
2024-10-15 15:11 - INFO - 	 PR-AUC: 0.899
2024-10-15 15:11 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 15:11 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 15:11 - INFO - 	 Best PR-AUC: 0.902
2024-10-15 15:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 15:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-15 15:11 - INFO - ---------------------------------------------
2024-10-15 15:22 - INFO - Fit the preprocessing pipeline
2024-10-15 15:22 - INFO - Training using device: cuda
2024-10-15 15:22 - INFO - Creating generators
2024-10-15 15:22 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 15:22 - INFO - * Model:
2024-10-15 15:22 - INFO - * -----------
2024-10-15 15:22 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 15:22 - INFO - * -----------
2024-10-15 15:30 - INFO - ---------------------------------------------
2024-10-15 15:30 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-15 15:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88162
2024-10-15 15:30 - INFO - 	 Train Loss: 0.071
2024-10-15 15:30 - INFO - 	 Val. Loss: 0.060
2024-10-15 15:30 - INFO - 	 ROC-AUC: 0.987
2024-10-15 15:30 - INFO - 	 PR-AUC: 0.882
2024-10-15 15:30 - INFO - 	 Best Val. Loss: 0.060
2024-10-15 15:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-15 15:30 - INFO - 	 Best PR-AUC: 0.882
2024-10-15 15:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 15:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-15 15:30 - INFO - ---------------------------------------------
2024-10-15 15:38 - INFO - ---------------------------------------------
2024-10-15 15:38 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 15:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88761
2024-10-15 15:38 - INFO - 	 Train Loss: 0.063
2024-10-15 15:38 - INFO - 	 Val. Loss: 0.058
2024-10-15 15:38 - INFO - 	 ROC-AUC: 0.989
2024-10-15 15:38 - INFO - 	 PR-AUC: 0.888
2024-10-15 15:38 - INFO - 	 Best Val. Loss: 0.058
2024-10-15 15:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 15:38 - INFO - 	 Best PR-AUC: 0.888
2024-10-15 15:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 15:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-15 15:38 - INFO - ---------------------------------------------
2024-10-15 15:46 - INFO - ---------------------------------------------
2024-10-15 15:46 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 15:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90252
2024-10-15 15:46 - INFO - 	 Train Loss: 0.060
2024-10-15 15:46 - INFO - 	 Val. Loss: 0.054
2024-10-15 15:46 - INFO - 	 ROC-AUC: 0.990
2024-10-15 15:46 - INFO - 	 PR-AUC: 0.903
2024-10-15 15:46 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 15:46 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 15:46 - INFO - 	 Best PR-AUC: 0.903
2024-10-15 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-15 15:46 - INFO - ---------------------------------------------
2024-10-15 15:54 - INFO - ---------------------------------------------
2024-10-15 15:54 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 15:54 - INFO - 	 Train Loss: 0.058
2024-10-15 15:54 - INFO - 	 Val. Loss: 0.053
2024-10-15 15:54 - INFO - 	 ROC-AUC: 0.990
2024-10-15 15:54 - INFO - 	 PR-AUC: 0.901
2024-10-15 15:54 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 15:54 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 15:54 - INFO - 	 Best PR-AUC: 0.903
2024-10-15 15:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 15:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-15 15:54 - INFO - ---------------------------------------------
2024-10-15 16:02 - INFO - ---------------------------------------------
2024-10-15 16:02 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 16:02 - INFO - 	 Train Loss: 0.057
2024-10-15 16:02 - INFO - 	 Val. Loss: 0.063
2024-10-15 16:02 - INFO - 	 ROC-AUC: 0.987
2024-10-15 16:02 - INFO - 	 PR-AUC: 0.882
2024-10-15 16:02 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 16:02 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 16:02 - INFO - 	 Best PR-AUC: 0.903
2024-10-15 16:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 16:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-15 16:02 - INFO - ---------------------------------------------
2024-10-15 16:10 - INFO - ---------------------------------------------
2024-10-15 16:10 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-15 16:10 - INFO - 	 Train Loss: 0.056
2024-10-15 16:10 - INFO - 	 Val. Loss: 0.055
2024-10-15 16:10 - INFO - 	 ROC-AUC: 0.989
2024-10-15 16:10 - INFO - 	 PR-AUC: 0.900
2024-10-15 16:10 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 16:10 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 16:10 - INFO - 	 Best PR-AUC: 0.903
2024-10-15 16:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 16:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-15 16:10 - INFO - ---------------------------------------------
2024-10-15 16:18 - INFO - ---------------------------------------------
2024-10-15 16:18 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-15 16:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90277
2024-10-15 16:18 - INFO - 	 Train Loss: 0.055
2024-10-15 16:18 - INFO - 	 Val. Loss: 0.054
2024-10-15 16:18 - INFO - 	 ROC-AUC: 0.990
2024-10-15 16:18 - INFO - 	 PR-AUC: 0.903
2024-10-15 16:18 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 16:18 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 16:18 - INFO - 	 Best PR-AUC: 0.903
2024-10-15 16:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 16:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-15 16:18 - INFO - ---------------------------------------------
2024-10-15 16:26 - INFO - ---------------------------------------------
2024-10-15 16:26 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-15 16:26 - INFO - 	 Train Loss: 0.055
2024-10-15 16:26 - INFO - 	 Val. Loss: 0.056
2024-10-15 16:26 - INFO - 	 ROC-AUC: 0.989
2024-10-15 16:26 - INFO - 	 PR-AUC: 0.901
2024-10-15 16:26 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 16:26 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 16:26 - INFO - 	 Best PR-AUC: 0.903
2024-10-15 16:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 16:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-15 16:26 - INFO - ---------------------------------------------
2024-10-15 16:34 - INFO - ---------------------------------------------
2024-10-15 16:34 - INFO - Epoch: 09 | Time: 7m 59s
2024-10-15 16:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90684
2024-10-15 16:34 - INFO - 	 Train Loss: 0.053
2024-10-15 16:34 - INFO - 	 Val. Loss: 0.053
2024-10-15 16:34 - INFO - 	 ROC-AUC: 0.990
2024-10-15 16:34 - INFO - 	 PR-AUC: 0.907
2024-10-15 16:34 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 16:34 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 16:34 - INFO - 	 Best PR-AUC: 0.907
2024-10-15 16:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-15 16:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.918
2024-10-15 16:34 - INFO - ---------------------------------------------
2024-10-15 16:42 - INFO - ---------------------------------------------
2024-10-15 16:42 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-15 16:42 - INFO - 	 Train Loss: 0.052
2024-10-15 16:42 - INFO - 	 Val. Loss: 0.053
2024-10-15 16:42 - INFO - 	 ROC-AUC: 0.990
2024-10-15 16:42 - INFO - 	 PR-AUC: 0.906
2024-10-15 16:42 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 16:42 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 16:42 - INFO - 	 Best PR-AUC: 0.907
2024-10-15 16:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-15 16:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.918
2024-10-15 16:42 - INFO - ---------------------------------------------
2024-10-15 16:44 - INFO - Fit the preprocessing pipeline
2024-10-15 16:44 - INFO - Training using device: cuda
2024-10-15 16:44 - INFO - Creating generators
2024-10-15 16:44 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 16:44 - INFO - * Model:
2024-10-15 16:44 - INFO - * -----------
2024-10-15 16:44 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 16:44 - INFO - * -----------
2024-10-15 16:52 - INFO - ---------------------------------------------
2024-10-15 16:52 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-15 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88367
2024-10-15 16:52 - INFO - 	 Train Loss: 0.071
2024-10-15 16:52 - INFO - 	 Val. Loss: 0.059
2024-10-15 16:52 - INFO - 	 ROC-AUC: 0.988
2024-10-15 16:52 - INFO - 	 PR-AUC: 0.884
2024-10-15 16:52 - INFO - 	 Best Val. Loss: 0.059
2024-10-15 16:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-15 16:52 - INFO - 	 Best PR-AUC: 0.884
2024-10-15 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-15 16:52 - INFO - ---------------------------------------------
2024-10-15 17:00 - INFO - ---------------------------------------------
2024-10-15 17:00 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 17:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90632
2024-10-15 17:00 - INFO - 	 Train Loss: 0.063
2024-10-15 17:00 - INFO - 	 Val. Loss: 0.055
2024-10-15 17:00 - INFO - 	 ROC-AUC: 0.989
2024-10-15 17:00 - INFO - 	 PR-AUC: 0.906
2024-10-15 17:00 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 17:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 17:00 - INFO - 	 Best PR-AUC: 0.906
2024-10-15 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-15 17:00 - INFO - ---------------------------------------------
2024-10-15 17:08 - INFO - ---------------------------------------------
2024-10-15 17:08 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-15 17:08 - INFO - 	 Train Loss: 0.059
2024-10-15 17:08 - INFO - 	 Val. Loss: 0.056
2024-10-15 17:08 - INFO - 	 ROC-AUC: 0.989
2024-10-15 17:08 - INFO - 	 PR-AUC: 0.899
2024-10-15 17:08 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 17:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 17:08 - INFO - 	 Best PR-AUC: 0.906
2024-10-15 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-15 17:08 - INFO - ---------------------------------------------
2024-10-15 17:16 - INFO - ---------------------------------------------
2024-10-15 17:16 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 17:16 - INFO - 	 Train Loss: 0.058
2024-10-15 17:16 - INFO - 	 Val. Loss: 0.056
2024-10-15 17:16 - INFO - 	 ROC-AUC: 0.989
2024-10-15 17:16 - INFO - 	 PR-AUC: 0.902
2024-10-15 17:16 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 17:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 17:16 - INFO - 	 Best PR-AUC: 0.906
2024-10-15 17:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 17:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-15 17:16 - INFO - ---------------------------------------------
2024-10-15 17:24 - INFO - ---------------------------------------------
2024-10-15 17:24 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-15 17:24 - INFO - 	 Train Loss: 0.058
2024-10-15 17:24 - INFO - 	 Val. Loss: 0.054
2024-10-15 17:24 - INFO - 	 ROC-AUC: 0.990
2024-10-15 17:24 - INFO - 	 PR-AUC: 0.902
2024-10-15 17:24 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 17:24 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 17:24 - INFO - 	 Best PR-AUC: 0.906
2024-10-15 17:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-15 17:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-15 17:24 - INFO - ---------------------------------------------
2024-10-15 17:35 - INFO - Fit the preprocessing pipeline
2024-10-15 17:35 - INFO - Training using device: cuda
2024-10-15 17:35 - INFO - Creating generators
2024-10-15 17:35 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 17:35 - INFO - * Model:
2024-10-15 17:35 - INFO - * -----------
2024-10-15 17:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 17:35 - INFO - * -----------
2024-10-15 17:43 - INFO - ---------------------------------------------
2024-10-15 17:43 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-15 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88518
2024-10-15 17:43 - INFO - 	 Train Loss: 0.071
2024-10-15 17:43 - INFO - 	 Val. Loss: 0.059
2024-10-15 17:43 - INFO - 	 ROC-AUC: 0.989
2024-10-15 17:43 - INFO - 	 PR-AUC: 0.885
2024-10-15 17:43 - INFO - 	 Best Val. Loss: 0.059
2024-10-15 17:43 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 17:43 - INFO - 	 Best PR-AUC: 0.885
2024-10-15 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-15 17:43 - INFO - ---------------------------------------------
2024-10-15 17:51 - INFO - ---------------------------------------------
2024-10-15 17:51 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89612
2024-10-15 17:51 - INFO - 	 Train Loss: 0.063
2024-10-15 17:51 - INFO - 	 Val. Loss: 0.058
2024-10-15 17:51 - INFO - 	 ROC-AUC: 0.988
2024-10-15 17:51 - INFO - 	 PR-AUC: 0.896
2024-10-15 17:51 - INFO - 	 Best Val. Loss: 0.058
2024-10-15 17:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 17:51 - INFO - 	 Best PR-AUC: 0.896
2024-10-15 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 17:51 - INFO - ---------------------------------------------
2024-10-15 17:59 - INFO - ---------------------------------------------
2024-10-15 17:59 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 17:59 - INFO - 	 Train Loss: 0.061
2024-10-15 17:59 - INFO - 	 Val. Loss: 0.060
2024-10-15 17:59 - INFO - 	 ROC-AUC: 0.989
2024-10-15 17:59 - INFO - 	 PR-AUC: 0.890
2024-10-15 17:59 - INFO - 	 Best Val. Loss: 0.058
2024-10-15 17:59 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 17:59 - INFO - 	 Best PR-AUC: 0.896
2024-10-15 17:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 17:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 17:59 - INFO - ---------------------------------------------
2024-10-15 18:07 - INFO - ---------------------------------------------
2024-10-15 18:07 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-15 18:07 - INFO - 	 Train Loss: 0.059
2024-10-15 18:07 - INFO - 	 Val. Loss: 0.057
2024-10-15 18:07 - INFO - 	 ROC-AUC: 0.988
2024-10-15 18:07 - INFO - 	 PR-AUC: 0.896
2024-10-15 18:07 - INFO - 	 Best Val. Loss: 0.057
2024-10-15 18:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 18:07 - INFO - 	 Best PR-AUC: 0.896
2024-10-15 18:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 18:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 18:07 - INFO - ---------------------------------------------
2024-10-15 18:15 - INFO - ---------------------------------------------
2024-10-15 18:15 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 18:15 - INFO - 	 Train Loss: 0.057
2024-10-15 18:15 - INFO - 	 Val. Loss: 0.055
2024-10-15 18:15 - INFO - 	 ROC-AUC: 0.990
2024-10-15 18:15 - INFO - 	 PR-AUC: 0.895
2024-10-15 18:15 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 18:15 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 18:15 - INFO - 	 Best PR-AUC: 0.896
2024-10-15 18:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 18:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 18:15 - INFO - ---------------------------------------------
2024-10-15 18:25 - INFO - Fit the preprocessing pipeline
2024-10-15 18:25 - INFO - Training using device: cuda
2024-10-15 18:25 - INFO - Creating generators
2024-10-15 18:25 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 18:25 - INFO - * Model:
2024-10-15 18:25 - INFO - * -----------
2024-10-15 18:25 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 18:25 - INFO - * -----------
2024-10-15 18:33 - INFO - ---------------------------------------------
2024-10-15 18:33 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-15 18:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88357
2024-10-15 18:33 - INFO - 	 Train Loss: 0.070
2024-10-15 18:33 - INFO - 	 Val. Loss: 0.062
2024-10-15 18:33 - INFO - 	 ROC-AUC: 0.987
2024-10-15 18:33 - INFO - 	 PR-AUC: 0.884
2024-10-15 18:33 - INFO - 	 Best Val. Loss: 0.062
2024-10-15 18:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-15 18:33 - INFO - 	 Best PR-AUC: 0.884
2024-10-15 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-15 18:33 - INFO - ---------------------------------------------
2024-10-15 18:41 - INFO - ---------------------------------------------
2024-10-15 18:41 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 18:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89951
2024-10-15 18:41 - INFO - 	 Train Loss: 0.062
2024-10-15 18:41 - INFO - 	 Val. Loss: 0.062
2024-10-15 18:41 - INFO - 	 ROC-AUC: 0.988
2024-10-15 18:41 - INFO - 	 PR-AUC: 0.900
2024-10-15 18:41 - INFO - 	 Best Val. Loss: 0.062
2024-10-15 18:41 - INFO - 	 Best ROC-AUC: 0.988
2024-10-15 18:41 - INFO - 	 Best PR-AUC: 0.900
2024-10-15 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-15 18:41 - INFO - ---------------------------------------------
2024-10-15 18:49 - INFO - ---------------------------------------------
2024-10-15 18:49 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90523
2024-10-15 18:49 - INFO - 	 Train Loss: 0.060
2024-10-15 18:49 - INFO - 	 Val. Loss: 0.055
2024-10-15 18:49 - INFO - 	 ROC-AUC: 0.989
2024-10-15 18:49 - INFO - 	 PR-AUC: 0.905
2024-10-15 18:49 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 18:49 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 18:49 - INFO - 	 Best PR-AUC: 0.905
2024-10-15 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-10-15 18:49 - INFO - ---------------------------------------------
2024-10-15 18:57 - INFO - ---------------------------------------------
2024-10-15 18:57 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 18:57 - INFO - 	 Train Loss: 0.058
2024-10-15 18:57 - INFO - 	 Val. Loss: 0.059
2024-10-15 18:57 - INFO - 	 ROC-AUC: 0.988
2024-10-15 18:57 - INFO - 	 PR-AUC: 0.897
2024-10-15 18:57 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 18:57 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 18:57 - INFO - 	 Best PR-AUC: 0.905
2024-10-15 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-10-15 18:57 - INFO - ---------------------------------------------
2024-10-15 19:06 - INFO - ---------------------------------------------
2024-10-15 19:06 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 19:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90854
2024-10-15 19:06 - INFO - 	 Train Loss: 0.057
2024-10-15 19:06 - INFO - 	 Val. Loss: 0.053
2024-10-15 19:06 - INFO - 	 ROC-AUC: 0.990
2024-10-15 19:06 - INFO - 	 PR-AUC: 0.909
2024-10-15 19:06 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 19:06 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 19:06 - INFO - 	 Best PR-AUC: 0.909
2024-10-15 19:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 19:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-15 19:06 - INFO - ---------------------------------------------
2024-10-15 19:14 - INFO - ---------------------------------------------
2024-10-15 19:14 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-15 19:14 - INFO - 	 Train Loss: 0.056
2024-10-15 19:14 - INFO - 	 Val. Loss: 0.054
2024-10-15 19:14 - INFO - 	 ROC-AUC: 0.990
2024-10-15 19:14 - INFO - 	 PR-AUC: 0.906
2024-10-15 19:14 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 19:14 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 19:14 - INFO - 	 Best PR-AUC: 0.909
2024-10-15 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-15 19:14 - INFO - ---------------------------------------------
2024-10-15 19:22 - INFO - ---------------------------------------------
2024-10-15 19:22 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-15 19:22 - INFO - 	 Train Loss: 0.055
2024-10-15 19:22 - INFO - 	 Val. Loss: 0.053
2024-10-15 19:22 - INFO - 	 ROC-AUC: 0.990
2024-10-15 19:22 - INFO - 	 PR-AUC: 0.907
2024-10-15 19:22 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 19:22 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 19:22 - INFO - 	 Best PR-AUC: 0.909
2024-10-15 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-15 19:22 - INFO - ---------------------------------------------
2024-10-15 19:30 - INFO - ---------------------------------------------
2024-10-15 19:30 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-15 19:30 - INFO - 	 Train Loss: 0.054
2024-10-15 19:30 - INFO - 	 Val. Loss: 0.053
2024-10-15 19:30 - INFO - 	 ROC-AUC: 0.989
2024-10-15 19:30 - INFO - 	 PR-AUC: 0.908
2024-10-15 19:30 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 19:30 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 19:30 - INFO - 	 Best PR-AUC: 0.909
2024-10-15 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-15 19:30 - INFO - ---------------------------------------------
2024-10-15 19:40 - INFO - Fit the preprocessing pipeline
2024-10-15 19:40 - INFO - Training using device: cuda
2024-10-15 19:40 - INFO - Creating generators
2024-10-15 19:40 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 19:40 - INFO - * Model:
2024-10-15 19:40 - INFO - * -----------
2024-10-15 19:40 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 19:40 - INFO - * -----------
2024-10-15 19:48 - INFO - ---------------------------------------------
2024-10-15 19:48 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-15 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87681
2024-10-15 19:48 - INFO - 	 Train Loss: 0.071
2024-10-15 19:48 - INFO - 	 Val. Loss: 0.061
2024-10-15 19:48 - INFO - 	 ROC-AUC: 0.988
2024-10-15 19:48 - INFO - 	 PR-AUC: 0.877
2024-10-15 19:48 - INFO - 	 Best Val. Loss: 0.061
2024-10-15 19:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-15 19:48 - INFO - 	 Best PR-AUC: 0.877
2024-10-15 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-15 19:48 - INFO - ---------------------------------------------
2024-10-15 19:56 - INFO - ---------------------------------------------
2024-10-15 19:56 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 19:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89325
2024-10-15 19:56 - INFO - 	 Train Loss: 0.063
2024-10-15 19:56 - INFO - 	 Val. Loss: 0.058
2024-10-15 19:56 - INFO - 	 ROC-AUC: 0.988
2024-10-15 19:56 - INFO - 	 PR-AUC: 0.893
2024-10-15 19:56 - INFO - 	 Best Val. Loss: 0.058
2024-10-15 19:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-15 19:56 - INFO - 	 Best PR-AUC: 0.893
2024-10-15 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 19:56 - INFO - ---------------------------------------------
2024-10-15 20:04 - INFO - ---------------------------------------------
2024-10-15 20:04 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90002
2024-10-15 20:04 - INFO - 	 Train Loss: 0.061
2024-10-15 20:04 - INFO - 	 Val. Loss: 0.056
2024-10-15 20:04 - INFO - 	 ROC-AUC: 0.989
2024-10-15 20:04 - INFO - 	 PR-AUC: 0.900
2024-10-15 20:04 - INFO - 	 Best Val. Loss: 0.056
2024-10-15 20:04 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 20:04 - INFO - 	 Best PR-AUC: 0.900
2024-10-15 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-15 20:04 - INFO - ---------------------------------------------
2024-10-15 20:12 - INFO - ---------------------------------------------
2024-10-15 20:12 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 20:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9023
2024-10-15 20:12 - INFO - 	 Train Loss: 0.058
2024-10-15 20:12 - INFO - 	 Val. Loss: 0.054
2024-10-15 20:12 - INFO - 	 ROC-AUC: 0.990
2024-10-15 20:12 - INFO - 	 PR-AUC: 0.902
2024-10-15 20:12 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 20:12 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 20:12 - INFO - 	 Best PR-AUC: 0.902
2024-10-15 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-15 20:12 - INFO - ---------------------------------------------
2024-10-15 20:20 - INFO - ---------------------------------------------
2024-10-15 20:20 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 20:20 - INFO - 	 Train Loss: 0.058
2024-10-15 20:20 - INFO - 	 Val. Loss: 0.057
2024-10-15 20:20 - INFO - 	 ROC-AUC: 0.989
2024-10-15 20:20 - INFO - 	 PR-AUC: 0.897
2024-10-15 20:20 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 20:20 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 20:20 - INFO - 	 Best PR-AUC: 0.902
2024-10-15 20:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 20:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-15 20:20 - INFO - ---------------------------------------------
2024-10-15 20:28 - INFO - ---------------------------------------------
2024-10-15 20:28 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-15 20:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90449
2024-10-15 20:28 - INFO - 	 Train Loss: 0.056
2024-10-15 20:28 - INFO - 	 Val. Loss: 0.054
2024-10-15 20:28 - INFO - 	 ROC-AUC: 0.990
2024-10-15 20:28 - INFO - 	 PR-AUC: 0.904
2024-10-15 20:28 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 20:28 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 20:28 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 20:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-15 20:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-15 20:28 - INFO - ---------------------------------------------
2024-10-15 20:36 - INFO - ---------------------------------------------
2024-10-15 20:36 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-15 20:36 - INFO - 	 Train Loss: 0.055
2024-10-15 20:36 - INFO - 	 Val. Loss: 0.059
2024-10-15 20:36 - INFO - 	 ROC-AUC: 0.989
2024-10-15 20:36 - INFO - 	 PR-AUC: 0.894
2024-10-15 20:36 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 20:36 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 20:36 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 20:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-15 20:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-15 20:36 - INFO - ---------------------------------------------
2024-10-15 20:44 - INFO - ---------------------------------------------
2024-10-15 20:44 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-15 20:44 - INFO - 	 Train Loss: 0.054
2024-10-15 20:44 - INFO - 	 Val. Loss: 0.055
2024-10-15 20:44 - INFO - 	 ROC-AUC: 0.990
2024-10-15 20:44 - INFO - 	 PR-AUC: 0.895
2024-10-15 20:44 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 20:44 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 20:44 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 20:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 20:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-15 20:44 - INFO - ---------------------------------------------
2024-10-15 20:52 - INFO - ---------------------------------------------
2024-10-15 20:52 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-15 20:52 - INFO - 	 Train Loss: 0.053
2024-10-15 20:52 - INFO - 	 Val. Loss: 0.057
2024-10-15 20:52 - INFO - 	 ROC-AUC: 0.990
2024-10-15 20:52 - INFO - 	 PR-AUC: 0.900
2024-10-15 20:52 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 20:52 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 20:52 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 20:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 20:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-15 20:52 - INFO - ---------------------------------------------
2024-10-15 21:00 - INFO - ---------------------------------------------
2024-10-15 21:00 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-15 21:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90518
2024-10-15 21:00 - INFO - 	 Train Loss: 0.054
2024-10-15 21:00 - INFO - 	 Val. Loss: 0.053
2024-10-15 21:00 - INFO - 	 ROC-AUC: 0.990
2024-10-15 21:00 - INFO - 	 PR-AUC: 0.905
2024-10-15 21:00 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 21:00 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 21:00 - INFO - 	 Best PR-AUC: 0.905
2024-10-15 21:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-15 21:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-15 21:00 - INFO - ---------------------------------------------
2024-10-15 21:03 - INFO - Fit the preprocessing pipeline
2024-10-15 21:03 - INFO - Training using device: cuda
2024-10-15 21:03 - INFO - Creating generators
2024-10-15 21:03 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 21:03 - INFO - * Model:
2024-10-15 21:03 - INFO - * -----------
2024-10-15 21:03 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 21:03 - INFO - * -----------
2024-10-15 21:11 - INFO - ---------------------------------------------
2024-10-15 21:11 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-15 21:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8893
2024-10-15 21:11 - INFO - 	 Train Loss: 0.071
2024-10-15 21:11 - INFO - 	 Val. Loss: 0.058
2024-10-15 21:11 - INFO - 	 ROC-AUC: 0.988
2024-10-15 21:11 - INFO - 	 PR-AUC: 0.889
2024-10-15 21:11 - INFO - 	 Best Val. Loss: 0.058
2024-10-15 21:11 - INFO - 	 Best ROC-AUC: 0.988
2024-10-15 21:11 - INFO - 	 Best PR-AUC: 0.889
2024-10-15 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-10-15 21:11 - INFO - ---------------------------------------------
2024-10-15 21:19 - INFO - ---------------------------------------------
2024-10-15 21:19 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-15 21:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89628
2024-10-15 21:19 - INFO - 	 Train Loss: 0.064
2024-10-15 21:19 - INFO - 	 Val. Loss: 0.057
2024-10-15 21:19 - INFO - 	 ROC-AUC: 0.989
2024-10-15 21:19 - INFO - 	 PR-AUC: 0.896
2024-10-15 21:19 - INFO - 	 Best Val. Loss: 0.057
2024-10-15 21:19 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 21:19 - INFO - 	 Best PR-AUC: 0.896
2024-10-15 21:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 21:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-15 21:19 - INFO - ---------------------------------------------
2024-10-15 21:27 - INFO - ---------------------------------------------
2024-10-15 21:27 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 21:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90417
2024-10-15 21:27 - INFO - 	 Train Loss: 0.059
2024-10-15 21:27 - INFO - 	 Val. Loss: 0.054
2024-10-15 21:27 - INFO - 	 ROC-AUC: 0.989
2024-10-15 21:27 - INFO - 	 PR-AUC: 0.904
2024-10-15 21:27 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 21:27 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 21:27 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 21:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 21:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-15 21:27 - INFO - ---------------------------------------------
2024-10-15 21:35 - INFO - ---------------------------------------------
2024-10-15 21:35 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 21:35 - INFO - 	 Train Loss: 0.058
2024-10-15 21:35 - INFO - 	 Val. Loss: 0.056
2024-10-15 21:35 - INFO - 	 ROC-AUC: 0.990
2024-10-15 21:35 - INFO - 	 PR-AUC: 0.895
2024-10-15 21:35 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 21:35 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 21:35 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 21:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 21:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-15 21:35 - INFO - ---------------------------------------------
2024-10-15 21:43 - INFO - ---------------------------------------------
2024-10-15 21:43 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 21:43 - INFO - 	 Train Loss: 0.057
2024-10-15 21:43 - INFO - 	 Val. Loss: 0.056
2024-10-15 21:43 - INFO - 	 ROC-AUC: 0.989
2024-10-15 21:43 - INFO - 	 PR-AUC: 0.891
2024-10-15 21:43 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 21:43 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 21:43 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-15 21:43 - INFO - ---------------------------------------------
2024-10-15 21:51 - INFO - ---------------------------------------------
2024-10-15 21:51 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-15 21:51 - INFO - 	 Train Loss: 0.056
2024-10-15 21:51 - INFO - 	 Val. Loss: 0.053
2024-10-15 21:51 - INFO - 	 ROC-AUC: 0.990
2024-10-15 21:51 - INFO - 	 PR-AUC: 0.902
2024-10-15 21:51 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 21:51 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 21:51 - INFO - 	 Best PR-AUC: 0.904
2024-10-15 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-15 21:51 - INFO - ---------------------------------------------
2024-10-15 22:01 - INFO - Fit the preprocessing pipeline
2024-10-15 22:01 - INFO - Training using device: cuda
2024-10-15 22:01 - INFO - Creating generators
2024-10-15 22:01 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 22:01 - INFO - * Model:
2024-10-15 22:01 - INFO - * -----------
2024-10-15 22:01 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 22:01 - INFO - * -----------
2024-10-15 22:09 - INFO - ---------------------------------------------
2024-10-15 22:09 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-15 22:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88084
2024-10-15 22:09 - INFO - 	 Train Loss: 0.070
2024-10-15 22:09 - INFO - 	 Val. Loss: 0.062
2024-10-15 22:09 - INFO - 	 ROC-AUC: 0.987
2024-10-15 22:09 - INFO - 	 PR-AUC: 0.881
2024-10-15 22:09 - INFO - 	 Best Val. Loss: 0.062
2024-10-15 22:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-15 22:09 - INFO - 	 Best PR-AUC: 0.881
2024-10-15 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-15 22:09 - INFO - ---------------------------------------------
2024-10-15 22:17 - INFO - ---------------------------------------------
2024-10-15 22:17 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89862
2024-10-15 22:17 - INFO - 	 Train Loss: 0.062
2024-10-15 22:17 - INFO - 	 Val. Loss: 0.055
2024-10-15 22:17 - INFO - 	 ROC-AUC: 0.989
2024-10-15 22:17 - INFO - 	 PR-AUC: 0.899
2024-10-15 22:17 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 22:17 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 22:17 - INFO - 	 Best PR-AUC: 0.899
2024-10-15 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-15 22:17 - INFO - ---------------------------------------------
2024-10-15 22:25 - INFO - ---------------------------------------------
2024-10-15 22:25 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 22:25 - INFO - 	 Train Loss: 0.061
2024-10-15 22:25 - INFO - 	 Val. Loss: 0.057
2024-10-15 22:25 - INFO - 	 ROC-AUC: 0.989
2024-10-15 22:25 - INFO - 	 PR-AUC: 0.895
2024-10-15 22:25 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 22:25 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 22:25 - INFO - 	 Best PR-AUC: 0.899
2024-10-15 22:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 22:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-15 22:25 - INFO - ---------------------------------------------
2024-10-15 22:33 - INFO - ---------------------------------------------
2024-10-15 22:33 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 22:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89905
2024-10-15 22:33 - INFO - 	 Train Loss: 0.058
2024-10-15 22:33 - INFO - 	 Val. Loss: 0.056
2024-10-15 22:33 - INFO - 	 ROC-AUC: 0.988
2024-10-15 22:33 - INFO - 	 PR-AUC: 0.899
2024-10-15 22:33 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 22:33 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 22:33 - INFO - 	 Best PR-AUC: 0.899
2024-10-15 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 22:33 - INFO - ---------------------------------------------
2024-10-15 22:41 - INFO - ---------------------------------------------
2024-10-15 22:41 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 22:41 - INFO - 	 Train Loss: 0.057
2024-10-15 22:41 - INFO - 	 Val. Loss: 0.054
2024-10-15 22:41 - INFO - 	 ROC-AUC: 0.989
2024-10-15 22:41 - INFO - 	 PR-AUC: 0.898
2024-10-15 22:41 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 22:41 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 22:41 - INFO - 	 Best PR-AUC: 0.899
2024-10-15 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-15 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 22:41 - INFO - ---------------------------------------------
2024-10-15 22:49 - INFO - ---------------------------------------------
2024-10-15 22:49 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-15 22:49 - INFO - 	 Train Loss: 0.056
2024-10-15 22:49 - INFO - 	 Val. Loss: 0.056
2024-10-15 22:49 - INFO - 	 ROC-AUC: 0.990
2024-10-15 22:49 - INFO - 	 PR-AUC: 0.896
2024-10-15 22:49 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 22:49 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 22:49 - INFO - 	 Best PR-AUC: 0.899
2024-10-15 22:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 22:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 22:49 - INFO - ---------------------------------------------
2024-10-15 22:57 - INFO - ---------------------------------------------
2024-10-15 22:57 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-15 22:57 - INFO - 	 Train Loss: 0.055
2024-10-15 22:57 - INFO - 	 Val. Loss: 0.057
2024-10-15 22:57 - INFO - 	 ROC-AUC: 0.989
2024-10-15 22:57 - INFO - 	 PR-AUC: 0.888
2024-10-15 22:57 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 22:57 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 22:57 - INFO - 	 Best PR-AUC: 0.899
2024-10-15 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-15 22:57 - INFO - ---------------------------------------------
2024-10-15 23:08 - INFO - Fit the preprocessing pipeline
2024-10-15 23:08 - INFO - Training using device: cuda
2024-10-15 23:08 - INFO - Creating generators
2024-10-15 23:08 - INFO - The model has 2,246,929 trainable parameters
2024-10-15 23:08 - INFO - * Model:
2024-10-15 23:08 - INFO - * -----------
2024-10-15 23:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-15 23:08 - INFO - * -----------
2024-10-15 23:16 - INFO - ---------------------------------------------
2024-10-15 23:16 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-15 23:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86597
2024-10-15 23:16 - INFO - 	 Train Loss: 0.071
2024-10-15 23:16 - INFO - 	 Val. Loss: 0.063
2024-10-15 23:16 - INFO - 	 ROC-AUC: 0.987
2024-10-15 23:16 - INFO - 	 PR-AUC: 0.866
2024-10-15 23:16 - INFO - 	 Best Val. Loss: 0.063
2024-10-15 23:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-15 23:16 - INFO - 	 Best PR-AUC: 0.866
2024-10-15 23:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 23:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-15 23:16 - INFO - ---------------------------------------------
2024-10-15 23:24 - INFO - ---------------------------------------------
2024-10-15 23:24 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-15 23:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88976
2024-10-15 23:24 - INFO - 	 Train Loss: 0.064
2024-10-15 23:24 - INFO - 	 Val. Loss: 0.057
2024-10-15 23:24 - INFO - 	 ROC-AUC: 0.989
2024-10-15 23:24 - INFO - 	 PR-AUC: 0.890
2024-10-15 23:24 - INFO - 	 Best Val. Loss: 0.057
2024-10-15 23:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 23:24 - INFO - 	 Best PR-AUC: 0.890
2024-10-15 23:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 23:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-15 23:24 - INFO - ---------------------------------------------
2024-10-15 23:32 - INFO - ---------------------------------------------
2024-10-15 23:32 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-15 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89577
2024-10-15 23:32 - INFO - 	 Train Loss: 0.060
2024-10-15 23:32 - INFO - 	 Val. Loss: 0.056
2024-10-15 23:32 - INFO - 	 ROC-AUC: 0.989
2024-10-15 23:32 - INFO - 	 PR-AUC: 0.896
2024-10-15 23:32 - INFO - 	 Best Val. Loss: 0.056
2024-10-15 23:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 23:32 - INFO - 	 Best PR-AUC: 0.896
2024-10-15 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-15 23:32 - INFO - ---------------------------------------------
2024-10-15 23:40 - INFO - ---------------------------------------------
2024-10-15 23:40 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-15 23:40 - INFO - 	 Train Loss: 0.058
2024-10-15 23:40 - INFO - 	 Val. Loss: 0.055
2024-10-15 23:40 - INFO - 	 ROC-AUC: 0.989
2024-10-15 23:40 - INFO - 	 PR-AUC: 0.895
2024-10-15 23:40 - INFO - 	 Best Val. Loss: 0.055
2024-10-15 23:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-15 23:40 - INFO - 	 Best PR-AUC: 0.896
2024-10-15 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-15 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-15 23:40 - INFO - ---------------------------------------------
2024-10-15 23:48 - INFO - ---------------------------------------------
2024-10-15 23:48 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-15 23:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90135
2024-10-15 23:48 - INFO - 	 Train Loss: 0.057
2024-10-15 23:48 - INFO - 	 Val. Loss: 0.054
2024-10-15 23:48 - INFO - 	 ROC-AUC: 0.990
2024-10-15 23:48 - INFO - 	 PR-AUC: 0.901
2024-10-15 23:48 - INFO - 	 Best Val. Loss: 0.054
2024-10-15 23:48 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 23:48 - INFO - 	 Best PR-AUC: 0.901
2024-10-15 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-15 23:48 - INFO - ---------------------------------------------
2024-10-15 23:56 - INFO - ---------------------------------------------
2024-10-15 23:56 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-15 23:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90707
2024-10-15 23:56 - INFO - 	 Train Loss: 0.056
2024-10-15 23:56 - INFO - 	 Val. Loss: 0.053
2024-10-15 23:56 - INFO - 	 ROC-AUC: 0.990
2024-10-15 23:56 - INFO - 	 PR-AUC: 0.907
2024-10-15 23:56 - INFO - 	 Best Val. Loss: 0.053
2024-10-15 23:56 - INFO - 	 Best ROC-AUC: 0.990
2024-10-15 23:56 - INFO - 	 Best PR-AUC: 0.907
2024-10-15 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-15 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-15 23:56 - INFO - ---------------------------------------------
2024-10-16 00:04 - INFO - ---------------------------------------------
2024-10-16 00:04 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 00:04 - INFO - 	 Train Loss: 0.054
2024-10-16 00:04 - INFO - 	 Val. Loss: 0.055
2024-10-16 00:04 - INFO - 	 ROC-AUC: 0.990
2024-10-16 00:04 - INFO - 	 PR-AUC: 0.900
2024-10-16 00:04 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 00:04 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 00:04 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-16 00:04 - INFO - ---------------------------------------------
2024-10-16 00:12 - INFO - ---------------------------------------------
2024-10-16 00:12 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 00:12 - INFO - 	 Train Loss: 0.055
2024-10-16 00:12 - INFO - 	 Val. Loss: 0.056
2024-10-16 00:12 - INFO - 	 ROC-AUC: 0.989
2024-10-16 00:12 - INFO - 	 PR-AUC: 0.896
2024-10-16 00:12 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 00:12 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 00:12 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 00:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 00:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-16 00:12 - INFO - ---------------------------------------------
2024-10-16 00:20 - INFO - ---------------------------------------------
2024-10-16 00:20 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.91421
2024-10-16 00:20 - INFO - 	 Train Loss: 0.053
2024-10-16 00:20 - INFO - 	 Val. Loss: 0.052
2024-10-16 00:20 - INFO - 	 ROC-AUC: 0.990
2024-10-16 00:20 - INFO - 	 PR-AUC: 0.914
2024-10-16 00:20 - INFO - 	 Best Val. Loss: 0.052
2024-10-16 00:20 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 00:20 - INFO - 	 Best PR-AUC: 0.914
2024-10-16 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-16 00:20 - INFO - ---------------------------------------------
2024-10-16 00:28 - INFO - ---------------------------------------------
2024-10-16 00:28 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 00:28 - INFO - 	 Train Loss: 0.053
2024-10-16 00:28 - INFO - 	 Val. Loss: 0.057
2024-10-16 00:28 - INFO - 	 ROC-AUC: 0.989
2024-10-16 00:28 - INFO - 	 PR-AUC: 0.897
2024-10-16 00:28 - INFO - 	 Best Val. Loss: 0.052
2024-10-16 00:28 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 00:28 - INFO - 	 Best PR-AUC: 0.914
2024-10-16 00:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 00:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-16 00:28 - INFO - ---------------------------------------------
2024-10-16 00:30 - INFO - Fit the preprocessing pipeline
2024-10-16 00:30 - INFO - Training using device: cuda
2024-10-16 00:30 - INFO - Creating generators
2024-10-16 00:30 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 00:30 - INFO - * Model:
2024-10-16 00:30 - INFO - * -----------
2024-10-16 00:30 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 00:30 - INFO - * -----------
2024-10-16 00:38 - INFO - ---------------------------------------------
2024-10-16 00:38 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 00:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88564
2024-10-16 00:38 - INFO - 	 Train Loss: 0.070
2024-10-16 00:38 - INFO - 	 Val. Loss: 0.059
2024-10-16 00:38 - INFO - 	 ROC-AUC: 0.988
2024-10-16 00:38 - INFO - 	 PR-AUC: 0.886
2024-10-16 00:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 00:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 00:38 - INFO - 	 Best PR-AUC: 0.886
2024-10-16 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-16 00:38 - INFO - ---------------------------------------------
2024-10-16 00:46 - INFO - ---------------------------------------------
2024-10-16 00:46 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 00:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89796
2024-10-16 00:46 - INFO - 	 Train Loss: 0.062
2024-10-16 00:46 - INFO - 	 Val. Loss: 0.057
2024-10-16 00:46 - INFO - 	 ROC-AUC: 0.989
2024-10-16 00:46 - INFO - 	 PR-AUC: 0.898
2024-10-16 00:46 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 00:46 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 00:46 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-16 00:46 - INFO - ---------------------------------------------
2024-10-16 00:54 - INFO - ---------------------------------------------
2024-10-16 00:54 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 00:54 - INFO - 	 Train Loss: 0.061
2024-10-16 00:54 - INFO - 	 Val. Loss: 0.059
2024-10-16 00:54 - INFO - 	 ROC-AUC: 0.989
2024-10-16 00:54 - INFO - 	 PR-AUC: 0.892
2024-10-16 00:54 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 00:54 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 00:54 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 00:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 00:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-16 00:54 - INFO - ---------------------------------------------
2024-10-16 01:02 - INFO - ---------------------------------------------
2024-10-16 01:02 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 01:02 - INFO - 	 Train Loss: 0.059
2024-10-16 01:02 - INFO - 	 Val. Loss: 0.057
2024-10-16 01:02 - INFO - 	 ROC-AUC: 0.988
2024-10-16 01:02 - INFO - 	 PR-AUC: 0.892
2024-10-16 01:02 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 01:02 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 01:02 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-16 01:02 - INFO - ---------------------------------------------
2024-10-16 01:10 - INFO - ---------------------------------------------
2024-10-16 01:10 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 01:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.899
2024-10-16 01:10 - INFO - 	 Train Loss: 0.057
2024-10-16 01:10 - INFO - 	 Val. Loss: 0.060
2024-10-16 01:10 - INFO - 	 ROC-AUC: 0.989
2024-10-16 01:10 - INFO - 	 PR-AUC: 0.899
2024-10-16 01:10 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 01:10 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 01:10 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.911
2024-10-16 01:10 - INFO - ---------------------------------------------
2024-10-16 01:18 - INFO - ---------------------------------------------
2024-10-16 01:18 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 01:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90099
2024-10-16 01:18 - INFO - 	 Train Loss: 0.055
2024-10-16 01:18 - INFO - 	 Val. Loss: 0.058
2024-10-16 01:18 - INFO - 	 ROC-AUC: 0.990
2024-10-16 01:18 - INFO - 	 PR-AUC: 0.901
2024-10-16 01:18 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 01:18 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 01:18 - INFO - 	 Best PR-AUC: 0.901
2024-10-16 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-16 01:18 - INFO - ---------------------------------------------
2024-10-16 01:26 - INFO - ---------------------------------------------
2024-10-16 01:26 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-16 01:26 - INFO - 	 Train Loss: 0.055
2024-10-16 01:26 - INFO - 	 Val. Loss: 0.057
2024-10-16 01:26 - INFO - 	 ROC-AUC: 0.989
2024-10-16 01:26 - INFO - 	 PR-AUC: 0.895
2024-10-16 01:26 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 01:26 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 01:26 - INFO - 	 Best PR-AUC: 0.901
2024-10-16 01:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 01:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-16 01:26 - INFO - ---------------------------------------------
2024-10-16 01:34 - INFO - ---------------------------------------------
2024-10-16 01:34 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 01:34 - INFO - 	 Train Loss: 0.053
2024-10-16 01:34 - INFO - 	 Val. Loss: 0.056
2024-10-16 01:34 - INFO - 	 ROC-AUC: 0.989
2024-10-16 01:34 - INFO - 	 PR-AUC: 0.896
2024-10-16 01:34 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 01:34 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 01:34 - INFO - 	 Best PR-AUC: 0.901
2024-10-16 01:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 01:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-16 01:34 - INFO - ---------------------------------------------
2024-10-16 01:42 - INFO - ---------------------------------------------
2024-10-16 01:42 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 01:42 - INFO - 	 Train Loss: 0.053
2024-10-16 01:42 - INFO - 	 Val. Loss: 0.055
2024-10-16 01:42 - INFO - 	 ROC-AUC: 0.990
2024-10-16 01:42 - INFO - 	 PR-AUC: 0.901
2024-10-16 01:42 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 01:42 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 01:42 - INFO - 	 Best PR-AUC: 0.901
2024-10-16 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-16 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-16 01:42 - INFO - ---------------------------------------------
2024-10-16 01:53 - INFO - Fit the preprocessing pipeline
2024-10-16 01:53 - INFO - Training using device: cuda
2024-10-16 01:53 - INFO - Creating generators
2024-10-16 01:53 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 01:53 - INFO - * Model:
2024-10-16 01:53 - INFO - * -----------
2024-10-16 01:53 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 01:53 - INFO - * -----------
2024-10-16 02:01 - INFO - ---------------------------------------------
2024-10-16 02:01 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-16 02:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87548
2024-10-16 02:01 - INFO - 	 Train Loss: 0.070
2024-10-16 02:01 - INFO - 	 Val. Loss: 0.062
2024-10-16 02:01 - INFO - 	 ROC-AUC: 0.987
2024-10-16 02:01 - INFO - 	 PR-AUC: 0.875
2024-10-16 02:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-16 02:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 02:01 - INFO - 	 Best PR-AUC: 0.875
2024-10-16 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-16 02:01 - INFO - ---------------------------------------------
2024-10-16 02:09 - INFO - ---------------------------------------------
2024-10-16 02:09 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 02:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8839
2024-10-16 02:09 - INFO - 	 Train Loss: 0.063
2024-10-16 02:09 - INFO - 	 Val. Loss: 0.058
2024-10-16 02:09 - INFO - 	 ROC-AUC: 0.989
2024-10-16 02:09 - INFO - 	 PR-AUC: 0.884
2024-10-16 02:09 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 02:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 02:09 - INFO - 	 Best PR-AUC: 0.884
2024-10-16 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-16 02:09 - INFO - ---------------------------------------------
2024-10-16 02:17 - INFO - ---------------------------------------------
2024-10-16 02:17 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90036
2024-10-16 02:17 - INFO - 	 Train Loss: 0.060
2024-10-16 02:17 - INFO - 	 Val. Loss: 0.054
2024-10-16 02:17 - INFO - 	 ROC-AUC: 0.990
2024-10-16 02:17 - INFO - 	 PR-AUC: 0.900
2024-10-16 02:17 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 02:17 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 02:17 - INFO - 	 Best PR-AUC: 0.900
2024-10-16 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-16 02:17 - INFO - ---------------------------------------------
2024-10-16 02:25 - INFO - ---------------------------------------------
2024-10-16 02:25 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 02:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90316
2024-10-16 02:25 - INFO - 	 Train Loss: 0.059
2024-10-16 02:25 - INFO - 	 Val. Loss: 0.055
2024-10-16 02:25 - INFO - 	 ROC-AUC: 0.989
2024-10-16 02:25 - INFO - 	 PR-AUC: 0.903
2024-10-16 02:25 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 02:25 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 02:25 - INFO - 	 Best PR-AUC: 0.903
2024-10-16 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 02:25 - INFO - ---------------------------------------------
2024-10-16 02:33 - INFO - ---------------------------------------------
2024-10-16 02:33 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-16 02:33 - INFO - 	 Train Loss: 0.057
2024-10-16 02:33 - INFO - 	 Val. Loss: 0.057
2024-10-16 02:33 - INFO - 	 ROC-AUC: 0.990
2024-10-16 02:33 - INFO - 	 PR-AUC: 0.903
2024-10-16 02:33 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 02:33 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 02:33 - INFO - 	 Best PR-AUC: 0.903
2024-10-16 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 02:33 - INFO - ---------------------------------------------
2024-10-16 02:41 - INFO - ---------------------------------------------
2024-10-16 02:41 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-16 02:41 - INFO - 	 Train Loss: 0.056
2024-10-16 02:41 - INFO - 	 Val. Loss: 0.056
2024-10-16 02:41 - INFO - 	 ROC-AUC: 0.990
2024-10-16 02:41 - INFO - 	 PR-AUC: 0.895
2024-10-16 02:41 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 02:41 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 02:41 - INFO - 	 Best PR-AUC: 0.903
2024-10-16 02:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 02:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 02:41 - INFO - ---------------------------------------------
2024-10-16 02:49 - INFO - ---------------------------------------------
2024-10-16 02:49 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-16 02:49 - INFO - 	 Train Loss: 0.055
2024-10-16 02:49 - INFO - 	 Val. Loss: 0.055
2024-10-16 02:49 - INFO - 	 ROC-AUC: 0.990
2024-10-16 02:49 - INFO - 	 PR-AUC: 0.901
2024-10-16 02:49 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 02:49 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 02:49 - INFO - 	 Best PR-AUC: 0.903
2024-10-16 02:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 02:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 02:49 - INFO - ---------------------------------------------
2024-10-16 02:59 - INFO - Fit the preprocessing pipeline
2024-10-16 02:59 - INFO - Training using device: cuda
2024-10-16 02:59 - INFO - Creating generators
2024-10-16 02:59 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 02:59 - INFO - * Model:
2024-10-16 02:59 - INFO - * -----------
2024-10-16 02:59 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 02:59 - INFO - * -----------
2024-10-16 03:07 - INFO - ---------------------------------------------
2024-10-16 03:07 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-16 03:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87674
2024-10-16 03:07 - INFO - 	 Train Loss: 0.072
2024-10-16 03:07 - INFO - 	 Val. Loss: 0.061
2024-10-16 03:07 - INFO - 	 ROC-AUC: 0.987
2024-10-16 03:07 - INFO - 	 PR-AUC: 0.877
2024-10-16 03:07 - INFO - 	 Best Val. Loss: 0.061
2024-10-16 03:07 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 03:07 - INFO - 	 Best PR-AUC: 0.877
2024-10-16 03:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 03:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-16 03:07 - INFO - ---------------------------------------------
2024-10-16 03:15 - INFO - ---------------------------------------------
2024-10-16 03:15 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-16 03:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88304
2024-10-16 03:15 - INFO - 	 Train Loss: 0.063
2024-10-16 03:15 - INFO - 	 Val. Loss: 0.061
2024-10-16 03:15 - INFO - 	 ROC-AUC: 0.989
2024-10-16 03:15 - INFO - 	 PR-AUC: 0.883
2024-10-16 03:15 - INFO - 	 Best Val. Loss: 0.061
2024-10-16 03:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 03:15 - INFO - 	 Best PR-AUC: 0.883
2024-10-16 03:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 03:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-16 03:15 - INFO - ---------------------------------------------
2024-10-16 03:23 - INFO - ---------------------------------------------
2024-10-16 03:23 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 03:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89905
2024-10-16 03:23 - INFO - 	 Train Loss: 0.062
2024-10-16 03:23 - INFO - 	 Val. Loss: 0.054
2024-10-16 03:23 - INFO - 	 ROC-AUC: 0.990
2024-10-16 03:23 - INFO - 	 PR-AUC: 0.899
2024-10-16 03:23 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 03:23 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 03:23 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 03:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 03:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-16 03:23 - INFO - ---------------------------------------------
2024-10-16 03:31 - INFO - ---------------------------------------------
2024-10-16 03:31 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-16 03:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8993
2024-10-16 03:31 - INFO - 	 Train Loss: 0.057
2024-10-16 03:31 - INFO - 	 Val. Loss: 0.055
2024-10-16 03:31 - INFO - 	 ROC-AUC: 0.989
2024-10-16 03:31 - INFO - 	 PR-AUC: 0.899
2024-10-16 03:31 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 03:31 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 03:31 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 03:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 03:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 03:31 - INFO - ---------------------------------------------
2024-10-16 03:39 - INFO - ---------------------------------------------
2024-10-16 03:39 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-16 03:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90171
2024-10-16 03:39 - INFO - 	 Train Loss: 0.058
2024-10-16 03:39 - INFO - 	 Val. Loss: 0.054
2024-10-16 03:39 - INFO - 	 ROC-AUC: 0.990
2024-10-16 03:39 - INFO - 	 PR-AUC: 0.902
2024-10-16 03:39 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 03:39 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 03:39 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 03:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 03:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-16 03:39 - INFO - ---------------------------------------------
2024-10-16 03:47 - INFO - ---------------------------------------------
2024-10-16 03:47 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-16 03:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90476
2024-10-16 03:47 - INFO - 	 Train Loss: 0.057
2024-10-16 03:47 - INFO - 	 Val. Loss: 0.055
2024-10-16 03:47 - INFO - 	 ROC-AUC: 0.990
2024-10-16 03:47 - INFO - 	 PR-AUC: 0.905
2024-10-16 03:47 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 03:47 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 03:47 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 03:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 03:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 03:47 - INFO - ---------------------------------------------
2024-10-16 03:55 - INFO - ---------------------------------------------
2024-10-16 03:55 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 03:55 - INFO - 	 Train Loss: 0.055
2024-10-16 03:55 - INFO - 	 Val. Loss: 0.058
2024-10-16 03:55 - INFO - 	 ROC-AUC: 0.989
2024-10-16 03:55 - INFO - 	 PR-AUC: 0.891
2024-10-16 03:55 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 03:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 03:55 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 03:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 03:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 03:55 - INFO - ---------------------------------------------
2024-10-16 04:03 - INFO - ---------------------------------------------
2024-10-16 04:03 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-16 04:03 - INFO - 	 Train Loss: 0.054
2024-10-16 04:03 - INFO - 	 Val. Loss: 0.056
2024-10-16 04:03 - INFO - 	 ROC-AUC: 0.989
2024-10-16 04:03 - INFO - 	 PR-AUC: 0.903
2024-10-16 04:03 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 04:03 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 04:03 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 04:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 04:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 04:03 - INFO - ---------------------------------------------
2024-10-16 04:12 - INFO - ---------------------------------------------
2024-10-16 04:12 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-16 04:12 - INFO - 	 Train Loss: 0.054
2024-10-16 04:12 - INFO - 	 Val. Loss: 0.058
2024-10-16 04:12 - INFO - 	 ROC-AUC: 0.989
2024-10-16 04:12 - INFO - 	 PR-AUC: 0.897
2024-10-16 04:12 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 04:12 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 04:12 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 04:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 04:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 04:12 - INFO - ---------------------------------------------
2024-10-16 04:20 - INFO - ---------------------------------------------
2024-10-16 04:20 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-16 04:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90797
2024-10-16 04:20 - INFO - 	 Train Loss: 0.052
2024-10-16 04:20 - INFO - 	 Val. Loss: 0.054
2024-10-16 04:20 - INFO - 	 ROC-AUC: 0.990
2024-10-16 04:20 - INFO - 	 PR-AUC: 0.908
2024-10-16 04:20 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 04:20 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 04:20 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 04:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 04:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-10-16 04:20 - INFO - ---------------------------------------------
2024-10-16 04:22 - INFO - Fit the preprocessing pipeline
2024-10-16 04:22 - INFO - Training using device: cuda
2024-10-16 04:22 - INFO - Creating generators
2024-10-16 04:22 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 04:22 - INFO - * Model:
2024-10-16 04:22 - INFO - * -----------
2024-10-16 04:22 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 04:22 - INFO - * -----------
2024-10-16 04:30 - INFO - ---------------------------------------------
2024-10-16 04:30 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 04:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89469
2024-10-16 04:30 - INFO - 	 Train Loss: 0.070
2024-10-16 04:30 - INFO - 	 Val. Loss: 0.058
2024-10-16 04:30 - INFO - 	 ROC-AUC: 0.988
2024-10-16 04:30 - INFO - 	 PR-AUC: 0.895
2024-10-16 04:30 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 04:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 04:30 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 04:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 04:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-16 04:30 - INFO - ---------------------------------------------
2024-10-16 04:38 - INFO - ---------------------------------------------
2024-10-16 04:38 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 04:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89833
2024-10-16 04:38 - INFO - 	 Train Loss: 0.062
2024-10-16 04:38 - INFO - 	 Val. Loss: 0.055
2024-10-16 04:38 - INFO - 	 ROC-AUC: 0.989
2024-10-16 04:38 - INFO - 	 PR-AUC: 0.898
2024-10-16 04:38 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 04:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 04:38 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 04:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 04:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-16 04:38 - INFO - ---------------------------------------------
2024-10-16 04:46 - INFO - ---------------------------------------------
2024-10-16 04:46 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 04:46 - INFO - 	 Train Loss: 0.061
2024-10-16 04:46 - INFO - 	 Val. Loss: 0.057
2024-10-16 04:46 - INFO - 	 ROC-AUC: 0.989
2024-10-16 04:46 - INFO - 	 PR-AUC: 0.898
2024-10-16 04:46 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 04:46 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 04:46 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 04:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 04:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-16 04:46 - INFO - ---------------------------------------------
2024-10-16 04:54 - INFO - ---------------------------------------------
2024-10-16 04:54 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-16 04:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90098
2024-10-16 04:54 - INFO - 	 Train Loss: 0.058
2024-10-16 04:54 - INFO - 	 Val. Loss: 0.055
2024-10-16 04:54 - INFO - 	 ROC-AUC: 0.989
2024-10-16 04:54 - INFO - 	 PR-AUC: 0.901
2024-10-16 04:54 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 04:54 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 04:54 - INFO - 	 Best PR-AUC: 0.901
2024-10-16 04:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 04:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-16 04:54 - INFO - ---------------------------------------------
2024-10-16 05:02 - INFO - ---------------------------------------------
2024-10-16 05:02 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-16 05:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90667
2024-10-16 05:02 - INFO - 	 Train Loss: 0.058
2024-10-16 05:02 - INFO - 	 Val. Loss: 0.053
2024-10-16 05:02 - INFO - 	 ROC-AUC: 0.990
2024-10-16 05:02 - INFO - 	 PR-AUC: 0.907
2024-10-16 05:02 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 05:02 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 05:02 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 05:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 05:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-16 05:02 - INFO - ---------------------------------------------
2024-10-16 05:10 - INFO - ---------------------------------------------
2024-10-16 05:10 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 05:10 - INFO - 	 Train Loss: 0.056
2024-10-16 05:10 - INFO - 	 Val. Loss: 0.057
2024-10-16 05:10 - INFO - 	 ROC-AUC: 0.989
2024-10-16 05:10 - INFO - 	 PR-AUC: 0.890
2024-10-16 05:10 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 05:10 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 05:10 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 05:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 05:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-16 05:10 - INFO - ---------------------------------------------
2024-10-16 05:18 - INFO - ---------------------------------------------
2024-10-16 05:18 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-16 05:18 - INFO - 	 Train Loss: 0.055
2024-10-16 05:18 - INFO - 	 Val. Loss: 0.058
2024-10-16 05:18 - INFO - 	 ROC-AUC: 0.989
2024-10-16 05:18 - INFO - 	 PR-AUC: 0.897
2024-10-16 05:18 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 05:18 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 05:18 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 05:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 05:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-16 05:18 - INFO - ---------------------------------------------
2024-10-16 05:26 - INFO - ---------------------------------------------
2024-10-16 05:26 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-16 05:26 - INFO - 	 Train Loss: 0.054
2024-10-16 05:26 - INFO - 	 Val. Loss: 0.058
2024-10-16 05:26 - INFO - 	 ROC-AUC: 0.990
2024-10-16 05:26 - INFO - 	 PR-AUC: 0.896
2024-10-16 05:26 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 05:26 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 05:26 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 05:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 05:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-10-16 05:26 - INFO - ---------------------------------------------
2024-10-16 05:36 - INFO - Fit the preprocessing pipeline
2024-10-16 05:36 - INFO - Training using device: cuda
2024-10-16 05:36 - INFO - Creating generators
2024-10-16 05:36 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 05:36 - INFO - * Model:
2024-10-16 05:36 - INFO - * -----------
2024-10-16 05:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 05:36 - INFO - * -----------
2024-10-16 05:44 - INFO - ---------------------------------------------
2024-10-16 05:44 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-16 05:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89608
2024-10-16 05:44 - INFO - 	 Train Loss: 0.070
2024-10-16 05:44 - INFO - 	 Val. Loss: 0.058
2024-10-16 05:44 - INFO - 	 ROC-AUC: 0.989
2024-10-16 05:44 - INFO - 	 PR-AUC: 0.896
2024-10-16 05:44 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 05:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 05:44 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 05:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 05:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-16 05:44 - INFO - ---------------------------------------------
2024-10-16 05:52 - INFO - ---------------------------------------------
2024-10-16 05:52 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-16 05:52 - INFO - 	 Train Loss: 0.063
2024-10-16 05:52 - INFO - 	 Val. Loss: 0.061
2024-10-16 05:52 - INFO - 	 ROC-AUC: 0.987
2024-10-16 05:52 - INFO - 	 PR-AUC: 0.891
2024-10-16 05:52 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 05:52 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 05:52 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 05:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 05:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-16 05:52 - INFO - ---------------------------------------------
2024-10-16 06:00 - INFO - ---------------------------------------------
2024-10-16 06:00 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 06:00 - INFO - 	 Train Loss: 0.060
2024-10-16 06:00 - INFO - 	 Val. Loss: 0.056
2024-10-16 06:00 - INFO - 	 ROC-AUC: 0.989
2024-10-16 06:00 - INFO - 	 PR-AUC: 0.891
2024-10-16 06:00 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 06:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 06:00 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 06:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 06:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-16 06:00 - INFO - ---------------------------------------------
2024-10-16 06:08 - INFO - ---------------------------------------------
2024-10-16 06:08 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-16 06:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89897
2024-10-16 06:08 - INFO - 	 Train Loss: 0.058
2024-10-16 06:08 - INFO - 	 Val. Loss: 0.057
2024-10-16 06:08 - INFO - 	 ROC-AUC: 0.989
2024-10-16 06:08 - INFO - 	 PR-AUC: 0.899
2024-10-16 06:08 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 06:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 06:08 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 06:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 06:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 06:08 - INFO - ---------------------------------------------
2024-10-16 06:16 - INFO - ---------------------------------------------
2024-10-16 06:16 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-16 06:16 - INFO - 	 Train Loss: 0.057
2024-10-16 06:16 - INFO - 	 Val. Loss: 0.060
2024-10-16 06:16 - INFO - 	 ROC-AUC: 0.989
2024-10-16 06:16 - INFO - 	 PR-AUC: 0.895
2024-10-16 06:16 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 06:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 06:16 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 06:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 06:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 06:16 - INFO - ---------------------------------------------
2024-10-16 06:24 - INFO - ---------------------------------------------
2024-10-16 06:24 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-16 06:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9082
2024-10-16 06:24 - INFO - 	 Train Loss: 0.057
2024-10-16 06:24 - INFO - 	 Val. Loss: 0.055
2024-10-16 06:24 - INFO - 	 ROC-AUC: 0.990
2024-10-16 06:24 - INFO - 	 PR-AUC: 0.908
2024-10-16 06:24 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 06:24 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 06:24 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 06:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 06:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-16 06:24 - INFO - ---------------------------------------------
2024-10-16 06:32 - INFO - ---------------------------------------------
2024-10-16 06:32 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-16 06:32 - INFO - 	 Train Loss: 0.055
2024-10-16 06:32 - INFO - 	 Val. Loss: 0.059
2024-10-16 06:32 - INFO - 	 ROC-AUC: 0.989
2024-10-16 06:32 - INFO - 	 PR-AUC: 0.888
2024-10-16 06:32 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 06:32 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 06:32 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 06:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 06:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-16 06:32 - INFO - ---------------------------------------------
2024-10-16 06:40 - INFO - ---------------------------------------------
2024-10-16 06:40 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-16 06:40 - INFO - 	 Train Loss: 0.054
2024-10-16 06:40 - INFO - 	 Val. Loss: 0.057
2024-10-16 06:40 - INFO - 	 ROC-AUC: 0.989
2024-10-16 06:40 - INFO - 	 PR-AUC: 0.894
2024-10-16 06:40 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 06:40 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 06:40 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 06:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 06:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-16 06:40 - INFO - ---------------------------------------------
2024-10-16 06:48 - INFO - ---------------------------------------------
2024-10-16 06:48 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-16 06:48 - INFO - 	 Train Loss: 0.053
2024-10-16 06:48 - INFO - 	 Val. Loss: 0.053
2024-10-16 06:48 - INFO - 	 ROC-AUC: 0.990
2024-10-16 06:48 - INFO - 	 PR-AUC: 0.908
2024-10-16 06:48 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 06:48 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 06:48 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 06:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.989
2024-10-16 06:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-16 06:48 - INFO - ---------------------------------------------
2024-10-16 06:59 - INFO - Fit the preprocessing pipeline
2024-10-16 06:59 - INFO - Training using device: cuda
2024-10-16 06:59 - INFO - Creating generators
2024-10-16 06:59 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 06:59 - INFO - * Model:
2024-10-16 06:59 - INFO - * -----------
2024-10-16 06:59 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 06:59 - INFO - * -----------
2024-10-16 07:07 - INFO - ---------------------------------------------
2024-10-16 07:07 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-16 07:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88154
2024-10-16 07:07 - INFO - 	 Train Loss: 0.070
2024-10-16 07:07 - INFO - 	 Val. Loss: 0.060
2024-10-16 07:07 - INFO - 	 ROC-AUC: 0.987
2024-10-16 07:07 - INFO - 	 PR-AUC: 0.882
2024-10-16 07:07 - INFO - 	 Best Val. Loss: 0.060
2024-10-16 07:07 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 07:07 - INFO - 	 Best PR-AUC: 0.882
2024-10-16 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-16 07:07 - INFO - ---------------------------------------------
2024-10-16 07:15 - INFO - ---------------------------------------------
2024-10-16 07:15 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-16 07:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88973
2024-10-16 07:15 - INFO - 	 Train Loss: 0.062
2024-10-16 07:15 - INFO - 	 Val. Loss: 0.063
2024-10-16 07:15 - INFO - 	 ROC-AUC: 0.988
2024-10-16 07:15 - INFO - 	 PR-AUC: 0.890
2024-10-16 07:15 - INFO - 	 Best Val. Loss: 0.060
2024-10-16 07:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 07:15 - INFO - 	 Best PR-AUC: 0.890
2024-10-16 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-16 07:15 - INFO - ---------------------------------------------
2024-10-16 07:23 - INFO - ---------------------------------------------
2024-10-16 07:23 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 07:23 - INFO - 	 Train Loss: 0.060
2024-10-16 07:23 - INFO - 	 Val. Loss: 0.058
2024-10-16 07:23 - INFO - 	 ROC-AUC: 0.988
2024-10-16 07:23 - INFO - 	 PR-AUC: 0.886
2024-10-16 07:23 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 07:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 07:23 - INFO - 	 Best PR-AUC: 0.890
2024-10-16 07:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 07:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-16 07:23 - INFO - ---------------------------------------------
2024-10-16 07:31 - INFO - ---------------------------------------------
2024-10-16 07:31 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-16 07:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89044
2024-10-16 07:31 - INFO - 	 Train Loss: 0.059
2024-10-16 07:31 - INFO - 	 Val. Loss: 0.057
2024-10-16 07:31 - INFO - 	 ROC-AUC: 0.988
2024-10-16 07:31 - INFO - 	 PR-AUC: 0.890
2024-10-16 07:31 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 07:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 07:31 - INFO - 	 Best PR-AUC: 0.890
2024-10-16 07:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 07:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-16 07:31 - INFO - ---------------------------------------------
2024-10-16 07:39 - INFO - ---------------------------------------------
2024-10-16 07:39 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-16 07:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90551
2024-10-16 07:39 - INFO - 	 Train Loss: 0.057
2024-10-16 07:39 - INFO - 	 Val. Loss: 0.056
2024-10-16 07:39 - INFO - 	 ROC-AUC: 0.989
2024-10-16 07:39 - INFO - 	 PR-AUC: 0.906
2024-10-16 07:39 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 07:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 07:39 - INFO - 	 Best PR-AUC: 0.906
2024-10-16 07:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 07:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 07:39 - INFO - ---------------------------------------------
2024-10-16 07:47 - INFO - ---------------------------------------------
2024-10-16 07:47 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-16 07:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90594
2024-10-16 07:47 - INFO - 	 Train Loss: 0.055
2024-10-16 07:47 - INFO - 	 Val. Loss: 0.053
2024-10-16 07:47 - INFO - 	 ROC-AUC: 0.990
2024-10-16 07:47 - INFO - 	 PR-AUC: 0.906
2024-10-16 07:47 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 07:47 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 07:47 - INFO - 	 Best PR-AUC: 0.906
2024-10-16 07:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 07:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 07:47 - INFO - ---------------------------------------------
2024-10-16 07:55 - INFO - ---------------------------------------------
2024-10-16 07:55 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-16 07:55 - INFO - 	 Train Loss: 0.056
2024-10-16 07:55 - INFO - 	 Val. Loss: 0.056
2024-10-16 07:55 - INFO - 	 ROC-AUC: 0.989
2024-10-16 07:55 - INFO - 	 PR-AUC: 0.891
2024-10-16 07:55 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 07:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 07:55 - INFO - 	 Best PR-AUC: 0.906
2024-10-16 07:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 07:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 07:55 - INFO - ---------------------------------------------
2024-10-16 08:03 - INFO - ---------------------------------------------
2024-10-16 08:03 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-16 08:03 - INFO - 	 Train Loss: 0.054
2024-10-16 08:03 - INFO - 	 Val. Loss: 0.057
2024-10-16 08:03 - INFO - 	 ROC-AUC: 0.990
2024-10-16 08:03 - INFO - 	 PR-AUC: 0.899
2024-10-16 08:03 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 08:03 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 08:03 - INFO - 	 Best PR-AUC: 0.906
2024-10-16 08:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 08:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 08:03 - INFO - ---------------------------------------------
2024-10-16 08:11 - INFO - ---------------------------------------------
2024-10-16 08:11 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-16 08:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90846
2024-10-16 08:11 - INFO - 	 Train Loss: 0.053
2024-10-16 08:11 - INFO - 	 Val. Loss: 0.056
2024-10-16 08:11 - INFO - 	 ROC-AUC: 0.990
2024-10-16 08:11 - INFO - 	 PR-AUC: 0.908
2024-10-16 08:11 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 08:11 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 08:11 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 08:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 08:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 08:11 - INFO - ---------------------------------------------
2024-10-16 08:19 - INFO - ---------------------------------------------
2024-10-16 08:19 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 08:19 - INFO - 	 Train Loss: 0.053
2024-10-16 08:19 - INFO - 	 Val. Loss: 0.056
2024-10-16 08:19 - INFO - 	 ROC-AUC: 0.990
2024-10-16 08:19 - INFO - 	 PR-AUC: 0.902
2024-10-16 08:19 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 08:19 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 08:19 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 08:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 08:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 08:19 - INFO - ---------------------------------------------
