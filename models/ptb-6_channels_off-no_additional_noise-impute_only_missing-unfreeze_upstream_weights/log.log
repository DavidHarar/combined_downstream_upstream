2024-11-27 22:35 - INFO - Fit the preprocessing pipeline
2024-11-27 22:35 - INFO - Training using device: cuda
2024-11-27 22:35 - INFO - Creating generators
2024-11-27 22:35 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 22:35 - INFO - * Model:
2024-11-27 22:35 - INFO - * -----------
2024-11-27 22:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 22:35 - INFO - * -----------
2024-11-27 22:43 - INFO - ---------------------------------------------
2024-11-27 22:43 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 22:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85783
2024-11-27 22:43 - INFO - 	 Train Loss: 0.081
2024-11-27 22:43 - INFO - 	 Val. Loss: 0.065
2024-11-27 22:43 - INFO - 	 ROC-AUC: 0.986
2024-11-27 22:43 - INFO - 	 PR-AUC: 0.858
2024-11-27 22:43 - INFO - 	 Best Val. Loss: 0.065
2024-11-27 22:43 - INFO - 	 Best ROC-AUC: 0.986
2024-11-27 22:43 - INFO - 	 Best PR-AUC: 0.858
2024-11-27 22:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-27 22:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-27 22:43 - INFO - ---------------------------------------------
2024-11-27 22:51 - INFO - ---------------------------------------------
2024-11-27 22:51 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-27 22:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86987
2024-11-27 22:51 - INFO - 	 Train Loss: 0.070
2024-11-27 22:51 - INFO - 	 Val. Loss: 0.064
2024-11-27 22:51 - INFO - 	 ROC-AUC: 0.987
2024-11-27 22:51 - INFO - 	 PR-AUC: 0.870
2024-11-27 22:51 - INFO - 	 Best Val. Loss: 0.064
2024-11-27 22:51 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 22:51 - INFO - 	 Best PR-AUC: 0.870
2024-11-27 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-27 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-27 22:51 - INFO - ---------------------------------------------
2024-11-27 22:59 - INFO - ---------------------------------------------
2024-11-27 22:59 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 22:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87994
2024-11-27 22:59 - INFO - 	 Train Loss: 0.068
2024-11-27 22:59 - INFO - 	 Val. Loss: 0.059
2024-11-27 22:59 - INFO - 	 ROC-AUC: 0.988
2024-11-27 22:59 - INFO - 	 PR-AUC: 0.880
2024-11-27 22:59 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 22:59 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 22:59 - INFO - 	 Best PR-AUC: 0.880
2024-11-27 22:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 22:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-27 22:59 - INFO - ---------------------------------------------
2024-11-27 23:07 - INFO - ---------------------------------------------
2024-11-27 23:07 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-27 23:07 - INFO - 	 Train Loss: 0.064
2024-11-27 23:07 - INFO - 	 Val. Loss: 0.060
2024-11-27 23:07 - INFO - 	 ROC-AUC: 0.987
2024-11-27 23:07 - INFO - 	 PR-AUC: 0.878
2024-11-27 23:07 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 23:07 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 23:07 - INFO - 	 Best PR-AUC: 0.880
2024-11-27 23:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 23:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-27 23:07 - INFO - ---------------------------------------------
2024-11-27 23:15 - INFO - ---------------------------------------------
2024-11-27 23:15 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 23:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8897
2024-11-27 23:15 - INFO - 	 Train Loss: 0.064
2024-11-27 23:15 - INFO - 	 Val. Loss: 0.059
2024-11-27 23:15 - INFO - 	 ROC-AUC: 0.988
2024-11-27 23:15 - INFO - 	 PR-AUC: 0.890
2024-11-27 23:15 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 23:15 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 23:15 - INFO - 	 Best PR-AUC: 0.890
2024-11-27 23:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 23:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 23:15 - INFO - ---------------------------------------------
2024-11-27 23:23 - INFO - ---------------------------------------------
2024-11-27 23:23 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 23:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89004
2024-11-27 23:23 - INFO - 	 Train Loss: 0.063
2024-11-27 23:23 - INFO - 	 Val. Loss: 0.056
2024-11-27 23:23 - INFO - 	 ROC-AUC: 0.989
2024-11-27 23:23 - INFO - 	 PR-AUC: 0.890
2024-11-27 23:23 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 23:23 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 23:23 - INFO - 	 Best PR-AUC: 0.890
2024-11-27 23:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 23:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-27 23:23 - INFO - ---------------------------------------------
2024-11-27 23:31 - INFO - ---------------------------------------------
2024-11-27 23:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 23:31 - INFO - 	 Train Loss: 0.060
2024-11-27 23:31 - INFO - 	 Val. Loss: 0.057
2024-11-27 23:31 - INFO - 	 ROC-AUC: 0.987
2024-11-27 23:31 - INFO - 	 PR-AUC: 0.888
2024-11-27 23:31 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 23:31 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 23:31 - INFO - 	 Best PR-AUC: 0.890
2024-11-27 23:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 23:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-27 23:31 - INFO - ---------------------------------------------
2024-11-27 23:39 - INFO - ---------------------------------------------
2024-11-27 23:39 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 23:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89307
2024-11-27 23:39 - INFO - 	 Train Loss: 0.061
2024-11-27 23:39 - INFO - 	 Val. Loss: 0.056
2024-11-27 23:39 - INFO - 	 ROC-AUC: 0.988
2024-11-27 23:39 - INFO - 	 PR-AUC: 0.893
2024-11-27 23:39 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 23:39 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 23:39 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-27 23:39 - INFO - ---------------------------------------------
2024-11-27 23:47 - INFO - ---------------------------------------------
2024-11-27 23:47 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-27 23:47 - INFO - 	 Train Loss: 0.059
2024-11-27 23:47 - INFO - 	 Val. Loss: 0.057
2024-11-27 23:47 - INFO - 	 ROC-AUC: 0.989
2024-11-27 23:47 - INFO - 	 PR-AUC: 0.886
2024-11-27 23:47 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 23:47 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 23:47 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 23:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 23:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-27 23:47 - INFO - ---------------------------------------------
2024-11-27 23:55 - INFO - ---------------------------------------------
2024-11-27 23:55 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-27 23:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90734
2024-11-27 23:55 - INFO - 	 Train Loss: 0.058
2024-11-27 23:55 - INFO - 	 Val. Loss: 0.054
2024-11-27 23:55 - INFO - 	 ROC-AUC: 0.989
2024-11-27 23:55 - INFO - 	 PR-AUC: 0.907
2024-11-27 23:55 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 23:55 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 23:55 - INFO - 	 Best PR-AUC: 0.907
2024-11-27 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-27 23:55 - INFO - ---------------------------------------------
2024-11-27 23:58 - INFO - Fit the preprocessing pipeline
2024-11-27 23:58 - INFO - Training using device: cuda
2024-11-27 23:58 - INFO - Creating generators
2024-11-27 23:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 23:58 - INFO - * Model:
2024-11-27 23:58 - INFO - * -----------
2024-11-27 23:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 23:58 - INFO - * -----------
2024-11-28 00:06 - INFO - ---------------------------------------------
2024-11-28 00:06 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 00:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8594
2024-11-28 00:06 - INFO - 	 Train Loss: 0.082
2024-11-28 00:06 - INFO - 	 Val. Loss: 0.066
2024-11-28 00:06 - INFO - 	 ROC-AUC: 0.986
2024-11-28 00:06 - INFO - 	 PR-AUC: 0.859
2024-11-28 00:06 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 00:06 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 00:06 - INFO - 	 Best PR-AUC: 0.859
2024-11-28 00:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-28 00:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-28 00:06 - INFO - ---------------------------------------------
2024-11-28 00:14 - INFO - ---------------------------------------------
2024-11-28 00:14 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-28 00:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86934
2024-11-28 00:14 - INFO - 	 Train Loss: 0.072
2024-11-28 00:14 - INFO - 	 Val. Loss: 0.063
2024-11-28 00:14 - INFO - 	 ROC-AUC: 0.987
2024-11-28 00:14 - INFO - 	 PR-AUC: 0.869
2024-11-28 00:14 - INFO - 	 Best Val. Loss: 0.063
2024-11-28 00:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 00:14 - INFO - 	 Best PR-AUC: 0.869
2024-11-28 00:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 00:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-28 00:14 - INFO - ---------------------------------------------
2024-11-28 00:22 - INFO - ---------------------------------------------
2024-11-28 00:22 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 00:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88408
2024-11-28 00:22 - INFO - 	 Train Loss: 0.069
2024-11-28 00:22 - INFO - 	 Val. Loss: 0.059
2024-11-28 00:22 - INFO - 	 ROC-AUC: 0.988
2024-11-28 00:22 - INFO - 	 PR-AUC: 0.884
2024-11-28 00:22 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 00:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 00:22 - INFO - 	 Best PR-AUC: 0.884
2024-11-28 00:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 00:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-28 00:22 - INFO - ---------------------------------------------
2024-11-28 00:30 - INFO - ---------------------------------------------
2024-11-28 00:30 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 00:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88537
2024-11-28 00:30 - INFO - 	 Train Loss: 0.067
2024-11-28 00:30 - INFO - 	 Val. Loss: 0.060
2024-11-28 00:30 - INFO - 	 ROC-AUC: 0.987
2024-11-28 00:30 - INFO - 	 PR-AUC: 0.885
2024-11-28 00:30 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 00:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 00:30 - INFO - 	 Best PR-AUC: 0.885
2024-11-28 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-28 00:30 - INFO - ---------------------------------------------
2024-11-28 00:38 - INFO - ---------------------------------------------
2024-11-28 00:38 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-28 00:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88582
2024-11-28 00:38 - INFO - 	 Train Loss: 0.063
2024-11-28 00:38 - INFO - 	 Val. Loss: 0.058
2024-11-28 00:38 - INFO - 	 ROC-AUC: 0.988
2024-11-28 00:38 - INFO - 	 PR-AUC: 0.886
2024-11-28 00:38 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 00:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 00:38 - INFO - 	 Best PR-AUC: 0.886
2024-11-28 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-28 00:38 - INFO - ---------------------------------------------
2024-11-28 00:46 - INFO - ---------------------------------------------
2024-11-28 00:46 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-28 00:46 - INFO - 	 Train Loss: 0.063
2024-11-28 00:46 - INFO - 	 Val. Loss: 0.058
2024-11-28 00:46 - INFO - 	 ROC-AUC: 0.988
2024-11-28 00:46 - INFO - 	 PR-AUC: 0.882
2024-11-28 00:46 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 00:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 00:46 - INFO - 	 Best PR-AUC: 0.886
2024-11-28 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-28 00:46 - INFO - ---------------------------------------------
2024-11-28 00:54 - INFO - ---------------------------------------------
2024-11-28 00:54 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 00:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89098
2024-11-28 00:54 - INFO - 	 Train Loss: 0.062
2024-11-28 00:54 - INFO - 	 Val. Loss: 0.057
2024-11-28 00:54 - INFO - 	 ROC-AUC: 0.988
2024-11-28 00:54 - INFO - 	 PR-AUC: 0.891
2024-11-28 00:54 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 00:54 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 00:54 - INFO - 	 Best PR-AUC: 0.891
2024-11-28 00:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 00:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-28 00:54 - INFO - ---------------------------------------------
2024-11-28 01:02 - INFO - ---------------------------------------------
2024-11-28 01:02 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89242
2024-11-28 01:02 - INFO - 	 Train Loss: 0.061
2024-11-28 01:02 - INFO - 	 Val. Loss: 0.055
2024-11-28 01:02 - INFO - 	 ROC-AUC: 0.989
2024-11-28 01:02 - INFO - 	 PR-AUC: 0.892
2024-11-28 01:02 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 01:02 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 01:02 - INFO - 	 Best PR-AUC: 0.892
2024-11-28 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-28 01:02 - INFO - ---------------------------------------------
2024-11-28 01:10 - INFO - ---------------------------------------------
2024-11-28 01:10 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-28 01:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90324
2024-11-28 01:10 - INFO - 	 Train Loss: 0.060
2024-11-28 01:10 - INFO - 	 Val. Loss: 0.055
2024-11-28 01:10 - INFO - 	 ROC-AUC: 0.989
2024-11-28 01:10 - INFO - 	 PR-AUC: 0.903
2024-11-28 01:10 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 01:10 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 01:10 - INFO - 	 Best PR-AUC: 0.903
2024-11-28 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-28 01:10 - INFO - ---------------------------------------------
2024-11-28 01:18 - INFO - ---------------------------------------------
2024-11-28 01:18 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 01:18 - INFO - 	 Train Loss: 0.058
2024-11-28 01:18 - INFO - 	 Val. Loss: 0.058
2024-11-28 01:18 - INFO - 	 ROC-AUC: 0.988
2024-11-28 01:18 - INFO - 	 PR-AUC: 0.889
2024-11-28 01:18 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 01:18 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 01:18 - INFO - 	 Best PR-AUC: 0.903
2024-11-28 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-28 01:18 - INFO - ---------------------------------------------
2024-11-28 01:20 - INFO - Fit the preprocessing pipeline
2024-11-28 01:20 - INFO - Training using device: cuda
2024-11-28 01:20 - INFO - Creating generators
2024-11-28 01:20 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 01:20 - INFO - * Model:
2024-11-28 01:20 - INFO - * -----------
2024-11-28 01:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 01:20 - INFO - * -----------
2024-11-28 01:28 - INFO - ---------------------------------------------
2024-11-28 01:28 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 01:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86475
2024-11-28 01:28 - INFO - 	 Train Loss: 0.081
2024-11-28 01:28 - INFO - 	 Val. Loss: 0.066
2024-11-28 01:28 - INFO - 	 ROC-AUC: 0.986
2024-11-28 01:28 - INFO - 	 PR-AUC: 0.865
2024-11-28 01:28 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 01:28 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 01:28 - INFO - 	 Best PR-AUC: 0.865
2024-11-28 01:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 01:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-28 01:28 - INFO - ---------------------------------------------
2024-11-28 01:37 - INFO - ---------------------------------------------
2024-11-28 01:37 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 01:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87247
2024-11-28 01:37 - INFO - 	 Train Loss: 0.071
2024-11-28 01:37 - INFO - 	 Val. Loss: 0.062
2024-11-28 01:37 - INFO - 	 ROC-AUC: 0.987
2024-11-28 01:37 - INFO - 	 PR-AUC: 0.872
2024-11-28 01:37 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 01:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 01:37 - INFO - 	 Best PR-AUC: 0.872
2024-11-28 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-28 01:37 - INFO - ---------------------------------------------
2024-11-28 01:45 - INFO - ---------------------------------------------
2024-11-28 01:45 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 01:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88278
2024-11-28 01:45 - INFO - 	 Train Loss: 0.067
2024-11-28 01:45 - INFO - 	 Val. Loss: 0.058
2024-11-28 01:45 - INFO - 	 ROC-AUC: 0.989
2024-11-28 01:45 - INFO - 	 PR-AUC: 0.883
2024-11-28 01:45 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 01:45 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 01:45 - INFO - 	 Best PR-AUC: 0.883
2024-11-28 01:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 01:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-28 01:45 - INFO - ---------------------------------------------
2024-11-28 01:53 - INFO - ---------------------------------------------
2024-11-28 01:53 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 01:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88986
2024-11-28 01:53 - INFO - 	 Train Loss: 0.066
2024-11-28 01:53 - INFO - 	 Val. Loss: 0.058
2024-11-28 01:53 - INFO - 	 ROC-AUC: 0.988
2024-11-28 01:53 - INFO - 	 PR-AUC: 0.890
2024-11-28 01:53 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 01:53 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 01:53 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 01:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 01:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-28 01:53 - INFO - ---------------------------------------------
2024-11-28 02:01 - INFO - ---------------------------------------------
2024-11-28 02:01 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 02:01 - INFO - 	 Train Loss: 0.064
2024-11-28 02:01 - INFO - 	 Val. Loss: 0.061
2024-11-28 02:01 - INFO - 	 ROC-AUC: 0.987
2024-11-28 02:01 - INFO - 	 PR-AUC: 0.882
2024-11-28 02:01 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 02:01 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 02:01 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-28 02:01 - INFO - ---------------------------------------------
2024-11-28 02:09 - INFO - ---------------------------------------------
2024-11-28 02:09 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 02:09 - INFO - 	 Train Loss: 0.062
2024-11-28 02:09 - INFO - 	 Val. Loss: 0.058
2024-11-28 02:09 - INFO - 	 ROC-AUC: 0.988
2024-11-28 02:09 - INFO - 	 PR-AUC: 0.882
2024-11-28 02:09 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 02:09 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 02:09 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-28 02:09 - INFO - ---------------------------------------------
2024-11-28 02:17 - INFO - ---------------------------------------------
2024-11-28 02:17 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-28 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89166
2024-11-28 02:17 - INFO - 	 Train Loss: 0.062
2024-11-28 02:17 - INFO - 	 Val. Loss: 0.057
2024-11-28 02:17 - INFO - 	 ROC-AUC: 0.989
2024-11-28 02:17 - INFO - 	 PR-AUC: 0.892
2024-11-28 02:17 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 02:17 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 02:17 - INFO - 	 Best PR-AUC: 0.892
2024-11-28 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-28 02:17 - INFO - ---------------------------------------------
2024-11-28 02:25 - INFO - ---------------------------------------------
2024-11-28 02:25 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 02:25 - INFO - 	 Train Loss: 0.061
2024-11-28 02:25 - INFO - 	 Val. Loss: 0.060
2024-11-28 02:25 - INFO - 	 ROC-AUC: 0.987
2024-11-28 02:25 - INFO - 	 PR-AUC: 0.890
2024-11-28 02:25 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 02:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 02:25 - INFO - 	 Best PR-AUC: 0.892
2024-11-28 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-28 02:25 - INFO - ---------------------------------------------
2024-11-28 02:33 - INFO - ---------------------------------------------
2024-11-28 02:33 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 02:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90451
2024-11-28 02:33 - INFO - 	 Train Loss: 0.059
2024-11-28 02:33 - INFO - 	 Val. Loss: 0.054
2024-11-28 02:33 - INFO - 	 ROC-AUC: 0.989
2024-11-28 02:33 - INFO - 	 PR-AUC: 0.905
2024-11-28 02:33 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 02:33 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 02:33 - INFO - 	 Best PR-AUC: 0.905
2024-11-28 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-28 02:33 - INFO - ---------------------------------------------
2024-11-28 02:41 - INFO - ---------------------------------------------
2024-11-28 02:41 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 02:41 - INFO - 	 Train Loss: 0.059
2024-11-28 02:41 - INFO - 	 Val. Loss: 0.055
2024-11-28 02:41 - INFO - 	 ROC-AUC: 0.989
2024-11-28 02:41 - INFO - 	 PR-AUC: 0.901
2024-11-28 02:41 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 02:41 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 02:41 - INFO - 	 Best PR-AUC: 0.905
2024-11-28 02:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 02:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-28 02:41 - INFO - ---------------------------------------------
2024-11-28 02:43 - INFO - Fit the preprocessing pipeline
2024-11-28 02:43 - INFO - Training using device: cuda
2024-11-28 02:43 - INFO - Creating generators
2024-11-28 02:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 02:43 - INFO - * Model:
2024-11-28 02:43 - INFO - * -----------
2024-11-28 02:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 02:43 - INFO - * -----------
2024-11-28 02:51 - INFO - ---------------------------------------------
2024-11-28 02:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 02:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85672
2024-11-28 02:51 - INFO - 	 Train Loss: 0.081
2024-11-28 02:51 - INFO - 	 Val. Loss: 0.066
2024-11-28 02:51 - INFO - 	 ROC-AUC: 0.986
2024-11-28 02:51 - INFO - 	 PR-AUC: 0.857
2024-11-28 02:51 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 02:51 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 02:51 - INFO - 	 Best PR-AUC: 0.857
2024-11-28 02:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 02:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-28 02:51 - INFO - ---------------------------------------------
2024-11-28 02:59 - INFO - ---------------------------------------------
2024-11-28 02:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 02:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87409
2024-11-28 02:59 - INFO - 	 Train Loss: 0.071
2024-11-28 02:59 - INFO - 	 Val. Loss: 0.062
2024-11-28 02:59 - INFO - 	 ROC-AUC: 0.987
2024-11-28 02:59 - INFO - 	 PR-AUC: 0.874
2024-11-28 02:59 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 02:59 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 02:59 - INFO - 	 Best PR-AUC: 0.874
2024-11-28 02:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 02:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-28 02:59 - INFO - ---------------------------------------------
2024-11-28 03:07 - INFO - ---------------------------------------------
2024-11-28 03:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 03:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87523
2024-11-28 03:07 - INFO - 	 Train Loss: 0.069
2024-11-28 03:07 - INFO - 	 Val. Loss: 0.062
2024-11-28 03:07 - INFO - 	 ROC-AUC: 0.986
2024-11-28 03:07 - INFO - 	 PR-AUC: 0.875
2024-11-28 03:07 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 03:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 03:07 - INFO - 	 Best PR-AUC: 0.875
2024-11-28 03:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 03:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-28 03:07 - INFO - ---------------------------------------------
2024-11-28 03:15 - INFO - ---------------------------------------------
2024-11-28 03:15 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 03:15 - INFO - 	 Train Loss: 0.067
2024-11-28 03:15 - INFO - 	 Val. Loss: 0.060
2024-11-28 03:15 - INFO - 	 ROC-AUC: 0.988
2024-11-28 03:15 - INFO - 	 PR-AUC: 0.871
2024-11-28 03:15 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 03:15 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 03:15 - INFO - 	 Best PR-AUC: 0.875
2024-11-28 03:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 03:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-28 03:15 - INFO - ---------------------------------------------
2024-11-28 03:23 - INFO - ---------------------------------------------
2024-11-28 03:23 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-28 03:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88127
2024-11-28 03:23 - INFO - 	 Train Loss: 0.063
2024-11-28 03:23 - INFO - 	 Val. Loss: 0.058
2024-11-28 03:23 - INFO - 	 ROC-AUC: 0.988
2024-11-28 03:23 - INFO - 	 PR-AUC: 0.881
2024-11-28 03:23 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 03:23 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 03:23 - INFO - 	 Best PR-AUC: 0.881
2024-11-28 03:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 03:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-28 03:23 - INFO - ---------------------------------------------
2024-11-28 03:31 - INFO - ---------------------------------------------
2024-11-28 03:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 03:31 - INFO - 	 Train Loss: 0.063
2024-11-28 03:31 - INFO - 	 Val. Loss: 0.059
2024-11-28 03:31 - INFO - 	 ROC-AUC: 0.988
2024-11-28 03:31 - INFO - 	 PR-AUC: 0.881
2024-11-28 03:31 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 03:31 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 03:31 - INFO - 	 Best PR-AUC: 0.881
2024-11-28 03:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 03:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-28 03:31 - INFO - ---------------------------------------------
2024-11-28 03:39 - INFO - ---------------------------------------------
2024-11-28 03:39 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 03:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89015
2024-11-28 03:39 - INFO - 	 Train Loss: 0.062
2024-11-28 03:39 - INFO - 	 Val. Loss: 0.058
2024-11-28 03:39 - INFO - 	 ROC-AUC: 0.989
2024-11-28 03:39 - INFO - 	 PR-AUC: 0.890
2024-11-28 03:39 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 03:39 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 03:39 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 03:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 03:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-28 03:39 - INFO - ---------------------------------------------
2024-11-28 03:47 - INFO - ---------------------------------------------
2024-11-28 03:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 03:47 - INFO - 	 Train Loss: 0.061
2024-11-28 03:47 - INFO - 	 Val. Loss: 0.058
2024-11-28 03:47 - INFO - 	 ROC-AUC: 0.988
2024-11-28 03:47 - INFO - 	 PR-AUC: 0.888
2024-11-28 03:47 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 03:47 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 03:47 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 03:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 03:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-28 03:47 - INFO - ---------------------------------------------
2024-11-28 03:56 - INFO - ---------------------------------------------
2024-11-28 03:56 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 03:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90341
2024-11-28 03:56 - INFO - 	 Train Loss: 0.060
2024-11-28 03:56 - INFO - 	 Val. Loss: 0.055
2024-11-28 03:56 - INFO - 	 ROC-AUC: 0.988
2024-11-28 03:56 - INFO - 	 PR-AUC: 0.903
2024-11-28 03:56 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 03:56 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 03:56 - INFO - 	 Best PR-AUC: 0.903
2024-11-28 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-28 03:56 - INFO - ---------------------------------------------
2024-11-28 04:04 - INFO - ---------------------------------------------
2024-11-28 04:04 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 04:04 - INFO - 	 Train Loss: 0.059
2024-11-28 04:04 - INFO - 	 Val. Loss: 0.056
2024-11-28 04:04 - INFO - 	 ROC-AUC: 0.988
2024-11-28 04:04 - INFO - 	 PR-AUC: 0.887
2024-11-28 04:04 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 04:04 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 04:04 - INFO - 	 Best PR-AUC: 0.903
2024-11-28 04:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 04:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-28 04:04 - INFO - ---------------------------------------------
2024-11-28 04:06 - INFO - Fit the preprocessing pipeline
2024-11-28 04:06 - INFO - Training using device: cuda
2024-11-28 04:06 - INFO - Creating generators
2024-11-28 04:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 04:06 - INFO - * Model:
2024-11-28 04:06 - INFO - * -----------
2024-11-28 04:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 04:06 - INFO - * -----------
2024-11-28 04:14 - INFO - ---------------------------------------------
2024-11-28 04:14 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 04:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87184
2024-11-28 04:14 - INFO - 	 Train Loss: 0.080
2024-11-28 04:14 - INFO - 	 Val. Loss: 0.066
2024-11-28 04:14 - INFO - 	 ROC-AUC: 0.985
2024-11-28 04:14 - INFO - 	 PR-AUC: 0.872
2024-11-28 04:14 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 04:14 - INFO - 	 Best ROC-AUC: 0.985
2024-11-28 04:14 - INFO - 	 Best PR-AUC: 0.872
2024-11-28 04:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 04:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-28 04:14 - INFO - ---------------------------------------------
2024-11-28 04:22 - INFO - ---------------------------------------------
2024-11-28 04:22 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-28 04:22 - INFO - 	 Train Loss: 0.071
2024-11-28 04:22 - INFO - 	 Val. Loss: 0.065
2024-11-28 04:22 - INFO - 	 ROC-AUC: 0.986
2024-11-28 04:22 - INFO - 	 PR-AUC: 0.865
2024-11-28 04:22 - INFO - 	 Best Val. Loss: 0.065
2024-11-28 04:22 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 04:22 - INFO - 	 Best PR-AUC: 0.872
2024-11-28 04:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 04:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-28 04:22 - INFO - ---------------------------------------------
2024-11-28 04:30 - INFO - ---------------------------------------------
2024-11-28 04:30 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 04:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88705
2024-11-28 04:30 - INFO - 	 Train Loss: 0.068
2024-11-28 04:30 - INFO - 	 Val. Loss: 0.060
2024-11-28 04:30 - INFO - 	 ROC-AUC: 0.988
2024-11-28 04:30 - INFO - 	 PR-AUC: 0.887
2024-11-28 04:30 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 04:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 04:30 - INFO - 	 Best PR-AUC: 0.887
2024-11-28 04:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 04:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-28 04:30 - INFO - ---------------------------------------------
2024-11-28 04:38 - INFO - ---------------------------------------------
2024-11-28 04:38 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 04:38 - INFO - 	 Train Loss: 0.066
2024-11-28 04:38 - INFO - 	 Val. Loss: 0.060
2024-11-28 04:38 - INFO - 	 ROC-AUC: 0.987
2024-11-28 04:38 - INFO - 	 PR-AUC: 0.884
2024-11-28 04:38 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 04:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 04:38 - INFO - 	 Best PR-AUC: 0.887
2024-11-28 04:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 04:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-28 04:38 - INFO - ---------------------------------------------
2024-11-28 04:46 - INFO - ---------------------------------------------
2024-11-28 04:46 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 04:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8965
2024-11-28 04:46 - INFO - 	 Train Loss: 0.064
2024-11-28 04:46 - INFO - 	 Val. Loss: 0.056
2024-11-28 04:46 - INFO - 	 ROC-AUC: 0.989
2024-11-28 04:46 - INFO - 	 PR-AUC: 0.897
2024-11-28 04:46 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 04:46 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 04:46 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 04:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 04:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-28 04:46 - INFO - ---------------------------------------------
2024-11-28 04:54 - INFO - ---------------------------------------------
2024-11-28 04:54 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 04:54 - INFO - 	 Train Loss: 0.063
2024-11-28 04:54 - INFO - 	 Val. Loss: 0.057
2024-11-28 04:54 - INFO - 	 ROC-AUC: 0.988
2024-11-28 04:54 - INFO - 	 PR-AUC: 0.895
2024-11-28 04:54 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 04:54 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 04:54 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 04:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 04:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-28 04:54 - INFO - ---------------------------------------------
2024-11-28 05:02 - INFO - ---------------------------------------------
2024-11-28 05:02 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-28 05:02 - INFO - 	 Train Loss: 0.061
2024-11-28 05:02 - INFO - 	 Val. Loss: 0.057
2024-11-28 05:02 - INFO - 	 ROC-AUC: 0.988
2024-11-28 05:02 - INFO - 	 PR-AUC: 0.891
2024-11-28 05:02 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 05:02 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 05:02 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 05:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 05:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-28 05:02 - INFO - ---------------------------------------------
2024-11-28 05:10 - INFO - ---------------------------------------------
2024-11-28 05:10 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 05:10 - INFO - 	 Train Loss: 0.060
2024-11-28 05:10 - INFO - 	 Val. Loss: 0.058
2024-11-28 05:10 - INFO - 	 ROC-AUC: 0.987
2024-11-28 05:10 - INFO - 	 PR-AUC: 0.891
2024-11-28 05:10 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 05:10 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 05:10 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 05:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 05:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-28 05:10 - INFO - ---------------------------------------------
2024-11-28 05:21 - INFO - Fit the preprocessing pipeline
2024-11-28 05:21 - INFO - Training using device: cuda
2024-11-28 05:21 - INFO - Creating generators
2024-11-28 05:21 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 05:21 - INFO - * Model:
2024-11-28 05:21 - INFO - * -----------
2024-11-28 05:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 05:21 - INFO - * -----------
2024-11-28 05:29 - INFO - ---------------------------------------------
2024-11-28 05:29 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 05:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84497
2024-11-28 05:29 - INFO - 	 Train Loss: 0.081
2024-11-28 05:29 - INFO - 	 Val. Loss: 0.067
2024-11-28 05:29 - INFO - 	 ROC-AUC: 0.986
2024-11-28 05:29 - INFO - 	 PR-AUC: 0.845
2024-11-28 05:29 - INFO - 	 Best Val. Loss: 0.067
2024-11-28 05:29 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 05:29 - INFO - 	 Best PR-AUC: 0.845
2024-11-28 05:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 05:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-28 05:29 - INFO - ---------------------------------------------
2024-11-28 05:37 - INFO - ---------------------------------------------
2024-11-28 05:37 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 05:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86349
2024-11-28 05:37 - INFO - 	 Train Loss: 0.070
2024-11-28 05:37 - INFO - 	 Val. Loss: 0.065
2024-11-28 05:37 - INFO - 	 ROC-AUC: 0.986
2024-11-28 05:37 - INFO - 	 PR-AUC: 0.863
2024-11-28 05:37 - INFO - 	 Best Val. Loss: 0.065
2024-11-28 05:37 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 05:37 - INFO - 	 Best PR-AUC: 0.863
2024-11-28 05:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 05:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-28 05:37 - INFO - ---------------------------------------------
2024-11-28 05:45 - INFO - ---------------------------------------------
2024-11-28 05:45 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 05:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8674
2024-11-28 05:45 - INFO - 	 Train Loss: 0.068
2024-11-28 05:45 - INFO - 	 Val. Loss: 0.062
2024-11-28 05:45 - INFO - 	 ROC-AUC: 0.987
2024-11-28 05:45 - INFO - 	 PR-AUC: 0.867
2024-11-28 05:45 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 05:45 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 05:45 - INFO - 	 Best PR-AUC: 0.867
2024-11-28 05:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 05:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-28 05:45 - INFO - ---------------------------------------------
2024-11-28 05:53 - INFO - ---------------------------------------------
2024-11-28 05:53 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89122
2024-11-28 05:53 - INFO - 	 Train Loss: 0.067
2024-11-28 05:53 - INFO - 	 Val. Loss: 0.059
2024-11-28 05:53 - INFO - 	 ROC-AUC: 0.988
2024-11-28 05:53 - INFO - 	 PR-AUC: 0.891
2024-11-28 05:53 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 05:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 05:53 - INFO - 	 Best PR-AUC: 0.891
2024-11-28 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-28 05:53 - INFO - ---------------------------------------------
2024-11-28 06:01 - INFO - ---------------------------------------------
2024-11-28 06:01 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 06:01 - INFO - 	 Train Loss: 0.064
2024-11-28 06:01 - INFO - 	 Val. Loss: 0.060
2024-11-28 06:01 - INFO - 	 ROC-AUC: 0.987
2024-11-28 06:01 - INFO - 	 PR-AUC: 0.870
2024-11-28 06:01 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 06:01 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 06:01 - INFO - 	 Best PR-AUC: 0.891
2024-11-28 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-28 06:01 - INFO - ---------------------------------------------
2024-11-28 06:09 - INFO - ---------------------------------------------
2024-11-28 06:09 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 06:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90199
2024-11-28 06:09 - INFO - 	 Train Loss: 0.063
2024-11-28 06:09 - INFO - 	 Val. Loss: 0.056
2024-11-28 06:09 - INFO - 	 ROC-AUC: 0.989
2024-11-28 06:09 - INFO - 	 PR-AUC: 0.902
2024-11-28 06:09 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 06:09 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 06:09 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 06:09 - INFO - ---------------------------------------------
2024-11-28 06:17 - INFO - ---------------------------------------------
2024-11-28 06:17 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-28 06:17 - INFO - 	 Train Loss: 0.061
2024-11-28 06:17 - INFO - 	 Val. Loss: 0.057
2024-11-28 06:17 - INFO - 	 ROC-AUC: 0.989
2024-11-28 06:17 - INFO - 	 PR-AUC: 0.890
2024-11-28 06:17 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 06:17 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 06:17 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 06:17 - INFO - ---------------------------------------------
2024-11-28 06:25 - INFO - ---------------------------------------------
2024-11-28 06:25 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 06:25 - INFO - 	 Train Loss: 0.060
2024-11-28 06:25 - INFO - 	 Val. Loss: 0.059
2024-11-28 06:25 - INFO - 	 ROC-AUC: 0.988
2024-11-28 06:25 - INFO - 	 PR-AUC: 0.885
2024-11-28 06:25 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 06:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 06:25 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 06:25 - INFO - ---------------------------------------------
2024-11-28 06:33 - INFO - ---------------------------------------------
2024-11-28 06:33 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 06:33 - INFO - 	 Train Loss: 0.059
2024-11-28 06:33 - INFO - 	 Val. Loss: 0.055
2024-11-28 06:33 - INFO - 	 ROC-AUC: 0.989
2024-11-28 06:33 - INFO - 	 PR-AUC: 0.897
2024-11-28 06:33 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 06:33 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 06:33 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 06:33 - INFO - ---------------------------------------------
2024-11-28 06:41 - INFO - ---------------------------------------------
2024-11-28 06:41 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 06:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90202
2024-11-28 06:41 - INFO - 	 Train Loss: 0.059
2024-11-28 06:41 - INFO - 	 Val. Loss: 0.055
2024-11-28 06:41 - INFO - 	 ROC-AUC: 0.989
2024-11-28 06:41 - INFO - 	 PR-AUC: 0.902
2024-11-28 06:41 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 06:41 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 06:41 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 06:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 06:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-28 06:41 - INFO - ---------------------------------------------
2024-11-28 06:43 - INFO - Fit the preprocessing pipeline
2024-11-28 06:43 - INFO - Training using device: cuda
2024-11-28 06:43 - INFO - Creating generators
2024-11-28 06:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 06:43 - INFO - * Model:
2024-11-28 06:43 - INFO - * -----------
2024-11-28 06:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 06:43 - INFO - * -----------
2024-11-28 06:51 - INFO - ---------------------------------------------
2024-11-28 06:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 06:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85956
2024-11-28 06:51 - INFO - 	 Train Loss: 0.079
2024-11-28 06:51 - INFO - 	 Val. Loss: 0.063
2024-11-28 06:51 - INFO - 	 ROC-AUC: 0.988
2024-11-28 06:51 - INFO - 	 PR-AUC: 0.860
2024-11-28 06:51 - INFO - 	 Best Val. Loss: 0.063
2024-11-28 06:51 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 06:51 - INFO - 	 Best PR-AUC: 0.860
2024-11-28 06:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 06:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-28 06:51 - INFO - ---------------------------------------------
2024-11-28 06:59 - INFO - ---------------------------------------------
2024-11-28 06:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 06:59 - INFO - 	 Train Loss: 0.072
2024-11-28 06:59 - INFO - 	 Val. Loss: 0.064
2024-11-28 06:59 - INFO - 	 ROC-AUC: 0.986
2024-11-28 06:59 - INFO - 	 PR-AUC: 0.859
2024-11-28 06:59 - INFO - 	 Best Val. Loss: 0.063
2024-11-28 06:59 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 06:59 - INFO - 	 Best PR-AUC: 0.860
2024-11-28 06:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 06:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-28 06:59 - INFO - ---------------------------------------------
2024-11-28 07:07 - INFO - ---------------------------------------------
2024-11-28 07:07 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 07:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8798
2024-11-28 07:07 - INFO - 	 Train Loss: 0.068
2024-11-28 07:07 - INFO - 	 Val. Loss: 0.060
2024-11-28 07:07 - INFO - 	 ROC-AUC: 0.987
2024-11-28 07:07 - INFO - 	 PR-AUC: 0.880
2024-11-28 07:07 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 07:07 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 07:07 - INFO - 	 Best PR-AUC: 0.880
2024-11-28 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-28 07:07 - INFO - ---------------------------------------------
2024-11-28 07:15 - INFO - ---------------------------------------------
2024-11-28 07:15 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 07:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88119
2024-11-28 07:15 - INFO - 	 Train Loss: 0.066
2024-11-28 07:15 - INFO - 	 Val. Loss: 0.060
2024-11-28 07:15 - INFO - 	 ROC-AUC: 0.987
2024-11-28 07:15 - INFO - 	 PR-AUC: 0.881
2024-11-28 07:15 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 07:15 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 07:15 - INFO - 	 Best PR-AUC: 0.881
2024-11-28 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-28 07:15 - INFO - ---------------------------------------------
2024-11-28 07:23 - INFO - ---------------------------------------------
2024-11-28 07:23 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-28 07:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88935
2024-11-28 07:23 - INFO - 	 Train Loss: 0.064
2024-11-28 07:23 - INFO - 	 Val. Loss: 0.057
2024-11-28 07:23 - INFO - 	 ROC-AUC: 0.988
2024-11-28 07:23 - INFO - 	 PR-AUC: 0.889
2024-11-28 07:23 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 07:23 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 07:23 - INFO - 	 Best PR-AUC: 0.889
2024-11-28 07:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 07:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-11-28 07:23 - INFO - ---------------------------------------------
2024-11-28 07:31 - INFO - ---------------------------------------------
2024-11-28 07:31 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-28 07:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89115
2024-11-28 07:31 - INFO - 	 Train Loss: 0.063
2024-11-28 07:31 - INFO - 	 Val. Loss: 0.057
2024-11-28 07:31 - INFO - 	 ROC-AUC: 0.988
2024-11-28 07:31 - INFO - 	 PR-AUC: 0.891
2024-11-28 07:31 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 07:31 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 07:31 - INFO - 	 Best PR-AUC: 0.891
2024-11-28 07:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 07:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-28 07:31 - INFO - ---------------------------------------------
2024-11-28 07:39 - INFO - ---------------------------------------------
2024-11-28 07:39 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 07:39 - INFO - 	 Train Loss: 0.062
2024-11-28 07:39 - INFO - 	 Val. Loss: 0.057
2024-11-28 07:39 - INFO - 	 ROC-AUC: 0.988
2024-11-28 07:39 - INFO - 	 PR-AUC: 0.889
2024-11-28 07:39 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 07:39 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 07:39 - INFO - 	 Best PR-AUC: 0.891
2024-11-28 07:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 07:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-28 07:39 - INFO - ---------------------------------------------
2024-11-28 07:47 - INFO - ---------------------------------------------
2024-11-28 07:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 07:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89892
2024-11-28 07:47 - INFO - 	 Train Loss: 0.061
2024-11-28 07:47 - INFO - 	 Val. Loss: 0.057
2024-11-28 07:47 - INFO - 	 ROC-AUC: 0.988
2024-11-28 07:47 - INFO - 	 PR-AUC: 0.899
2024-11-28 07:47 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 07:47 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 07:47 - INFO - 	 Best PR-AUC: 0.899
2024-11-28 07:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 07:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 07:47 - INFO - ---------------------------------------------
2024-11-28 07:56 - INFO - ---------------------------------------------
2024-11-28 07:56 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-28 07:56 - INFO - 	 Train Loss: 0.060
2024-11-28 07:56 - INFO - 	 Val. Loss: 0.059
2024-11-28 07:56 - INFO - 	 ROC-AUC: 0.988
2024-11-28 07:56 - INFO - 	 PR-AUC: 0.888
2024-11-28 07:56 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 07:56 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 07:56 - INFO - 	 Best PR-AUC: 0.899
2024-11-28 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 07:56 - INFO - ---------------------------------------------
2024-11-28 08:04 - INFO - ---------------------------------------------
2024-11-28 08:04 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-28 08:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90212
2024-11-28 08:04 - INFO - 	 Train Loss: 0.058
2024-11-28 08:04 - INFO - 	 Val. Loss: 0.054
2024-11-28 08:04 - INFO - 	 ROC-AUC: 0.989
2024-11-28 08:04 - INFO - 	 PR-AUC: 0.902
2024-11-28 08:04 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 08:04 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 08:04 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 08:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 08:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-28 08:04 - INFO - ---------------------------------------------
2024-11-28 08:06 - INFO - Fit the preprocessing pipeline
2024-11-28 08:06 - INFO - Training using device: cuda
2024-11-28 08:06 - INFO - Creating generators
2024-11-28 08:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 08:06 - INFO - * Model:
2024-11-28 08:06 - INFO - * -----------
2024-11-28 08:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 08:06 - INFO - * -----------
2024-11-28 08:14 - INFO - ---------------------------------------------
2024-11-28 08:14 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-28 08:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86879
2024-11-28 08:14 - INFO - 	 Train Loss: 0.082
2024-11-28 08:14 - INFO - 	 Val. Loss: 0.064
2024-11-28 08:14 - INFO - 	 ROC-AUC: 0.987
2024-11-28 08:14 - INFO - 	 PR-AUC: 0.869
2024-11-28 08:14 - INFO - 	 Best Val. Loss: 0.064
2024-11-28 08:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 08:14 - INFO - 	 Best PR-AUC: 0.869
2024-11-28 08:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 08:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-28 08:14 - INFO - ---------------------------------------------
2024-11-28 08:22 - INFO - ---------------------------------------------
2024-11-28 08:22 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 08:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87999
2024-11-28 08:22 - INFO - 	 Train Loss: 0.071
2024-11-28 08:22 - INFO - 	 Val. Loss: 0.060
2024-11-28 08:22 - INFO - 	 ROC-AUC: 0.987
2024-11-28 08:22 - INFO - 	 PR-AUC: 0.880
2024-11-28 08:22 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 08:22 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 08:22 - INFO - 	 Best PR-AUC: 0.880
2024-11-28 08:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 08:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-28 08:22 - INFO - ---------------------------------------------
2024-11-28 08:30 - INFO - ---------------------------------------------
2024-11-28 08:30 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 08:30 - INFO - 	 Train Loss: 0.068
2024-11-28 08:30 - INFO - 	 Val. Loss: 0.063
2024-11-28 08:30 - INFO - 	 ROC-AUC: 0.987
2024-11-28 08:30 - INFO - 	 PR-AUC: 0.872
2024-11-28 08:30 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 08:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 08:30 - INFO - 	 Best PR-AUC: 0.880
2024-11-28 08:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 08:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-28 08:30 - INFO - ---------------------------------------------
2024-11-28 08:38 - INFO - ---------------------------------------------
2024-11-28 08:38 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 08:38 - INFO - 	 Train Loss: 0.065
2024-11-28 08:38 - INFO - 	 Val. Loss: 0.058
2024-11-28 08:38 - INFO - 	 ROC-AUC: 0.988
2024-11-28 08:38 - INFO - 	 PR-AUC: 0.880
2024-11-28 08:38 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 08:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 08:38 - INFO - 	 Best PR-AUC: 0.880
2024-11-28 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-28 08:38 - INFO - ---------------------------------------------
2024-11-28 08:46 - INFO - ---------------------------------------------
2024-11-28 08:46 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 08:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89212
2024-11-28 08:46 - INFO - 	 Train Loss: 0.064
2024-11-28 08:46 - INFO - 	 Val. Loss: 0.058
2024-11-28 08:46 - INFO - 	 ROC-AUC: 0.988
2024-11-28 08:46 - INFO - 	 PR-AUC: 0.892
2024-11-28 08:46 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 08:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 08:46 - INFO - 	 Best PR-AUC: 0.892
2024-11-28 08:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 08:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-28 08:46 - INFO - ---------------------------------------------
2024-11-28 08:54 - INFO - ---------------------------------------------
2024-11-28 08:54 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-28 08:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90218
2024-11-28 08:54 - INFO - 	 Train Loss: 0.063
2024-11-28 08:54 - INFO - 	 Val. Loss: 0.054
2024-11-28 08:54 - INFO - 	 ROC-AUC: 0.990
2024-11-28 08:54 - INFO - 	 PR-AUC: 0.902
2024-11-28 08:54 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 08:54 - INFO - 	 Best ROC-AUC: 0.990
2024-11-28 08:54 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-28 08:54 - INFO - ---------------------------------------------
2024-11-28 09:02 - INFO - ---------------------------------------------
2024-11-28 09:02 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 09:02 - INFO - 	 Train Loss: 0.061
2024-11-28 09:02 - INFO - 	 Val. Loss: 0.055
2024-11-28 09:02 - INFO - 	 ROC-AUC: 0.989
2024-11-28 09:02 - INFO - 	 PR-AUC: 0.900
2024-11-28 09:02 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 09:02 - INFO - 	 Best ROC-AUC: 0.990
2024-11-28 09:02 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-28 09:02 - INFO - ---------------------------------------------
2024-11-28 09:10 - INFO - ---------------------------------------------
2024-11-28 09:10 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-28 09:10 - INFO - 	 Train Loss: 0.060
2024-11-28 09:10 - INFO - 	 Val. Loss: 0.055
2024-11-28 09:10 - INFO - 	 ROC-AUC: 0.989
2024-11-28 09:10 - INFO - 	 PR-AUC: 0.898
2024-11-28 09:10 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 09:10 - INFO - 	 Best ROC-AUC: 0.990
2024-11-28 09:10 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 09:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 09:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-28 09:10 - INFO - ---------------------------------------------
2024-11-28 09:18 - INFO - ---------------------------------------------
2024-11-28 09:18 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-28 09:18 - INFO - 	 Train Loss: 0.060
2024-11-28 09:18 - INFO - 	 Val. Loss: 0.058
2024-11-28 09:18 - INFO - 	 ROC-AUC: 0.986
2024-11-28 09:18 - INFO - 	 PR-AUC: 0.890
2024-11-28 09:18 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 09:18 - INFO - 	 Best ROC-AUC: 0.990
2024-11-28 09:18 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 09:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 09:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-28 09:18 - INFO - ---------------------------------------------
2024-11-28 09:29 - INFO - Fit the preprocessing pipeline
2024-11-28 09:29 - INFO - Training using device: cuda
2024-11-28 09:29 - INFO - Creating generators
2024-11-28 09:29 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 09:29 - INFO - * Model:
2024-11-28 09:29 - INFO - * -----------
2024-11-28 09:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 09:29 - INFO - * -----------
2024-11-28 09:37 - INFO - ---------------------------------------------
2024-11-28 09:37 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-28 09:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86089
2024-11-28 09:37 - INFO - 	 Train Loss: 0.082
2024-11-28 09:37 - INFO - 	 Val. Loss: 0.064
2024-11-28 09:37 - INFO - 	 ROC-AUC: 0.986
2024-11-28 09:37 - INFO - 	 PR-AUC: 0.861
2024-11-28 09:37 - INFO - 	 Best Val. Loss: 0.064
2024-11-28 09:37 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 09:37 - INFO - 	 Best PR-AUC: 0.861
2024-11-28 09:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 09:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-28 09:37 - INFO - ---------------------------------------------
2024-11-28 09:45 - INFO - ---------------------------------------------
2024-11-28 09:45 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-28 09:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87712
2024-11-28 09:45 - INFO - 	 Train Loss: 0.073
2024-11-28 09:45 - INFO - 	 Val. Loss: 0.061
2024-11-28 09:45 - INFO - 	 ROC-AUC: 0.988
2024-11-28 09:45 - INFO - 	 PR-AUC: 0.877
2024-11-28 09:45 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 09:45 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 09:45 - INFO - 	 Best PR-AUC: 0.877
2024-11-28 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-28 09:45 - INFO - ---------------------------------------------
2024-11-28 09:53 - INFO - ---------------------------------------------
2024-11-28 09:53 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 09:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88232
2024-11-28 09:53 - INFO - 	 Train Loss: 0.068
2024-11-28 09:53 - INFO - 	 Val. Loss: 0.060
2024-11-28 09:53 - INFO - 	 ROC-AUC: 0.988
2024-11-28 09:53 - INFO - 	 PR-AUC: 0.882
2024-11-28 09:53 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 09:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 09:53 - INFO - 	 Best PR-AUC: 0.882
2024-11-28 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-28 09:53 - INFO - ---------------------------------------------
2024-11-28 10:01 - INFO - ---------------------------------------------
2024-11-28 10:01 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 10:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88809
2024-11-28 10:01 - INFO - 	 Train Loss: 0.066
2024-11-28 10:01 - INFO - 	 Val. Loss: 0.058
2024-11-28 10:01 - INFO - 	 ROC-AUC: 0.988
2024-11-28 10:01 - INFO - 	 PR-AUC: 0.888
2024-11-28 10:01 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 10:01 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 10:01 - INFO - 	 Best PR-AUC: 0.888
2024-11-28 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-28 10:01 - INFO - ---------------------------------------------
2024-11-28 10:09 - INFO - ---------------------------------------------
2024-11-28 10:09 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-28 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88893
2024-11-28 10:09 - INFO - 	 Train Loss: 0.065
2024-11-28 10:09 - INFO - 	 Val. Loss: 0.058
2024-11-28 10:09 - INFO - 	 ROC-AUC: 0.988
2024-11-28 10:09 - INFO - 	 PR-AUC: 0.889
2024-11-28 10:09 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 10:09 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 10:09 - INFO - 	 Best PR-AUC: 0.889
2024-11-28 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 10:09 - INFO - ---------------------------------------------
2024-11-28 10:17 - INFO - ---------------------------------------------
2024-11-28 10:17 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-28 10:17 - INFO - 	 Train Loss: 0.063
2024-11-28 10:17 - INFO - 	 Val. Loss: 0.057
2024-11-28 10:17 - INFO - 	 ROC-AUC: 0.988
2024-11-28 10:17 - INFO - 	 PR-AUC: 0.884
2024-11-28 10:17 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 10:17 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 10:17 - INFO - 	 Best PR-AUC: 0.889
2024-11-28 10:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 10:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 10:17 - INFO - ---------------------------------------------
2024-11-28 10:25 - INFO - ---------------------------------------------
2024-11-28 10:25 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89074
2024-11-28 10:25 - INFO - 	 Train Loss: 0.061
2024-11-28 10:25 - INFO - 	 Val. Loss: 0.055
2024-11-28 10:25 - INFO - 	 ROC-AUC: 0.989
2024-11-28 10:25 - INFO - 	 PR-AUC: 0.891
2024-11-28 10:25 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 10:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 10:25 - INFO - 	 Best PR-AUC: 0.891
2024-11-28 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-28 10:25 - INFO - ---------------------------------------------
2024-11-28 10:33 - INFO - ---------------------------------------------
2024-11-28 10:33 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-28 10:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8979
2024-11-28 10:33 - INFO - 	 Train Loss: 0.061
2024-11-28 10:33 - INFO - 	 Val. Loss: 0.056
2024-11-28 10:33 - INFO - 	 ROC-AUC: 0.987
2024-11-28 10:33 - INFO - 	 PR-AUC: 0.898
2024-11-28 10:33 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 10:33 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 10:33 - INFO - 	 Best PR-AUC: 0.898
2024-11-28 10:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 10:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-11-28 10:33 - INFO - ---------------------------------------------
2024-11-28 10:41 - INFO - ---------------------------------------------
2024-11-28 10:41 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 10:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89972
2024-11-28 10:41 - INFO - 	 Train Loss: 0.060
2024-11-28 10:41 - INFO - 	 Val. Loss: 0.057
2024-11-28 10:41 - INFO - 	 ROC-AUC: 0.989
2024-11-28 10:41 - INFO - 	 PR-AUC: 0.900
2024-11-28 10:41 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 10:41 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 10:41 - INFO - 	 Best PR-AUC: 0.900
2024-11-28 10:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 10:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-28 10:41 - INFO - ---------------------------------------------
2024-11-28 10:49 - INFO - ---------------------------------------------
2024-11-28 10:49 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-28 10:49 - INFO - 	 Train Loss: 0.058
2024-11-28 10:49 - INFO - 	 Val. Loss: 0.057
2024-11-28 10:49 - INFO - 	 ROC-AUC: 0.988
2024-11-28 10:49 - INFO - 	 PR-AUC: 0.896
2024-11-28 10:49 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 10:49 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 10:49 - INFO - 	 Best PR-AUC: 0.900
2024-11-28 10:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 10:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-28 10:49 - INFO - ---------------------------------------------
2024-11-28 10:51 - INFO - Fit the preprocessing pipeline
2024-11-28 10:51 - INFO - Training using device: cuda
2024-11-28 10:51 - INFO - Creating generators
2024-11-28 10:51 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 10:51 - INFO - * Model:
2024-11-28 10:51 - INFO - * -----------
2024-11-28 10:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 10:51 - INFO - * -----------
2024-11-28 10:59 - INFO - ---------------------------------------------
2024-11-28 10:59 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-28 10:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85382
2024-11-28 10:59 - INFO - 	 Train Loss: 0.081
2024-11-28 10:59 - INFO - 	 Val. Loss: 0.067
2024-11-28 10:59 - INFO - 	 ROC-AUC: 0.985
2024-11-28 10:59 - INFO - 	 PR-AUC: 0.854
2024-11-28 10:59 - INFO - 	 Best Val. Loss: 0.067
2024-11-28 10:59 - INFO - 	 Best ROC-AUC: 0.985
2024-11-28 10:59 - INFO - 	 Best PR-AUC: 0.854
2024-11-28 10:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 10:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-28 10:59 - INFO - ---------------------------------------------
2024-11-28 11:07 - INFO - ---------------------------------------------
2024-11-28 11:07 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 11:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88503
2024-11-28 11:07 - INFO - 	 Train Loss: 0.071
2024-11-28 11:07 - INFO - 	 Val. Loss: 0.061
2024-11-28 11:07 - INFO - 	 ROC-AUC: 0.987
2024-11-28 11:07 - INFO - 	 PR-AUC: 0.885
2024-11-28 11:07 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 11:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 11:07 - INFO - 	 Best PR-AUC: 0.885
2024-11-28 11:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 11:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-28 11:07 - INFO - ---------------------------------------------
2024-11-28 11:16 - INFO - ---------------------------------------------
2024-11-28 11:16 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 11:16 - INFO - 	 Train Loss: 0.068
2024-11-28 11:16 - INFO - 	 Val. Loss: 0.062
2024-11-28 11:16 - INFO - 	 ROC-AUC: 0.988
2024-11-28 11:16 - INFO - 	 PR-AUC: 0.880
2024-11-28 11:16 - INFO - 	 Best Val. Loss: 0.061
2024-11-28 11:16 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 11:16 - INFO - 	 Best PR-AUC: 0.885
2024-11-28 11:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 11:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-28 11:16 - INFO - ---------------------------------------------
2024-11-28 11:24 - INFO - ---------------------------------------------
2024-11-28 11:24 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 11:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8876
2024-11-28 11:24 - INFO - 	 Train Loss: 0.066
2024-11-28 11:24 - INFO - 	 Val. Loss: 0.058
2024-11-28 11:24 - INFO - 	 ROC-AUC: 0.988
2024-11-28 11:24 - INFO - 	 PR-AUC: 0.888
2024-11-28 11:24 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 11:24 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 11:24 - INFO - 	 Best PR-AUC: 0.888
2024-11-28 11:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 11:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-28 11:24 - INFO - ---------------------------------------------
2024-11-28 11:32 - INFO - ---------------------------------------------
2024-11-28 11:32 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-28 11:32 - INFO - 	 Train Loss: 0.064
2024-11-28 11:32 - INFO - 	 Val. Loss: 0.057
2024-11-28 11:32 - INFO - 	 ROC-AUC: 0.987
2024-11-28 11:32 - INFO - 	 PR-AUC: 0.884
2024-11-28 11:32 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 11:32 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 11:32 - INFO - 	 Best PR-AUC: 0.888
2024-11-28 11:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 11:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-28 11:32 - INFO - ---------------------------------------------
2024-11-28 11:40 - INFO - ---------------------------------------------
2024-11-28 11:40 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-28 11:40 - INFO - 	 Train Loss: 0.063
2024-11-28 11:40 - INFO - 	 Val. Loss: 0.059
2024-11-28 11:40 - INFO - 	 ROC-AUC: 0.988
2024-11-28 11:40 - INFO - 	 PR-AUC: 0.884
2024-11-28 11:40 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 11:40 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 11:40 - INFO - 	 Best PR-AUC: 0.888
2024-11-28 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-28 11:40 - INFO - ---------------------------------------------
2024-11-28 11:48 - INFO - ---------------------------------------------
2024-11-28 11:48 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 11:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88953
2024-11-28 11:48 - INFO - 	 Train Loss: 0.062
2024-11-28 11:48 - INFO - 	 Val. Loss: 0.056
2024-11-28 11:48 - INFO - 	 ROC-AUC: 0.988
2024-11-28 11:48 - INFO - 	 PR-AUC: 0.890
2024-11-28 11:48 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 11:48 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 11:48 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-28 11:48 - INFO - ---------------------------------------------
2024-11-28 11:56 - INFO - ---------------------------------------------
2024-11-28 11:56 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-28 11:56 - INFO - 	 Train Loss: 0.060
2024-11-28 11:56 - INFO - 	 Val. Loss: 0.059
2024-11-28 11:56 - INFO - 	 ROC-AUC: 0.987
2024-11-28 11:56 - INFO - 	 PR-AUC: 0.888
2024-11-28 11:56 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 11:56 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 11:56 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-28 11:56 - INFO - ---------------------------------------------
2024-11-28 12:04 - INFO - ---------------------------------------------
2024-11-28 12:04 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-28 12:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89677
2024-11-28 12:04 - INFO - 	 Train Loss: 0.060
2024-11-28 12:04 - INFO - 	 Val. Loss: 0.056
2024-11-28 12:04 - INFO - 	 ROC-AUC: 0.988
2024-11-28 12:04 - INFO - 	 PR-AUC: 0.897
2024-11-28 12:04 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 12:04 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 12:04 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 12:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 12:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-28 12:04 - INFO - ---------------------------------------------
2024-11-28 12:12 - INFO - ---------------------------------------------
2024-11-28 12:12 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-28 12:12 - INFO - 	 Train Loss: 0.058
2024-11-28 12:12 - INFO - 	 Val. Loss: 0.059
2024-11-28 12:12 - INFO - 	 ROC-AUC: 0.988
2024-11-28 12:12 - INFO - 	 PR-AUC: 0.892
2024-11-28 12:12 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 12:12 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 12:12 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 12:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 12:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-28 12:12 - INFO - ---------------------------------------------
2024-11-28 12:14 - INFO - Fit the preprocessing pipeline
2024-11-28 12:14 - INFO - Training using device: cuda
2024-11-28 12:14 - INFO - Creating generators
2024-11-28 12:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 12:14 - INFO - * Model:
2024-11-28 12:14 - INFO - * -----------
2024-11-28 12:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 12:14 - INFO - * -----------
2024-11-28 12:22 - INFO - ---------------------------------------------
2024-11-28 12:22 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-28 12:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85041
2024-11-28 12:22 - INFO - 	 Train Loss: 0.082
2024-11-28 12:22 - INFO - 	 Val. Loss: 0.068
2024-11-28 12:22 - INFO - 	 ROC-AUC: 0.986
2024-11-28 12:22 - INFO - 	 PR-AUC: 0.850
2024-11-28 12:22 - INFO - 	 Best Val. Loss: 0.068
2024-11-28 12:22 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 12:22 - INFO - 	 Best PR-AUC: 0.850
2024-11-28 12:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-28 12:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-28 12:22 - INFO - ---------------------------------------------
2024-11-28 12:30 - INFO - ---------------------------------------------
2024-11-28 12:30 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-28 12:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8744
2024-11-28 12:30 - INFO - 	 Train Loss: 0.071
2024-11-28 12:30 - INFO - 	 Val. Loss: 0.062
2024-11-28 12:30 - INFO - 	 ROC-AUC: 0.987
2024-11-28 12:30 - INFO - 	 PR-AUC: 0.874
2024-11-28 12:30 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 12:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 12:30 - INFO - 	 Best PR-AUC: 0.874
2024-11-28 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-28 12:30 - INFO - ---------------------------------------------
2024-11-28 12:38 - INFO - ---------------------------------------------
2024-11-28 12:38 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-28 12:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88137
2024-11-28 12:38 - INFO - 	 Train Loss: 0.068
2024-11-28 12:38 - INFO - 	 Val. Loss: 0.060
2024-11-28 12:38 - INFO - 	 ROC-AUC: 0.987
2024-11-28 12:38 - INFO - 	 PR-AUC: 0.881
2024-11-28 12:38 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 12:38 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 12:38 - INFO - 	 Best PR-AUC: 0.881
2024-11-28 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-28 12:38 - INFO - ---------------------------------------------
2024-11-28 12:46 - INFO - ---------------------------------------------
2024-11-28 12:46 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 12:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88813
2024-11-28 12:46 - INFO - 	 Train Loss: 0.066
2024-11-28 12:46 - INFO - 	 Val. Loss: 0.059
2024-11-28 12:46 - INFO - 	 ROC-AUC: 0.988
2024-11-28 12:46 - INFO - 	 PR-AUC: 0.888
2024-11-28 12:46 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 12:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 12:46 - INFO - 	 Best PR-AUC: 0.888
2024-11-28 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-28 12:46 - INFO - ---------------------------------------------
2024-11-28 12:54 - INFO - ---------------------------------------------
2024-11-28 12:54 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-28 12:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89047
2024-11-28 12:54 - INFO - 	 Train Loss: 0.064
2024-11-28 12:54 - INFO - 	 Val. Loss: 0.057
2024-11-28 12:54 - INFO - 	 ROC-AUC: 0.989
2024-11-28 12:54 - INFO - 	 PR-AUC: 0.890
2024-11-28 12:54 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 12:54 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 12:54 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 12:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 12:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-28 12:54 - INFO - ---------------------------------------------
2024-11-28 13:02 - INFO - ---------------------------------------------
2024-11-28 13:02 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 13:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89224
2024-11-28 13:02 - INFO - 	 Train Loss: 0.063
2024-11-28 13:02 - INFO - 	 Val. Loss: 0.057
2024-11-28 13:02 - INFO - 	 ROC-AUC: 0.988
2024-11-28 13:02 - INFO - 	 PR-AUC: 0.892
2024-11-28 13:02 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 13:02 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 13:02 - INFO - 	 Best PR-AUC: 0.892
2024-11-28 13:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 13:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-28 13:02 - INFO - ---------------------------------------------
2024-11-28 13:10 - INFO - ---------------------------------------------
2024-11-28 13:10 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 13:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89311
2024-11-28 13:10 - INFO - 	 Train Loss: 0.061
2024-11-28 13:10 - INFO - 	 Val. Loss: 0.058
2024-11-28 13:10 - INFO - 	 ROC-AUC: 0.988
2024-11-28 13:10 - INFO - 	 PR-AUC: 0.893
2024-11-28 13:10 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 13:10 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 13:10 - INFO - 	 Best PR-AUC: 0.893
2024-11-28 13:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 13:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-28 13:10 - INFO - ---------------------------------------------
2024-11-28 13:18 - INFO - ---------------------------------------------
2024-11-28 13:18 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-28 13:18 - INFO - 	 Train Loss: 0.060
2024-11-28 13:18 - INFO - 	 Val. Loss: 0.057
2024-11-28 13:18 - INFO - 	 ROC-AUC: 0.989
2024-11-28 13:18 - INFO - 	 PR-AUC: 0.884
2024-11-28 13:18 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 13:18 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 13:18 - INFO - 	 Best PR-AUC: 0.893
2024-11-28 13:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 13:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-28 13:18 - INFO - ---------------------------------------------
2024-11-28 13:27 - INFO - ---------------------------------------------
2024-11-28 13:27 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-28 13:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8943
2024-11-28 13:27 - INFO - 	 Train Loss: 0.060
2024-11-28 13:27 - INFO - 	 Val. Loss: 0.057
2024-11-28 13:27 - INFO - 	 ROC-AUC: 0.988
2024-11-28 13:27 - INFO - 	 PR-AUC: 0.894
2024-11-28 13:27 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 13:27 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 13:27 - INFO - 	 Best PR-AUC: 0.894
2024-11-28 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-28 13:27 - INFO - ---------------------------------------------
2024-11-28 13:35 - INFO - ---------------------------------------------
2024-11-28 13:35 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-28 13:35 - INFO - 	 Train Loss: 0.059
2024-11-28 13:35 - INFO - 	 Val. Loss: 0.057
2024-11-28 13:35 - INFO - 	 ROC-AUC: 0.988
2024-11-28 13:35 - INFO - 	 PR-AUC: 0.892
2024-11-28 13:35 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 13:35 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 13:35 - INFO - 	 Best PR-AUC: 0.894
2024-11-28 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-28 13:35 - INFO - ---------------------------------------------
2024-11-28 13:37 - INFO - Fit the preprocessing pipeline
2024-11-28 13:37 - INFO - Training using device: cuda
2024-11-28 13:37 - INFO - Creating generators
2024-11-28 13:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 13:37 - INFO - * Model:
2024-11-28 13:37 - INFO - * -----------
2024-11-28 13:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 13:37 - INFO - * -----------
2024-11-28 13:45 - INFO - ---------------------------------------------
2024-11-28 13:45 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-28 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86596
2024-11-28 13:45 - INFO - 	 Train Loss: 0.082
2024-11-28 13:45 - INFO - 	 Val. Loss: 0.065
2024-11-28 13:45 - INFO - 	 ROC-AUC: 0.986
2024-11-28 13:45 - INFO - 	 PR-AUC: 0.866
2024-11-28 13:45 - INFO - 	 Best Val. Loss: 0.065
2024-11-28 13:45 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 13:45 - INFO - 	 Best PR-AUC: 0.866
2024-11-28 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-28 13:45 - INFO - ---------------------------------------------
2024-11-28 13:53 - INFO - ---------------------------------------------
2024-11-28 13:53 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 13:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87437
2024-11-28 13:53 - INFO - 	 Train Loss: 0.071
2024-11-28 13:53 - INFO - 	 Val. Loss: 0.062
2024-11-28 13:53 - INFO - 	 ROC-AUC: 0.987
2024-11-28 13:53 - INFO - 	 PR-AUC: 0.874
2024-11-28 13:53 - INFO - 	 Best Val. Loss: 0.062
2024-11-28 13:53 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 13:53 - INFO - 	 Best PR-AUC: 0.874
2024-11-28 13:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 13:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-28 13:53 - INFO - ---------------------------------------------
2024-11-28 14:01 - INFO - ---------------------------------------------
2024-11-28 14:01 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 14:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88112
2024-11-28 14:01 - INFO - 	 Train Loss: 0.068
2024-11-28 14:01 - INFO - 	 Val. Loss: 0.060
2024-11-28 14:01 - INFO - 	 ROC-AUC: 0.988
2024-11-28 14:01 - INFO - 	 PR-AUC: 0.881
2024-11-28 14:01 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 14:01 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 14:01 - INFO - 	 Best PR-AUC: 0.881
2024-11-28 14:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 14:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-28 14:01 - INFO - ---------------------------------------------
2024-11-28 14:09 - INFO - ---------------------------------------------
2024-11-28 14:09 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 14:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88515
2024-11-28 14:09 - INFO - 	 Train Loss: 0.066
2024-11-28 14:09 - INFO - 	 Val. Loss: 0.059
2024-11-28 14:09 - INFO - 	 ROC-AUC: 0.988
2024-11-28 14:09 - INFO - 	 PR-AUC: 0.885
2024-11-28 14:09 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 14:09 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 14:09 - INFO - 	 Best PR-AUC: 0.885
2024-11-28 14:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 14:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-28 14:09 - INFO - ---------------------------------------------
2024-11-28 14:17 - INFO - ---------------------------------------------
2024-11-28 14:17 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-28 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89138
2024-11-28 14:17 - INFO - 	 Train Loss: 0.064
2024-11-28 14:17 - INFO - 	 Val. Loss: 0.057
2024-11-28 14:17 - INFO - 	 ROC-AUC: 0.989
2024-11-28 14:17 - INFO - 	 PR-AUC: 0.891
2024-11-28 14:17 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 14:17 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 14:17 - INFO - 	 Best PR-AUC: 0.891
2024-11-28 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-28 14:17 - INFO - ---------------------------------------------
2024-11-28 14:25 - INFO - ---------------------------------------------
2024-11-28 14:25 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 14:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89615
2024-11-28 14:25 - INFO - 	 Train Loss: 0.063
2024-11-28 14:25 - INFO - 	 Val. Loss: 0.056
2024-11-28 14:25 - INFO - 	 ROC-AUC: 0.988
2024-11-28 14:25 - INFO - 	 PR-AUC: 0.896
2024-11-28 14:25 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 14:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 14:25 - INFO - 	 Best PR-AUC: 0.896
2024-11-28 14:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 14:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-28 14:25 - INFO - ---------------------------------------------
2024-11-28 14:33 - INFO - ---------------------------------------------
2024-11-28 14:33 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 14:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89734
2024-11-28 14:33 - INFO - 	 Train Loss: 0.062
2024-11-28 14:33 - INFO - 	 Val. Loss: 0.056
2024-11-28 14:33 - INFO - 	 ROC-AUC: 0.988
2024-11-28 14:33 - INFO - 	 PR-AUC: 0.897
2024-11-28 14:33 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 14:33 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 14:33 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 14:33 - INFO - ---------------------------------------------
2024-11-28 14:41 - INFO - ---------------------------------------------
2024-11-28 14:41 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-28 14:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90074
2024-11-28 14:41 - INFO - 	 Train Loss: 0.061
2024-11-28 14:41 - INFO - 	 Val. Loss: 0.056
2024-11-28 14:41 - INFO - 	 ROC-AUC: 0.987
2024-11-28 14:41 - INFO - 	 PR-AUC: 0.901
2024-11-28 14:41 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 14:41 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 14:41 - INFO - 	 Best PR-AUC: 0.901
2024-11-28 14:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 14:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-28 14:41 - INFO - ---------------------------------------------
2024-11-28 14:49 - INFO - ---------------------------------------------
2024-11-28 14:49 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 14:49 - INFO - 	 Train Loss: 0.060
2024-11-28 14:49 - INFO - 	 Val. Loss: 0.056
2024-11-28 14:49 - INFO - 	 ROC-AUC: 0.988
2024-11-28 14:49 - INFO - 	 PR-AUC: 0.899
2024-11-28 14:49 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 14:49 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 14:49 - INFO - 	 Best PR-AUC: 0.901
2024-11-28 14:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 14:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-28 14:49 - INFO - ---------------------------------------------
2024-11-28 14:57 - INFO - ---------------------------------------------
2024-11-28 14:57 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 14:57 - INFO - 	 Train Loss: 0.059
2024-11-28 14:57 - INFO - 	 Val. Loss: 0.059
2024-11-28 14:57 - INFO - 	 ROC-AUC: 0.986
2024-11-28 14:57 - INFO - 	 PR-AUC: 0.885
2024-11-28 14:57 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 14:57 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 14:57 - INFO - 	 Best PR-AUC: 0.901
2024-11-28 14:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 14:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-28 14:57 - INFO - ---------------------------------------------
2024-11-28 15:00 - INFO - Fit the preprocessing pipeline
2024-11-28 15:00 - INFO - Training using device: cuda
2024-11-28 15:00 - INFO - Creating generators
2024-11-28 15:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 15:00 - INFO - * Model:
2024-11-28 15:00 - INFO - * -----------
2024-11-28 15:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 15:00 - INFO - * -----------
2024-11-28 15:08 - INFO - ---------------------------------------------
2024-11-28 15:08 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 15:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86075
2024-11-28 15:08 - INFO - 	 Train Loss: 0.081
2024-11-28 15:08 - INFO - 	 Val. Loss: 0.066
2024-11-28 15:08 - INFO - 	 ROC-AUC: 0.986
2024-11-28 15:08 - INFO - 	 PR-AUC: 0.861
2024-11-28 15:08 - INFO - 	 Best Val. Loss: 0.066
2024-11-28 15:08 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 15:08 - INFO - 	 Best PR-AUC: 0.861
2024-11-28 15:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 15:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-28 15:08 - INFO - ---------------------------------------------
2024-11-28 15:16 - INFO - ---------------------------------------------
2024-11-28 15:16 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-28 15:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87116
2024-11-28 15:16 - INFO - 	 Train Loss: 0.071
2024-11-28 15:16 - INFO - 	 Val. Loss: 0.063
2024-11-28 15:16 - INFO - 	 ROC-AUC: 0.988
2024-11-28 15:16 - INFO - 	 PR-AUC: 0.871
2024-11-28 15:16 - INFO - 	 Best Val. Loss: 0.063
2024-11-28 15:16 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 15:16 - INFO - 	 Best PR-AUC: 0.871
2024-11-28 15:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-28 15:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-28 15:16 - INFO - ---------------------------------------------
2024-11-28 15:24 - INFO - ---------------------------------------------
2024-11-28 15:24 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87768
2024-11-28 15:24 - INFO - 	 Train Loss: 0.067
2024-11-28 15:24 - INFO - 	 Val. Loss: 0.064
2024-11-28 15:24 - INFO - 	 ROC-AUC: 0.987
2024-11-28 15:24 - INFO - 	 PR-AUC: 0.878
2024-11-28 15:24 - INFO - 	 Best Val. Loss: 0.063
2024-11-28 15:24 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 15:24 - INFO - 	 Best PR-AUC: 0.878
2024-11-28 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-28 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-28 15:24 - INFO - ---------------------------------------------
2024-11-28 15:32 - INFO - ---------------------------------------------
2024-11-28 15:32 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88304
2024-11-28 15:32 - INFO - 	 Train Loss: 0.066
2024-11-28 15:32 - INFO - 	 Val. Loss: 0.058
2024-11-28 15:32 - INFO - 	 ROC-AUC: 0.988
2024-11-28 15:32 - INFO - 	 PR-AUC: 0.883
2024-11-28 15:32 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 15:32 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 15:32 - INFO - 	 Best PR-AUC: 0.883
2024-11-28 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-28 15:32 - INFO - ---------------------------------------------
2024-11-28 15:40 - INFO - ---------------------------------------------
2024-11-28 15:40 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 15:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88549
2024-11-28 15:40 - INFO - 	 Train Loss: 0.064
2024-11-28 15:40 - INFO - 	 Val. Loss: 0.058
2024-11-28 15:40 - INFO - 	 ROC-AUC: 0.988
2024-11-28 15:40 - INFO - 	 PR-AUC: 0.885
2024-11-28 15:40 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 15:40 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 15:40 - INFO - 	 Best PR-AUC: 0.885
2024-11-28 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 15:40 - INFO - ---------------------------------------------
2024-11-28 15:48 - INFO - ---------------------------------------------
2024-11-28 15:48 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 15:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89328
2024-11-28 15:48 - INFO - 	 Train Loss: 0.063
2024-11-28 15:48 - INFO - 	 Val. Loss: 0.056
2024-11-28 15:48 - INFO - 	 ROC-AUC: 0.989
2024-11-28 15:48 - INFO - 	 PR-AUC: 0.893
2024-11-28 15:48 - INFO - 	 Best Val. Loss: 0.056
2024-11-28 15:48 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 15:48 - INFO - 	 Best PR-AUC: 0.893
2024-11-28 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-28 15:48 - INFO - ---------------------------------------------
2024-11-28 15:56 - INFO - ---------------------------------------------
2024-11-28 15:56 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 15:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89821
2024-11-28 15:56 - INFO - 	 Train Loss: 0.062
2024-11-28 15:56 - INFO - 	 Val. Loss: 0.054
2024-11-28 15:56 - INFO - 	 ROC-AUC: 0.989
2024-11-28 15:56 - INFO - 	 PR-AUC: 0.898
2024-11-28 15:56 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 15:56 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 15:56 - INFO - 	 Best PR-AUC: 0.898
2024-11-28 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 15:56 - INFO - ---------------------------------------------
2024-11-28 16:04 - INFO - ---------------------------------------------
2024-11-28 16:04 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 16:04 - INFO - 	 Train Loss: 0.060
2024-11-28 16:04 - INFO - 	 Val. Loss: 0.060
2024-11-28 16:04 - INFO - 	 ROC-AUC: 0.987
2024-11-28 16:04 - INFO - 	 PR-AUC: 0.885
2024-11-28 16:04 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 16:04 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 16:04 - INFO - 	 Best PR-AUC: 0.898
2024-11-28 16:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 16:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 16:04 - INFO - ---------------------------------------------
2024-11-28 16:12 - INFO - ---------------------------------------------
2024-11-28 16:12 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-28 16:12 - INFO - 	 Train Loss: 0.060
2024-11-28 16:12 - INFO - 	 Val. Loss: 0.056
2024-11-28 16:12 - INFO - 	 ROC-AUC: 0.988
2024-11-28 16:12 - INFO - 	 PR-AUC: 0.893
2024-11-28 16:12 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 16:12 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 16:12 - INFO - 	 Best PR-AUC: 0.898
2024-11-28 16:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 16:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 16:12 - INFO - ---------------------------------------------
2024-11-28 16:20 - INFO - ---------------------------------------------
2024-11-28 16:20 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-28 16:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.902
2024-11-28 16:20 - INFO - 	 Train Loss: 0.059
2024-11-28 16:20 - INFO - 	 Val. Loss: 0.055
2024-11-28 16:20 - INFO - 	 ROC-AUC: 0.989
2024-11-28 16:20 - INFO - 	 PR-AUC: 0.902
2024-11-28 16:20 - INFO - 	 Best Val. Loss: 0.054
2024-11-28 16:20 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 16:20 - INFO - 	 Best PR-AUC: 0.902
2024-11-28 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-11-28 16:20 - INFO - ---------------------------------------------
2024-11-28 16:22 - INFO - Fit the preprocessing pipeline
2024-11-28 16:22 - INFO - Training using device: cuda
2024-11-28 16:22 - INFO - Creating generators
2024-11-28 16:22 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 16:22 - INFO - * Model:
2024-11-28 16:22 - INFO - * -----------
2024-11-28 16:22 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 16:22 - INFO - * -----------
2024-11-28 16:30 - INFO - ---------------------------------------------
2024-11-28 16:30 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 16:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85215
2024-11-28 16:30 - INFO - 	 Train Loss: 0.082
2024-11-28 16:30 - INFO - 	 Val. Loss: 0.067
2024-11-28 16:30 - INFO - 	 ROC-AUC: 0.986
2024-11-28 16:30 - INFO - 	 PR-AUC: 0.852
2024-11-28 16:30 - INFO - 	 Best Val. Loss: 0.067
2024-11-28 16:30 - INFO - 	 Best ROC-AUC: 0.986
2024-11-28 16:30 - INFO - 	 Best PR-AUC: 0.852
2024-11-28 16:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 16:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-28 16:30 - INFO - ---------------------------------------------
2024-11-28 16:38 - INFO - ---------------------------------------------
2024-11-28 16:38 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-28 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88127
2024-11-28 16:38 - INFO - 	 Train Loss: 0.071
2024-11-28 16:38 - INFO - 	 Val. Loss: 0.060
2024-11-28 16:38 - INFO - 	 ROC-AUC: 0.988
2024-11-28 16:38 - INFO - 	 PR-AUC: 0.881
2024-11-28 16:38 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 16:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 16:38 - INFO - 	 Best PR-AUC: 0.881
2024-11-28 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-28 16:38 - INFO - ---------------------------------------------
2024-11-28 16:46 - INFO - ---------------------------------------------
2024-11-28 16:46 - INFO - Epoch: 03 | Time: 8m 3s
2024-11-28 16:46 - INFO - 	 Train Loss: 0.068
2024-11-28 16:46 - INFO - 	 Val. Loss: 0.060
2024-11-28 16:46 - INFO - 	 ROC-AUC: 0.988
2024-11-28 16:46 - INFO - 	 PR-AUC: 0.877
2024-11-28 16:46 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 16:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 16:46 - INFO - 	 Best PR-AUC: 0.881
2024-11-28 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-28 16:46 - INFO - ---------------------------------------------
2024-11-28 16:55 - INFO - ---------------------------------------------
2024-11-28 16:55 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-28 16:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88404
2024-11-28 16:55 - INFO - 	 Train Loss: 0.066
2024-11-28 16:55 - INFO - 	 Val. Loss: 0.059
2024-11-28 16:55 - INFO - 	 ROC-AUC: 0.988
2024-11-28 16:55 - INFO - 	 PR-AUC: 0.884
2024-11-28 16:55 - INFO - 	 Best Val. Loss: 0.059
2024-11-28 16:55 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 16:55 - INFO - 	 Best PR-AUC: 0.884
2024-11-28 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-28 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-28 16:55 - INFO - ---------------------------------------------
2024-11-28 17:03 - INFO - ---------------------------------------------
2024-11-28 17:03 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 17:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89711
2024-11-28 17:03 - INFO - 	 Train Loss: 0.064
2024-11-28 17:03 - INFO - 	 Val. Loss: 0.057
2024-11-28 17:03 - INFO - 	 ROC-AUC: 0.988
2024-11-28 17:03 - INFO - 	 PR-AUC: 0.897
2024-11-28 17:03 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 17:03 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 17:03 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 17:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 17:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 17:03 - INFO - ---------------------------------------------
2024-11-28 17:11 - INFO - ---------------------------------------------
2024-11-28 17:11 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 17:11 - INFO - 	 Train Loss: 0.063
2024-11-28 17:11 - INFO - 	 Val. Loss: 0.057
2024-11-28 17:11 - INFO - 	 ROC-AUC: 0.989
2024-11-28 17:11 - INFO - 	 PR-AUC: 0.889
2024-11-28 17:11 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 17:11 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 17:11 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 17:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 17:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 17:11 - INFO - ---------------------------------------------
2024-11-28 17:19 - INFO - ---------------------------------------------
2024-11-28 17:19 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-28 17:19 - INFO - 	 Train Loss: 0.062
2024-11-28 17:19 - INFO - 	 Val. Loss: 0.059
2024-11-28 17:19 - INFO - 	 ROC-AUC: 0.988
2024-11-28 17:19 - INFO - 	 PR-AUC: 0.880
2024-11-28 17:19 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 17:19 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 17:19 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 17:19 - INFO - ---------------------------------------------
2024-11-28 17:27 - INFO - ---------------------------------------------
2024-11-28 17:27 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 17:27 - INFO - 	 Train Loss: 0.060
2024-11-28 17:27 - INFO - 	 Val. Loss: 0.060
2024-11-28 17:27 - INFO - 	 ROC-AUC: 0.987
2024-11-28 17:27 - INFO - 	 PR-AUC: 0.890
2024-11-28 17:27 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 17:27 - INFO - 	 Best ROC-AUC: 0.989
2024-11-28 17:27 - INFO - 	 Best PR-AUC: 0.897
2024-11-28 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-28 17:27 - INFO - ---------------------------------------------
2024-11-28 17:37 - INFO - Fit the preprocessing pipeline
2024-11-28 17:37 - INFO - Training using device: cuda
2024-11-28 17:37 - INFO - Creating generators
2024-11-28 17:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-28 17:37 - INFO - * Model:
2024-11-28 17:37 - INFO - * -----------
2024-11-28 17:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-28 17:37 - INFO - * -----------
2024-11-28 17:45 - INFO - ---------------------------------------------
2024-11-28 17:45 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-28 17:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86144
2024-11-28 17:45 - INFO - 	 Train Loss: 0.082
2024-11-28 17:45 - INFO - 	 Val. Loss: 0.065
2024-11-28 17:45 - INFO - 	 ROC-AUC: 0.985
2024-11-28 17:45 - INFO - 	 PR-AUC: 0.861
2024-11-28 17:45 - INFO - 	 Best Val. Loss: 0.065
2024-11-28 17:45 - INFO - 	 Best ROC-AUC: 0.985
2024-11-28 17:45 - INFO - 	 Best PR-AUC: 0.861
2024-11-28 17:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-28 17:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-28 17:45 - INFO - ---------------------------------------------
2024-11-28 17:53 - INFO - ---------------------------------------------
2024-11-28 17:53 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-28 17:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87375
2024-11-28 17:53 - INFO - 	 Train Loss: 0.071
2024-11-28 17:53 - INFO - 	 Val. Loss: 0.064
2024-11-28 17:53 - INFO - 	 ROC-AUC: 0.987
2024-11-28 17:53 - INFO - 	 PR-AUC: 0.874
2024-11-28 17:53 - INFO - 	 Best Val. Loss: 0.064
2024-11-28 17:53 - INFO - 	 Best ROC-AUC: 0.987
2024-11-28 17:53 - INFO - 	 Best PR-AUC: 0.874
2024-11-28 17:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 17:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-28 17:53 - INFO - ---------------------------------------------
2024-11-28 18:01 - INFO - ---------------------------------------------
2024-11-28 18:01 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-28 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88213
2024-11-28 18:01 - INFO - 	 Train Loss: 0.068
2024-11-28 18:01 - INFO - 	 Val. Loss: 0.060
2024-11-28 18:01 - INFO - 	 ROC-AUC: 0.988
2024-11-28 18:01 - INFO - 	 PR-AUC: 0.882
2024-11-28 18:01 - INFO - 	 Best Val. Loss: 0.060
2024-11-28 18:01 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 18:01 - INFO - 	 Best PR-AUC: 0.882
2024-11-28 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-28 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-28 18:01 - INFO - ---------------------------------------------
2024-11-28 18:09 - INFO - ---------------------------------------------
2024-11-28 18:09 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-28 18:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88392
2024-11-28 18:09 - INFO - 	 Train Loss: 0.066
2024-11-28 18:09 - INFO - 	 Val. Loss: 0.058
2024-11-28 18:09 - INFO - 	 ROC-AUC: 0.988
2024-11-28 18:09 - INFO - 	 PR-AUC: 0.884
2024-11-28 18:09 - INFO - 	 Best Val. Loss: 0.058
2024-11-28 18:09 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 18:09 - INFO - 	 Best PR-AUC: 0.884
2024-11-28 18:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 18:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-28 18:09 - INFO - ---------------------------------------------
2024-11-28 18:17 - INFO - ---------------------------------------------
2024-11-28 18:17 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-28 18:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89045
2024-11-28 18:17 - INFO - 	 Train Loss: 0.063
2024-11-28 18:17 - INFO - 	 Val. Loss: 0.057
2024-11-28 18:17 - INFO - 	 ROC-AUC: 0.988
2024-11-28 18:17 - INFO - 	 PR-AUC: 0.890
2024-11-28 18:17 - INFO - 	 Best Val. Loss: 0.057
2024-11-28 18:17 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 18:17 - INFO - 	 Best PR-AUC: 0.890
2024-11-28 18:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 18:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-28 18:17 - INFO - ---------------------------------------------
2024-11-28 18:25 - INFO - ---------------------------------------------
2024-11-28 18:25 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-28 18:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9004
2024-11-28 18:25 - INFO - 	 Train Loss: 0.062
2024-11-28 18:25 - INFO - 	 Val. Loss: 0.055
2024-11-28 18:25 - INFO - 	 ROC-AUC: 0.988
2024-11-28 18:25 - INFO - 	 PR-AUC: 0.900
2024-11-28 18:25 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 18:25 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 18:25 - INFO - 	 Best PR-AUC: 0.900
2024-11-28 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 18:25 - INFO - ---------------------------------------------
2024-11-28 18:33 - INFO - ---------------------------------------------
2024-11-28 18:33 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-28 18:33 - INFO - 	 Train Loss: 0.062
2024-11-28 18:33 - INFO - 	 Val. Loss: 0.056
2024-11-28 18:33 - INFO - 	 ROC-AUC: 0.988
2024-11-28 18:33 - INFO - 	 PR-AUC: 0.899
2024-11-28 18:33 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 18:33 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 18:33 - INFO - 	 Best PR-AUC: 0.900
2024-11-28 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 18:33 - INFO - ---------------------------------------------
2024-11-28 18:41 - INFO - ---------------------------------------------
2024-11-28 18:41 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-28 18:41 - INFO - 	 Train Loss: 0.060
2024-11-28 18:41 - INFO - 	 Val. Loss: 0.059
2024-11-28 18:41 - INFO - 	 ROC-AUC: 0.987
2024-11-28 18:41 - INFO - 	 PR-AUC: 0.884
2024-11-28 18:41 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 18:41 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 18:41 - INFO - 	 Best PR-AUC: 0.900
2024-11-28 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 18:41 - INFO - ---------------------------------------------
2024-11-28 18:49 - INFO - ---------------------------------------------
2024-11-28 18:49 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-28 18:49 - INFO - 	 Train Loss: 0.060
2024-11-28 18:49 - INFO - 	 Val. Loss: 0.055
2024-11-28 18:49 - INFO - 	 ROC-AUC: 0.988
2024-11-28 18:49 - INFO - 	 PR-AUC: 0.896
2024-11-28 18:49 - INFO - 	 Best Val. Loss: 0.055
2024-11-28 18:49 - INFO - 	 Best ROC-AUC: 0.988
2024-11-28 18:49 - INFO - 	 Best PR-AUC: 0.900
2024-11-28 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-28 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-28 18:49 - INFO - ---------------------------------------------
