2024-11-03 23:29 - INFO - Fit the preprocessing pipeline
2024-11-03 23:29 - INFO - Training using device: cuda
2024-11-03 23:29 - INFO - Creating generators
2024-11-03 23:29 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 23:29 - INFO - * Model:
2024-11-03 23:29 - INFO - * -----------
2024-11-03 23:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 23:29 - INFO - * -----------
2024-11-03 23:37 - INFO - ---------------------------------------------
2024-11-03 23:37 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 23:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29088
2024-11-03 23:37 - INFO - 	 Train Loss: 0.230
2024-11-03 23:37 - INFO - 	 Val. Loss: 0.536
2024-11-03 23:37 - INFO - 	 ROC-AUC: 0.851
2024-11-03 23:37 - INFO - 	 PR-AUC: 0.291
2024-11-03 23:37 - INFO - 	 Best Val. Loss: 0.536
2024-11-03 23:37 - INFO - 	 Best ROC-AUC: 0.851
2024-11-03 23:37 - INFO - 	 Best PR-AUC: 0.291
2024-11-03 23:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.831
2024-11-03 23:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-03 23:37 - INFO - ---------------------------------------------
2024-11-03 23:45 - INFO - ---------------------------------------------
2024-11-03 23:45 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-03 23:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6746
2024-11-03 23:45 - INFO - 	 Train Loss: 0.140
2024-11-03 23:45 - INFO - 	 Val. Loss: 0.132
2024-11-03 23:45 - INFO - 	 ROC-AUC: 0.967
2024-11-03 23:45 - INFO - 	 PR-AUC: 0.675
2024-11-03 23:45 - INFO - 	 Best Val. Loss: 0.132
2024-11-03 23:45 - INFO - 	 Best ROC-AUC: 0.967
2024-11-03 23:45 - INFO - 	 Best PR-AUC: 0.675
2024-11-03 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-11-03 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.690
2024-11-03 23:45 - INFO - ---------------------------------------------
2024-11-03 23:53 - INFO - ---------------------------------------------
2024-11-03 23:53 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 23:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78798
2024-11-03 23:53 - INFO - 	 Train Loss: 0.103
2024-11-03 23:53 - INFO - 	 Val. Loss: 0.094
2024-11-03 23:53 - INFO - 	 ROC-AUC: 0.978
2024-11-03 23:53 - INFO - 	 PR-AUC: 0.788
2024-11-03 23:53 - INFO - 	 Best Val. Loss: 0.094
2024-11-03 23:53 - INFO - 	 Best ROC-AUC: 0.978
2024-11-03 23:53 - INFO - 	 Best PR-AUC: 0.788
2024-11-03 23:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-03 23:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-11-03 23:53 - INFO - ---------------------------------------------
2024-11-04 00:01 - INFO - ---------------------------------------------
2024-11-04 00:01 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 00:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81697
2024-11-04 00:01 - INFO - 	 Train Loss: 0.091
2024-11-04 00:01 - INFO - 	 Val. Loss: 0.078
2024-11-04 00:01 - INFO - 	 ROC-AUC: 0.981
2024-11-04 00:01 - INFO - 	 PR-AUC: 0.817
2024-11-04 00:01 - INFO - 	 Best Val. Loss: 0.078
2024-11-04 00:01 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 00:01 - INFO - 	 Best PR-AUC: 0.817
2024-11-04 00:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 00:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-11-04 00:01 - INFO - ---------------------------------------------
2024-11-04 00:09 - INFO - ---------------------------------------------
2024-11-04 00:09 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 00:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83818
2024-11-04 00:09 - INFO - 	 Train Loss: 0.083
2024-11-04 00:09 - INFO - 	 Val. Loss: 0.072
2024-11-04 00:09 - INFO - 	 ROC-AUC: 0.982
2024-11-04 00:09 - INFO - 	 PR-AUC: 0.838
2024-11-04 00:09 - INFO - 	 Best Val. Loss: 0.072
2024-11-04 00:09 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 00:09 - INFO - 	 Best PR-AUC: 0.838
2024-11-04 00:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 00:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-11-04 00:09 - INFO - ---------------------------------------------
2024-11-04 00:17 - INFO - ---------------------------------------------
2024-11-04 00:17 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 00:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85076
2024-11-04 00:17 - INFO - 	 Train Loss: 0.077
2024-11-04 00:17 - INFO - 	 Val. Loss: 0.070
2024-11-04 00:17 - INFO - 	 ROC-AUC: 0.985
2024-11-04 00:17 - INFO - 	 PR-AUC: 0.851
2024-11-04 00:17 - INFO - 	 Best Val. Loss: 0.070
2024-11-04 00:17 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 00:17 - INFO - 	 Best PR-AUC: 0.851
2024-11-04 00:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 00:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-04 00:17 - INFO - ---------------------------------------------
2024-11-04 00:25 - INFO - ---------------------------------------------
2024-11-04 00:25 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 00:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87094
2024-11-04 00:25 - INFO - 	 Train Loss: 0.072
2024-11-04 00:25 - INFO - 	 Val. Loss: 0.064
2024-11-04 00:25 - INFO - 	 ROC-AUC: 0.986
2024-11-04 00:25 - INFO - 	 PR-AUC: 0.871
2024-11-04 00:25 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 00:25 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 00:25 - INFO - 	 Best PR-AUC: 0.871
2024-11-04 00:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 00:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-04 00:25 - INFO - ---------------------------------------------
2024-11-04 00:33 - INFO - ---------------------------------------------
2024-11-04 00:33 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 00:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88278
2024-11-04 00:33 - INFO - 	 Train Loss: 0.068
2024-11-04 00:33 - INFO - 	 Val. Loss: 0.062
2024-11-04 00:33 - INFO - 	 ROC-AUC: 0.987
2024-11-04 00:33 - INFO - 	 PR-AUC: 0.883
2024-11-04 00:33 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 00:33 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 00:33 - INFO - 	 Best PR-AUC: 0.883
2024-11-04 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-04 00:33 - INFO - ---------------------------------------------
2024-11-04 00:41 - INFO - ---------------------------------------------
2024-11-04 00:41 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88498
2024-11-04 00:41 - INFO - 	 Train Loss: 0.064
2024-11-04 00:41 - INFO - 	 Val. Loss: 0.061
2024-11-04 00:41 - INFO - 	 ROC-AUC: 0.987
2024-11-04 00:41 - INFO - 	 PR-AUC: 0.885
2024-11-04 00:41 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 00:41 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 00:41 - INFO - 	 Best PR-AUC: 0.885
2024-11-04 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-04 00:41 - INFO - ---------------------------------------------
2024-11-04 00:49 - INFO - ---------------------------------------------
2024-11-04 00:49 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-04 00:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88503
2024-11-04 00:49 - INFO - 	 Train Loss: 0.062
2024-11-04 00:49 - INFO - 	 Val. Loss: 0.060
2024-11-04 00:49 - INFO - 	 ROC-AUC: 0.988
2024-11-04 00:49 - INFO - 	 PR-AUC: 0.885
2024-11-04 00:49 - INFO - 	 Best Val. Loss: 0.060
2024-11-04 00:49 - INFO - 	 Best ROC-AUC: 0.988
2024-11-04 00:49 - INFO - 	 Best PR-AUC: 0.885
2024-11-04 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-04 00:49 - INFO - ---------------------------------------------
2024-11-04 00:51 - INFO - Fit the preprocessing pipeline
2024-11-04 00:51 - INFO - Training using device: cuda
2024-11-04 00:51 - INFO - Creating generators
2024-11-04 00:51 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 00:51 - INFO - * Model:
2024-11-04 00:51 - INFO - * -----------
2024-11-04 00:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 00:51 - INFO - * -----------
2024-11-04 00:59 - INFO - ---------------------------------------------
2024-11-04 00:59 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 00:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3304
2024-11-04 00:59 - INFO - 	 Train Loss: 0.238
2024-11-04 00:59 - INFO - 	 Val. Loss: 0.398
2024-11-04 00:59 - INFO - 	 ROC-AUC: 0.861
2024-11-04 00:59 - INFO - 	 PR-AUC: 0.330
2024-11-04 00:59 - INFO - 	 Best Val. Loss: 0.398
2024-11-04 00:59 - INFO - 	 Best ROC-AUC: 0.861
2024-11-04 00:59 - INFO - 	 Best PR-AUC: 0.330
2024-11-04 00:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.857
2024-11-04 00:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.395
2024-11-04 00:59 - INFO - ---------------------------------------------
2024-11-04 01:07 - INFO - ---------------------------------------------
2024-11-04 01:07 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-04 01:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64901
2024-11-04 01:07 - INFO - 	 Train Loss: 0.135
2024-11-04 01:07 - INFO - 	 Val. Loss: 0.171
2024-11-04 01:07 - INFO - 	 ROC-AUC: 0.956
2024-11-04 01:07 - INFO - 	 PR-AUC: 0.649
2024-11-04 01:07 - INFO - 	 Best Val. Loss: 0.171
2024-11-04 01:07 - INFO - 	 Best ROC-AUC: 0.956
2024-11-04 01:07 - INFO - 	 Best PR-AUC: 0.649
2024-11-04 01:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-04 01:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.675
2024-11-04 01:07 - INFO - ---------------------------------------------
2024-11-04 01:15 - INFO - ---------------------------------------------
2024-11-04 01:15 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 01:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80157
2024-11-04 01:15 - INFO - 	 Train Loss: 0.095
2024-11-04 01:15 - INFO - 	 Val. Loss: 0.093
2024-11-04 01:15 - INFO - 	 ROC-AUC: 0.979
2024-11-04 01:15 - INFO - 	 PR-AUC: 0.802
2024-11-04 01:15 - INFO - 	 Best Val. Loss: 0.093
2024-11-04 01:15 - INFO - 	 Best ROC-AUC: 0.979
2024-11-04 01:15 - INFO - 	 Best PR-AUC: 0.802
2024-11-04 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-04 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-11-04 01:15 - INFO - ---------------------------------------------
2024-11-04 01:23 - INFO - ---------------------------------------------
2024-11-04 01:23 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 01:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83055
2024-11-04 01:23 - INFO - 	 Train Loss: 0.083
2024-11-04 01:23 - INFO - 	 Val. Loss: 0.082
2024-11-04 01:23 - INFO - 	 ROC-AUC: 0.983
2024-11-04 01:23 - INFO - 	 PR-AUC: 0.831
2024-11-04 01:23 - INFO - 	 Best Val. Loss: 0.082
2024-11-04 01:23 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 01:23 - INFO - 	 Best PR-AUC: 0.831
2024-11-04 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-04 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-04 01:23 - INFO - ---------------------------------------------
2024-11-04 01:31 - INFO - ---------------------------------------------
2024-11-04 01:31 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 01:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8441
2024-11-04 01:31 - INFO - 	 Train Loss: 0.076
2024-11-04 01:31 - INFO - 	 Val. Loss: 0.071
2024-11-04 01:31 - INFO - 	 ROC-AUC: 0.984
2024-11-04 01:31 - INFO - 	 PR-AUC: 0.844
2024-11-04 01:31 - INFO - 	 Best Val. Loss: 0.071
2024-11-04 01:31 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 01:31 - INFO - 	 Best PR-AUC: 0.844
2024-11-04 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-04 01:31 - INFO - ---------------------------------------------
2024-11-04 01:39 - INFO - ---------------------------------------------
2024-11-04 01:39 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 01:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8616
2024-11-04 01:39 - INFO - 	 Train Loss: 0.072
2024-11-04 01:39 - INFO - 	 Val. Loss: 0.069
2024-11-04 01:39 - INFO - 	 ROC-AUC: 0.985
2024-11-04 01:39 - INFO - 	 PR-AUC: 0.862
2024-11-04 01:39 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 01:39 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 01:39 - INFO - 	 Best PR-AUC: 0.862
2024-11-04 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-04 01:39 - INFO - ---------------------------------------------
2024-11-04 01:47 - INFO - ---------------------------------------------
2024-11-04 01:47 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 01:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86292
2024-11-04 01:47 - INFO - 	 Train Loss: 0.070
2024-11-04 01:47 - INFO - 	 Val. Loss: 0.066
2024-11-04 01:47 - INFO - 	 ROC-AUC: 0.985
2024-11-04 01:47 - INFO - 	 PR-AUC: 0.863
2024-11-04 01:47 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 01:47 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 01:47 - INFO - 	 Best PR-AUC: 0.863
2024-11-04 01:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 01:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-04 01:47 - INFO - ---------------------------------------------
2024-11-04 01:55 - INFO - ---------------------------------------------
2024-11-04 01:55 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 01:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87256
2024-11-04 01:55 - INFO - 	 Train Loss: 0.067
2024-11-04 01:55 - INFO - 	 Val. Loss: 0.065
2024-11-04 01:55 - INFO - 	 ROC-AUC: 0.986
2024-11-04 01:55 - INFO - 	 PR-AUC: 0.873
2024-11-04 01:55 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 01:55 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 01:55 - INFO - 	 Best PR-AUC: 0.873
2024-11-04 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-04 01:55 - INFO - ---------------------------------------------
2024-11-04 02:03 - INFO - ---------------------------------------------
2024-11-04 02:03 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 02:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87369
2024-11-04 02:03 - INFO - 	 Train Loss: 0.063
2024-11-04 02:03 - INFO - 	 Val. Loss: 0.064
2024-11-04 02:03 - INFO - 	 ROC-AUC: 0.986
2024-11-04 02:03 - INFO - 	 PR-AUC: 0.874
2024-11-04 02:03 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 02:03 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 02:03 - INFO - 	 Best PR-AUC: 0.874
2024-11-04 02:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 02:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-04 02:03 - INFO - ---------------------------------------------
2024-11-04 02:11 - INFO - ---------------------------------------------
2024-11-04 02:11 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-04 02:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88012
2024-11-04 02:11 - INFO - 	 Train Loss: 0.062
2024-11-04 02:11 - INFO - 	 Val. Loss: 0.063
2024-11-04 02:11 - INFO - 	 ROC-AUC: 0.986
2024-11-04 02:11 - INFO - 	 PR-AUC: 0.880
2024-11-04 02:11 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 02:11 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 02:11 - INFO - 	 Best PR-AUC: 0.880
2024-11-04 02:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 02:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-04 02:11 - INFO - ---------------------------------------------
2024-11-04 02:14 - INFO - Fit the preprocessing pipeline
2024-11-04 02:14 - INFO - Training using device: cuda
2024-11-04 02:14 - INFO - Creating generators
2024-11-04 02:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 02:14 - INFO - * Model:
2024-11-04 02:14 - INFO - * -----------
2024-11-04 02:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 02:14 - INFO - * -----------
2024-11-04 02:22 - INFO - ---------------------------------------------
2024-11-04 02:22 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 02:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24785
2024-11-04 02:22 - INFO - 	 Train Loss: 0.234
2024-11-04 02:22 - INFO - 	 Val. Loss: 0.393
2024-11-04 02:22 - INFO - 	 ROC-AUC: 0.816
2024-11-04 02:22 - INFO - 	 PR-AUC: 0.248
2024-11-04 02:22 - INFO - 	 Best Val. Loss: 0.393
2024-11-04 02:22 - INFO - 	 Best ROC-AUC: 0.816
2024-11-04 02:22 - INFO - 	 Best PR-AUC: 0.248
2024-11-04 02:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.787
2024-11-04 02:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.291
2024-11-04 02:22 - INFO - ---------------------------------------------
2024-11-04 02:30 - INFO - ---------------------------------------------
2024-11-04 02:30 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 02:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63702
2024-11-04 02:30 - INFO - 	 Train Loss: 0.133
2024-11-04 02:30 - INFO - 	 Val. Loss: 0.186
2024-11-04 02:30 - INFO - 	 ROC-AUC: 0.959
2024-11-04 02:30 - INFO - 	 PR-AUC: 0.637
2024-11-04 02:30 - INFO - 	 Best Val. Loss: 0.186
2024-11-04 02:30 - INFO - 	 Best ROC-AUC: 0.959
2024-11-04 02:30 - INFO - 	 Best PR-AUC: 0.637
2024-11-04 02:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-04 02:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.665
2024-11-04 02:30 - INFO - ---------------------------------------------
2024-11-04 02:38 - INFO - ---------------------------------------------
2024-11-04 02:38 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 02:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79038
2024-11-04 02:38 - INFO - 	 Train Loss: 0.094
2024-11-04 02:38 - INFO - 	 Val. Loss: 0.096
2024-11-04 02:38 - INFO - 	 ROC-AUC: 0.977
2024-11-04 02:38 - INFO - 	 PR-AUC: 0.790
2024-11-04 02:38 - INFO - 	 Best Val. Loss: 0.096
2024-11-04 02:38 - INFO - 	 Best ROC-AUC: 0.977
2024-11-04 02:38 - INFO - 	 Best PR-AUC: 0.790
2024-11-04 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-04 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-11-04 02:38 - INFO - ---------------------------------------------
2024-11-04 02:46 - INFO - ---------------------------------------------
2024-11-04 02:46 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 02:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83832
2024-11-04 02:46 - INFO - 	 Train Loss: 0.085
2024-11-04 02:46 - INFO - 	 Val. Loss: 0.076
2024-11-04 02:46 - INFO - 	 ROC-AUC: 0.983
2024-11-04 02:46 - INFO - 	 PR-AUC: 0.838
2024-11-04 02:46 - INFO - 	 Best Val. Loss: 0.076
2024-11-04 02:46 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 02:46 - INFO - 	 Best PR-AUC: 0.838
2024-11-04 02:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-04 02:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-11-04 02:46 - INFO - ---------------------------------------------
2024-11-04 02:54 - INFO - ---------------------------------------------
2024-11-04 02:54 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 02:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85061
2024-11-04 02:54 - INFO - 	 Train Loss: 0.079
2024-11-04 02:54 - INFO - 	 Val. Loss: 0.071
2024-11-04 02:54 - INFO - 	 ROC-AUC: 0.984
2024-11-04 02:54 - INFO - 	 PR-AUC: 0.851
2024-11-04 02:54 - INFO - 	 Best Val. Loss: 0.071
2024-11-04 02:54 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 02:54 - INFO - 	 Best PR-AUC: 0.851
2024-11-04 02:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 02:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-04 02:54 - INFO - ---------------------------------------------
2024-11-04 03:02 - INFO - ---------------------------------------------
2024-11-04 03:02 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-04 03:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85831
2024-11-04 03:02 - INFO - 	 Train Loss: 0.073
2024-11-04 03:02 - INFO - 	 Val. Loss: 0.071
2024-11-04 03:02 - INFO - 	 ROC-AUC: 0.984
2024-11-04 03:02 - INFO - 	 PR-AUC: 0.858
2024-11-04 03:02 - INFO - 	 Best Val. Loss: 0.071
2024-11-04 03:02 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 03:02 - INFO - 	 Best PR-AUC: 0.858
2024-11-04 03:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-04 03:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-04 03:02 - INFO - ---------------------------------------------
2024-11-04 03:10 - INFO - ---------------------------------------------
2024-11-04 03:10 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-04 03:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85903
2024-11-04 03:10 - INFO - 	 Train Loss: 0.070
2024-11-04 03:10 - INFO - 	 Val. Loss: 0.067
2024-11-04 03:10 - INFO - 	 ROC-AUC: 0.985
2024-11-04 03:10 - INFO - 	 PR-AUC: 0.859
2024-11-04 03:10 - INFO - 	 Best Val. Loss: 0.067
2024-11-04 03:10 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 03:10 - INFO - 	 Best PR-AUC: 0.859
2024-11-04 03:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 03:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-04 03:10 - INFO - ---------------------------------------------
2024-11-04 03:18 - INFO - ---------------------------------------------
2024-11-04 03:18 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 03:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87006
2024-11-04 03:18 - INFO - 	 Train Loss: 0.068
2024-11-04 03:18 - INFO - 	 Val. Loss: 0.066
2024-11-04 03:18 - INFO - 	 ROC-AUC: 0.985
2024-11-04 03:18 - INFO - 	 PR-AUC: 0.870
2024-11-04 03:18 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 03:18 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 03:18 - INFO - 	 Best PR-AUC: 0.870
2024-11-04 03:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 03:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-04 03:18 - INFO - ---------------------------------------------
2024-11-04 03:26 - INFO - ---------------------------------------------
2024-11-04 03:26 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 03:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87429
2024-11-04 03:26 - INFO - 	 Train Loss: 0.066
2024-11-04 03:26 - INFO - 	 Val. Loss: 0.063
2024-11-04 03:26 - INFO - 	 ROC-AUC: 0.987
2024-11-04 03:26 - INFO - 	 PR-AUC: 0.874
2024-11-04 03:26 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 03:26 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 03:26 - INFO - 	 Best PR-AUC: 0.874
2024-11-04 03:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 03:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-04 03:26 - INFO - ---------------------------------------------
2024-11-04 03:34 - INFO - ---------------------------------------------
2024-11-04 03:34 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-04 03:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87996
2024-11-04 03:34 - INFO - 	 Train Loss: 0.063
2024-11-04 03:34 - INFO - 	 Val. Loss: 0.060
2024-11-04 03:34 - INFO - 	 ROC-AUC: 0.988
2024-11-04 03:34 - INFO - 	 PR-AUC: 0.880
2024-11-04 03:34 - INFO - 	 Best Val. Loss: 0.060
2024-11-04 03:34 - INFO - 	 Best ROC-AUC: 0.988
2024-11-04 03:34 - INFO - 	 Best PR-AUC: 0.880
2024-11-04 03:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 03:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-04 03:34 - INFO - ---------------------------------------------
2024-11-04 03:36 - INFO - Fit the preprocessing pipeline
2024-11-04 03:36 - INFO - Training using device: cuda
2024-11-04 03:36 - INFO - Creating generators
2024-11-04 03:36 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 03:36 - INFO - * Model:
2024-11-04 03:36 - INFO - * -----------
2024-11-04 03:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 03:36 - INFO - * -----------
2024-11-04 03:44 - INFO - ---------------------------------------------
2024-11-04 03:44 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 03:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32825
2024-11-04 03:44 - INFO - 	 Train Loss: 0.224
2024-11-04 03:44 - INFO - 	 Val. Loss: 0.423
2024-11-04 03:44 - INFO - 	 ROC-AUC: 0.872
2024-11-04 03:44 - INFO - 	 PR-AUC: 0.328
2024-11-04 03:44 - INFO - 	 Best Val. Loss: 0.423
2024-11-04 03:44 - INFO - 	 Best ROC-AUC: 0.872
2024-11-04 03:44 - INFO - 	 Best PR-AUC: 0.328
2024-11-04 03:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.868
2024-11-04 03:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.408
2024-11-04 03:44 - INFO - ---------------------------------------------
2024-11-04 03:52 - INFO - ---------------------------------------------
2024-11-04 03:52 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 03:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7051
2024-11-04 03:52 - INFO - 	 Train Loss: 0.125
2024-11-04 03:52 - INFO - 	 Val. Loss: 0.161
2024-11-04 03:52 - INFO - 	 ROC-AUC: 0.968
2024-11-04 03:52 - INFO - 	 PR-AUC: 0.705
2024-11-04 03:52 - INFO - 	 Best Val. Loss: 0.161
2024-11-04 03:52 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 03:52 - INFO - 	 Best PR-AUC: 0.705
2024-11-04 03:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-04 03:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-11-04 03:52 - INFO - ---------------------------------------------
2024-11-04 04:00 - INFO - ---------------------------------------------
2024-11-04 04:00 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 04:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80851
2024-11-04 04:00 - INFO - 	 Train Loss: 0.095
2024-11-04 04:00 - INFO - 	 Val. Loss: 0.086
2024-11-04 04:00 - INFO - 	 ROC-AUC: 0.979
2024-11-04 04:00 - INFO - 	 PR-AUC: 0.809
2024-11-04 04:00 - INFO - 	 Best Val. Loss: 0.086
2024-11-04 04:00 - INFO - 	 Best ROC-AUC: 0.979
2024-11-04 04:00 - INFO - 	 Best PR-AUC: 0.809
2024-11-04 04:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-04 04:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-11-04 04:00 - INFO - ---------------------------------------------
2024-11-04 04:08 - INFO - ---------------------------------------------
2024-11-04 04:08 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 04:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81938
2024-11-04 04:08 - INFO - 	 Train Loss: 0.083
2024-11-04 04:08 - INFO - 	 Val. Loss: 0.089
2024-11-04 04:08 - INFO - 	 ROC-AUC: 0.978
2024-11-04 04:08 - INFO - 	 PR-AUC: 0.819
2024-11-04 04:08 - INFO - 	 Best Val. Loss: 0.086
2024-11-04 04:08 - INFO - 	 Best ROC-AUC: 0.979
2024-11-04 04:08 - INFO - 	 Best PR-AUC: 0.819
2024-11-04 04:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-04 04:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-11-04 04:08 - INFO - ---------------------------------------------
2024-11-04 04:16 - INFO - ---------------------------------------------
2024-11-04 04:16 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-04 04:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8618
2024-11-04 04:16 - INFO - 	 Train Loss: 0.077
2024-11-04 04:16 - INFO - 	 Val. Loss: 0.070
2024-11-04 04:16 - INFO - 	 ROC-AUC: 0.984
2024-11-04 04:16 - INFO - 	 PR-AUC: 0.862
2024-11-04 04:16 - INFO - 	 Best Val. Loss: 0.070
2024-11-04 04:16 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 04:16 - INFO - 	 Best PR-AUC: 0.862
2024-11-04 04:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 04:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-04 04:16 - INFO - ---------------------------------------------
2024-11-04 04:24 - INFO - ---------------------------------------------
2024-11-04 04:24 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-04 04:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8639
2024-11-04 04:24 - INFO - 	 Train Loss: 0.073
2024-11-04 04:24 - INFO - 	 Val. Loss: 0.068
2024-11-04 04:24 - INFO - 	 ROC-AUC: 0.984
2024-11-04 04:24 - INFO - 	 PR-AUC: 0.864
2024-11-04 04:24 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 04:24 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 04:24 - INFO - 	 Best PR-AUC: 0.864
2024-11-04 04:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 04:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-04 04:24 - INFO - ---------------------------------------------
2024-11-04 04:32 - INFO - ---------------------------------------------
2024-11-04 04:32 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-04 04:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86918
2024-11-04 04:32 - INFO - 	 Train Loss: 0.070
2024-11-04 04:32 - INFO - 	 Val. Loss: 0.064
2024-11-04 04:32 - INFO - 	 ROC-AUC: 0.986
2024-11-04 04:32 - INFO - 	 PR-AUC: 0.869
2024-11-04 04:32 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 04:32 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 04:32 - INFO - 	 Best PR-AUC: 0.869
2024-11-04 04:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 04:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-04 04:32 - INFO - ---------------------------------------------
2024-11-04 04:40 - INFO - ---------------------------------------------
2024-11-04 04:40 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 04:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88264
2024-11-04 04:40 - INFO - 	 Train Loss: 0.066
2024-11-04 04:40 - INFO - 	 Val. Loss: 0.061
2024-11-04 04:40 - INFO - 	 ROC-AUC: 0.987
2024-11-04 04:40 - INFO - 	 PR-AUC: 0.883
2024-11-04 04:40 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 04:40 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 04:40 - INFO - 	 Best PR-AUC: 0.883
2024-11-04 04:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 04:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-04 04:40 - INFO - ---------------------------------------------
2024-11-04 04:49 - INFO - ---------------------------------------------
2024-11-04 04:49 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-04 04:49 - INFO - 	 Train Loss: 0.063
2024-11-04 04:49 - INFO - 	 Val. Loss: 0.065
2024-11-04 04:49 - INFO - 	 ROC-AUC: 0.986
2024-11-04 04:49 - INFO - 	 PR-AUC: 0.872
2024-11-04 04:49 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 04:49 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 04:49 - INFO - 	 Best PR-AUC: 0.883
2024-11-04 04:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 04:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-04 04:49 - INFO - ---------------------------------------------
2024-11-04 04:57 - INFO - ---------------------------------------------
2024-11-04 04:57 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-04 04:57 - INFO - 	 Train Loss: 0.062
2024-11-04 04:57 - INFO - 	 Val. Loss: 0.064
2024-11-04 04:57 - INFO - 	 ROC-AUC: 0.987
2024-11-04 04:57 - INFO - 	 PR-AUC: 0.870
2024-11-04 04:57 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 04:57 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 04:57 - INFO - 	 Best PR-AUC: 0.883
2024-11-04 04:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 04:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-04 04:57 - INFO - ---------------------------------------------
2024-11-04 04:59 - INFO - Fit the preprocessing pipeline
2024-11-04 04:59 - INFO - Training using device: cuda
2024-11-04 04:59 - INFO - Creating generators
2024-11-04 04:59 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 04:59 - INFO - * Model:
2024-11-04 04:59 - INFO - * -----------
2024-11-04 04:59 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 04:59 - INFO - * -----------
2024-11-04 05:07 - INFO - ---------------------------------------------
2024-11-04 05:07 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 05:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29086
2024-11-04 05:07 - INFO - 	 Train Loss: 0.230
2024-11-04 05:07 - INFO - 	 Val. Loss: 0.485
2024-11-04 05:07 - INFO - 	 ROC-AUC: 0.854
2024-11-04 05:07 - INFO - 	 PR-AUC: 0.291
2024-11-04 05:07 - INFO - 	 Best Val. Loss: 0.485
2024-11-04 05:07 - INFO - 	 Best ROC-AUC: 0.854
2024-11-04 05:07 - INFO - 	 Best PR-AUC: 0.291
2024-11-04 05:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.851
2024-11-04 05:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.355
2024-11-04 05:07 - INFO - ---------------------------------------------
2024-11-04 05:15 - INFO - ---------------------------------------------
2024-11-04 05:15 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-04 05:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72075
2024-11-04 05:15 - INFO - 	 Train Loss: 0.129
2024-11-04 05:15 - INFO - 	 Val. Loss: 0.111
2024-11-04 05:15 - INFO - 	 ROC-AUC: 0.970
2024-11-04 05:15 - INFO - 	 PR-AUC: 0.721
2024-11-04 05:15 - INFO - 	 Best Val. Loss: 0.111
2024-11-04 05:15 - INFO - 	 Best ROC-AUC: 0.970
2024-11-04 05:15 - INFO - 	 Best PR-AUC: 0.721
2024-11-04 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-04 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.720
2024-11-04 05:15 - INFO - ---------------------------------------------
2024-11-04 05:23 - INFO - ---------------------------------------------
2024-11-04 05:23 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 05:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79686
2024-11-04 05:23 - INFO - 	 Train Loss: 0.094
2024-11-04 05:23 - INFO - 	 Val. Loss: 0.084
2024-11-04 05:23 - INFO - 	 ROC-AUC: 0.979
2024-11-04 05:23 - INFO - 	 PR-AUC: 0.797
2024-11-04 05:23 - INFO - 	 Best Val. Loss: 0.084
2024-11-04 05:23 - INFO - 	 Best ROC-AUC: 0.979
2024-11-04 05:23 - INFO - 	 Best PR-AUC: 0.797
2024-11-04 05:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-04 05:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-11-04 05:23 - INFO - ---------------------------------------------
2024-11-04 05:31 - INFO - ---------------------------------------------
2024-11-04 05:31 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 05:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82816
2024-11-04 05:31 - INFO - 	 Train Loss: 0.085
2024-11-04 05:31 - INFO - 	 Val. Loss: 0.075
2024-11-04 05:31 - INFO - 	 ROC-AUC: 0.981
2024-11-04 05:31 - INFO - 	 PR-AUC: 0.828
2024-11-04 05:31 - INFO - 	 Best Val. Loss: 0.075
2024-11-04 05:31 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 05:31 - INFO - 	 Best PR-AUC: 0.828
2024-11-04 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-04 05:31 - INFO - ---------------------------------------------
2024-11-04 05:39 - INFO - ---------------------------------------------
2024-11-04 05:39 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 05:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.857
2024-11-04 05:39 - INFO - 	 Train Loss: 0.078
2024-11-04 05:39 - INFO - 	 Val. Loss: 0.067
2024-11-04 05:39 - INFO - 	 ROC-AUC: 0.985
2024-11-04 05:39 - INFO - 	 PR-AUC: 0.857
2024-11-04 05:39 - INFO - 	 Best Val. Loss: 0.067
2024-11-04 05:39 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 05:39 - INFO - 	 Best PR-AUC: 0.857
2024-11-04 05:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 05:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-04 05:39 - INFO - ---------------------------------------------
2024-11-04 05:47 - INFO - ---------------------------------------------
2024-11-04 05:47 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 05:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86649
2024-11-04 05:47 - INFO - 	 Train Loss: 0.073
2024-11-04 05:47 - INFO - 	 Val. Loss: 0.065
2024-11-04 05:47 - INFO - 	 ROC-AUC: 0.986
2024-11-04 05:47 - INFO - 	 PR-AUC: 0.866
2024-11-04 05:47 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 05:47 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 05:47 - INFO - 	 Best PR-AUC: 0.866
2024-11-04 05:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 05:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-04 05:47 - INFO - ---------------------------------------------
2024-11-04 05:55 - INFO - ---------------------------------------------
2024-11-04 05:55 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-04 05:55 - INFO - 	 Train Loss: 0.069
2024-11-04 05:55 - INFO - 	 Val. Loss: 0.067
2024-11-04 05:55 - INFO - 	 ROC-AUC: 0.986
2024-11-04 05:55 - INFO - 	 PR-AUC: 0.866
2024-11-04 05:55 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 05:55 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 05:55 - INFO - 	 Best PR-AUC: 0.866
2024-11-04 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-04 05:55 - INFO - ---------------------------------------------
2024-11-04 06:03 - INFO - ---------------------------------------------
2024-11-04 06:03 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-04 06:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86928
2024-11-04 06:03 - INFO - 	 Train Loss: 0.066
2024-11-04 06:03 - INFO - 	 Val. Loss: 0.066
2024-11-04 06:03 - INFO - 	 ROC-AUC: 0.986
2024-11-04 06:03 - INFO - 	 PR-AUC: 0.869
2024-11-04 06:03 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 06:03 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 06:03 - INFO - 	 Best PR-AUC: 0.869
2024-11-04 06:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 06:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-04 06:03 - INFO - ---------------------------------------------
2024-11-04 06:11 - INFO - ---------------------------------------------
2024-11-04 06:11 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 06:11 - INFO - 	 Train Loss: 0.062
2024-11-04 06:11 - INFO - 	 Val. Loss: 0.065
2024-11-04 06:11 - INFO - 	 ROC-AUC: 0.986
2024-11-04 06:11 - INFO - 	 PR-AUC: 0.867
2024-11-04 06:11 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 06:11 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 06:11 - INFO - 	 Best PR-AUC: 0.869
2024-11-04 06:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 06:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-04 06:11 - INFO - ---------------------------------------------
2024-11-04 06:19 - INFO - ---------------------------------------------
2024-11-04 06:19 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-04 06:19 - INFO - 	 Train Loss: 0.061
2024-11-04 06:19 - INFO - 	 Val. Loss: 0.066
2024-11-04 06:19 - INFO - 	 ROC-AUC: 0.986
2024-11-04 06:19 - INFO - 	 PR-AUC: 0.865
2024-11-04 06:19 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 06:19 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 06:19 - INFO - 	 Best PR-AUC: 0.869
2024-11-04 06:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 06:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-04 06:19 - INFO - ---------------------------------------------
2024-11-04 06:21 - INFO - Fit the preprocessing pipeline
2024-11-04 06:21 - INFO - Training using device: cuda
2024-11-04 06:21 - INFO - Creating generators
2024-11-04 06:21 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 06:21 - INFO - * Model:
2024-11-04 06:21 - INFO - * -----------
2024-11-04 06:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 06:21 - INFO - * -----------
2024-11-04 06:29 - INFO - ---------------------------------------------
2024-11-04 06:29 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 06:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37894
2024-11-04 06:29 - INFO - 	 Train Loss: 0.223
2024-11-04 06:29 - INFO - 	 Val. Loss: 0.336
2024-11-04 06:29 - INFO - 	 ROC-AUC: 0.887
2024-11-04 06:29 - INFO - 	 PR-AUC: 0.379
2024-11-04 06:29 - INFO - 	 Best Val. Loss: 0.336
2024-11-04 06:29 - INFO - 	 Best ROC-AUC: 0.887
2024-11-04 06:29 - INFO - 	 Best PR-AUC: 0.379
2024-11-04 06:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-04 06:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-11-04 06:29 - INFO - ---------------------------------------------
2024-11-04 06:37 - INFO - ---------------------------------------------
2024-11-04 06:37 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-04 06:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66835
2024-11-04 06:37 - INFO - 	 Train Loss: 0.129
2024-11-04 06:37 - INFO - 	 Val. Loss: 0.161
2024-11-04 06:37 - INFO - 	 ROC-AUC: 0.961
2024-11-04 06:37 - INFO - 	 PR-AUC: 0.668
2024-11-04 06:37 - INFO - 	 Best Val. Loss: 0.161
2024-11-04 06:37 - INFO - 	 Best ROC-AUC: 0.961
2024-11-04 06:37 - INFO - 	 Best PR-AUC: 0.668
2024-11-04 06:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-11-04 06:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.651
2024-11-04 06:37 - INFO - ---------------------------------------------
2024-11-04 06:45 - INFO - ---------------------------------------------
2024-11-04 06:45 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78643
2024-11-04 06:45 - INFO - 	 Train Loss: 0.101
2024-11-04 06:45 - INFO - 	 Val. Loss: 0.100
2024-11-04 06:45 - INFO - 	 ROC-AUC: 0.978
2024-11-04 06:45 - INFO - 	 PR-AUC: 0.786
2024-11-04 06:45 - INFO - 	 Best Val. Loss: 0.100
2024-11-04 06:45 - INFO - 	 Best ROC-AUC: 0.978
2024-11-04 06:45 - INFO - 	 Best PR-AUC: 0.786
2024-11-04 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-04 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-11-04 06:45 - INFO - ---------------------------------------------
2024-11-04 06:54 - INFO - ---------------------------------------------
2024-11-04 06:54 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 06:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82055
2024-11-04 06:54 - INFO - 	 Train Loss: 0.090
2024-11-04 06:54 - INFO - 	 Val. Loss: 0.084
2024-11-04 06:54 - INFO - 	 ROC-AUC: 0.982
2024-11-04 06:54 - INFO - 	 PR-AUC: 0.821
2024-11-04 06:54 - INFO - 	 Best Val. Loss: 0.084
2024-11-04 06:54 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 06:54 - INFO - 	 Best PR-AUC: 0.821
2024-11-04 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-04 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-11-04 06:54 - INFO - ---------------------------------------------
2024-11-04 07:02 - INFO - ---------------------------------------------
2024-11-04 07:02 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 07:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84033
2024-11-04 07:02 - INFO - 	 Train Loss: 0.083
2024-11-04 07:02 - INFO - 	 Val. Loss: 0.081
2024-11-04 07:02 - INFO - 	 ROC-AUC: 0.985
2024-11-04 07:02 - INFO - 	 PR-AUC: 0.840
2024-11-04 07:02 - INFO - 	 Best Val. Loss: 0.081
2024-11-04 07:02 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 07:02 - INFO - 	 Best PR-AUC: 0.840
2024-11-04 07:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 07:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-04 07:02 - INFO - ---------------------------------------------
2024-11-04 07:10 - INFO - ---------------------------------------------
2024-11-04 07:10 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-04 07:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8474
2024-11-04 07:10 - INFO - 	 Train Loss: 0.076
2024-11-04 07:10 - INFO - 	 Val. Loss: 0.068
2024-11-04 07:10 - INFO - 	 ROC-AUC: 0.985
2024-11-04 07:10 - INFO - 	 PR-AUC: 0.847
2024-11-04 07:10 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 07:10 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 07:10 - INFO - 	 Best PR-AUC: 0.847
2024-11-04 07:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 07:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-04 07:10 - INFO - ---------------------------------------------
2024-11-04 07:18 - INFO - ---------------------------------------------
2024-11-04 07:18 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 07:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87257
2024-11-04 07:18 - INFO - 	 Train Loss: 0.072
2024-11-04 07:18 - INFO - 	 Val. Loss: 0.064
2024-11-04 07:18 - INFO - 	 ROC-AUC: 0.987
2024-11-04 07:18 - INFO - 	 PR-AUC: 0.873
2024-11-04 07:18 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 07:18 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 07:18 - INFO - 	 Best PR-AUC: 0.873
2024-11-04 07:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 07:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-04 07:18 - INFO - ---------------------------------------------
2024-11-04 07:26 - INFO - ---------------------------------------------
2024-11-04 07:26 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 07:26 - INFO - 	 Train Loss: 0.068
2024-11-04 07:26 - INFO - 	 Val. Loss: 0.067
2024-11-04 07:26 - INFO - 	 ROC-AUC: 0.986
2024-11-04 07:26 - INFO - 	 PR-AUC: 0.867
2024-11-04 07:26 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 07:26 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 07:26 - INFO - 	 Best PR-AUC: 0.873
2024-11-04 07:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 07:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-04 07:26 - INFO - ---------------------------------------------
2024-11-04 07:34 - INFO - ---------------------------------------------
2024-11-04 07:34 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87912
2024-11-04 07:34 - INFO - 	 Train Loss: 0.066
2024-11-04 07:34 - INFO - 	 Val. Loss: 0.062
2024-11-04 07:34 - INFO - 	 ROC-AUC: 0.987
2024-11-04 07:34 - INFO - 	 PR-AUC: 0.879
2024-11-04 07:34 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 07:34 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 07:34 - INFO - 	 Best PR-AUC: 0.879
2024-11-04 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-04 07:34 - INFO - ---------------------------------------------
2024-11-04 07:42 - INFO - ---------------------------------------------
2024-11-04 07:42 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-04 07:42 - INFO - 	 Train Loss: 0.064
2024-11-04 07:42 - INFO - 	 Val. Loss: 0.061
2024-11-04 07:42 - INFO - 	 ROC-AUC: 0.987
2024-11-04 07:42 - INFO - 	 PR-AUC: 0.878
2024-11-04 07:42 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 07:42 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 07:42 - INFO - 	 Best PR-AUC: 0.879
2024-11-04 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-04 07:42 - INFO - ---------------------------------------------
2024-11-04 07:44 - INFO - Fit the preprocessing pipeline
2024-11-04 07:44 - INFO - Training using device: cuda
2024-11-04 07:44 - INFO - Creating generators
2024-11-04 07:44 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 07:44 - INFO - * Model:
2024-11-04 07:44 - INFO - * -----------
2024-11-04 07:44 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 07:44 - INFO - * -----------
2024-11-04 07:52 - INFO - ---------------------------------------------
2024-11-04 07:52 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 07:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31826
2024-11-04 07:52 - INFO - 	 Train Loss: 0.230
2024-11-04 07:52 - INFO - 	 Val. Loss: 0.283
2024-11-04 07:52 - INFO - 	 ROC-AUC: 0.864
2024-11-04 07:52 - INFO - 	 PR-AUC: 0.318
2024-11-04 07:52 - INFO - 	 Best Val. Loss: 0.283
2024-11-04 07:52 - INFO - 	 Best ROC-AUC: 0.864
2024-11-04 07:52 - INFO - 	 Best PR-AUC: 0.318
2024-11-04 07:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.863
2024-11-04 07:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-11-04 07:52 - INFO - ---------------------------------------------
2024-11-04 08:00 - INFO - ---------------------------------------------
2024-11-04 08:00 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71511
2024-11-04 08:00 - INFO - 	 Train Loss: 0.130
2024-11-04 08:00 - INFO - 	 Val. Loss: 0.107
2024-11-04 08:00 - INFO - 	 ROC-AUC: 0.971
2024-11-04 08:00 - INFO - 	 PR-AUC: 0.715
2024-11-04 08:00 - INFO - 	 Best Val. Loss: 0.107
2024-11-04 08:00 - INFO - 	 Best ROC-AUC: 0.971
2024-11-04 08:00 - INFO - 	 Best PR-AUC: 0.715
2024-11-04 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-04 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.742
2024-11-04 08:00 - INFO - ---------------------------------------------
2024-11-04 08:08 - INFO - ---------------------------------------------
2024-11-04 08:08 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 08:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8101
2024-11-04 08:08 - INFO - 	 Train Loss: 0.095
2024-11-04 08:08 - INFO - 	 Val. Loss: 0.089
2024-11-04 08:08 - INFO - 	 ROC-AUC: 0.981
2024-11-04 08:08 - INFO - 	 PR-AUC: 0.810
2024-11-04 08:08 - INFO - 	 Best Val. Loss: 0.089
2024-11-04 08:08 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 08:08 - INFO - 	 Best PR-AUC: 0.810
2024-11-04 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-04 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-04 08:08 - INFO - ---------------------------------------------
2024-11-04 08:16 - INFO - ---------------------------------------------
2024-11-04 08:16 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 08:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8189
2024-11-04 08:16 - INFO - 	 Train Loss: 0.085
2024-11-04 08:16 - INFO - 	 Val. Loss: 0.076
2024-11-04 08:16 - INFO - 	 ROC-AUC: 0.982
2024-11-04 08:16 - INFO - 	 PR-AUC: 0.819
2024-11-04 08:16 - INFO - 	 Best Val. Loss: 0.076
2024-11-04 08:16 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 08:16 - INFO - 	 Best PR-AUC: 0.819
2024-11-04 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-04 08:16 - INFO - ---------------------------------------------
2024-11-04 08:24 - INFO - ---------------------------------------------
2024-11-04 08:24 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-04 08:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84832
2024-11-04 08:24 - INFO - 	 Train Loss: 0.080
2024-11-04 08:24 - INFO - 	 Val. Loss: 0.068
2024-11-04 08:24 - INFO - 	 ROC-AUC: 0.985
2024-11-04 08:24 - INFO - 	 PR-AUC: 0.848
2024-11-04 08:24 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 08:24 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 08:24 - INFO - 	 Best PR-AUC: 0.848
2024-11-04 08:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 08:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-04 08:24 - INFO - ---------------------------------------------
2024-11-04 08:32 - INFO - ---------------------------------------------
2024-11-04 08:32 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-04 08:32 - INFO - 	 Train Loss: 0.075
2024-11-04 08:32 - INFO - 	 Val. Loss: 0.071
2024-11-04 08:32 - INFO - 	 ROC-AUC: 0.984
2024-11-04 08:32 - INFO - 	 PR-AUC: 0.844
2024-11-04 08:32 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 08:32 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 08:32 - INFO - 	 Best PR-AUC: 0.848
2024-11-04 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-04 08:32 - INFO - ---------------------------------------------
2024-11-04 08:40 - INFO - ---------------------------------------------
2024-11-04 08:40 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 08:40 - INFO - 	 Train Loss: 0.072
2024-11-04 08:40 - INFO - 	 Val. Loss: 0.069
2024-11-04 08:40 - INFO - 	 ROC-AUC: 0.984
2024-11-04 08:40 - INFO - 	 PR-AUC: 0.844
2024-11-04 08:40 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 08:40 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 08:40 - INFO - 	 Best PR-AUC: 0.848
2024-11-04 08:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 08:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-04 08:40 - INFO - ---------------------------------------------
2024-11-04 08:48 - INFO - ---------------------------------------------
2024-11-04 08:48 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 08:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85168
2024-11-04 08:48 - INFO - 	 Train Loss: 0.069
2024-11-04 08:48 - INFO - 	 Val. Loss: 0.069
2024-11-04 08:48 - INFO - 	 ROC-AUC: 0.985
2024-11-04 08:48 - INFO - 	 PR-AUC: 0.852
2024-11-04 08:48 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 08:48 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 08:48 - INFO - 	 Best PR-AUC: 0.852
2024-11-04 08:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 08:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-04 08:48 - INFO - ---------------------------------------------
2024-11-04 08:56 - INFO - ---------------------------------------------
2024-11-04 08:56 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 08:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86387
2024-11-04 08:56 - INFO - 	 Train Loss: 0.066
2024-11-04 08:56 - INFO - 	 Val. Loss: 0.064
2024-11-04 08:56 - INFO - 	 ROC-AUC: 0.987
2024-11-04 08:56 - INFO - 	 PR-AUC: 0.864
2024-11-04 08:56 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 08:56 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 08:56 - INFO - 	 Best PR-AUC: 0.864
2024-11-04 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-04 08:56 - INFO - ---------------------------------------------
2024-11-04 09:04 - INFO - ---------------------------------------------
2024-11-04 09:04 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-04 09:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87063
2024-11-04 09:04 - INFO - 	 Train Loss: 0.063
2024-11-04 09:04 - INFO - 	 Val. Loss: 0.063
2024-11-04 09:04 - INFO - 	 ROC-AUC: 0.986
2024-11-04 09:04 - INFO - 	 PR-AUC: 0.871
2024-11-04 09:04 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 09:04 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 09:04 - INFO - 	 Best PR-AUC: 0.871
2024-11-04 09:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 09:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-04 09:04 - INFO - ---------------------------------------------
2024-11-04 09:07 - INFO - Fit the preprocessing pipeline
2024-11-04 09:07 - INFO - Training using device: cuda
2024-11-04 09:07 - INFO - Creating generators
2024-11-04 09:07 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 09:07 - INFO - * Model:
2024-11-04 09:07 - INFO - * -----------
2024-11-04 09:07 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 09:07 - INFO - * -----------
2024-11-04 09:15 - INFO - ---------------------------------------------
2024-11-04 09:15 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 09:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39476
2024-11-04 09:15 - INFO - 	 Train Loss: 0.225
2024-11-04 09:15 - INFO - 	 Val. Loss: 0.468
2024-11-04 09:15 - INFO - 	 ROC-AUC: 0.888
2024-11-04 09:15 - INFO - 	 PR-AUC: 0.395
2024-11-04 09:15 - INFO - 	 Best Val. Loss: 0.468
2024-11-04 09:15 - INFO - 	 Best ROC-AUC: 0.888
2024-11-04 09:15 - INFO - 	 Best PR-AUC: 0.395
2024-11-04 09:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.879
2024-11-04 09:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.460
2024-11-04 09:15 - INFO - ---------------------------------------------
2024-11-04 09:23 - INFO - ---------------------------------------------
2024-11-04 09:23 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 09:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68066
2024-11-04 09:23 - INFO - 	 Train Loss: 0.122
2024-11-04 09:23 - INFO - 	 Val. Loss: 0.263
2024-11-04 09:23 - INFO - 	 ROC-AUC: 0.955
2024-11-04 09:23 - INFO - 	 PR-AUC: 0.681
2024-11-04 09:23 - INFO - 	 Best Val. Loss: 0.263
2024-11-04 09:23 - INFO - 	 Best ROC-AUC: 0.955
2024-11-04 09:23 - INFO - 	 Best PR-AUC: 0.681
2024-11-04 09:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-04 09:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.651
2024-11-04 09:23 - INFO - ---------------------------------------------
2024-11-04 09:31 - INFO - ---------------------------------------------
2024-11-04 09:31 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 09:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77171
2024-11-04 09:31 - INFO - 	 Train Loss: 0.098
2024-11-04 09:31 - INFO - 	 Val. Loss: 0.114
2024-11-04 09:31 - INFO - 	 ROC-AUC: 0.972
2024-11-04 09:31 - INFO - 	 PR-AUC: 0.772
2024-11-04 09:31 - INFO - 	 Best Val. Loss: 0.114
2024-11-04 09:31 - INFO - 	 Best ROC-AUC: 0.972
2024-11-04 09:31 - INFO - 	 Best PR-AUC: 0.772
2024-11-04 09:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-04 09:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.742
2024-11-04 09:31 - INFO - ---------------------------------------------
2024-11-04 09:39 - INFO - ---------------------------------------------
2024-11-04 09:39 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-04 09:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82999
2024-11-04 09:39 - INFO - 	 Train Loss: 0.091
2024-11-04 09:39 - INFO - 	 Val. Loss: 0.087
2024-11-04 09:39 - INFO - 	 ROC-AUC: 0.981
2024-11-04 09:39 - INFO - 	 PR-AUC: 0.830
2024-11-04 09:39 - INFO - 	 Best Val. Loss: 0.087
2024-11-04 09:39 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 09:39 - INFO - 	 Best PR-AUC: 0.830
2024-11-04 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-04 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-11-04 09:39 - INFO - ---------------------------------------------
2024-11-04 09:47 - INFO - ---------------------------------------------
2024-11-04 09:47 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-04 09:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83689
2024-11-04 09:47 - INFO - 	 Train Loss: 0.083
2024-11-04 09:47 - INFO - 	 Val. Loss: 0.077
2024-11-04 09:47 - INFO - 	 ROC-AUC: 0.982
2024-11-04 09:47 - INFO - 	 PR-AUC: 0.837
2024-11-04 09:47 - INFO - 	 Best Val. Loss: 0.077
2024-11-04 09:47 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 09:47 - INFO - 	 Best PR-AUC: 0.837
2024-11-04 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-04 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-11-04 09:47 - INFO - ---------------------------------------------
2024-11-04 09:55 - INFO - ---------------------------------------------
2024-11-04 09:55 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 09:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86153
2024-11-04 09:55 - INFO - 	 Train Loss: 0.077
2024-11-04 09:55 - INFO - 	 Val. Loss: 0.069
2024-11-04 09:55 - INFO - 	 ROC-AUC: 0.984
2024-11-04 09:55 - INFO - 	 PR-AUC: 0.862
2024-11-04 09:55 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 09:55 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 09:55 - INFO - 	 Best PR-AUC: 0.862
2024-11-04 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-04 09:55 - INFO - ---------------------------------------------
2024-11-04 10:03 - INFO - ---------------------------------------------
2024-11-04 10:03 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 10:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86993
2024-11-04 10:03 - INFO - 	 Train Loss: 0.071
2024-11-04 10:03 - INFO - 	 Val. Loss: 0.066
2024-11-04 10:03 - INFO - 	 ROC-AUC: 0.985
2024-11-04 10:03 - INFO - 	 PR-AUC: 0.870
2024-11-04 10:03 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 10:03 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 10:03 - INFO - 	 Best PR-AUC: 0.870
2024-11-04 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-04 10:03 - INFO - ---------------------------------------------
2024-11-04 10:11 - INFO - ---------------------------------------------
2024-11-04 10:11 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 10:11 - INFO - 	 Train Loss: 0.067
2024-11-04 10:11 - INFO - 	 Val. Loss: 0.065
2024-11-04 10:11 - INFO - 	 ROC-AUC: 0.986
2024-11-04 10:11 - INFO - 	 PR-AUC: 0.858
2024-11-04 10:11 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 10:11 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 10:11 - INFO - 	 Best PR-AUC: 0.870
2024-11-04 10:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 10:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-04 10:11 - INFO - ---------------------------------------------
2024-11-04 10:19 - INFO - ---------------------------------------------
2024-11-04 10:19 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 10:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87416
2024-11-04 10:19 - INFO - 	 Train Loss: 0.064
2024-11-04 10:19 - INFO - 	 Val. Loss: 0.065
2024-11-04 10:19 - INFO - 	 ROC-AUC: 0.986
2024-11-04 10:19 - INFO - 	 PR-AUC: 0.874
2024-11-04 10:19 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 10:19 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 10:19 - INFO - 	 Best PR-AUC: 0.874
2024-11-04 10:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 10:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-04 10:19 - INFO - ---------------------------------------------
2024-11-04 10:27 - INFO - ---------------------------------------------
2024-11-04 10:27 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-04 10:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87629
2024-11-04 10:27 - INFO - 	 Train Loss: 0.061
2024-11-04 10:27 - INFO - 	 Val. Loss: 0.062
2024-11-04 10:27 - INFO - 	 ROC-AUC: 0.986
2024-11-04 10:27 - INFO - 	 PR-AUC: 0.876
2024-11-04 10:27 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 10:27 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 10:27 - INFO - 	 Best PR-AUC: 0.876
2024-11-04 10:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 10:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-04 10:27 - INFO - ---------------------------------------------
2024-11-04 10:29 - INFO - Fit the preprocessing pipeline
2024-11-04 10:29 - INFO - Training using device: cuda
2024-11-04 10:29 - INFO - Creating generators
2024-11-04 10:29 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 10:29 - INFO - * Model:
2024-11-04 10:29 - INFO - * -----------
2024-11-04 10:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 10:29 - INFO - * -----------
2024-11-04 10:37 - INFO - ---------------------------------------------
2024-11-04 10:37 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 10:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37552
2024-11-04 10:37 - INFO - 	 Train Loss: 0.213
2024-11-04 10:37 - INFO - 	 Val. Loss: 0.421
2024-11-04 10:37 - INFO - 	 ROC-AUC: 0.901
2024-11-04 10:37 - INFO - 	 PR-AUC: 0.376
2024-11-04 10:37 - INFO - 	 Best Val. Loss: 0.421
2024-11-04 10:37 - INFO - 	 Best ROC-AUC: 0.901
2024-11-04 10:37 - INFO - 	 Best PR-AUC: 0.376
2024-11-04 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.896
2024-11-04 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-11-04 10:37 - INFO - ---------------------------------------------
2024-11-04 10:45 - INFO - ---------------------------------------------
2024-11-04 10:45 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-04 10:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73501
2024-11-04 10:45 - INFO - 	 Train Loss: 0.116
2024-11-04 10:45 - INFO - 	 Val. Loss: 0.123
2024-11-04 10:45 - INFO - 	 ROC-AUC: 0.972
2024-11-04 10:45 - INFO - 	 PR-AUC: 0.735
2024-11-04 10:45 - INFO - 	 Best Val. Loss: 0.123
2024-11-04 10:45 - INFO - 	 Best ROC-AUC: 0.972
2024-11-04 10:45 - INFO - 	 Best PR-AUC: 0.735
2024-11-04 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-04 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-11-04 10:45 - INFO - ---------------------------------------------
2024-11-04 10:53 - INFO - ---------------------------------------------
2024-11-04 10:53 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-04 10:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77701
2024-11-04 10:53 - INFO - 	 Train Loss: 0.093
2024-11-04 10:53 - INFO - 	 Val. Loss: 0.139
2024-11-04 10:53 - INFO - 	 ROC-AUC: 0.974
2024-11-04 10:53 - INFO - 	 PR-AUC: 0.777
2024-11-04 10:53 - INFO - 	 Best Val. Loss: 0.123
2024-11-04 10:53 - INFO - 	 Best ROC-AUC: 0.974
2024-11-04 10:53 - INFO - 	 Best PR-AUC: 0.777
2024-11-04 10:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-04 10:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.761
2024-11-04 10:53 - INFO - ---------------------------------------------
2024-11-04 11:01 - INFO - ---------------------------------------------
2024-11-04 11:01 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 11:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83767
2024-11-04 11:01 - INFO - 	 Train Loss: 0.084
2024-11-04 11:01 - INFO - 	 Val. Loss: 0.076
2024-11-04 11:01 - INFO - 	 ROC-AUC: 0.981
2024-11-04 11:01 - INFO - 	 PR-AUC: 0.838
2024-11-04 11:01 - INFO - 	 Best Val. Loss: 0.076
2024-11-04 11:01 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 11:01 - INFO - 	 Best PR-AUC: 0.838
2024-11-04 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-11-04 11:01 - INFO - ---------------------------------------------
2024-11-04 11:09 - INFO - ---------------------------------------------
2024-11-04 11:09 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 11:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85144
2024-11-04 11:09 - INFO - 	 Train Loss: 0.077
2024-11-04 11:09 - INFO - 	 Val. Loss: 0.070
2024-11-04 11:09 - INFO - 	 ROC-AUC: 0.984
2024-11-04 11:09 - INFO - 	 PR-AUC: 0.851
2024-11-04 11:09 - INFO - 	 Best Val. Loss: 0.070
2024-11-04 11:09 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 11:09 - INFO - 	 Best PR-AUC: 0.851
2024-11-04 11:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 11:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-04 11:09 - INFO - ---------------------------------------------
2024-11-04 11:18 - INFO - ---------------------------------------------
2024-11-04 11:18 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 11:18 - INFO - 	 Train Loss: 0.073
2024-11-04 11:18 - INFO - 	 Val. Loss: 0.074
2024-11-04 11:18 - INFO - 	 ROC-AUC: 0.983
2024-11-04 11:18 - INFO - 	 PR-AUC: 0.843
2024-11-04 11:18 - INFO - 	 Best Val. Loss: 0.070
2024-11-04 11:18 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 11:18 - INFO - 	 Best PR-AUC: 0.851
2024-11-04 11:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 11:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-04 11:18 - INFO - ---------------------------------------------
2024-11-04 11:26 - INFO - ---------------------------------------------
2024-11-04 11:26 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86715
2024-11-04 11:26 - INFO - 	 Train Loss: 0.071
2024-11-04 11:26 - INFO - 	 Val. Loss: 0.069
2024-11-04 11:26 - INFO - 	 ROC-AUC: 0.984
2024-11-04 11:26 - INFO - 	 PR-AUC: 0.867
2024-11-04 11:26 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 11:26 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 11:26 - INFO - 	 Best PR-AUC: 0.867
2024-11-04 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-04 11:26 - INFO - ---------------------------------------------
2024-11-04 11:34 - INFO - ---------------------------------------------
2024-11-04 11:34 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 11:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8678
2024-11-04 11:34 - INFO - 	 Train Loss: 0.066
2024-11-04 11:34 - INFO - 	 Val. Loss: 0.067
2024-11-04 11:34 - INFO - 	 ROC-AUC: 0.985
2024-11-04 11:34 - INFO - 	 PR-AUC: 0.868
2024-11-04 11:34 - INFO - 	 Best Val. Loss: 0.067
2024-11-04 11:34 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 11:34 - INFO - 	 Best PR-AUC: 0.868
2024-11-04 11:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 11:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-04 11:34 - INFO - ---------------------------------------------
2024-11-04 11:42 - INFO - ---------------------------------------------
2024-11-04 11:42 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-04 11:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88074
2024-11-04 11:42 - INFO - 	 Train Loss: 0.063
2024-11-04 11:42 - INFO - 	 Val. Loss: 0.063
2024-11-04 11:42 - INFO - 	 ROC-AUC: 0.986
2024-11-04 11:42 - INFO - 	 PR-AUC: 0.881
2024-11-04 11:42 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 11:42 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 11:42 - INFO - 	 Best PR-AUC: 0.881
2024-11-04 11:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 11:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-04 11:42 - INFO - ---------------------------------------------
2024-11-04 11:50 - INFO - ---------------------------------------------
2024-11-04 11:50 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-04 11:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88721
2024-11-04 11:50 - INFO - 	 Train Loss: 0.061
2024-11-04 11:50 - INFO - 	 Val. Loss: 0.063
2024-11-04 11:50 - INFO - 	 ROC-AUC: 0.987
2024-11-04 11:50 - INFO - 	 PR-AUC: 0.887
2024-11-04 11:50 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 11:50 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 11:50 - INFO - 	 Best PR-AUC: 0.887
2024-11-04 11:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 11:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-04 11:50 - INFO - ---------------------------------------------
2024-11-04 11:52 - INFO - Fit the preprocessing pipeline
2024-11-04 11:52 - INFO - Training using device: cuda
2024-11-04 11:52 - INFO - Creating generators
2024-11-04 11:52 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 11:52 - INFO - * Model:
2024-11-04 11:52 - INFO - * -----------
2024-11-04 11:52 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 11:52 - INFO - * -----------
2024-11-04 12:00 - INFO - ---------------------------------------------
2024-11-04 12:00 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-04 12:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27131
2024-11-04 12:00 - INFO - 	 Train Loss: 0.234
2024-11-04 12:00 - INFO - 	 Val. Loss: 0.416
2024-11-04 12:00 - INFO - 	 ROC-AUC: 0.835
2024-11-04 12:00 - INFO - 	 PR-AUC: 0.271
2024-11-04 12:00 - INFO - 	 Best Val. Loss: 0.416
2024-11-04 12:00 - INFO - 	 Best ROC-AUC: 0.835
2024-11-04 12:00 - INFO - 	 Best PR-AUC: 0.271
2024-11-04 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.834
2024-11-04 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.341
2024-11-04 12:00 - INFO - ---------------------------------------------
2024-11-04 12:08 - INFO - ---------------------------------------------
2024-11-04 12:08 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-04 12:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6954
2024-11-04 12:08 - INFO - 	 Train Loss: 0.130
2024-11-04 12:08 - INFO - 	 Val. Loss: 0.161
2024-11-04 12:08 - INFO - 	 ROC-AUC: 0.968
2024-11-04 12:08 - INFO - 	 PR-AUC: 0.695
2024-11-04 12:08 - INFO - 	 Best Val. Loss: 0.161
2024-11-04 12:08 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 12:08 - INFO - 	 Best PR-AUC: 0.695
2024-11-04 12:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-04 12:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-11-04 12:08 - INFO - ---------------------------------------------
2024-11-04 12:16 - INFO - ---------------------------------------------
2024-11-04 12:16 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-04 12:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82851
2024-11-04 12:16 - INFO - 	 Train Loss: 0.095
2024-11-04 12:16 - INFO - 	 Val. Loss: 0.079
2024-11-04 12:16 - INFO - 	 ROC-AUC: 0.981
2024-11-04 12:16 - INFO - 	 PR-AUC: 0.829
2024-11-04 12:16 - INFO - 	 Best Val. Loss: 0.079
2024-11-04 12:16 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 12:16 - INFO - 	 Best PR-AUC: 0.829
2024-11-04 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-04 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-11-04 12:16 - INFO - ---------------------------------------------
2024-11-04 12:24 - INFO - ---------------------------------------------
2024-11-04 12:24 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-04 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83912
2024-11-04 12:24 - INFO - 	 Train Loss: 0.086
2024-11-04 12:24 - INFO - 	 Val. Loss: 0.082
2024-11-04 12:24 - INFO - 	 ROC-AUC: 0.982
2024-11-04 12:24 - INFO - 	 PR-AUC: 0.839
2024-11-04 12:24 - INFO - 	 Best Val. Loss: 0.079
2024-11-04 12:24 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 12:24 - INFO - 	 Best PR-AUC: 0.839
2024-11-04 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-11-04 12:24 - INFO - ---------------------------------------------
2024-11-04 12:32 - INFO - ---------------------------------------------
2024-11-04 12:32 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-04 12:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8505
2024-11-04 12:32 - INFO - 	 Train Loss: 0.078
2024-11-04 12:32 - INFO - 	 Val. Loss: 0.069
2024-11-04 12:32 - INFO - 	 ROC-AUC: 0.984
2024-11-04 12:32 - INFO - 	 PR-AUC: 0.850
2024-11-04 12:32 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 12:32 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 12:32 - INFO - 	 Best PR-AUC: 0.850
2024-11-04 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-04 12:32 - INFO - ---------------------------------------------
2024-11-04 12:40 - INFO - ---------------------------------------------
2024-11-04 12:40 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-04 12:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8607
2024-11-04 12:40 - INFO - 	 Train Loss: 0.073
2024-11-04 12:40 - INFO - 	 Val. Loss: 0.067
2024-11-04 12:40 - INFO - 	 ROC-AUC: 0.985
2024-11-04 12:40 - INFO - 	 PR-AUC: 0.861
2024-11-04 12:40 - INFO - 	 Best Val. Loss: 0.067
2024-11-04 12:40 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 12:40 - INFO - 	 Best PR-AUC: 0.861
2024-11-04 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-04 12:40 - INFO - ---------------------------------------------
2024-11-04 12:48 - INFO - ---------------------------------------------
2024-11-04 12:48 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-04 12:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86915
2024-11-04 12:48 - INFO - 	 Train Loss: 0.069
2024-11-04 12:48 - INFO - 	 Val. Loss: 0.063
2024-11-04 12:48 - INFO - 	 ROC-AUC: 0.986
2024-11-04 12:48 - INFO - 	 PR-AUC: 0.869
2024-11-04 12:48 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 12:48 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 12:48 - INFO - 	 Best PR-AUC: 0.869
2024-11-04 12:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 12:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-04 12:48 - INFO - ---------------------------------------------
2024-11-04 12:56 - INFO - ---------------------------------------------
2024-11-04 12:56 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-04 12:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87105
2024-11-04 12:56 - INFO - 	 Train Loss: 0.067
2024-11-04 12:56 - INFO - 	 Val. Loss: 0.065
2024-11-04 12:56 - INFO - 	 ROC-AUC: 0.985
2024-11-04 12:56 - INFO - 	 PR-AUC: 0.871
2024-11-04 12:56 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 12:56 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 12:56 - INFO - 	 Best PR-AUC: 0.871
2024-11-04 12:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 12:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-04 12:56 - INFO - ---------------------------------------------
2024-11-04 13:04 - INFO - ---------------------------------------------
2024-11-04 13:04 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 13:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87906
2024-11-04 13:04 - INFO - 	 Train Loss: 0.065
2024-11-04 13:04 - INFO - 	 Val. Loss: 0.062
2024-11-04 13:04 - INFO - 	 ROC-AUC: 0.986
2024-11-04 13:04 - INFO - 	 PR-AUC: 0.879
2024-11-04 13:04 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 13:04 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 13:04 - INFO - 	 Best PR-AUC: 0.879
2024-11-04 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-04 13:04 - INFO - ---------------------------------------------
2024-11-04 13:12 - INFO - ---------------------------------------------
2024-11-04 13:12 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-04 13:12 - INFO - 	 Train Loss: 0.061
2024-11-04 13:12 - INFO - 	 Val. Loss: 0.063
2024-11-04 13:12 - INFO - 	 ROC-AUC: 0.986
2024-11-04 13:12 - INFO - 	 PR-AUC: 0.869
2024-11-04 13:12 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 13:12 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 13:12 - INFO - 	 Best PR-AUC: 0.879
2024-11-04 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-04 13:12 - INFO - ---------------------------------------------
2024-11-04 13:15 - INFO - Fit the preprocessing pipeline
2024-11-04 13:15 - INFO - Training using device: cuda
2024-11-04 13:15 - INFO - Creating generators
2024-11-04 13:15 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 13:15 - INFO - * Model:
2024-11-04 13:15 - INFO - * -----------
2024-11-04 13:15 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 13:15 - INFO - * -----------
2024-11-04 13:23 - INFO - ---------------------------------------------
2024-11-04 13:23 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 13:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38242
2024-11-04 13:23 - INFO - 	 Train Loss: 0.229
2024-11-04 13:23 - INFO - 	 Val. Loss: 0.351
2024-11-04 13:23 - INFO - 	 ROC-AUC: 0.881
2024-11-04 13:23 - INFO - 	 PR-AUC: 0.382
2024-11-04 13:23 - INFO - 	 Best Val. Loss: 0.351
2024-11-04 13:23 - INFO - 	 Best ROC-AUC: 0.881
2024-11-04 13:23 - INFO - 	 Best PR-AUC: 0.382
2024-11-04 13:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.875
2024-11-04 13:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-11-04 13:23 - INFO - ---------------------------------------------
2024-11-04 13:31 - INFO - ---------------------------------------------
2024-11-04 13:31 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 13:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75731
2024-11-04 13:31 - INFO - 	 Train Loss: 0.126
2024-11-04 13:31 - INFO - 	 Val. Loss: 0.101
2024-11-04 13:31 - INFO - 	 ROC-AUC: 0.975
2024-11-04 13:31 - INFO - 	 PR-AUC: 0.757
2024-11-04 13:31 - INFO - 	 Best Val. Loss: 0.101
2024-11-04 13:31 - INFO - 	 Best ROC-AUC: 0.975
2024-11-04 13:31 - INFO - 	 Best PR-AUC: 0.757
2024-11-04 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-04 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-11-04 13:31 - INFO - ---------------------------------------------
2024-11-04 13:39 - INFO - ---------------------------------------------
2024-11-04 13:39 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-04 13:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81671
2024-11-04 13:39 - INFO - 	 Train Loss: 0.096
2024-11-04 13:39 - INFO - 	 Val. Loss: 0.079
2024-11-04 13:39 - INFO - 	 ROC-AUC: 0.981
2024-11-04 13:39 - INFO - 	 PR-AUC: 0.817
2024-11-04 13:39 - INFO - 	 Best Val. Loss: 0.079
2024-11-04 13:39 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 13:39 - INFO - 	 Best PR-AUC: 0.817
2024-11-04 13:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 13:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-11-04 13:39 - INFO - ---------------------------------------------
2024-11-04 13:47 - INFO - ---------------------------------------------
2024-11-04 13:47 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-04 13:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83036
2024-11-04 13:47 - INFO - 	 Train Loss: 0.086
2024-11-04 13:47 - INFO - 	 Val. Loss: 0.074
2024-11-04 13:47 - INFO - 	 ROC-AUC: 0.982
2024-11-04 13:47 - INFO - 	 PR-AUC: 0.830
2024-11-04 13:47 - INFO - 	 Best Val. Loss: 0.074
2024-11-04 13:47 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 13:47 - INFO - 	 Best PR-AUC: 0.830
2024-11-04 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-11-04 13:47 - INFO - ---------------------------------------------
2024-11-04 13:55 - INFO - ---------------------------------------------
2024-11-04 13:55 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-04 13:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84328
2024-11-04 13:55 - INFO - 	 Train Loss: 0.079
2024-11-04 13:55 - INFO - 	 Val. Loss: 0.072
2024-11-04 13:55 - INFO - 	 ROC-AUC: 0.983
2024-11-04 13:55 - INFO - 	 PR-AUC: 0.843
2024-11-04 13:55 - INFO - 	 Best Val. Loss: 0.072
2024-11-04 13:55 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 13:55 - INFO - 	 Best PR-AUC: 0.843
2024-11-04 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-04 13:55 - INFO - ---------------------------------------------
2024-11-04 14:03 - INFO - ---------------------------------------------
2024-11-04 14:03 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 14:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85972
2024-11-04 14:03 - INFO - 	 Train Loss: 0.075
2024-11-04 14:03 - INFO - 	 Val. Loss: 0.068
2024-11-04 14:03 - INFO - 	 ROC-AUC: 0.985
2024-11-04 14:03 - INFO - 	 PR-AUC: 0.860
2024-11-04 14:03 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 14:03 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 14:03 - INFO - 	 Best PR-AUC: 0.860
2024-11-04 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-04 14:03 - INFO - ---------------------------------------------
2024-11-04 14:11 - INFO - ---------------------------------------------
2024-11-04 14:11 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 14:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86111
2024-11-04 14:11 - INFO - 	 Train Loss: 0.070
2024-11-04 14:11 - INFO - 	 Val. Loss: 0.067
2024-11-04 14:11 - INFO - 	 ROC-AUC: 0.985
2024-11-04 14:11 - INFO - 	 PR-AUC: 0.861
2024-11-04 14:11 - INFO - 	 Best Val. Loss: 0.067
2024-11-04 14:11 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 14:11 - INFO - 	 Best PR-AUC: 0.861
2024-11-04 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-04 14:11 - INFO - ---------------------------------------------
2024-11-04 14:19 - INFO - ---------------------------------------------
2024-11-04 14:19 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86615
2024-11-04 14:19 - INFO - 	 Train Loss: 0.067
2024-11-04 14:19 - INFO - 	 Val. Loss: 0.065
2024-11-04 14:19 - INFO - 	 ROC-AUC: 0.986
2024-11-04 14:19 - INFO - 	 PR-AUC: 0.866
2024-11-04 14:19 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 14:19 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 14:19 - INFO - 	 Best PR-AUC: 0.866
2024-11-04 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-04 14:19 - INFO - ---------------------------------------------
2024-11-04 14:27 - INFO - ---------------------------------------------
2024-11-04 14:27 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 14:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88022
2024-11-04 14:27 - INFO - 	 Train Loss: 0.065
2024-11-04 14:27 - INFO - 	 Val. Loss: 0.062
2024-11-04 14:27 - INFO - 	 ROC-AUC: 0.987
2024-11-04 14:27 - INFO - 	 PR-AUC: 0.880
2024-11-04 14:27 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 14:27 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 14:27 - INFO - 	 Best PR-AUC: 0.880
2024-11-04 14:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 14:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-04 14:27 - INFO - ---------------------------------------------
2024-11-04 14:35 - INFO - ---------------------------------------------
2024-11-04 14:35 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-04 14:35 - INFO - 	 Train Loss: 0.063
2024-11-04 14:35 - INFO - 	 Val. Loss: 0.063
2024-11-04 14:35 - INFO - 	 ROC-AUC: 0.986
2024-11-04 14:35 - INFO - 	 PR-AUC: 0.874
2024-11-04 14:35 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 14:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 14:35 - INFO - 	 Best PR-AUC: 0.880
2024-11-04 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-04 14:35 - INFO - ---------------------------------------------
2024-11-04 14:38 - INFO - Fit the preprocessing pipeline
2024-11-04 14:38 - INFO - Training using device: cuda
2024-11-04 14:38 - INFO - Creating generators
2024-11-04 14:38 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 14:38 - INFO - * Model:
2024-11-04 14:38 - INFO - * -----------
2024-11-04 14:38 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 14:38 - INFO - * -----------
2024-11-04 14:46 - INFO - ---------------------------------------------
2024-11-04 14:46 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 14:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25684
2024-11-04 14:46 - INFO - 	 Train Loss: 0.239
2024-11-04 14:46 - INFO - 	 Val. Loss: 0.230
2024-11-04 14:46 - INFO - 	 ROC-AUC: 0.824
2024-11-04 14:46 - INFO - 	 PR-AUC: 0.257
2024-11-04 14:46 - INFO - 	 Best Val. Loss: 0.230
2024-11-04 14:46 - INFO - 	 Best ROC-AUC: 0.824
2024-11-04 14:46 - INFO - 	 Best PR-AUC: 0.257
2024-11-04 14:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.823
2024-11-04 14:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-04 14:46 - INFO - ---------------------------------------------
2024-11-04 14:54 - INFO - ---------------------------------------------
2024-11-04 14:54 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 14:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71421
2024-11-04 14:54 - INFO - 	 Train Loss: 0.153
2024-11-04 14:54 - INFO - 	 Val. Loss: 0.147
2024-11-04 14:54 - INFO - 	 ROC-AUC: 0.968
2024-11-04 14:54 - INFO - 	 PR-AUC: 0.714
2024-11-04 14:54 - INFO - 	 Best Val. Loss: 0.147
2024-11-04 14:54 - INFO - 	 Best ROC-AUC: 0.968
2024-11-04 14:54 - INFO - 	 Best PR-AUC: 0.714
2024-11-04 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-04 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-11-04 14:54 - INFO - ---------------------------------------------
2024-11-04 15:02 - INFO - ---------------------------------------------
2024-11-04 15:02 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-04 15:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82206
2024-11-04 15:02 - INFO - 	 Train Loss: 0.094
2024-11-04 15:02 - INFO - 	 Val. Loss: 0.094
2024-11-04 15:02 - INFO - 	 ROC-AUC: 0.982
2024-11-04 15:02 - INFO - 	 PR-AUC: 0.822
2024-11-04 15:02 - INFO - 	 Best Val. Loss: 0.094
2024-11-04 15:02 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 15:02 - INFO - 	 Best PR-AUC: 0.822
2024-11-04 15:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 15:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-11-04 15:02 - INFO - ---------------------------------------------
2024-11-04 15:10 - INFO - ---------------------------------------------
2024-11-04 15:10 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-04 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.825
2024-11-04 15:10 - INFO - 	 Train Loss: 0.083
2024-11-04 15:10 - INFO - 	 Val. Loss: 0.112
2024-11-04 15:10 - INFO - 	 ROC-AUC: 0.980
2024-11-04 15:10 - INFO - 	 PR-AUC: 0.825
2024-11-04 15:10 - INFO - 	 Best Val. Loss: 0.094
2024-11-04 15:10 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 15:10 - INFO - 	 Best PR-AUC: 0.825
2024-11-04 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-04 15:10 - INFO - ---------------------------------------------
2024-11-04 15:18 - INFO - ---------------------------------------------
2024-11-04 15:18 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84126
2024-11-04 15:18 - INFO - 	 Train Loss: 0.078
2024-11-04 15:18 - INFO - 	 Val. Loss: 0.084
2024-11-04 15:18 - INFO - 	 ROC-AUC: 0.984
2024-11-04 15:18 - INFO - 	 PR-AUC: 0.841
2024-11-04 15:18 - INFO - 	 Best Val. Loss: 0.084
2024-11-04 15:18 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 15:18 - INFO - 	 Best PR-AUC: 0.841
2024-11-04 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-11-04 15:18 - INFO - ---------------------------------------------
2024-11-04 15:26 - INFO - ---------------------------------------------
2024-11-04 15:26 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 15:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86492
2024-11-04 15:26 - INFO - 	 Train Loss: 0.073
2024-11-04 15:26 - INFO - 	 Val. Loss: 0.068
2024-11-04 15:26 - INFO - 	 ROC-AUC: 0.986
2024-11-04 15:26 - INFO - 	 PR-AUC: 0.865
2024-11-04 15:26 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 15:26 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 15:26 - INFO - 	 Best PR-AUC: 0.865
2024-11-04 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-04 15:26 - INFO - ---------------------------------------------
2024-11-04 15:34 - INFO - ---------------------------------------------
2024-11-04 15:34 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-04 15:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86967
2024-11-04 15:34 - INFO - 	 Train Loss: 0.070
2024-11-04 15:34 - INFO - 	 Val. Loss: 0.067
2024-11-04 15:34 - INFO - 	 ROC-AUC: 0.986
2024-11-04 15:34 - INFO - 	 PR-AUC: 0.870
2024-11-04 15:34 - INFO - 	 Best Val. Loss: 0.067
2024-11-04 15:34 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 15:34 - INFO - 	 Best PR-AUC: 0.870
2024-11-04 15:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 15:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-04 15:34 - INFO - ---------------------------------------------
2024-11-04 15:42 - INFO - ---------------------------------------------
2024-11-04 15:42 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 15:42 - INFO - 	 Train Loss: 0.068
2024-11-04 15:42 - INFO - 	 Val. Loss: 0.065
2024-11-04 15:42 - INFO - 	 ROC-AUC: 0.986
2024-11-04 15:42 - INFO - 	 PR-AUC: 0.863
2024-11-04 15:42 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 15:42 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 15:42 - INFO - 	 Best PR-AUC: 0.870
2024-11-04 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-04 15:42 - INFO - ---------------------------------------------
2024-11-04 15:50 - INFO - ---------------------------------------------
2024-11-04 15:50 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 15:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87873
2024-11-04 15:50 - INFO - 	 Train Loss: 0.066
2024-11-04 15:50 - INFO - 	 Val. Loss: 0.064
2024-11-04 15:50 - INFO - 	 ROC-AUC: 0.987
2024-11-04 15:50 - INFO - 	 PR-AUC: 0.879
2024-11-04 15:50 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 15:50 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 15:50 - INFO - 	 Best PR-AUC: 0.879
2024-11-04 15:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 15:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-04 15:50 - INFO - ---------------------------------------------
2024-11-04 15:58 - INFO - ---------------------------------------------
2024-11-04 15:58 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-04 15:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88362
2024-11-04 15:58 - INFO - 	 Train Loss: 0.063
2024-11-04 15:58 - INFO - 	 Val. Loss: 0.062
2024-11-04 15:58 - INFO - 	 ROC-AUC: 0.987
2024-11-04 15:58 - INFO - 	 PR-AUC: 0.884
2024-11-04 15:58 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 15:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 15:58 - INFO - 	 Best PR-AUC: 0.884
2024-11-04 15:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 15:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-04 15:58 - INFO - ---------------------------------------------
2024-11-04 16:00 - INFO - Fit the preprocessing pipeline
2024-11-04 16:00 - INFO - Training using device: cuda
2024-11-04 16:00 - INFO - Creating generators
2024-11-04 16:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 16:00 - INFO - * Model:
2024-11-04 16:00 - INFO - * -----------
2024-11-04 16:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 16:00 - INFO - * -----------
2024-11-04 16:08 - INFO - ---------------------------------------------
2024-11-04 16:08 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 16:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32703
2024-11-04 16:08 - INFO - 	 Train Loss: 0.228
2024-11-04 16:08 - INFO - 	 Val. Loss: 0.506
2024-11-04 16:08 - INFO - 	 ROC-AUC: 0.874
2024-11-04 16:08 - INFO - 	 PR-AUC: 0.327
2024-11-04 16:08 - INFO - 	 Best Val. Loss: 0.506
2024-11-04 16:08 - INFO - 	 Best ROC-AUC: 0.874
2024-11-04 16:08 - INFO - 	 Best PR-AUC: 0.327
2024-11-04 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.864
2024-11-04 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-04 16:08 - INFO - ---------------------------------------------
2024-11-04 16:16 - INFO - ---------------------------------------------
2024-11-04 16:16 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 16:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71483
2024-11-04 16:16 - INFO - 	 Train Loss: 0.131
2024-11-04 16:16 - INFO - 	 Val. Loss: 0.137
2024-11-04 16:16 - INFO - 	 ROC-AUC: 0.970
2024-11-04 16:16 - INFO - 	 PR-AUC: 0.715
2024-11-04 16:16 - INFO - 	 Best Val. Loss: 0.137
2024-11-04 16:16 - INFO - 	 Best ROC-AUC: 0.970
2024-11-04 16:16 - INFO - 	 Best PR-AUC: 0.715
2024-11-04 16:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-04 16:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-11-04 16:16 - INFO - ---------------------------------------------
2024-11-04 16:24 - INFO - ---------------------------------------------
2024-11-04 16:24 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 16:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80707
2024-11-04 16:24 - INFO - 	 Train Loss: 0.097
2024-11-04 16:24 - INFO - 	 Val. Loss: 0.107
2024-11-04 16:24 - INFO - 	 ROC-AUC: 0.978
2024-11-04 16:24 - INFO - 	 PR-AUC: 0.807
2024-11-04 16:24 - INFO - 	 Best Val. Loss: 0.107
2024-11-04 16:24 - INFO - 	 Best ROC-AUC: 0.978
2024-11-04 16:24 - INFO - 	 Best PR-AUC: 0.807
2024-11-04 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-04 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-11-04 16:24 - INFO - ---------------------------------------------
2024-11-04 16:32 - INFO - ---------------------------------------------
2024-11-04 16:32 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-04 16:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85608
2024-11-04 16:32 - INFO - 	 Train Loss: 0.086
2024-11-04 16:32 - INFO - 	 Val. Loss: 0.072
2024-11-04 16:32 - INFO - 	 ROC-AUC: 0.983
2024-11-04 16:32 - INFO - 	 PR-AUC: 0.856
2024-11-04 16:32 - INFO - 	 Best Val. Loss: 0.072
2024-11-04 16:32 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 16:32 - INFO - 	 Best PR-AUC: 0.856
2024-11-04 16:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 16:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-11-04 16:32 - INFO - ---------------------------------------------
2024-11-04 16:40 - INFO - ---------------------------------------------
2024-11-04 16:40 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-04 16:40 - INFO - 	 Train Loss: 0.078
2024-11-04 16:40 - INFO - 	 Val. Loss: 0.073
2024-11-04 16:40 - INFO - 	 ROC-AUC: 0.983
2024-11-04 16:40 - INFO - 	 PR-AUC: 0.852
2024-11-04 16:40 - INFO - 	 Best Val. Loss: 0.072
2024-11-04 16:40 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 16:40 - INFO - 	 Best PR-AUC: 0.856
2024-11-04 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-11-04 16:40 - INFO - ---------------------------------------------
2024-11-04 16:48 - INFO - ---------------------------------------------
2024-11-04 16:48 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-04 16:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86606
2024-11-04 16:48 - INFO - 	 Train Loss: 0.073
2024-11-04 16:48 - INFO - 	 Val. Loss: 0.067
2024-11-04 16:48 - INFO - 	 ROC-AUC: 0.985
2024-11-04 16:48 - INFO - 	 PR-AUC: 0.866
2024-11-04 16:48 - INFO - 	 Best Val. Loss: 0.067
2024-11-04 16:48 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 16:48 - INFO - 	 Best PR-AUC: 0.866
2024-11-04 16:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 16:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-04 16:48 - INFO - ---------------------------------------------
2024-11-04 16:57 - INFO - ---------------------------------------------
2024-11-04 16:57 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-04 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88092
2024-11-04 16:57 - INFO - 	 Train Loss: 0.069
2024-11-04 16:57 - INFO - 	 Val. Loss: 0.064
2024-11-04 16:57 - INFO - 	 ROC-AUC: 0.986
2024-11-04 16:57 - INFO - 	 PR-AUC: 0.881
2024-11-04 16:57 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 16:57 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 16:57 - INFO - 	 Best PR-AUC: 0.881
2024-11-04 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-04 16:57 - INFO - ---------------------------------------------
2024-11-04 17:05 - INFO - ---------------------------------------------
2024-11-04 17:05 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.886
2024-11-04 17:05 - INFO - 	 Train Loss: 0.065
2024-11-04 17:05 - INFO - 	 Val. Loss: 0.061
2024-11-04 17:05 - INFO - 	 ROC-AUC: 0.987
2024-11-04 17:05 - INFO - 	 PR-AUC: 0.886
2024-11-04 17:05 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 17:05 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 17:05 - INFO - 	 Best PR-AUC: 0.886
2024-11-04 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-04 17:05 - INFO - ---------------------------------------------
2024-11-04 17:13 - INFO - ---------------------------------------------
2024-11-04 17:13 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88744
2024-11-04 17:13 - INFO - 	 Train Loss: 0.063
2024-11-04 17:13 - INFO - 	 Val. Loss: 0.060
2024-11-04 17:13 - INFO - 	 ROC-AUC: 0.988
2024-11-04 17:13 - INFO - 	 PR-AUC: 0.887
2024-11-04 17:13 - INFO - 	 Best Val. Loss: 0.060
2024-11-04 17:13 - INFO - 	 Best ROC-AUC: 0.988
2024-11-04 17:13 - INFO - 	 Best PR-AUC: 0.887
2024-11-04 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-04 17:13 - INFO - ---------------------------------------------
2024-11-04 17:21 - INFO - ---------------------------------------------
2024-11-04 17:21 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-04 17:21 - INFO - 	 Train Loss: 0.061
2024-11-04 17:21 - INFO - 	 Val. Loss: 0.059
2024-11-04 17:21 - INFO - 	 ROC-AUC: 0.988
2024-11-04 17:21 - INFO - 	 PR-AUC: 0.887
2024-11-04 17:21 - INFO - 	 Best Val. Loss: 0.059
2024-11-04 17:21 - INFO - 	 Best ROC-AUC: 0.988
2024-11-04 17:21 - INFO - 	 Best PR-AUC: 0.887
2024-11-04 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-04 17:21 - INFO - ---------------------------------------------
2024-11-04 17:23 - INFO - Fit the preprocessing pipeline
2024-11-04 17:23 - INFO - Training using device: cuda
2024-11-04 17:23 - INFO - Creating generators
2024-11-04 17:23 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 17:23 - INFO - * Model:
2024-11-04 17:23 - INFO - * -----------
2024-11-04 17:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 17:23 - INFO - * -----------
2024-11-04 17:31 - INFO - ---------------------------------------------
2024-11-04 17:31 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 17:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3115
2024-11-04 17:31 - INFO - 	 Train Loss: 0.228
2024-11-04 17:31 - INFO - 	 Val. Loss: 0.582
2024-11-04 17:31 - INFO - 	 ROC-AUC: 0.856
2024-11-04 17:31 - INFO - 	 PR-AUC: 0.311
2024-11-04 17:31 - INFO - 	 Best Val. Loss: 0.582
2024-11-04 17:31 - INFO - 	 Best ROC-AUC: 0.856
2024-11-04 17:31 - INFO - 	 Best PR-AUC: 0.311
2024-11-04 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.845
2024-11-04 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.377
2024-11-04 17:31 - INFO - ---------------------------------------------
2024-11-04 17:39 - INFO - ---------------------------------------------
2024-11-04 17:39 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-04 17:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62469
2024-11-04 17:39 - INFO - 	 Train Loss: 0.135
2024-11-04 17:39 - INFO - 	 Val. Loss: 0.217
2024-11-04 17:39 - INFO - 	 ROC-AUC: 0.954
2024-11-04 17:39 - INFO - 	 PR-AUC: 0.625
2024-11-04 17:39 - INFO - 	 Best Val. Loss: 0.217
2024-11-04 17:39 - INFO - 	 Best ROC-AUC: 0.954
2024-11-04 17:39 - INFO - 	 Best PR-AUC: 0.625
2024-11-04 17:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-04 17:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.641
2024-11-04 17:39 - INFO - ---------------------------------------------
2024-11-04 17:47 - INFO - ---------------------------------------------
2024-11-04 17:47 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-04 17:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76715
2024-11-04 17:47 - INFO - 	 Train Loss: 0.101
2024-11-04 17:47 - INFO - 	 Val. Loss: 0.112
2024-11-04 17:47 - INFO - 	 ROC-AUC: 0.975
2024-11-04 17:47 - INFO - 	 PR-AUC: 0.767
2024-11-04 17:47 - INFO - 	 Best Val. Loss: 0.112
2024-11-04 17:47 - INFO - 	 Best ROC-AUC: 0.975
2024-11-04 17:47 - INFO - 	 Best PR-AUC: 0.767
2024-11-04 17:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-04 17:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-11-04 17:47 - INFO - ---------------------------------------------
2024-11-04 17:55 - INFO - ---------------------------------------------
2024-11-04 17:55 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79339
2024-11-04 17:55 - INFO - 	 Train Loss: 0.091
2024-11-04 17:55 - INFO - 	 Val. Loss: 0.129
2024-11-04 17:55 - INFO - 	 ROC-AUC: 0.977
2024-11-04 17:55 - INFO - 	 PR-AUC: 0.793
2024-11-04 17:55 - INFO - 	 Best Val. Loss: 0.112
2024-11-04 17:55 - INFO - 	 Best ROC-AUC: 0.977
2024-11-04 17:55 - INFO - 	 Best PR-AUC: 0.793
2024-11-04 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-11-04 17:55 - INFO - ---------------------------------------------
2024-11-04 18:03 - INFO - ---------------------------------------------
2024-11-04 18:03 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 18:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82247
2024-11-04 18:03 - INFO - 	 Train Loss: 0.083
2024-11-04 18:03 - INFO - 	 Val. Loss: 0.079
2024-11-04 18:03 - INFO - 	 ROC-AUC: 0.981
2024-11-04 18:03 - INFO - 	 PR-AUC: 0.822
2024-11-04 18:03 - INFO - 	 Best Val. Loss: 0.079
2024-11-04 18:03 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 18:03 - INFO - 	 Best PR-AUC: 0.822
2024-11-04 18:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 18:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-04 18:03 - INFO - ---------------------------------------------
2024-11-04 18:11 - INFO - ---------------------------------------------
2024-11-04 18:11 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87751
2024-11-04 18:11 - INFO - 	 Train Loss: 0.077
2024-11-04 18:11 - INFO - 	 Val. Loss: 0.069
2024-11-04 18:11 - INFO - 	 ROC-AUC: 0.985
2024-11-04 18:11 - INFO - 	 PR-AUC: 0.878
2024-11-04 18:11 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 18:11 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 18:11 - INFO - 	 Best PR-AUC: 0.878
2024-11-04 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-04 18:11 - INFO - ---------------------------------------------
2024-11-04 18:19 - INFO - ---------------------------------------------
2024-11-04 18:19 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-04 18:19 - INFO - 	 Train Loss: 0.072
2024-11-04 18:19 - INFO - 	 Val. Loss: 0.069
2024-11-04 18:19 - INFO - 	 ROC-AUC: 0.986
2024-11-04 18:19 - INFO - 	 PR-AUC: 0.864
2024-11-04 18:19 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 18:19 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 18:19 - INFO - 	 Best PR-AUC: 0.878
2024-11-04 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-04 18:19 - INFO - ---------------------------------------------
2024-11-04 18:27 - INFO - ---------------------------------------------
2024-11-04 18:27 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-04 18:27 - INFO - 	 Train Loss: 0.067
2024-11-04 18:27 - INFO - 	 Val. Loss: 0.063
2024-11-04 18:27 - INFO - 	 ROC-AUC: 0.987
2024-11-04 18:27 - INFO - 	 PR-AUC: 0.873
2024-11-04 18:27 - INFO - 	 Best Val. Loss: 0.063
2024-11-04 18:27 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 18:27 - INFO - 	 Best PR-AUC: 0.878
2024-11-04 18:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 18:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-04 18:27 - INFO - ---------------------------------------------
2024-11-04 18:35 - INFO - ---------------------------------------------
2024-11-04 18:35 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-04 18:35 - INFO - 	 Train Loss: 0.064
2024-11-04 18:35 - INFO - 	 Val. Loss: 0.062
2024-11-04 18:35 - INFO - 	 ROC-AUC: 0.988
2024-11-04 18:35 - INFO - 	 PR-AUC: 0.873
2024-11-04 18:35 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 18:35 - INFO - 	 Best ROC-AUC: 0.988
2024-11-04 18:35 - INFO - 	 Best PR-AUC: 0.878
2024-11-04 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-04 18:35 - INFO - ---------------------------------------------
2024-11-04 18:46 - INFO - Fit the preprocessing pipeline
2024-11-04 18:46 - INFO - Training using device: cuda
2024-11-04 18:46 - INFO - Creating generators
2024-11-04 18:46 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 18:46 - INFO - * Model:
2024-11-04 18:46 - INFO - * -----------
2024-11-04 18:46 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 18:46 - INFO - * -----------
2024-11-04 18:54 - INFO - ---------------------------------------------
2024-11-04 18:54 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-04 18:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36655
2024-11-04 18:54 - INFO - 	 Train Loss: 0.234
2024-11-04 18:54 - INFO - 	 Val. Loss: 0.379
2024-11-04 18:54 - INFO - 	 ROC-AUC: 0.880
2024-11-04 18:54 - INFO - 	 PR-AUC: 0.367
2024-11-04 18:54 - INFO - 	 Best Val. Loss: 0.379
2024-11-04 18:54 - INFO - 	 Best ROC-AUC: 0.880
2024-11-04 18:54 - INFO - 	 Best PR-AUC: 0.367
2024-11-04 18:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.874
2024-11-04 18:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-11-04 18:54 - INFO - ---------------------------------------------
2024-11-04 19:02 - INFO - ---------------------------------------------
2024-11-04 19:02 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75605
2024-11-04 19:02 - INFO - 	 Train Loss: 0.126
2024-11-04 19:02 - INFO - 	 Val. Loss: 0.127
2024-11-04 19:02 - INFO - 	 ROC-AUC: 0.971
2024-11-04 19:02 - INFO - 	 PR-AUC: 0.756
2024-11-04 19:02 - INFO - 	 Best Val. Loss: 0.127
2024-11-04 19:02 - INFO - 	 Best ROC-AUC: 0.971
2024-11-04 19:02 - INFO - 	 Best PR-AUC: 0.756
2024-11-04 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-04 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-11-04 19:02 - INFO - ---------------------------------------------
2024-11-04 19:10 - INFO - ---------------------------------------------
2024-11-04 19:10 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-04 19:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79841
2024-11-04 19:10 - INFO - 	 Train Loss: 0.091
2024-11-04 19:10 - INFO - 	 Val. Loss: 0.100
2024-11-04 19:10 - INFO - 	 ROC-AUC: 0.979
2024-11-04 19:10 - INFO - 	 PR-AUC: 0.798
2024-11-04 19:10 - INFO - 	 Best Val. Loss: 0.100
2024-11-04 19:10 - INFO - 	 Best ROC-AUC: 0.979
2024-11-04 19:10 - INFO - 	 Best PR-AUC: 0.798
2024-11-04 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-04 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-11-04 19:10 - INFO - ---------------------------------------------
2024-11-04 19:18 - INFO - ---------------------------------------------
2024-11-04 19:18 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-04 19:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83857
2024-11-04 19:18 - INFO - 	 Train Loss: 0.082
2024-11-04 19:18 - INFO - 	 Val. Loss: 0.073
2024-11-04 19:18 - INFO - 	 ROC-AUC: 0.984
2024-11-04 19:18 - INFO - 	 PR-AUC: 0.839
2024-11-04 19:18 - INFO - 	 Best Val. Loss: 0.073
2024-11-04 19:18 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 19:18 - INFO - 	 Best PR-AUC: 0.839
2024-11-04 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-04 19:18 - INFO - ---------------------------------------------
2024-11-04 19:26 - INFO - ---------------------------------------------
2024-11-04 19:26 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-04 19:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85339
2024-11-04 19:26 - INFO - 	 Train Loss: 0.078
2024-11-04 19:26 - INFO - 	 Val. Loss: 0.078
2024-11-04 19:26 - INFO - 	 ROC-AUC: 0.985
2024-11-04 19:26 - INFO - 	 PR-AUC: 0.853
2024-11-04 19:26 - INFO - 	 Best Val. Loss: 0.073
2024-11-04 19:26 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 19:26 - INFO - 	 Best PR-AUC: 0.853
2024-11-04 19:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 19:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-11-04 19:26 - INFO - ---------------------------------------------
2024-11-04 19:34 - INFO - ---------------------------------------------
2024-11-04 19:34 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-04 19:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87134
2024-11-04 19:34 - INFO - 	 Train Loss: 0.073
2024-11-04 19:34 - INFO - 	 Val. Loss: 0.065
2024-11-04 19:34 - INFO - 	 ROC-AUC: 0.986
2024-11-04 19:34 - INFO - 	 PR-AUC: 0.871
2024-11-04 19:34 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 19:34 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 19:34 - INFO - 	 Best PR-AUC: 0.871
2024-11-04 19:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 19:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-04 19:34 - INFO - ---------------------------------------------
2024-11-04 19:42 - INFO - ---------------------------------------------
2024-11-04 19:42 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 19:42 - INFO - 	 Train Loss: 0.071
2024-11-04 19:42 - INFO - 	 Val. Loss: 0.065
2024-11-04 19:42 - INFO - 	 ROC-AUC: 0.986
2024-11-04 19:42 - INFO - 	 PR-AUC: 0.864
2024-11-04 19:42 - INFO - 	 Best Val. Loss: 0.065
2024-11-04 19:42 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 19:42 - INFO - 	 Best PR-AUC: 0.871
2024-11-04 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-04 19:42 - INFO - ---------------------------------------------
2024-11-04 19:50 - INFO - ---------------------------------------------
2024-11-04 19:50 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-04 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87667
2024-11-04 19:50 - INFO - 	 Train Loss: 0.067
2024-11-04 19:50 - INFO - 	 Val. Loss: 0.064
2024-11-04 19:50 - INFO - 	 ROC-AUC: 0.986
2024-11-04 19:50 - INFO - 	 PR-AUC: 0.877
2024-11-04 19:50 - INFO - 	 Best Val. Loss: 0.064
2024-11-04 19:50 - INFO - 	 Best ROC-AUC: 0.986
2024-11-04 19:50 - INFO - 	 Best PR-AUC: 0.877
2024-11-04 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-04 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-04 19:50 - INFO - ---------------------------------------------
2024-11-04 19:58 - INFO - ---------------------------------------------
2024-11-04 19:58 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-04 19:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88097
2024-11-04 19:58 - INFO - 	 Train Loss: 0.065
2024-11-04 19:58 - INFO - 	 Val. Loss: 0.061
2024-11-04 19:58 - INFO - 	 ROC-AUC: 0.987
2024-11-04 19:58 - INFO - 	 PR-AUC: 0.881
2024-11-04 19:58 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 19:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 19:58 - INFO - 	 Best PR-AUC: 0.881
2024-11-04 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-04 19:58 - INFO - ---------------------------------------------
2024-11-04 20:06 - INFO - ---------------------------------------------
2024-11-04 20:06 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-04 20:06 - INFO - 	 Train Loss: 0.062
2024-11-04 20:06 - INFO - 	 Val. Loss: 0.061
2024-11-04 20:06 - INFO - 	 ROC-AUC: 0.988
2024-11-04 20:06 - INFO - 	 PR-AUC: 0.881
2024-11-04 20:06 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 20:06 - INFO - 	 Best ROC-AUC: 0.988
2024-11-04 20:06 - INFO - 	 Best PR-AUC: 0.881
2024-11-04 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-04 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-04 20:06 - INFO - ---------------------------------------------
