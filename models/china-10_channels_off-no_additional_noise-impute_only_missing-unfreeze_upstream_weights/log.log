2024-11-21 19:55 - INFO - Fit the preprocessing pipeline
2024-11-21 19:55 - INFO - Training using device: cuda
2024-11-21 19:55 - INFO - Creating generators
2024-11-21 19:55 - INFO - The model has 2,246,929 trainable parameters
2024-11-21 19:55 - INFO - * Model:
2024-11-21 19:55 - INFO - * -----------
2024-11-21 19:55 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-21 19:55 - INFO - * -----------
2024-11-21 20:02 - INFO - ---------------------------------------------
2024-11-21 20:02 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-21 20:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24759
2024-11-21 20:02 - INFO - 	 Train Loss: 0.154
2024-11-21 20:02 - INFO - 	 Val. Loss: 0.218
2024-11-21 20:02 - INFO - 	 ROC-AUC: 0.882
2024-11-21 20:02 - INFO - 	 PR-AUC: 0.248
2024-11-21 20:02 - INFO - 	 Best Val. Loss: 0.218
2024-11-21 20:02 - INFO - 	 Best ROC-AUC: 0.882
2024-11-21 20:02 - INFO - 	 Best PR-AUC: 0.248
2024-11-21 20:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.826
2024-11-21 20:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-21 20:02 - INFO - ---------------------------------------------
2024-11-21 20:10 - INFO - ---------------------------------------------
2024-11-21 20:10 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-21 20:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41528
2024-11-21 20:10 - INFO - 	 Train Loss: 0.140
2024-11-21 20:10 - INFO - 	 Val. Loss: 0.190
2024-11-21 20:10 - INFO - 	 ROC-AUC: 0.941
2024-11-21 20:10 - INFO - 	 PR-AUC: 0.415
2024-11-21 20:10 - INFO - 	 Best Val. Loss: 0.190
2024-11-21 20:10 - INFO - 	 Best ROC-AUC: 0.941
2024-11-21 20:10 - INFO - 	 Best PR-AUC: 0.415
2024-11-21 20:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-21 20:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.251
2024-11-21 20:10 - INFO - ---------------------------------------------
2024-11-21 20:17 - INFO - ---------------------------------------------
2024-11-21 20:17 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-21 20:17 - INFO - 	 Train Loss: 0.128
2024-11-21 20:17 - INFO - 	 Val. Loss: 0.164
2024-11-21 20:17 - INFO - 	 ROC-AUC: 0.915
2024-11-21 20:17 - INFO - 	 PR-AUC: 0.357
2024-11-21 20:17 - INFO - 	 Best Val. Loss: 0.164
2024-11-21 20:17 - INFO - 	 Best ROC-AUC: 0.941
2024-11-21 20:17 - INFO - 	 Best PR-AUC: 0.415
2024-11-21 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-21 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.251
2024-11-21 20:17 - INFO - ---------------------------------------------
2024-11-21 20:24 - INFO - ---------------------------------------------
2024-11-21 20:24 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-21 20:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4617
2024-11-21 20:24 - INFO - 	 Train Loss: 0.121
2024-11-21 20:24 - INFO - 	 Val. Loss: 0.140
2024-11-21 20:24 - INFO - 	 ROC-AUC: 0.942
2024-11-21 20:24 - INFO - 	 PR-AUC: 0.462
2024-11-21 20:24 - INFO - 	 Best Val. Loss: 0.140
2024-11-21 20:24 - INFO - 	 Best ROC-AUC: 0.942
2024-11-21 20:24 - INFO - 	 Best PR-AUC: 0.462
2024-11-21 20:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.910
2024-11-21 20:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-21 20:24 - INFO - ---------------------------------------------
2024-11-21 20:31 - INFO - ---------------------------------------------
2024-11-21 20:31 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-21 20:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49098
2024-11-21 20:31 - INFO - 	 Train Loss: 0.120
2024-11-21 20:31 - INFO - 	 Val. Loss: 0.118
2024-11-21 20:31 - INFO - 	 ROC-AUC: 0.952
2024-11-21 20:31 - INFO - 	 PR-AUC: 0.491
2024-11-21 20:31 - INFO - 	 Best Val. Loss: 0.118
2024-11-21 20:31 - INFO - 	 Best ROC-AUC: 0.952
2024-11-21 20:31 - INFO - 	 Best PR-AUC: 0.491
2024-11-21 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-21 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.305
2024-11-21 20:31 - INFO - ---------------------------------------------
2024-11-21 20:38 - INFO - ---------------------------------------------
2024-11-21 20:38 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-21 20:38 - INFO - 	 Train Loss: 0.116
2024-11-21 20:38 - INFO - 	 Val. Loss: 0.138
2024-11-21 20:38 - INFO - 	 ROC-AUC: 0.944
2024-11-21 20:38 - INFO - 	 PR-AUC: 0.463
2024-11-21 20:38 - INFO - 	 Best Val. Loss: 0.118
2024-11-21 20:38 - INFO - 	 Best ROC-AUC: 0.952
2024-11-21 20:38 - INFO - 	 Best PR-AUC: 0.491
2024-11-21 20:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-21 20:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.305
2024-11-21 20:38 - INFO - ---------------------------------------------
2024-11-21 20:45 - INFO - ---------------------------------------------
2024-11-21 20:45 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-21 20:45 - INFO - 	 Train Loss: 0.116
2024-11-21 20:45 - INFO - 	 Val. Loss: 0.151
2024-11-21 20:45 - INFO - 	 ROC-AUC: 0.925
2024-11-21 20:45 - INFO - 	 PR-AUC: 0.389
2024-11-21 20:45 - INFO - 	 Best Val. Loss: 0.118
2024-11-21 20:45 - INFO - 	 Best ROC-AUC: 0.952
2024-11-21 20:45 - INFO - 	 Best PR-AUC: 0.491
2024-11-21 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-21 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.305
2024-11-21 20:45 - INFO - ---------------------------------------------
2024-11-21 20:52 - INFO - ---------------------------------------------
2024-11-21 20:52 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-21 20:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51173
2024-11-21 20:52 - INFO - 	 Train Loss: 0.115
2024-11-21 20:52 - INFO - 	 Val. Loss: 0.122
2024-11-21 20:52 - INFO - 	 ROC-AUC: 0.956
2024-11-21 20:52 - INFO - 	 PR-AUC: 0.512
2024-11-21 20:52 - INFO - 	 Best Val. Loss: 0.118
2024-11-21 20:52 - INFO - 	 Best ROC-AUC: 0.956
2024-11-21 20:52 - INFO - 	 Best PR-AUC: 0.512
2024-11-21 20:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-21 20:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-21 20:52 - INFO - ---------------------------------------------
2024-11-21 21:00 - INFO - ---------------------------------------------
2024-11-21 21:00 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-21 21:00 - INFO - 	 Train Loss: 0.114
2024-11-21 21:00 - INFO - 	 Val. Loss: 0.164
2024-11-21 21:00 - INFO - 	 ROC-AUC: 0.910
2024-11-21 21:00 - INFO - 	 PR-AUC: 0.344
2024-11-21 21:00 - INFO - 	 Best Val. Loss: 0.118
2024-11-21 21:00 - INFO - 	 Best ROC-AUC: 0.956
2024-11-21 21:00 - INFO - 	 Best PR-AUC: 0.512
2024-11-21 21:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-21 21:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-21 21:00 - INFO - ---------------------------------------------
2024-11-21 21:07 - INFO - ---------------------------------------------
2024-11-21 21:07 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-21 21:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52282
2024-11-21 21:07 - INFO - 	 Train Loss: 0.114
2024-11-21 21:07 - INFO - 	 Val. Loss: 0.124
2024-11-21 21:07 - INFO - 	 ROC-AUC: 0.941
2024-11-21 21:07 - INFO - 	 PR-AUC: 0.523
2024-11-21 21:07 - INFO - 	 Best Val. Loss: 0.118
2024-11-21 21:07 - INFO - 	 Best ROC-AUC: 0.956
2024-11-21 21:07 - INFO - 	 Best PR-AUC: 0.523
2024-11-21 21:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-21 21:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-21 21:07 - INFO - ---------------------------------------------
2024-11-21 21:08 - INFO - Fit the preprocessing pipeline
2024-11-21 21:08 - INFO - Training using device: cuda
2024-11-21 21:08 - INFO - Creating generators
2024-11-21 21:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-21 21:08 - INFO - * Model:
2024-11-21 21:08 - INFO - * -----------
2024-11-21 21:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-21 21:08 - INFO - * -----------
2024-11-21 21:15 - INFO - ---------------------------------------------
2024-11-21 21:15 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-21 21:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3462
2024-11-21 21:15 - INFO - 	 Train Loss: 0.157
2024-11-21 21:15 - INFO - 	 Val. Loss: 0.173
2024-11-21 21:15 - INFO - 	 ROC-AUC: 0.910
2024-11-21 21:15 - INFO - 	 PR-AUC: 0.346
2024-11-21 21:15 - INFO - 	 Best Val. Loss: 0.173
2024-11-21 21:15 - INFO - 	 Best ROC-AUC: 0.910
2024-11-21 21:15 - INFO - 	 Best PR-AUC: 0.346
2024-11-21 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.856
2024-11-21 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.191
2024-11-21 21:15 - INFO - ---------------------------------------------
2024-11-21 21:23 - INFO - ---------------------------------------------
2024-11-21 21:23 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-21 21:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39026
2024-11-21 21:23 - INFO - 	 Train Loss: 0.134
2024-11-21 21:23 - INFO - 	 Val. Loss: 0.162
2024-11-21 21:23 - INFO - 	 ROC-AUC: 0.922
2024-11-21 21:23 - INFO - 	 PR-AUC: 0.390
2024-11-21 21:23 - INFO - 	 Best Val. Loss: 0.162
2024-11-21 21:23 - INFO - 	 Best ROC-AUC: 0.922
2024-11-21 21:23 - INFO - 	 Best PR-AUC: 0.390
2024-11-21 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.878
2024-11-21 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.214
2024-11-21 21:23 - INFO - ---------------------------------------------
2024-11-21 21:30 - INFO - ---------------------------------------------
2024-11-21 21:30 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-21 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46593
2024-11-21 21:30 - INFO - 	 Train Loss: 0.127
2024-11-21 21:30 - INFO - 	 Val. Loss: 0.121
2024-11-21 21:30 - INFO - 	 ROC-AUC: 0.944
2024-11-21 21:30 - INFO - 	 PR-AUC: 0.466
2024-11-21 21:30 - INFO - 	 Best Val. Loss: 0.121
2024-11-21 21:30 - INFO - 	 Best ROC-AUC: 0.944
2024-11-21 21:30 - INFO - 	 Best PR-AUC: 0.466
2024-11-21 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-21 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.297
2024-11-21 21:30 - INFO - ---------------------------------------------
2024-11-21 21:37 - INFO - ---------------------------------------------
2024-11-21 21:37 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-21 21:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47138
2024-11-21 21:37 - INFO - 	 Train Loss: 0.122
2024-11-21 21:37 - INFO - 	 Val. Loss: 0.127
2024-11-21 21:37 - INFO - 	 ROC-AUC: 0.952
2024-11-21 21:37 - INFO - 	 PR-AUC: 0.471
2024-11-21 21:37 - INFO - 	 Best Val. Loss: 0.121
2024-11-21 21:37 - INFO - 	 Best ROC-AUC: 0.952
2024-11-21 21:37 - INFO - 	 Best PR-AUC: 0.471
2024-11-21 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-21 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-21 21:37 - INFO - ---------------------------------------------
2024-11-21 21:44 - INFO - ---------------------------------------------
2024-11-21 21:44 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-21 21:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51485
2024-11-21 21:44 - INFO - 	 Train Loss: 0.119
2024-11-21 21:44 - INFO - 	 Val. Loss: 0.122
2024-11-21 21:44 - INFO - 	 ROC-AUC: 0.954
2024-11-21 21:44 - INFO - 	 PR-AUC: 0.515
2024-11-21 21:44 - INFO - 	 Best Val. Loss: 0.121
2024-11-21 21:44 - INFO - 	 Best ROC-AUC: 0.954
2024-11-21 21:44 - INFO - 	 Best PR-AUC: 0.515
2024-11-21 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-21 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-21 21:44 - INFO - ---------------------------------------------
2024-11-21 21:51 - INFO - ---------------------------------------------
2024-11-21 21:51 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-21 21:51 - INFO - 	 Train Loss: 0.119
2024-11-21 21:51 - INFO - 	 Val. Loss: 0.173
2024-11-21 21:51 - INFO - 	 ROC-AUC: 0.902
2024-11-21 21:51 - INFO - 	 PR-AUC: 0.347
2024-11-21 21:51 - INFO - 	 Best Val. Loss: 0.121
2024-11-21 21:51 - INFO - 	 Best ROC-AUC: 0.954
2024-11-21 21:51 - INFO - 	 Best PR-AUC: 0.515
2024-11-21 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-21 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-21 21:51 - INFO - ---------------------------------------------
2024-11-21 21:58 - INFO - ---------------------------------------------
2024-11-21 21:58 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-21 21:58 - INFO - 	 Train Loss: 0.115
2024-11-21 21:58 - INFO - 	 Val. Loss: 0.123
2024-11-21 21:58 - INFO - 	 ROC-AUC: 0.945
2024-11-21 21:58 - INFO - 	 PR-AUC: 0.513
2024-11-21 21:58 - INFO - 	 Best Val. Loss: 0.121
2024-11-21 21:58 - INFO - 	 Best ROC-AUC: 0.954
2024-11-21 21:58 - INFO - 	 Best PR-AUC: 0.515
2024-11-21 21:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-21 21:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-21 21:58 - INFO - ---------------------------------------------
2024-11-21 22:05 - INFO - ---------------------------------------------
2024-11-21 22:05 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-21 22:05 - INFO - 	 Train Loss: 0.115
2024-11-21 22:05 - INFO - 	 Val. Loss: 0.132
2024-11-21 22:05 - INFO - 	 ROC-AUC: 0.954
2024-11-21 22:05 - INFO - 	 PR-AUC: 0.453
2024-11-21 22:05 - INFO - 	 Best Val. Loss: 0.121
2024-11-21 22:05 - INFO - 	 Best ROC-AUC: 0.954
2024-11-21 22:05 - INFO - 	 Best PR-AUC: 0.515
2024-11-21 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-21 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-21 22:05 - INFO - ---------------------------------------------
2024-11-21 22:14 - INFO - Fit the preprocessing pipeline
2024-11-21 22:14 - INFO - Training using device: cuda
2024-11-21 22:14 - INFO - Creating generators
2024-11-21 22:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-21 22:14 - INFO - * Model:
2024-11-21 22:14 - INFO - * -----------
2024-11-21 22:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-21 22:14 - INFO - * -----------
2024-11-21 22:21 - INFO - ---------------------------------------------
2024-11-21 22:21 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-21 22:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28346
2024-11-21 22:21 - INFO - 	 Train Loss: 0.157
2024-11-21 22:21 - INFO - 	 Val. Loss: 0.196
2024-11-21 22:21 - INFO - 	 ROC-AUC: 0.882
2024-11-21 22:21 - INFO - 	 PR-AUC: 0.283
2024-11-21 22:21 - INFO - 	 Best Val. Loss: 0.196
2024-11-21 22:21 - INFO - 	 Best ROC-AUC: 0.882
2024-11-21 22:21 - INFO - 	 Best PR-AUC: 0.283
2024-11-21 22:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.821
2024-11-21 22:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-21 22:21 - INFO - ---------------------------------------------
2024-11-21 22:28 - INFO - ---------------------------------------------
2024-11-21 22:28 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-21 22:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31114
2024-11-21 22:28 - INFO - 	 Train Loss: 0.135
2024-11-21 22:28 - INFO - 	 Val. Loss: 0.242
2024-11-21 22:28 - INFO - 	 ROC-AUC: 0.904
2024-11-21 22:28 - INFO - 	 PR-AUC: 0.311
2024-11-21 22:28 - INFO - 	 Best Val. Loss: 0.196
2024-11-21 22:28 - INFO - 	 Best ROC-AUC: 0.904
2024-11-21 22:28 - INFO - 	 Best PR-AUC: 0.311
2024-11-21 22:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.875
2024-11-21 22:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.228
2024-11-21 22:28 - INFO - ---------------------------------------------
2024-11-21 22:36 - INFO - ---------------------------------------------
2024-11-21 22:36 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-21 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41995
2024-11-21 22:36 - INFO - 	 Train Loss: 0.131
2024-11-21 22:36 - INFO - 	 Val. Loss: 0.141
2024-11-21 22:36 - INFO - 	 ROC-AUC: 0.939
2024-11-21 22:36 - INFO - 	 PR-AUC: 0.420
2024-11-21 22:36 - INFO - 	 Best Val. Loss: 0.141
2024-11-21 22:36 - INFO - 	 Best ROC-AUC: 0.939
2024-11-21 22:36 - INFO - 	 Best PR-AUC: 0.420
2024-11-21 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.902
2024-11-21 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-21 22:36 - INFO - ---------------------------------------------
2024-11-21 22:43 - INFO - ---------------------------------------------
2024-11-21 22:43 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-21 22:43 - INFO - 	 Train Loss: 0.123
2024-11-21 22:43 - INFO - 	 Val. Loss: 0.155
2024-11-21 22:43 - INFO - 	 ROC-AUC: 0.912
2024-11-21 22:43 - INFO - 	 PR-AUC: 0.366
2024-11-21 22:43 - INFO - 	 Best Val. Loss: 0.141
2024-11-21 22:43 - INFO - 	 Best ROC-AUC: 0.939
2024-11-21 22:43 - INFO - 	 Best PR-AUC: 0.420
2024-11-21 22:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.902
2024-11-21 22:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-21 22:43 - INFO - ---------------------------------------------
2024-11-21 22:50 - INFO - ---------------------------------------------
2024-11-21 22:50 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-21 22:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42681
2024-11-21 22:50 - INFO - 	 Train Loss: 0.118
2024-11-21 22:50 - INFO - 	 Val. Loss: 0.137
2024-11-21 22:50 - INFO - 	 ROC-AUC: 0.931
2024-11-21 22:50 - INFO - 	 PR-AUC: 0.427
2024-11-21 22:50 - INFO - 	 Best Val. Loss: 0.137
2024-11-21 22:50 - INFO - 	 Best ROC-AUC: 0.939
2024-11-21 22:50 - INFO - 	 Best PR-AUC: 0.427
2024-11-21 22:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.902
2024-11-21 22:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.263
2024-11-21 22:50 - INFO - ---------------------------------------------
2024-11-21 22:57 - INFO - ---------------------------------------------
2024-11-21 22:57 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-21 22:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52996
2024-11-21 22:57 - INFO - 	 Train Loss: 0.115
2024-11-21 22:57 - INFO - 	 Val. Loss: 0.116
2024-11-21 22:57 - INFO - 	 ROC-AUC: 0.950
2024-11-21 22:57 - INFO - 	 PR-AUC: 0.530
2024-11-21 22:57 - INFO - 	 Best Val. Loss: 0.116
2024-11-21 22:57 - INFO - 	 Best ROC-AUC: 0.950
2024-11-21 22:57 - INFO - 	 Best PR-AUC: 0.530
2024-11-21 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-21 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.308
2024-11-21 22:57 - INFO - ---------------------------------------------
2024-11-21 23:04 - INFO - ---------------------------------------------
2024-11-21 23:04 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-21 23:04 - INFO - 	 Train Loss: 0.113
2024-11-21 23:04 - INFO - 	 Val. Loss: 0.180
2024-11-21 23:04 - INFO - 	 ROC-AUC: 0.886
2024-11-21 23:04 - INFO - 	 PR-AUC: 0.308
2024-11-21 23:04 - INFO - 	 Best Val. Loss: 0.116
2024-11-21 23:04 - INFO - 	 Best ROC-AUC: 0.950
2024-11-21 23:04 - INFO - 	 Best PR-AUC: 0.530
2024-11-21 23:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-21 23:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.308
2024-11-21 23:04 - INFO - ---------------------------------------------
2024-11-21 23:11 - INFO - ---------------------------------------------
2024-11-21 23:11 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-21 23:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55544
2024-11-21 23:11 - INFO - 	 Train Loss: 0.115
2024-11-21 23:11 - INFO - 	 Val. Loss: 0.114
2024-11-21 23:11 - INFO - 	 ROC-AUC: 0.963
2024-11-21 23:11 - INFO - 	 PR-AUC: 0.555
2024-11-21 23:11 - INFO - 	 Best Val. Loss: 0.114
2024-11-21 23:11 - INFO - 	 Best ROC-AUC: 0.963
2024-11-21 23:11 - INFO - 	 Best PR-AUC: 0.555
2024-11-21 23:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-21 23:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-21 23:11 - INFO - ---------------------------------------------
2024-11-21 23:18 - INFO - ---------------------------------------------
2024-11-21 23:18 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-21 23:18 - INFO - 	 Train Loss: 0.115
2024-11-21 23:18 - INFO - 	 Val. Loss: 0.132
2024-11-21 23:18 - INFO - 	 ROC-AUC: 0.944
2024-11-21 23:18 - INFO - 	 PR-AUC: 0.482
2024-11-21 23:18 - INFO - 	 Best Val. Loss: 0.114
2024-11-21 23:18 - INFO - 	 Best ROC-AUC: 0.963
2024-11-21 23:18 - INFO - 	 Best PR-AUC: 0.555
2024-11-21 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-21 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-21 23:18 - INFO - ---------------------------------------------
2024-11-21 23:26 - INFO - ---------------------------------------------
2024-11-21 23:26 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-21 23:26 - INFO - 	 Train Loss: 0.112
2024-11-21 23:26 - INFO - 	 Val. Loss: 0.150
2024-11-21 23:26 - INFO - 	 ROC-AUC: 0.913
2024-11-21 23:26 - INFO - 	 PR-AUC: 0.396
2024-11-21 23:26 - INFO - 	 Best Val. Loss: 0.114
2024-11-21 23:26 - INFO - 	 Best ROC-AUC: 0.963
2024-11-21 23:26 - INFO - 	 Best PR-AUC: 0.555
2024-11-21 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-21 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-21 23:26 - INFO - ---------------------------------------------
2024-11-21 23:27 - INFO - Fit the preprocessing pipeline
2024-11-21 23:27 - INFO - Training using device: cuda
2024-11-21 23:27 - INFO - Creating generators
2024-11-21 23:27 - INFO - The model has 2,246,929 trainable parameters
2024-11-21 23:27 - INFO - * Model:
2024-11-21 23:27 - INFO - * -----------
2024-11-21 23:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-21 23:27 - INFO - * -----------
2024-11-21 23:34 - INFO - ---------------------------------------------
2024-11-21 23:34 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-21 23:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33094
2024-11-21 23:34 - INFO - 	 Train Loss: 0.154
2024-11-21 23:34 - INFO - 	 Val. Loss: 0.177
2024-11-21 23:34 - INFO - 	 ROC-AUC: 0.913
2024-11-21 23:34 - INFO - 	 PR-AUC: 0.331
2024-11-21 23:34 - INFO - 	 Best Val. Loss: 0.177
2024-11-21 23:34 - INFO - 	 Best ROC-AUC: 0.913
2024-11-21 23:34 - INFO - 	 Best PR-AUC: 0.331
2024-11-21 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.864
2024-11-21 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-21 23:34 - INFO - ---------------------------------------------
2024-11-21 23:42 - INFO - ---------------------------------------------
2024-11-21 23:42 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-21 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4008
2024-11-21 23:42 - INFO - 	 Train Loss: 0.134
2024-11-21 23:42 - INFO - 	 Val. Loss: 0.157
2024-11-21 23:42 - INFO - 	 ROC-AUC: 0.939
2024-11-21 23:42 - INFO - 	 PR-AUC: 0.401
2024-11-21 23:42 - INFO - 	 Best Val. Loss: 0.157
2024-11-21 23:42 - INFO - 	 Best ROC-AUC: 0.939
2024-11-21 23:42 - INFO - 	 Best PR-AUC: 0.401
2024-11-21 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.884
2024-11-21 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.214
2024-11-21 23:42 - INFO - ---------------------------------------------
2024-11-21 23:49 - INFO - ---------------------------------------------
2024-11-21 23:49 - INFO - Epoch: 03 | Time: 7m 10s
2024-11-21 23:49 - INFO - 	 Train Loss: 0.125
2024-11-21 23:49 - INFO - 	 Val. Loss: 0.221
2024-11-21 23:49 - INFO - 	 ROC-AUC: 0.929
2024-11-21 23:49 - INFO - 	 PR-AUC: 0.389
2024-11-21 23:49 - INFO - 	 Best Val. Loss: 0.157
2024-11-21 23:49 - INFO - 	 Best ROC-AUC: 0.939
2024-11-21 23:49 - INFO - 	 Best PR-AUC: 0.401
2024-11-21 23:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.884
2024-11-21 23:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.214
2024-11-21 23:49 - INFO - ---------------------------------------------
2024-11-21 23:56 - INFO - ---------------------------------------------
2024-11-21 23:56 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-21 23:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45369
2024-11-21 23:56 - INFO - 	 Train Loss: 0.125
2024-11-21 23:56 - INFO - 	 Val. Loss: 0.142
2024-11-21 23:56 - INFO - 	 ROC-AUC: 0.948
2024-11-21 23:56 - INFO - 	 PR-AUC: 0.454
2024-11-21 23:56 - INFO - 	 Best Val. Loss: 0.142
2024-11-21 23:56 - INFO - 	 Best ROC-AUC: 0.948
2024-11-21 23:56 - INFO - 	 Best PR-AUC: 0.454
2024-11-21 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-21 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.290
2024-11-21 23:56 - INFO - ---------------------------------------------
2024-11-22 00:03 - INFO - ---------------------------------------------
2024-11-22 00:03 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-22 00:03 - INFO - 	 Train Loss: 0.124
2024-11-22 00:03 - INFO - 	 Val. Loss: 0.152
2024-11-22 00:03 - INFO - 	 ROC-AUC: 0.934
2024-11-22 00:03 - INFO - 	 PR-AUC: 0.430
2024-11-22 00:03 - INFO - 	 Best Val. Loss: 0.142
2024-11-22 00:03 - INFO - 	 Best ROC-AUC: 0.948
2024-11-22 00:03 - INFO - 	 Best PR-AUC: 0.454
2024-11-22 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-22 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.290
2024-11-22 00:03 - INFO - ---------------------------------------------
2024-11-22 00:10 - INFO - ---------------------------------------------
2024-11-22 00:10 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-22 00:10 - INFO - 	 Train Loss: 0.117
2024-11-22 00:10 - INFO - 	 Val. Loss: 0.177
2024-11-22 00:10 - INFO - 	 ROC-AUC: 0.883
2024-11-22 00:10 - INFO - 	 PR-AUC: 0.313
2024-11-22 00:10 - INFO - 	 Best Val. Loss: 0.142
2024-11-22 00:10 - INFO - 	 Best ROC-AUC: 0.948
2024-11-22 00:10 - INFO - 	 Best PR-AUC: 0.454
2024-11-22 00:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-22 00:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.290
2024-11-22 00:10 - INFO - ---------------------------------------------
2024-11-22 00:17 - INFO - ---------------------------------------------
2024-11-22 00:17 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-22 00:17 - INFO - 	 Train Loss: 0.117
2024-11-22 00:17 - INFO - 	 Val. Loss: 0.170
2024-11-22 00:17 - INFO - 	 ROC-AUC: 0.894
2024-11-22 00:17 - INFO - 	 PR-AUC: 0.366
2024-11-22 00:17 - INFO - 	 Best Val. Loss: 0.142
2024-11-22 00:17 - INFO - 	 Best ROC-AUC: 0.948
2024-11-22 00:17 - INFO - 	 Best PR-AUC: 0.454
2024-11-22 00:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-22 00:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.290
2024-11-22 00:17 - INFO - ---------------------------------------------
2024-11-22 00:26 - INFO - Fit the preprocessing pipeline
2024-11-22 00:26 - INFO - Training using device: cuda
2024-11-22 00:26 - INFO - Creating generators
2024-11-22 00:26 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 00:26 - INFO - * Model:
2024-11-22 00:26 - INFO - * -----------
2024-11-22 00:26 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 00:26 - INFO - * -----------
2024-11-22 00:33 - INFO - ---------------------------------------------
2024-11-22 00:33 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-22 00:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38726
2024-11-22 00:33 - INFO - 	 Train Loss: 0.155
2024-11-22 00:33 - INFO - 	 Val. Loss: 0.158
2024-11-22 00:33 - INFO - 	 ROC-AUC: 0.937
2024-11-22 00:33 - INFO - 	 PR-AUC: 0.387
2024-11-22 00:33 - INFO - 	 Best Val. Loss: 0.158
2024-11-22 00:33 - INFO - 	 Best ROC-AUC: 0.937
2024-11-22 00:33 - INFO - 	 Best PR-AUC: 0.387
2024-11-22 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.887
2024-11-22 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.223
2024-11-22 00:33 - INFO - ---------------------------------------------
2024-11-22 00:40 - INFO - ---------------------------------------------
2024-11-22 00:40 - INFO - Epoch: 02 | Time: 7m 10s
2024-11-22 00:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.398
2024-11-22 00:40 - INFO - 	 Train Loss: 0.134
2024-11-22 00:40 - INFO - 	 Val. Loss: 0.124
2024-11-22 00:40 - INFO - 	 ROC-AUC: 0.941
2024-11-22 00:40 - INFO - 	 PR-AUC: 0.398
2024-11-22 00:40 - INFO - 	 Best Val. Loss: 0.124
2024-11-22 00:40 - INFO - 	 Best ROC-AUC: 0.941
2024-11-22 00:40 - INFO - 	 Best PR-AUC: 0.398
2024-11-22 00:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-22 00:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.233
2024-11-22 00:40 - INFO - ---------------------------------------------
2024-11-22 00:48 - INFO - ---------------------------------------------
2024-11-22 00:48 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-22 00:48 - INFO - 	 Train Loss: 0.127
2024-11-22 00:48 - INFO - 	 Val. Loss: 0.241
2024-11-22 00:48 - INFO - 	 ROC-AUC: 0.787
2024-11-22 00:48 - INFO - 	 PR-AUC: 0.184
2024-11-22 00:48 - INFO - 	 Best Val. Loss: 0.124
2024-11-22 00:48 - INFO - 	 Best ROC-AUC: 0.941
2024-11-22 00:48 - INFO - 	 Best PR-AUC: 0.398
2024-11-22 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-22 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.233
2024-11-22 00:48 - INFO - ---------------------------------------------
2024-11-22 00:55 - INFO - ---------------------------------------------
2024-11-22 00:55 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-22 00:55 - INFO - 	 Train Loss: 0.122
2024-11-22 00:55 - INFO - 	 Val. Loss: 0.157
2024-11-22 00:55 - INFO - 	 ROC-AUC: 0.907
2024-11-22 00:55 - INFO - 	 PR-AUC: 0.349
2024-11-22 00:55 - INFO - 	 Best Val. Loss: 0.124
2024-11-22 00:55 - INFO - 	 Best ROC-AUC: 0.941
2024-11-22 00:55 - INFO - 	 Best PR-AUC: 0.398
2024-11-22 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-22 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.233
2024-11-22 00:55 - INFO - ---------------------------------------------
2024-11-22 01:02 - INFO - ---------------------------------------------
2024-11-22 01:02 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-22 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47232
2024-11-22 01:02 - INFO - 	 Train Loss: 0.119
2024-11-22 01:02 - INFO - 	 Val. Loss: 0.124
2024-11-22 01:02 - INFO - 	 ROC-AUC: 0.949
2024-11-22 01:02 - INFO - 	 PR-AUC: 0.472
2024-11-22 01:02 - INFO - 	 Best Val. Loss: 0.124
2024-11-22 01:02 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 01:02 - INFO - 	 Best PR-AUC: 0.472
2024-11-22 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-22 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.295
2024-11-22 01:02 - INFO - ---------------------------------------------
2024-11-22 01:09 - INFO - ---------------------------------------------
2024-11-22 01:09 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-22 01:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50019
2024-11-22 01:09 - INFO - 	 Train Loss: 0.118
2024-11-22 01:09 - INFO - 	 Val. Loss: 0.115
2024-11-22 01:09 - INFO - 	 ROC-AUC: 0.945
2024-11-22 01:09 - INFO - 	 PR-AUC: 0.500
2024-11-22 01:09 - INFO - 	 Best Val. Loss: 0.115
2024-11-22 01:09 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 01:09 - INFO - 	 Best PR-AUC: 0.500
2024-11-22 01:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-22 01:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-22 01:09 - INFO - ---------------------------------------------
2024-11-22 01:16 - INFO - ---------------------------------------------
2024-11-22 01:16 - INFO - Epoch: 07 | Time: 7m 10s
2024-11-22 01:16 - INFO - 	 Train Loss: 0.116
2024-11-22 01:16 - INFO - 	 Val. Loss: 0.129
2024-11-22 01:16 - INFO - 	 ROC-AUC: 0.915
2024-11-22 01:16 - INFO - 	 PR-AUC: 0.472
2024-11-22 01:16 - INFO - 	 Best Val. Loss: 0.115
2024-11-22 01:16 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 01:16 - INFO - 	 Best PR-AUC: 0.500
2024-11-22 01:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-22 01:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-22 01:16 - INFO - ---------------------------------------------
2024-11-22 01:23 - INFO - ---------------------------------------------
2024-11-22 01:23 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-22 01:23 - INFO - 	 Train Loss: 0.114
2024-11-22 01:23 - INFO - 	 Val. Loss: 0.131
2024-11-22 01:23 - INFO - 	 ROC-AUC: 0.945
2024-11-22 01:23 - INFO - 	 PR-AUC: 0.480
2024-11-22 01:23 - INFO - 	 Best Val. Loss: 0.115
2024-11-22 01:23 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 01:23 - INFO - 	 Best PR-AUC: 0.500
2024-11-22 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-22 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-22 01:23 - INFO - ---------------------------------------------
2024-11-22 01:30 - INFO - ---------------------------------------------
2024-11-22 01:30 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-22 01:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50876
2024-11-22 01:30 - INFO - 	 Train Loss: 0.114
2024-11-22 01:30 - INFO - 	 Val. Loss: 0.119
2024-11-22 01:30 - INFO - 	 ROC-AUC: 0.955
2024-11-22 01:30 - INFO - 	 PR-AUC: 0.509
2024-11-22 01:30 - INFO - 	 Best Val. Loss: 0.115
2024-11-22 01:30 - INFO - 	 Best ROC-AUC: 0.955
2024-11-22 01:30 - INFO - 	 Best PR-AUC: 0.509
2024-11-22 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-22 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.325
2024-11-22 01:30 - INFO - ---------------------------------------------
2024-11-22 01:38 - INFO - ---------------------------------------------
2024-11-22 01:38 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-22 01:38 - INFO - 	 Train Loss: 0.113
2024-11-22 01:38 - INFO - 	 Val. Loss: 0.142
2024-11-22 01:38 - INFO - 	 ROC-AUC: 0.937
2024-11-22 01:38 - INFO - 	 PR-AUC: 0.416
2024-11-22 01:38 - INFO - 	 Best Val. Loss: 0.115
2024-11-22 01:38 - INFO - 	 Best ROC-AUC: 0.955
2024-11-22 01:38 - INFO - 	 Best PR-AUC: 0.509
2024-11-22 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-22 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.325
2024-11-22 01:38 - INFO - ---------------------------------------------
2024-11-22 01:39 - INFO - Fit the preprocessing pipeline
2024-11-22 01:39 - INFO - Training using device: cuda
2024-11-22 01:39 - INFO - Creating generators
2024-11-22 01:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 01:39 - INFO - * Model:
2024-11-22 01:39 - INFO - * -----------
2024-11-22 01:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 01:39 - INFO - * -----------
2024-11-22 01:46 - INFO - ---------------------------------------------
2024-11-22 01:46 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-22 01:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37985
2024-11-22 01:46 - INFO - 	 Train Loss: 0.155
2024-11-22 01:46 - INFO - 	 Val. Loss: 0.165
2024-11-22 01:46 - INFO - 	 ROC-AUC: 0.927
2024-11-22 01:46 - INFO - 	 PR-AUC: 0.380
2024-11-22 01:46 - INFO - 	 Best Val. Loss: 0.165
2024-11-22 01:46 - INFO - 	 Best ROC-AUC: 0.927
2024-11-22 01:46 - INFO - 	 Best PR-AUC: 0.380
2024-11-22 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.885
2024-11-22 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.217
2024-11-22 01:46 - INFO - ---------------------------------------------
2024-11-22 01:54 - INFO - ---------------------------------------------
2024-11-22 01:54 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-22 01:54 - INFO - 	 Train Loss: 0.140
2024-11-22 01:54 - INFO - 	 Val. Loss: 0.235
2024-11-22 01:54 - INFO - 	 ROC-AUC: 0.876
2024-11-22 01:54 - INFO - 	 PR-AUC: 0.216
2024-11-22 01:54 - INFO - 	 Best Val. Loss: 0.165
2024-11-22 01:54 - INFO - 	 Best ROC-AUC: 0.927
2024-11-22 01:54 - INFO - 	 Best PR-AUC: 0.380
2024-11-22 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.885
2024-11-22 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.217
2024-11-22 01:54 - INFO - ---------------------------------------------
2024-11-22 02:01 - INFO - ---------------------------------------------
2024-11-22 02:01 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-22 02:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43989
2024-11-22 02:01 - INFO - 	 Train Loss: 0.128
2024-11-22 02:01 - INFO - 	 Val. Loss: 0.132
2024-11-22 02:01 - INFO - 	 ROC-AUC: 0.949
2024-11-22 02:01 - INFO - 	 PR-AUC: 0.440
2024-11-22 02:01 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 02:01 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 02:01 - INFO - 	 Best PR-AUC: 0.440
2024-11-22 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-22 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.285
2024-11-22 02:01 - INFO - ---------------------------------------------
2024-11-22 02:08 - INFO - ---------------------------------------------
2024-11-22 02:08 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-22 02:08 - INFO - 	 Train Loss: 0.122
2024-11-22 02:08 - INFO - 	 Val. Loss: 0.145
2024-11-22 02:08 - INFO - 	 ROC-AUC: 0.931
2024-11-22 02:08 - INFO - 	 PR-AUC: 0.414
2024-11-22 02:08 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 02:08 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 02:08 - INFO - 	 Best PR-AUC: 0.440
2024-11-22 02:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-22 02:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.285
2024-11-22 02:08 - INFO - ---------------------------------------------
2024-11-22 02:15 - INFO - ---------------------------------------------
2024-11-22 02:15 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-22 02:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44251
2024-11-22 02:15 - INFO - 	 Train Loss: 0.119
2024-11-22 02:15 - INFO - 	 Val. Loss: 0.129
2024-11-22 02:15 - INFO - 	 ROC-AUC: 0.942
2024-11-22 02:15 - INFO - 	 PR-AUC: 0.443
2024-11-22 02:15 - INFO - 	 Best Val. Loss: 0.129
2024-11-22 02:15 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 02:15 - INFO - 	 Best PR-AUC: 0.443
2024-11-22 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-22 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.281
2024-11-22 02:15 - INFO - ---------------------------------------------
2024-11-22 02:22 - INFO - ---------------------------------------------
2024-11-22 02:22 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-22 02:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4872
2024-11-22 02:22 - INFO - 	 Train Loss: 0.115
2024-11-22 02:22 - INFO - 	 Val. Loss: 0.121
2024-11-22 02:22 - INFO - 	 ROC-AUC: 0.952
2024-11-22 02:22 - INFO - 	 PR-AUC: 0.487
2024-11-22 02:22 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 02:22 - INFO - 	 Best ROC-AUC: 0.952
2024-11-22 02:22 - INFO - 	 Best PR-AUC: 0.487
2024-11-22 02:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-22 02:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.312
2024-11-22 02:22 - INFO - ---------------------------------------------
2024-11-22 02:29 - INFO - ---------------------------------------------
2024-11-22 02:29 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-22 02:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52641
2024-11-22 02:29 - INFO - 	 Train Loss: 0.115
2024-11-22 02:29 - INFO - 	 Val. Loss: 0.125
2024-11-22 02:29 - INFO - 	 ROC-AUC: 0.948
2024-11-22 02:29 - INFO - 	 PR-AUC: 0.526
2024-11-22 02:29 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 02:29 - INFO - 	 Best ROC-AUC: 0.952
2024-11-22 02:29 - INFO - 	 Best PR-AUC: 0.526
2024-11-22 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-22 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.310
2024-11-22 02:29 - INFO - ---------------------------------------------
2024-11-22 02:36 - INFO - ---------------------------------------------
2024-11-22 02:36 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-22 02:36 - INFO - 	 Train Loss: 0.115
2024-11-22 02:36 - INFO - 	 Val. Loss: 0.122
2024-11-22 02:36 - INFO - 	 ROC-AUC: 0.949
2024-11-22 02:36 - INFO - 	 PR-AUC: 0.435
2024-11-22 02:36 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 02:36 - INFO - 	 Best ROC-AUC: 0.952
2024-11-22 02:36 - INFO - 	 Best PR-AUC: 0.526
2024-11-22 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-22 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.310
2024-11-22 02:36 - INFO - ---------------------------------------------
2024-11-22 02:44 - INFO - ---------------------------------------------
2024-11-22 02:44 - INFO - Epoch: 09 | Time: 7m 5s
2024-11-22 02:44 - INFO - 	 Train Loss: 0.113
2024-11-22 02:44 - INFO - 	 Val. Loss: 0.239
2024-11-22 02:44 - INFO - 	 ROC-AUC: 0.907
2024-11-22 02:44 - INFO - 	 PR-AUC: 0.282
2024-11-22 02:44 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 02:44 - INFO - 	 Best ROC-AUC: 0.952
2024-11-22 02:44 - INFO - 	 Best PR-AUC: 0.526
2024-11-22 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-22 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.310
2024-11-22 02:44 - INFO - ---------------------------------------------
2024-11-22 02:51 - INFO - ---------------------------------------------
2024-11-22 02:51 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-22 02:51 - INFO - 	 Train Loss: 0.117
2024-11-22 02:51 - INFO - 	 Val. Loss: 0.130
2024-11-22 02:51 - INFO - 	 ROC-AUC: 0.935
2024-11-22 02:51 - INFO - 	 PR-AUC: 0.490
2024-11-22 02:51 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 02:51 - INFO - 	 Best ROC-AUC: 0.952
2024-11-22 02:51 - INFO - 	 Best PR-AUC: 0.526
2024-11-22 02:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-22 02:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.310
2024-11-22 02:51 - INFO - ---------------------------------------------
2024-11-22 02:52 - INFO - Fit the preprocessing pipeline
2024-11-22 02:52 - INFO - Training using device: cuda
2024-11-22 02:52 - INFO - Creating generators
2024-11-22 02:52 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 02:52 - INFO - * Model:
2024-11-22 02:52 - INFO - * -----------
2024-11-22 02:52 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 02:52 - INFO - * -----------
2024-11-22 02:59 - INFO - ---------------------------------------------
2024-11-22 02:59 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-22 02:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34032
2024-11-22 02:59 - INFO - 	 Train Loss: 0.154
2024-11-22 02:59 - INFO - 	 Val. Loss: 0.172
2024-11-22 02:59 - INFO - 	 ROC-AUC: 0.912
2024-11-22 02:59 - INFO - 	 PR-AUC: 0.340
2024-11-22 02:59 - INFO - 	 Best Val. Loss: 0.172
2024-11-22 02:59 - INFO - 	 Best ROC-AUC: 0.912
2024-11-22 02:59 - INFO - 	 Best PR-AUC: 0.340
2024-11-22 02:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.863
2024-11-22 02:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.202
2024-11-22 02:59 - INFO - ---------------------------------------------
2024-11-22 03:07 - INFO - ---------------------------------------------
2024-11-22 03:07 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-22 03:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35295
2024-11-22 03:07 - INFO - 	 Train Loss: 0.134
2024-11-22 03:07 - INFO - 	 Val. Loss: 0.162
2024-11-22 03:07 - INFO - 	 ROC-AUC: 0.925
2024-11-22 03:07 - INFO - 	 PR-AUC: 0.353
2024-11-22 03:07 - INFO - 	 Best Val. Loss: 0.162
2024-11-22 03:07 - INFO - 	 Best ROC-AUC: 0.925
2024-11-22 03:07 - INFO - 	 Best PR-AUC: 0.353
2024-11-22 03:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-22 03:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.208
2024-11-22 03:07 - INFO - ---------------------------------------------
2024-11-22 03:14 - INFO - ---------------------------------------------
2024-11-22 03:14 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-22 03:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3935
2024-11-22 03:14 - INFO - 	 Train Loss: 0.127
2024-11-22 03:14 - INFO - 	 Val. Loss: 0.147
2024-11-22 03:14 - INFO - 	 ROC-AUC: 0.933
2024-11-22 03:14 - INFO - 	 PR-AUC: 0.393
2024-11-22 03:14 - INFO - 	 Best Val. Loss: 0.147
2024-11-22 03:14 - INFO - 	 Best ROC-AUC: 0.933
2024-11-22 03:14 - INFO - 	 Best PR-AUC: 0.393
2024-11-22 03:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-22 03:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.275
2024-11-22 03:14 - INFO - ---------------------------------------------
2024-11-22 03:21 - INFO - ---------------------------------------------
2024-11-22 03:21 - INFO - Epoch: 04 | Time: 7m 11s
2024-11-22 03:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47668
2024-11-22 03:21 - INFO - 	 Train Loss: 0.123
2024-11-22 03:21 - INFO - 	 Val. Loss: 0.119
2024-11-22 03:21 - INFO - 	 ROC-AUC: 0.949
2024-11-22 03:21 - INFO - 	 PR-AUC: 0.477
2024-11-22 03:21 - INFO - 	 Best Val. Loss: 0.119
2024-11-22 03:21 - INFO - 	 Best ROC-AUC: 0.949
2024-11-22 03:21 - INFO - 	 Best PR-AUC: 0.477
2024-11-22 03:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-22 03:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.297
2024-11-22 03:21 - INFO - ---------------------------------------------
2024-11-22 03:28 - INFO - ---------------------------------------------
2024-11-22 03:28 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-22 03:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51727
2024-11-22 03:28 - INFO - 	 Train Loss: 0.119
2024-11-22 03:28 - INFO - 	 Val. Loss: 0.110
2024-11-22 03:28 - INFO - 	 ROC-AUC: 0.956
2024-11-22 03:28 - INFO - 	 PR-AUC: 0.517
2024-11-22 03:28 - INFO - 	 Best Val. Loss: 0.110
2024-11-22 03:28 - INFO - 	 Best ROC-AUC: 0.956
2024-11-22 03:28 - INFO - 	 Best PR-AUC: 0.517
2024-11-22 03:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-22 03:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.295
2024-11-22 03:28 - INFO - ---------------------------------------------
2024-11-22 03:35 - INFO - ---------------------------------------------
2024-11-22 03:35 - INFO - Epoch: 06 | Time: 7m 10s
2024-11-22 03:35 - INFO - 	 Train Loss: 0.117
2024-11-22 03:35 - INFO - 	 Val. Loss: 0.122
2024-11-22 03:35 - INFO - 	 ROC-AUC: 0.935
2024-11-22 03:35 - INFO - 	 PR-AUC: 0.516
2024-11-22 03:35 - INFO - 	 Best Val. Loss: 0.110
2024-11-22 03:35 - INFO - 	 Best ROC-AUC: 0.956
2024-11-22 03:35 - INFO - 	 Best PR-AUC: 0.517
2024-11-22 03:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-22 03:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.295
2024-11-22 03:35 - INFO - ---------------------------------------------
2024-11-22 03:42 - INFO - ---------------------------------------------
2024-11-22 03:42 - INFO - Epoch: 07 | Time: 7m 10s
2024-11-22 03:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54219
2024-11-22 03:42 - INFO - 	 Train Loss: 0.115
2024-11-22 03:42 - INFO - 	 Val. Loss: 0.116
2024-11-22 03:42 - INFO - 	 ROC-AUC: 0.959
2024-11-22 03:42 - INFO - 	 PR-AUC: 0.542
2024-11-22 03:42 - INFO - 	 Best Val. Loss: 0.110
2024-11-22 03:42 - INFO - 	 Best ROC-AUC: 0.959
2024-11-22 03:42 - INFO - 	 Best PR-AUC: 0.542
2024-11-22 03:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 03:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 03:42 - INFO - ---------------------------------------------
2024-11-22 03:50 - INFO - ---------------------------------------------
2024-11-22 03:50 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-22 03:50 - INFO - 	 Train Loss: 0.113
2024-11-22 03:50 - INFO - 	 Val. Loss: 0.146
2024-11-22 03:50 - INFO - 	 ROC-AUC: 0.946
2024-11-22 03:50 - INFO - 	 PR-AUC: 0.458
2024-11-22 03:50 - INFO - 	 Best Val. Loss: 0.110
2024-11-22 03:50 - INFO - 	 Best ROC-AUC: 0.959
2024-11-22 03:50 - INFO - 	 Best PR-AUC: 0.542
2024-11-22 03:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 03:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 03:50 - INFO - ---------------------------------------------
2024-11-22 03:57 - INFO - ---------------------------------------------
2024-11-22 03:57 - INFO - Epoch: 09 | Time: 7m 9s
2024-11-22 03:57 - INFO - 	 Train Loss: 0.115
2024-11-22 03:57 - INFO - 	 Val. Loss: 0.122
2024-11-22 03:57 - INFO - 	 ROC-AUC: 0.951
2024-11-22 03:57 - INFO - 	 PR-AUC: 0.504
2024-11-22 03:57 - INFO - 	 Best Val. Loss: 0.110
2024-11-22 03:57 - INFO - 	 Best ROC-AUC: 0.959
2024-11-22 03:57 - INFO - 	 Best PR-AUC: 0.542
2024-11-22 03:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 03:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 03:57 - INFO - ---------------------------------------------
2024-11-22 04:04 - INFO - ---------------------------------------------
2024-11-22 04:04 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-22 04:04 - INFO - 	 Train Loss: 0.114
2024-11-22 04:04 - INFO - 	 Val. Loss: 0.130
2024-11-22 04:04 - INFO - 	 ROC-AUC: 0.934
2024-11-22 04:04 - INFO - 	 PR-AUC: 0.483
2024-11-22 04:04 - INFO - 	 Best Val. Loss: 0.110
2024-11-22 04:04 - INFO - 	 Best ROC-AUC: 0.959
2024-11-22 04:04 - INFO - 	 Best PR-AUC: 0.542
2024-11-22 04:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 04:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 04:04 - INFO - ---------------------------------------------
2024-11-22 04:06 - INFO - Fit the preprocessing pipeline
2024-11-22 04:06 - INFO - Training using device: cuda
2024-11-22 04:06 - INFO - Creating generators
2024-11-22 04:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 04:06 - INFO - * Model:
2024-11-22 04:06 - INFO - * -----------
2024-11-22 04:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 04:06 - INFO - * -----------
2024-11-22 04:13 - INFO - ---------------------------------------------
2024-11-22 04:13 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-22 04:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2693
2024-11-22 04:13 - INFO - 	 Train Loss: 0.156
2024-11-22 04:13 - INFO - 	 Val. Loss: 0.246
2024-11-22 04:13 - INFO - 	 ROC-AUC: 0.905
2024-11-22 04:13 - INFO - 	 PR-AUC: 0.269
2024-11-22 04:13 - INFO - 	 Best Val. Loss: 0.246
2024-11-22 04:13 - INFO - 	 Best ROC-AUC: 0.905
2024-11-22 04:13 - INFO - 	 Best PR-AUC: 0.269
2024-11-22 04:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.866
2024-11-22 04:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.183
2024-11-22 04:13 - INFO - ---------------------------------------------
2024-11-22 04:20 - INFO - ---------------------------------------------
2024-11-22 04:20 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-22 04:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38832
2024-11-22 04:20 - INFO - 	 Train Loss: 0.144
2024-11-22 04:20 - INFO - 	 Val. Loss: 0.192
2024-11-22 04:20 - INFO - 	 ROC-AUC: 0.925
2024-11-22 04:20 - INFO - 	 PR-AUC: 0.388
2024-11-22 04:20 - INFO - 	 Best Val. Loss: 0.192
2024-11-22 04:20 - INFO - 	 Best ROC-AUC: 0.925
2024-11-22 04:20 - INFO - 	 Best PR-AUC: 0.388
2024-11-22 04:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.879
2024-11-22 04:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.220
2024-11-22 04:20 - INFO - ---------------------------------------------
2024-11-22 04:27 - INFO - ---------------------------------------------
2024-11-22 04:27 - INFO - Epoch: 03 | Time: 7m 9s
2024-11-22 04:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45922
2024-11-22 04:27 - INFO - 	 Train Loss: 0.130
2024-11-22 04:27 - INFO - 	 Val. Loss: 0.132
2024-11-22 04:27 - INFO - 	 ROC-AUC: 0.947
2024-11-22 04:27 - INFO - 	 PR-AUC: 0.459
2024-11-22 04:27 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 04:27 - INFO - 	 Best ROC-AUC: 0.947
2024-11-22 04:27 - INFO - 	 Best PR-AUC: 0.459
2024-11-22 04:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-22 04:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.304
2024-11-22 04:27 - INFO - ---------------------------------------------
2024-11-22 04:34 - INFO - ---------------------------------------------
2024-11-22 04:34 - INFO - Epoch: 04 | Time: 7m 10s
2024-11-22 04:34 - INFO - 	 Train Loss: 0.126
2024-11-22 04:34 - INFO - 	 Val. Loss: 0.173
2024-11-22 04:34 - INFO - 	 ROC-AUC: 0.900
2024-11-22 04:34 - INFO - 	 PR-AUC: 0.338
2024-11-22 04:34 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 04:34 - INFO - 	 Best ROC-AUC: 0.947
2024-11-22 04:34 - INFO - 	 Best PR-AUC: 0.459
2024-11-22 04:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-22 04:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.304
2024-11-22 04:34 - INFO - ---------------------------------------------
2024-11-22 04:41 - INFO - ---------------------------------------------
2024-11-22 04:41 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-22 04:41 - INFO - 	 Train Loss: 0.120
2024-11-22 04:41 - INFO - 	 Val. Loss: 0.155
2024-11-22 04:41 - INFO - 	 ROC-AUC: 0.929
2024-11-22 04:41 - INFO - 	 PR-AUC: 0.376
2024-11-22 04:41 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 04:41 - INFO - 	 Best ROC-AUC: 0.947
2024-11-22 04:41 - INFO - 	 Best PR-AUC: 0.459
2024-11-22 04:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-22 04:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.304
2024-11-22 04:41 - INFO - ---------------------------------------------
2024-11-22 04:48 - INFO - ---------------------------------------------
2024-11-22 04:48 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-22 04:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51283
2024-11-22 04:48 - INFO - 	 Train Loss: 0.118
2024-11-22 04:48 - INFO - 	 Val. Loss: 0.132
2024-11-22 04:48 - INFO - 	 ROC-AUC: 0.948
2024-11-22 04:48 - INFO - 	 PR-AUC: 0.513
2024-11-22 04:48 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 04:48 - INFO - 	 Best ROC-AUC: 0.948
2024-11-22 04:48 - INFO - 	 Best PR-AUC: 0.513
2024-11-22 04:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 04:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-22 04:48 - INFO - ---------------------------------------------
2024-11-22 04:56 - INFO - ---------------------------------------------
2024-11-22 04:56 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-22 04:56 - INFO - 	 Train Loss: 0.115
2024-11-22 04:56 - INFO - 	 Val. Loss: 0.183
2024-11-22 04:56 - INFO - 	 ROC-AUC: 0.879
2024-11-22 04:56 - INFO - 	 PR-AUC: 0.295
2024-11-22 04:56 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 04:56 - INFO - 	 Best ROC-AUC: 0.948
2024-11-22 04:56 - INFO - 	 Best PR-AUC: 0.513
2024-11-22 04:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 04:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-22 04:56 - INFO - ---------------------------------------------
2024-11-22 05:03 - INFO - ---------------------------------------------
2024-11-22 05:03 - INFO - Epoch: 08 | Time: 7m 10s
2024-11-22 05:03 - INFO - 	 Train Loss: 0.115
2024-11-22 05:03 - INFO - 	 Val. Loss: 0.139
2024-11-22 05:03 - INFO - 	 ROC-AUC: 0.934
2024-11-22 05:03 - INFO - 	 PR-AUC: 0.424
2024-11-22 05:03 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 05:03 - INFO - 	 Best ROC-AUC: 0.948
2024-11-22 05:03 - INFO - 	 Best PR-AUC: 0.513
2024-11-22 05:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 05:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-22 05:03 - INFO - ---------------------------------------------
2024-11-22 05:10 - INFO - ---------------------------------------------
2024-11-22 05:10 - INFO - Epoch: 09 | Time: 7m 9s
2024-11-22 05:10 - INFO - 	 Train Loss: 0.114
2024-11-22 05:10 - INFO - 	 Val. Loss: 0.157
2024-11-22 05:10 - INFO - 	 ROC-AUC: 0.898
2024-11-22 05:10 - INFO - 	 PR-AUC: 0.389
2024-11-22 05:10 - INFO - 	 Best Val. Loss: 0.132
2024-11-22 05:10 - INFO - 	 Best ROC-AUC: 0.948
2024-11-22 05:10 - INFO - 	 Best PR-AUC: 0.513
2024-11-22 05:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-22 05:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-22 05:10 - INFO - ---------------------------------------------
2024-11-22 05:19 - INFO - Fit the preprocessing pipeline
2024-11-22 05:19 - INFO - Training using device: cuda
2024-11-22 05:19 - INFO - Creating generators
2024-11-22 05:19 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 05:19 - INFO - * Model:
2024-11-22 05:19 - INFO - * -----------
2024-11-22 05:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 05:19 - INFO - * -----------
2024-11-22 05:26 - INFO - ---------------------------------------------
2024-11-22 05:26 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-22 05:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29128
2024-11-22 05:26 - INFO - 	 Train Loss: 0.155
2024-11-22 05:26 - INFO - 	 Val. Loss: 0.202
2024-11-22 05:26 - INFO - 	 ROC-AUC: 0.883
2024-11-22 05:26 - INFO - 	 PR-AUC: 0.291
2024-11-22 05:26 - INFO - 	 Best Val. Loss: 0.202
2024-11-22 05:26 - INFO - 	 Best ROC-AUC: 0.883
2024-11-22 05:26 - INFO - 	 Best PR-AUC: 0.291
2024-11-22 05:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.831
2024-11-22 05:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.171
2024-11-22 05:26 - INFO - ---------------------------------------------
2024-11-22 05:33 - INFO - ---------------------------------------------
2024-11-22 05:33 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-22 05:33 - INFO - 	 Train Loss: 0.136
2024-11-22 05:33 - INFO - 	 Val. Loss: 0.201
2024-11-22 05:33 - INFO - 	 ROC-AUC: 0.833
2024-11-22 05:33 - INFO - 	 PR-AUC: 0.247
2024-11-22 05:33 - INFO - 	 Best Val. Loss: 0.201
2024-11-22 05:33 - INFO - 	 Best ROC-AUC: 0.883
2024-11-22 05:33 - INFO - 	 Best PR-AUC: 0.291
2024-11-22 05:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.831
2024-11-22 05:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.171
2024-11-22 05:33 - INFO - ---------------------------------------------
2024-11-22 05:40 - INFO - ---------------------------------------------
2024-11-22 05:40 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-22 05:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49344
2024-11-22 05:40 - INFO - 	 Train Loss: 0.128
2024-11-22 05:40 - INFO - 	 Val. Loss: 0.121
2024-11-22 05:40 - INFO - 	 ROC-AUC: 0.947
2024-11-22 05:40 - INFO - 	 PR-AUC: 0.493
2024-11-22 05:40 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 05:40 - INFO - 	 Best ROC-AUC: 0.947
2024-11-22 05:40 - INFO - 	 Best PR-AUC: 0.493
2024-11-22 05:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.923
2024-11-22 05:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.279
2024-11-22 05:40 - INFO - ---------------------------------------------
2024-11-22 05:47 - INFO - ---------------------------------------------
2024-11-22 05:47 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-22 05:47 - INFO - 	 Train Loss: 0.121
2024-11-22 05:47 - INFO - 	 Val. Loss: 0.145
2024-11-22 05:47 - INFO - 	 ROC-AUC: 0.930
2024-11-22 05:47 - INFO - 	 PR-AUC: 0.431
2024-11-22 05:47 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 05:47 - INFO - 	 Best ROC-AUC: 0.947
2024-11-22 05:47 - INFO - 	 Best PR-AUC: 0.493
2024-11-22 05:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.923
2024-11-22 05:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.279
2024-11-22 05:47 - INFO - ---------------------------------------------
2024-11-22 05:54 - INFO - ---------------------------------------------
2024-11-22 05:54 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-22 05:54 - INFO - 	 Train Loss: 0.120
2024-11-22 05:54 - INFO - 	 Val. Loss: 0.144
2024-11-22 05:54 - INFO - 	 ROC-AUC: 0.941
2024-11-22 05:54 - INFO - 	 PR-AUC: 0.364
2024-11-22 05:54 - INFO - 	 Best Val. Loss: 0.121
2024-11-22 05:54 - INFO - 	 Best ROC-AUC: 0.947
2024-11-22 05:54 - INFO - 	 Best PR-AUC: 0.493
2024-11-22 05:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.923
2024-11-22 05:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.279
2024-11-22 05:54 - INFO - ---------------------------------------------
2024-11-22 06:02 - INFO - ---------------------------------------------
2024-11-22 06:02 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-22 06:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54544
2024-11-22 06:02 - INFO - 	 Train Loss: 0.117
2024-11-22 06:02 - INFO - 	 Val. Loss: 0.116
2024-11-22 06:02 - INFO - 	 ROC-AUC: 0.958
2024-11-22 06:02 - INFO - 	 PR-AUC: 0.545
2024-11-22 06:02 - INFO - 	 Best Val. Loss: 0.116
2024-11-22 06:02 - INFO - 	 Best ROC-AUC: 0.958
2024-11-22 06:02 - INFO - 	 Best PR-AUC: 0.545
2024-11-22 06:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-22 06:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.339
2024-11-22 06:02 - INFO - ---------------------------------------------
2024-11-22 06:09 - INFO - ---------------------------------------------
2024-11-22 06:09 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-22 06:09 - INFO - 	 Train Loss: 0.115
2024-11-22 06:09 - INFO - 	 Val. Loss: 0.119
2024-11-22 06:09 - INFO - 	 ROC-AUC: 0.963
2024-11-22 06:09 - INFO - 	 PR-AUC: 0.538
2024-11-22 06:09 - INFO - 	 Best Val. Loss: 0.116
2024-11-22 06:09 - INFO - 	 Best ROC-AUC: 0.963
2024-11-22 06:09 - INFO - 	 Best PR-AUC: 0.545
2024-11-22 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-22 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.339
2024-11-22 06:09 - INFO - ---------------------------------------------
2024-11-22 06:16 - INFO - ---------------------------------------------
2024-11-22 06:16 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-22 06:16 - INFO - 	 Train Loss: 0.116
2024-11-22 06:16 - INFO - 	 Val. Loss: 0.165
2024-11-22 06:16 - INFO - 	 ROC-AUC: 0.940
2024-11-22 06:16 - INFO - 	 PR-AUC: 0.509
2024-11-22 06:16 - INFO - 	 Best Val. Loss: 0.116
2024-11-22 06:16 - INFO - 	 Best ROC-AUC: 0.963
2024-11-22 06:16 - INFO - 	 Best PR-AUC: 0.545
2024-11-22 06:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-22 06:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.339
2024-11-22 06:16 - INFO - ---------------------------------------------
2024-11-22 06:23 - INFO - ---------------------------------------------
2024-11-22 06:23 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-22 06:23 - INFO - 	 Train Loss: 0.114
2024-11-22 06:23 - INFO - 	 Val. Loss: 0.157
2024-11-22 06:23 - INFO - 	 ROC-AUC: 0.939
2024-11-22 06:23 - INFO - 	 PR-AUC: 0.421
2024-11-22 06:23 - INFO - 	 Best Val. Loss: 0.116
2024-11-22 06:23 - INFO - 	 Best ROC-AUC: 0.963
2024-11-22 06:23 - INFO - 	 Best PR-AUC: 0.545
2024-11-22 06:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-22 06:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.339
2024-11-22 06:23 - INFO - ---------------------------------------------
2024-11-22 06:30 - INFO - ---------------------------------------------
2024-11-22 06:30 - INFO - Epoch: 10 | Time: 7m 6s
2024-11-22 06:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5539
2024-11-22 06:30 - INFO - 	 Train Loss: 0.114
2024-11-22 06:30 - INFO - 	 Val. Loss: 0.115
2024-11-22 06:30 - INFO - 	 ROC-AUC: 0.965
2024-11-22 06:30 - INFO - 	 PR-AUC: 0.554
2024-11-22 06:30 - INFO - 	 Best Val. Loss: 0.115
2024-11-22 06:30 - INFO - 	 Best ROC-AUC: 0.965
2024-11-22 06:30 - INFO - 	 Best PR-AUC: 0.554
2024-11-22 06:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-22 06:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.340
2024-11-22 06:30 - INFO - ---------------------------------------------
2024-11-22 06:32 - INFO - Fit the preprocessing pipeline
2024-11-22 06:32 - INFO - Training using device: cuda
2024-11-22 06:32 - INFO - Creating generators
2024-11-22 06:32 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 06:32 - INFO - * Model:
2024-11-22 06:32 - INFO - * -----------
2024-11-22 06:32 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 06:32 - INFO - * -----------
2024-11-22 06:39 - INFO - ---------------------------------------------
2024-11-22 06:39 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-22 06:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36785
2024-11-22 06:39 - INFO - 	 Train Loss: 0.154
2024-11-22 06:39 - INFO - 	 Val. Loss: 0.167
2024-11-22 06:39 - INFO - 	 ROC-AUC: 0.906
2024-11-22 06:39 - INFO - 	 PR-AUC: 0.368
2024-11-22 06:39 - INFO - 	 Best Val. Loss: 0.167
2024-11-22 06:39 - INFO - 	 Best ROC-AUC: 0.906
2024-11-22 06:39 - INFO - 	 Best PR-AUC: 0.368
2024-11-22 06:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.862
2024-11-22 06:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.198
2024-11-22 06:39 - INFO - ---------------------------------------------
2024-11-22 06:46 - INFO - ---------------------------------------------
2024-11-22 06:46 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-22 06:46 - INFO - 	 Train Loss: 0.134
2024-11-22 06:46 - INFO - 	 Val. Loss: 0.177
2024-11-22 06:46 - INFO - 	 ROC-AUC: 0.893
2024-11-22 06:46 - INFO - 	 PR-AUC: 0.330
2024-11-22 06:46 - INFO - 	 Best Val. Loss: 0.167
2024-11-22 06:46 - INFO - 	 Best ROC-AUC: 0.906
2024-11-22 06:46 - INFO - 	 Best PR-AUC: 0.368
2024-11-22 06:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.862
2024-11-22 06:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.198
2024-11-22 06:46 - INFO - ---------------------------------------------
2024-11-22 06:53 - INFO - ---------------------------------------------
2024-11-22 06:53 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-22 06:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44822
2024-11-22 06:53 - INFO - 	 Train Loss: 0.129
2024-11-22 06:53 - INFO - 	 Val. Loss: 0.134
2024-11-22 06:53 - INFO - 	 ROC-AUC: 0.943
2024-11-22 06:53 - INFO - 	 PR-AUC: 0.448
2024-11-22 06:53 - INFO - 	 Best Val. Loss: 0.134
2024-11-22 06:53 - INFO - 	 Best ROC-AUC: 0.943
2024-11-22 06:53 - INFO - 	 Best PR-AUC: 0.448
2024-11-22 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-22 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.265
2024-11-22 06:53 - INFO - ---------------------------------------------
2024-11-22 07:00 - INFO - ---------------------------------------------
2024-11-22 07:00 - INFO - Epoch: 04 | Time: 7m 6s
2024-11-22 07:00 - INFO - 	 Train Loss: 0.120
2024-11-22 07:00 - INFO - 	 Val. Loss: 0.135
2024-11-22 07:00 - INFO - 	 ROC-AUC: 0.946
2024-11-22 07:00 - INFO - 	 PR-AUC: 0.433
2024-11-22 07:00 - INFO - 	 Best Val. Loss: 0.134
2024-11-22 07:00 - INFO - 	 Best ROC-AUC: 0.946
2024-11-22 07:00 - INFO - 	 Best PR-AUC: 0.448
2024-11-22 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-22 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.265
2024-11-22 07:00 - INFO - ---------------------------------------------
2024-11-22 07:07 - INFO - ---------------------------------------------
2024-11-22 07:07 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-22 07:07 - INFO - 	 Train Loss: 0.118
2024-11-22 07:07 - INFO - 	 Val. Loss: 0.135
2024-11-22 07:07 - INFO - 	 ROC-AUC: 0.940
2024-11-22 07:07 - INFO - 	 PR-AUC: 0.430
2024-11-22 07:07 - INFO - 	 Best Val. Loss: 0.134
2024-11-22 07:07 - INFO - 	 Best ROC-AUC: 0.946
2024-11-22 07:07 - INFO - 	 Best PR-AUC: 0.448
2024-11-22 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-22 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.265
2024-11-22 07:07 - INFO - ---------------------------------------------
2024-11-22 07:14 - INFO - ---------------------------------------------
2024-11-22 07:14 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-22 07:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54283
2024-11-22 07:14 - INFO - 	 Train Loss: 0.117
2024-11-22 07:14 - INFO - 	 Val. Loss: 0.112
2024-11-22 07:14 - INFO - 	 ROC-AUC: 0.950
2024-11-22 07:14 - INFO - 	 PR-AUC: 0.543
2024-11-22 07:14 - INFO - 	 Best Val. Loss: 0.112
2024-11-22 07:14 - INFO - 	 Best ROC-AUC: 0.950
2024-11-22 07:14 - INFO - 	 Best PR-AUC: 0.543
2024-11-22 07:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-22 07:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 07:14 - INFO - ---------------------------------------------
2024-11-22 07:22 - INFO - ---------------------------------------------
2024-11-22 07:22 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-22 07:22 - INFO - 	 Train Loss: 0.117
2024-11-22 07:22 - INFO - 	 Val. Loss: 0.157
2024-11-22 07:22 - INFO - 	 ROC-AUC: 0.922
2024-11-22 07:22 - INFO - 	 PR-AUC: 0.396
2024-11-22 07:22 - INFO - 	 Best Val. Loss: 0.112
2024-11-22 07:22 - INFO - 	 Best ROC-AUC: 0.950
2024-11-22 07:22 - INFO - 	 Best PR-AUC: 0.543
2024-11-22 07:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-22 07:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 07:22 - INFO - ---------------------------------------------
2024-11-22 07:29 - INFO - ---------------------------------------------
2024-11-22 07:29 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-22 07:29 - INFO - 	 Train Loss: 0.116
2024-11-22 07:29 - INFO - 	 Val. Loss: 0.161
2024-11-22 07:29 - INFO - 	 ROC-AUC: 0.933
2024-11-22 07:29 - INFO - 	 PR-AUC: 0.384
2024-11-22 07:29 - INFO - 	 Best Val. Loss: 0.112
2024-11-22 07:29 - INFO - 	 Best ROC-AUC: 0.950
2024-11-22 07:29 - INFO - 	 Best PR-AUC: 0.543
2024-11-22 07:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-22 07:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 07:29 - INFO - ---------------------------------------------
2024-11-22 07:36 - INFO - ---------------------------------------------
2024-11-22 07:36 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-22 07:36 - INFO - 	 Train Loss: 0.115
2024-11-22 07:36 - INFO - 	 Val. Loss: 0.144
2024-11-22 07:36 - INFO - 	 ROC-AUC: 0.929
2024-11-22 07:36 - INFO - 	 PR-AUC: 0.440
2024-11-22 07:36 - INFO - 	 Best Val. Loss: 0.112
2024-11-22 07:36 - INFO - 	 Best ROC-AUC: 0.950
2024-11-22 07:36 - INFO - 	 Best PR-AUC: 0.543
2024-11-22 07:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-22 07:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-22 07:36 - INFO - ---------------------------------------------
2024-11-22 07:43 - INFO - ---------------------------------------------
2024-11-22 07:43 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-22 07:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57983
2024-11-22 07:43 - INFO - 	 Train Loss: 0.115
2024-11-22 07:43 - INFO - 	 Val. Loss: 0.109
2024-11-22 07:43 - INFO - 	 ROC-AUC: 0.949
2024-11-22 07:43 - INFO - 	 PR-AUC: 0.580
2024-11-22 07:43 - INFO - 	 Best Val. Loss: 0.109
2024-11-22 07:43 - INFO - 	 Best ROC-AUC: 0.950
2024-11-22 07:43 - INFO - 	 Best PR-AUC: 0.580
2024-11-22 07:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-22 07:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.365
2024-11-22 07:43 - INFO - ---------------------------------------------
