2024-11-06 13:31 - INFO - Fit the preprocessing pipeline
2024-11-06 13:31 - INFO - Training using device: cuda
2024-11-06 13:31 - INFO - Creating generators
2024-11-06 13:31 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 13:31 - INFO - * Model:
2024-11-06 13:31 - INFO - * -----------
2024-11-06 13:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 13:31 - INFO - * -----------
2024-11-06 13:39 - INFO - ---------------------------------------------
2024-11-06 13:39 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 13:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19929
2024-11-06 13:39 - INFO - 	 Train Loss: 0.254
2024-11-06 13:39 - INFO - 	 Val. Loss: 0.263
2024-11-06 13:39 - INFO - 	 ROC-AUC: 0.716
2024-11-06 13:39 - INFO - 	 PR-AUC: 0.199
2024-11-06 13:39 - INFO - 	 Best Val. Loss: 0.263
2024-11-06 13:39 - INFO - 	 Best ROC-AUC: 0.716
2024-11-06 13:39 - INFO - 	 Best PR-AUC: 0.199
2024-11-06 13:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-11-06 13:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.236
2024-11-06 13:39 - INFO - ---------------------------------------------
2024-11-06 13:47 - INFO - ---------------------------------------------
2024-11-06 13:47 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 13:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40775
2024-11-06 13:47 - INFO - 	 Train Loss: 0.198
2024-11-06 13:47 - INFO - 	 Val. Loss: 0.381
2024-11-06 13:47 - INFO - 	 ROC-AUC: 0.908
2024-11-06 13:47 - INFO - 	 PR-AUC: 0.408
2024-11-06 13:47 - INFO - 	 Best Val. Loss: 0.263
2024-11-06 13:47 - INFO - 	 Best ROC-AUC: 0.908
2024-11-06 13:47 - INFO - 	 Best PR-AUC: 0.408
2024-11-06 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.890
2024-11-06 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.432
2024-11-06 13:47 - INFO - ---------------------------------------------
2024-11-06 13:55 - INFO - ---------------------------------------------
2024-11-06 13:55 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 13:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70092
2024-11-06 13:55 - INFO - 	 Train Loss: 0.135
2024-11-06 13:55 - INFO - 	 Val. Loss: 0.125
2024-11-06 13:55 - INFO - 	 ROC-AUC: 0.968
2024-11-06 13:55 - INFO - 	 PR-AUC: 0.701
2024-11-06 13:55 - INFO - 	 Best Val. Loss: 0.125
2024-11-06 13:55 - INFO - 	 Best ROC-AUC: 0.968
2024-11-06 13:55 - INFO - 	 Best PR-AUC: 0.701
2024-11-06 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-06 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.706
2024-11-06 13:55 - INFO - ---------------------------------------------
2024-11-06 14:03 - INFO - ---------------------------------------------
2024-11-06 14:03 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 14:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76591
2024-11-06 14:03 - INFO - 	 Train Loss: 0.108
2024-11-06 14:03 - INFO - 	 Val. Loss: 0.098
2024-11-06 14:03 - INFO - 	 ROC-AUC: 0.975
2024-11-06 14:03 - INFO - 	 PR-AUC: 0.766
2024-11-06 14:03 - INFO - 	 Best Val. Loss: 0.098
2024-11-06 14:03 - INFO - 	 Best ROC-AUC: 0.975
2024-11-06 14:03 - INFO - 	 Best PR-AUC: 0.766
2024-11-06 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-06 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-11-06 14:03 - INFO - ---------------------------------------------
2024-11-06 14:11 - INFO - ---------------------------------------------
2024-11-06 14:11 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 14:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78607
2024-11-06 14:11 - INFO - 	 Train Loss: 0.096
2024-11-06 14:11 - INFO - 	 Val. Loss: 0.088
2024-11-06 14:11 - INFO - 	 ROC-AUC: 0.978
2024-11-06 14:11 - INFO - 	 PR-AUC: 0.786
2024-11-06 14:11 - INFO - 	 Best Val. Loss: 0.088
2024-11-06 14:11 - INFO - 	 Best ROC-AUC: 0.978
2024-11-06 14:11 - INFO - 	 Best PR-AUC: 0.786
2024-11-06 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-06 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-11-06 14:11 - INFO - ---------------------------------------------
2024-11-06 14:19 - INFO - ---------------------------------------------
2024-11-06 14:19 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82018
2024-11-06 14:19 - INFO - 	 Train Loss: 0.088
2024-11-06 14:19 - INFO - 	 Val. Loss: 0.075
2024-11-06 14:19 - INFO - 	 ROC-AUC: 0.982
2024-11-06 14:19 - INFO - 	 PR-AUC: 0.820
2024-11-06 14:19 - INFO - 	 Best Val. Loss: 0.075
2024-11-06 14:19 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 14:19 - INFO - 	 Best PR-AUC: 0.820
2024-11-06 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-11-06 14:19 - INFO - ---------------------------------------------
2024-11-06 14:27 - INFO - ---------------------------------------------
2024-11-06 14:27 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 14:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83596
2024-11-06 14:27 - INFO - 	 Train Loss: 0.083
2024-11-06 14:27 - INFO - 	 Val. Loss: 0.071
2024-11-06 14:27 - INFO - 	 ROC-AUC: 0.983
2024-11-06 14:27 - INFO - 	 PR-AUC: 0.836
2024-11-06 14:27 - INFO - 	 Best Val. Loss: 0.071
2024-11-06 14:27 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 14:27 - INFO - 	 Best PR-AUC: 0.836
2024-11-06 14:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 14:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-06 14:27 - INFO - ---------------------------------------------
2024-11-06 14:35 - INFO - ---------------------------------------------
2024-11-06 14:35 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 14:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84259
2024-11-06 14:35 - INFO - 	 Train Loss: 0.080
2024-11-06 14:35 - INFO - 	 Val. Loss: 0.070
2024-11-06 14:35 - INFO - 	 ROC-AUC: 0.984
2024-11-06 14:35 - INFO - 	 PR-AUC: 0.843
2024-11-06 14:35 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 14:35 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 14:35 - INFO - 	 Best PR-AUC: 0.843
2024-11-06 14:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 14:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-06 14:35 - INFO - ---------------------------------------------
2024-11-06 14:43 - INFO - ---------------------------------------------
2024-11-06 14:43 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 14:43 - INFO - 	 Train Loss: 0.076
2024-11-06 14:43 - INFO - 	 Val. Loss: 0.071
2024-11-06 14:43 - INFO - 	 ROC-AUC: 0.983
2024-11-06 14:43 - INFO - 	 PR-AUC: 0.840
2024-11-06 14:43 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 14:43 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 14:43 - INFO - 	 Best PR-AUC: 0.843
2024-11-06 14:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 14:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-06 14:43 - INFO - ---------------------------------------------
2024-11-06 14:51 - INFO - ---------------------------------------------
2024-11-06 14:51 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-06 14:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85173
2024-11-06 14:51 - INFO - 	 Train Loss: 0.072
2024-11-06 14:51 - INFO - 	 Val. Loss: 0.070
2024-11-06 14:51 - INFO - 	 ROC-AUC: 0.984
2024-11-06 14:51 - INFO - 	 PR-AUC: 0.852
2024-11-06 14:51 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 14:51 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 14:51 - INFO - 	 Best PR-AUC: 0.852
2024-11-06 14:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 14:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-06 14:51 - INFO - ---------------------------------------------
2024-11-06 14:54 - INFO - Fit the preprocessing pipeline
2024-11-06 14:54 - INFO - Training using device: cuda
2024-11-06 14:54 - INFO - Creating generators
2024-11-06 14:54 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 14:54 - INFO - * Model:
2024-11-06 14:54 - INFO - * -----------
2024-11-06 14:54 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 14:54 - INFO - * -----------
2024-11-06 15:02 - INFO - ---------------------------------------------
2024-11-06 15:02 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 15:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1724
2024-11-06 15:02 - INFO - 	 Train Loss: 0.254
2024-11-06 15:02 - INFO - 	 Val. Loss: 0.358
2024-11-06 15:02 - INFO - 	 ROC-AUC: 0.720
2024-11-06 15:02 - INFO - 	 PR-AUC: 0.172
2024-11-06 15:02 - INFO - 	 Best Val. Loss: 0.358
2024-11-06 15:02 - INFO - 	 Best ROC-AUC: 0.720
2024-11-06 15:02 - INFO - 	 Best PR-AUC: 0.172
2024-11-06 15:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.687
2024-11-06 15:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.205
2024-11-06 15:02 - INFO - ---------------------------------------------
2024-11-06 15:10 - INFO - ---------------------------------------------
2024-11-06 15:10 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23968
2024-11-06 15:10 - INFO - 	 Train Loss: 0.216
2024-11-06 15:10 - INFO - 	 Val. Loss: 0.503
2024-11-06 15:10 - INFO - 	 ROC-AUC: 0.799
2024-11-06 15:10 - INFO - 	 PR-AUC: 0.240
2024-11-06 15:10 - INFO - 	 Best Val. Loss: 0.358
2024-11-06 15:10 - INFO - 	 Best ROC-AUC: 0.799
2024-11-06 15:10 - INFO - 	 Best PR-AUC: 0.240
2024-11-06 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.786
2024-11-06 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.278
2024-11-06 15:10 - INFO - ---------------------------------------------
2024-11-06 15:18 - INFO - ---------------------------------------------
2024-11-06 15:18 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55723
2024-11-06 15:18 - INFO - 	 Train Loss: 0.150
2024-11-06 15:18 - INFO - 	 Val. Loss: 0.191
2024-11-06 15:18 - INFO - 	 ROC-AUC: 0.948
2024-11-06 15:18 - INFO - 	 PR-AUC: 0.557
2024-11-06 15:18 - INFO - 	 Best Val. Loss: 0.191
2024-11-06 15:18 - INFO - 	 Best ROC-AUC: 0.948
2024-11-06 15:18 - INFO - 	 Best PR-AUC: 0.557
2024-11-06 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-06 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.581
2024-11-06 15:18 - INFO - ---------------------------------------------
2024-11-06 15:26 - INFO - ---------------------------------------------
2024-11-06 15:26 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 15:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72082
2024-11-06 15:26 - INFO - 	 Train Loss: 0.112
2024-11-06 15:26 - INFO - 	 Val. Loss: 0.124
2024-11-06 15:26 - INFO - 	 ROC-AUC: 0.969
2024-11-06 15:26 - INFO - 	 PR-AUC: 0.721
2024-11-06 15:26 - INFO - 	 Best Val. Loss: 0.124
2024-11-06 15:26 - INFO - 	 Best ROC-AUC: 0.969
2024-11-06 15:26 - INFO - 	 Best PR-AUC: 0.721
2024-11-06 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.709
2024-11-06 15:26 - INFO - ---------------------------------------------
2024-11-06 15:34 - INFO - ---------------------------------------------
2024-11-06 15:34 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 15:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79331
2024-11-06 15:34 - INFO - 	 Train Loss: 0.097
2024-11-06 15:34 - INFO - 	 Val. Loss: 0.094
2024-11-06 15:34 - INFO - 	 ROC-AUC: 0.979
2024-11-06 15:34 - INFO - 	 PR-AUC: 0.793
2024-11-06 15:34 - INFO - 	 Best Val. Loss: 0.094
2024-11-06 15:34 - INFO - 	 Best ROC-AUC: 0.979
2024-11-06 15:34 - INFO - 	 Best PR-AUC: 0.793
2024-11-06 15:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-06 15:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-11-06 15:34 - INFO - ---------------------------------------------
2024-11-06 15:42 - INFO - ---------------------------------------------
2024-11-06 15:42 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 15:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82035
2024-11-06 15:42 - INFO - 	 Train Loss: 0.088
2024-11-06 15:42 - INFO - 	 Val. Loss: 0.078
2024-11-06 15:42 - INFO - 	 ROC-AUC: 0.980
2024-11-06 15:42 - INFO - 	 PR-AUC: 0.820
2024-11-06 15:42 - INFO - 	 Best Val. Loss: 0.078
2024-11-06 15:42 - INFO - 	 Best ROC-AUC: 0.980
2024-11-06 15:42 - INFO - 	 Best PR-AUC: 0.820
2024-11-06 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-11-06 15:42 - INFO - ---------------------------------------------
2024-11-06 15:50 - INFO - ---------------------------------------------
2024-11-06 15:50 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 15:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83052
2024-11-06 15:50 - INFO - 	 Train Loss: 0.085
2024-11-06 15:50 - INFO - 	 Val. Loss: 0.075
2024-11-06 15:50 - INFO - 	 ROC-AUC: 0.982
2024-11-06 15:50 - INFO - 	 PR-AUC: 0.831
2024-11-06 15:50 - INFO - 	 Best Val. Loss: 0.075
2024-11-06 15:50 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 15:50 - INFO - 	 Best PR-AUC: 0.831
2024-11-06 15:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 15:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-06 15:50 - INFO - ---------------------------------------------
2024-11-06 15:58 - INFO - ---------------------------------------------
2024-11-06 15:58 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 15:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8487
2024-11-06 15:58 - INFO - 	 Train Loss: 0.080
2024-11-06 15:58 - INFO - 	 Val. Loss: 0.072
2024-11-06 15:58 - INFO - 	 ROC-AUC: 0.983
2024-11-06 15:58 - INFO - 	 PR-AUC: 0.849
2024-11-06 15:58 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 15:58 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 15:58 - INFO - 	 Best PR-AUC: 0.849
2024-11-06 15:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 15:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-06 15:58 - INFO - ---------------------------------------------
2024-11-06 16:06 - INFO - ---------------------------------------------
2024-11-06 16:06 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 16:06 - INFO - 	 Train Loss: 0.078
2024-11-06 16:06 - INFO - 	 Val. Loss: 0.071
2024-11-06 16:06 - INFO - 	 ROC-AUC: 0.983
2024-11-06 16:06 - INFO - 	 PR-AUC: 0.848
2024-11-06 16:06 - INFO - 	 Best Val. Loss: 0.071
2024-11-06 16:06 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 16:06 - INFO - 	 Best PR-AUC: 0.849
2024-11-06 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-06 16:06 - INFO - ---------------------------------------------
2024-11-06 16:14 - INFO - ---------------------------------------------
2024-11-06 16:14 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-06 16:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85952
2024-11-06 16:14 - INFO - 	 Train Loss: 0.075
2024-11-06 16:14 - INFO - 	 Val. Loss: 0.067
2024-11-06 16:14 - INFO - 	 ROC-AUC: 0.985
2024-11-06 16:14 - INFO - 	 PR-AUC: 0.860
2024-11-06 16:14 - INFO - 	 Best Val. Loss: 0.067
2024-11-06 16:14 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 16:14 - INFO - 	 Best PR-AUC: 0.860
2024-11-06 16:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 16:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-06 16:14 - INFO - ---------------------------------------------
2024-11-06 16:16 - INFO - Fit the preprocessing pipeline
2024-11-06 16:16 - INFO - Training using device: cuda
2024-11-06 16:16 - INFO - Creating generators
2024-11-06 16:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 16:16 - INFO - * Model:
2024-11-06 16:16 - INFO - * -----------
2024-11-06 16:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 16:16 - INFO - * -----------
2024-11-06 16:24 - INFO - ---------------------------------------------
2024-11-06 16:24 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 16:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18164
2024-11-06 16:24 - INFO - 	 Train Loss: 0.253
2024-11-06 16:24 - INFO - 	 Val. Loss: 0.378
2024-11-06 16:24 - INFO - 	 ROC-AUC: 0.692
2024-11-06 16:24 - INFO - 	 PR-AUC: 0.182
2024-11-06 16:24 - INFO - 	 Best Val. Loss: 0.378
2024-11-06 16:24 - INFO - 	 Best ROC-AUC: 0.692
2024-11-06 16:24 - INFO - 	 Best PR-AUC: 0.182
2024-11-06 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.671
2024-11-06 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.219
2024-11-06 16:24 - INFO - ---------------------------------------------
2024-11-06 16:33 - INFO - ---------------------------------------------
2024-11-06 16:33 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 16:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31769
2024-11-06 16:33 - INFO - 	 Train Loss: 0.207
2024-11-06 16:33 - INFO - 	 Val. Loss: 0.399
2024-11-06 16:33 - INFO - 	 ROC-AUC: 0.867
2024-11-06 16:33 - INFO - 	 PR-AUC: 0.318
2024-11-06 16:33 - INFO - 	 Best Val. Loss: 0.378
2024-11-06 16:33 - INFO - 	 Best ROC-AUC: 0.867
2024-11-06 16:33 - INFO - 	 Best PR-AUC: 0.318
2024-11-06 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.859
2024-11-06 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.366
2024-11-06 16:33 - INFO - ---------------------------------------------
2024-11-06 16:41 - INFO - ---------------------------------------------
2024-11-06 16:41 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 16:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63454
2024-11-06 16:41 - INFO - 	 Train Loss: 0.137
2024-11-06 16:41 - INFO - 	 Val. Loss: 0.134
2024-11-06 16:41 - INFO - 	 ROC-AUC: 0.960
2024-11-06 16:41 - INFO - 	 PR-AUC: 0.635
2024-11-06 16:41 - INFO - 	 Best Val. Loss: 0.134
2024-11-06 16:41 - INFO - 	 Best ROC-AUC: 0.960
2024-11-06 16:41 - INFO - 	 Best PR-AUC: 0.635
2024-11-06 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-06 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.649
2024-11-06 16:41 - INFO - ---------------------------------------------
2024-11-06 16:49 - INFO - ---------------------------------------------
2024-11-06 16:49 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 16:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73301
2024-11-06 16:49 - INFO - 	 Train Loss: 0.111
2024-11-06 16:49 - INFO - 	 Val. Loss: 0.111
2024-11-06 16:49 - INFO - 	 ROC-AUC: 0.972
2024-11-06 16:49 - INFO - 	 PR-AUC: 0.733
2024-11-06 16:49 - INFO - 	 Best Val. Loss: 0.111
2024-11-06 16:49 - INFO - 	 Best ROC-AUC: 0.972
2024-11-06 16:49 - INFO - 	 Best PR-AUC: 0.733
2024-11-06 16:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-06 16:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-11-06 16:49 - INFO - ---------------------------------------------
2024-11-06 16:57 - INFO - ---------------------------------------------
2024-11-06 16:57 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78524
2024-11-06 16:57 - INFO - 	 Train Loss: 0.099
2024-11-06 16:57 - INFO - 	 Val. Loss: 0.100
2024-11-06 16:57 - INFO - 	 ROC-AUC: 0.976
2024-11-06 16:57 - INFO - 	 PR-AUC: 0.785
2024-11-06 16:57 - INFO - 	 Best Val. Loss: 0.100
2024-11-06 16:57 - INFO - 	 Best ROC-AUC: 0.976
2024-11-06 16:57 - INFO - 	 Best PR-AUC: 0.785
2024-11-06 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-06 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.747
2024-11-06 16:57 - INFO - ---------------------------------------------
2024-11-06 17:05 - INFO - ---------------------------------------------
2024-11-06 17:05 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8216
2024-11-06 17:05 - INFO - 	 Train Loss: 0.092
2024-11-06 17:05 - INFO - 	 Val. Loss: 0.079
2024-11-06 17:05 - INFO - 	 ROC-AUC: 0.981
2024-11-06 17:05 - INFO - 	 PR-AUC: 0.822
2024-11-06 17:05 - INFO - 	 Best Val. Loss: 0.079
2024-11-06 17:05 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 17:05 - INFO - 	 Best PR-AUC: 0.822
2024-11-06 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-06 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-11-06 17:05 - INFO - ---------------------------------------------
2024-11-06 17:13 - INFO - ---------------------------------------------
2024-11-06 17:13 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83406
2024-11-06 17:13 - INFO - 	 Train Loss: 0.088
2024-11-06 17:13 - INFO - 	 Val. Loss: 0.077
2024-11-06 17:13 - INFO - 	 ROC-AUC: 0.981
2024-11-06 17:13 - INFO - 	 PR-AUC: 0.834
2024-11-06 17:13 - INFO - 	 Best Val. Loss: 0.077
2024-11-06 17:13 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 17:13 - INFO - 	 Best PR-AUC: 0.834
2024-11-06 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-11-06 17:13 - INFO - ---------------------------------------------
2024-11-06 17:21 - INFO - ---------------------------------------------
2024-11-06 17:21 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 17:21 - INFO - 	 Train Loss: 0.082
2024-11-06 17:21 - INFO - 	 Val. Loss: 0.073
2024-11-06 17:21 - INFO - 	 ROC-AUC: 0.982
2024-11-06 17:21 - INFO - 	 PR-AUC: 0.834
2024-11-06 17:21 - INFO - 	 Best Val. Loss: 0.073
2024-11-06 17:21 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 17:21 - INFO - 	 Best PR-AUC: 0.834
2024-11-06 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-11-06 17:21 - INFO - ---------------------------------------------
2024-11-06 17:29 - INFO - ---------------------------------------------
2024-11-06 17:29 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8419
2024-11-06 17:29 - INFO - 	 Train Loss: 0.079
2024-11-06 17:29 - INFO - 	 Val. Loss: 0.070
2024-11-06 17:29 - INFO - 	 ROC-AUC: 0.984
2024-11-06 17:29 - INFO - 	 PR-AUC: 0.842
2024-11-06 17:29 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 17:29 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 17:29 - INFO - 	 Best PR-AUC: 0.842
2024-11-06 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-06 17:29 - INFO - ---------------------------------------------
2024-11-06 17:37 - INFO - ---------------------------------------------
2024-11-06 17:37 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-06 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86363
2024-11-06 17:37 - INFO - 	 Train Loss: 0.077
2024-11-06 17:37 - INFO - 	 Val. Loss: 0.067
2024-11-06 17:37 - INFO - 	 ROC-AUC: 0.985
2024-11-06 17:37 - INFO - 	 PR-AUC: 0.864
2024-11-06 17:37 - INFO - 	 Best Val. Loss: 0.067
2024-11-06 17:37 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 17:37 - INFO - 	 Best PR-AUC: 0.864
2024-11-06 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-11-06 17:37 - INFO - ---------------------------------------------
2024-11-06 17:39 - INFO - Fit the preprocessing pipeline
2024-11-06 17:39 - INFO - Training using device: cuda
2024-11-06 17:39 - INFO - Creating generators
2024-11-06 17:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 17:39 - INFO - * Model:
2024-11-06 17:39 - INFO - * -----------
2024-11-06 17:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 17:39 - INFO - * -----------
2024-11-06 17:47 - INFO - ---------------------------------------------
2024-11-06 17:47 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 17:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19386
2024-11-06 17:47 - INFO - 	 Train Loss: 0.247
2024-11-06 17:47 - INFO - 	 Val. Loss: 0.439
2024-11-06 17:47 - INFO - 	 ROC-AUC: 0.732
2024-11-06 17:47 - INFO - 	 PR-AUC: 0.194
2024-11-06 17:47 - INFO - 	 Best Val. Loss: 0.439
2024-11-06 17:47 - INFO - 	 Best ROC-AUC: 0.732
2024-11-06 17:47 - INFO - 	 Best PR-AUC: 0.194
2024-11-06 17:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.709
2024-11-06 17:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-06 17:47 - INFO - ---------------------------------------------
2024-11-06 17:55 - INFO - ---------------------------------------------
2024-11-06 17:55 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42867
2024-11-06 17:55 - INFO - 	 Train Loss: 0.184
2024-11-06 17:55 - INFO - 	 Val. Loss: 0.319
2024-11-06 17:55 - INFO - 	 ROC-AUC: 0.908
2024-11-06 17:55 - INFO - 	 PR-AUC: 0.429
2024-11-06 17:55 - INFO - 	 Best Val. Loss: 0.319
2024-11-06 17:55 - INFO - 	 Best ROC-AUC: 0.908
2024-11-06 17:55 - INFO - 	 Best PR-AUC: 0.429
2024-11-06 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.900
2024-11-06 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-06 17:55 - INFO - ---------------------------------------------
2024-11-06 18:03 - INFO - ---------------------------------------------
2024-11-06 18:03 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 18:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63657
2024-11-06 18:03 - INFO - 	 Train Loss: 0.128
2024-11-06 18:03 - INFO - 	 Val. Loss: 0.185
2024-11-06 18:03 - INFO - 	 ROC-AUC: 0.958
2024-11-06 18:03 - INFO - 	 PR-AUC: 0.637
2024-11-06 18:03 - INFO - 	 Best Val. Loss: 0.185
2024-11-06 18:03 - INFO - 	 Best ROC-AUC: 0.958
2024-11-06 18:03 - INFO - 	 Best PR-AUC: 0.637
2024-11-06 18:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-06 18:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.637
2024-11-06 18:03 - INFO - ---------------------------------------------
2024-11-06 18:11 - INFO - ---------------------------------------------
2024-11-06 18:11 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72528
2024-11-06 18:11 - INFO - 	 Train Loss: 0.107
2024-11-06 18:11 - INFO - 	 Val. Loss: 0.123
2024-11-06 18:11 - INFO - 	 ROC-AUC: 0.970
2024-11-06 18:11 - INFO - 	 PR-AUC: 0.725
2024-11-06 18:11 - INFO - 	 Best Val. Loss: 0.123
2024-11-06 18:11 - INFO - 	 Best ROC-AUC: 0.970
2024-11-06 18:11 - INFO - 	 Best PR-AUC: 0.725
2024-11-06 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-11-06 18:11 - INFO - ---------------------------------------------
2024-11-06 18:19 - INFO - ---------------------------------------------
2024-11-06 18:19 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 18:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78277
2024-11-06 18:19 - INFO - 	 Train Loss: 0.096
2024-11-06 18:19 - INFO - 	 Val. Loss: 0.094
2024-11-06 18:19 - INFO - 	 ROC-AUC: 0.975
2024-11-06 18:19 - INFO - 	 PR-AUC: 0.783
2024-11-06 18:19 - INFO - 	 Best Val. Loss: 0.094
2024-11-06 18:19 - INFO - 	 Best ROC-AUC: 0.975
2024-11-06 18:19 - INFO - 	 Best PR-AUC: 0.783
2024-11-06 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-06 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-11-06 18:19 - INFO - ---------------------------------------------
2024-11-06 18:28 - INFO - ---------------------------------------------
2024-11-06 18:28 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80884
2024-11-06 18:28 - INFO - 	 Train Loss: 0.089
2024-11-06 18:28 - INFO - 	 Val. Loss: 0.093
2024-11-06 18:28 - INFO - 	 ROC-AUC: 0.979
2024-11-06 18:28 - INFO - 	 PR-AUC: 0.809
2024-11-06 18:28 - INFO - 	 Best Val. Loss: 0.093
2024-11-06 18:28 - INFO - 	 Best ROC-AUC: 0.979
2024-11-06 18:28 - INFO - 	 Best PR-AUC: 0.809
2024-11-06 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-11-06 18:28 - INFO - ---------------------------------------------
2024-11-06 18:36 - INFO - ---------------------------------------------
2024-11-06 18:36 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82871
2024-11-06 18:36 - INFO - 	 Train Loss: 0.084
2024-11-06 18:36 - INFO - 	 Val. Loss: 0.075
2024-11-06 18:36 - INFO - 	 ROC-AUC: 0.983
2024-11-06 18:36 - INFO - 	 PR-AUC: 0.829
2024-11-06 18:36 - INFO - 	 Best Val. Loss: 0.075
2024-11-06 18:36 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 18:36 - INFO - 	 Best PR-AUC: 0.829
2024-11-06 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-06 18:36 - INFO - ---------------------------------------------
2024-11-06 18:44 - INFO - ---------------------------------------------
2024-11-06 18:44 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84268
2024-11-06 18:44 - INFO - 	 Train Loss: 0.079
2024-11-06 18:44 - INFO - 	 Val. Loss: 0.072
2024-11-06 18:44 - INFO - 	 ROC-AUC: 0.983
2024-11-06 18:44 - INFO - 	 PR-AUC: 0.843
2024-11-06 18:44 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 18:44 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 18:44 - INFO - 	 Best PR-AUC: 0.843
2024-11-06 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-06 18:44 - INFO - ---------------------------------------------
2024-11-06 18:52 - INFO - ---------------------------------------------
2024-11-06 18:52 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 18:52 - INFO - 	 Train Loss: 0.076
2024-11-06 18:52 - INFO - 	 Val. Loss: 0.075
2024-11-06 18:52 - INFO - 	 ROC-AUC: 0.982
2024-11-06 18:52 - INFO - 	 PR-AUC: 0.835
2024-11-06 18:52 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 18:52 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 18:52 - INFO - 	 Best PR-AUC: 0.843
2024-11-06 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-06 18:52 - INFO - ---------------------------------------------
2024-11-06 19:00 - INFO - ---------------------------------------------
2024-11-06 19:00 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-06 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84814
2024-11-06 19:00 - INFO - 	 Train Loss: 0.075
2024-11-06 19:00 - INFO - 	 Val. Loss: 0.068
2024-11-06 19:00 - INFO - 	 ROC-AUC: 0.985
2024-11-06 19:00 - INFO - 	 PR-AUC: 0.848
2024-11-06 19:00 - INFO - 	 Best Val. Loss: 0.068
2024-11-06 19:00 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 19:00 - INFO - 	 Best PR-AUC: 0.848
2024-11-06 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-06 19:00 - INFO - ---------------------------------------------
2024-11-06 19:02 - INFO - Fit the preprocessing pipeline
2024-11-06 19:02 - INFO - Training using device: cuda
2024-11-06 19:02 - INFO - Creating generators
2024-11-06 19:02 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 19:02 - INFO - * Model:
2024-11-06 19:02 - INFO - * -----------
2024-11-06 19:02 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 19:02 - INFO - * -----------
2024-11-06 19:10 - INFO - ---------------------------------------------
2024-11-06 19:10 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 19:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16964
2024-11-06 19:10 - INFO - 	 Train Loss: 0.252
2024-11-06 19:10 - INFO - 	 Val. Loss: 0.307
2024-11-06 19:10 - INFO - 	 ROC-AUC: 0.699
2024-11-06 19:10 - INFO - 	 PR-AUC: 0.170
2024-11-06 19:10 - INFO - 	 Best Val. Loss: 0.307
2024-11-06 19:10 - INFO - 	 Best ROC-AUC: 0.699
2024-11-06 19:10 - INFO - 	 Best PR-AUC: 0.170
2024-11-06 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.682
2024-11-06 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.206
2024-11-06 19:10 - INFO - ---------------------------------------------
2024-11-06 19:18 - INFO - ---------------------------------------------
2024-11-06 19:18 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 19:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31897
2024-11-06 19:18 - INFO - 	 Train Loss: 0.201
2024-11-06 19:18 - INFO - 	 Val. Loss: 0.447
2024-11-06 19:18 - INFO - 	 ROC-AUC: 0.870
2024-11-06 19:18 - INFO - 	 PR-AUC: 0.319
2024-11-06 19:18 - INFO - 	 Best Val. Loss: 0.307
2024-11-06 19:18 - INFO - 	 Best ROC-AUC: 0.870
2024-11-06 19:18 - INFO - 	 Best PR-AUC: 0.319
2024-11-06 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.869
2024-11-06 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.368
2024-11-06 19:18 - INFO - ---------------------------------------------
2024-11-06 19:26 - INFO - ---------------------------------------------
2024-11-06 19:26 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 19:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56244
2024-11-06 19:26 - INFO - 	 Train Loss: 0.140
2024-11-06 19:26 - INFO - 	 Val. Loss: 0.176
2024-11-06 19:26 - INFO - 	 ROC-AUC: 0.955
2024-11-06 19:26 - INFO - 	 PR-AUC: 0.562
2024-11-06 19:26 - INFO - 	 Best Val. Loss: 0.176
2024-11-06 19:26 - INFO - 	 Best ROC-AUC: 0.955
2024-11-06 19:26 - INFO - 	 Best PR-AUC: 0.562
2024-11-06 19:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-06 19:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.619
2024-11-06 19:26 - INFO - ---------------------------------------------
2024-11-06 19:34 - INFO - ---------------------------------------------
2024-11-06 19:34 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 19:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75466
2024-11-06 19:34 - INFO - 	 Train Loss: 0.112
2024-11-06 19:34 - INFO - 	 Val. Loss: 0.113
2024-11-06 19:34 - INFO - 	 ROC-AUC: 0.973
2024-11-06 19:34 - INFO - 	 PR-AUC: 0.755
2024-11-06 19:34 - INFO - 	 Best Val. Loss: 0.113
2024-11-06 19:34 - INFO - 	 Best ROC-AUC: 0.973
2024-11-06 19:34 - INFO - 	 Best PR-AUC: 0.755
2024-11-06 19:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-06 19:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-11-06 19:34 - INFO - ---------------------------------------------
2024-11-06 19:42 - INFO - ---------------------------------------------
2024-11-06 19:42 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 19:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78283
2024-11-06 19:42 - INFO - 	 Train Loss: 0.098
2024-11-06 19:42 - INFO - 	 Val. Loss: 0.083
2024-11-06 19:42 - INFO - 	 ROC-AUC: 0.979
2024-11-06 19:42 - INFO - 	 PR-AUC: 0.783
2024-11-06 19:42 - INFO - 	 Best Val. Loss: 0.083
2024-11-06 19:42 - INFO - 	 Best ROC-AUC: 0.979
2024-11-06 19:42 - INFO - 	 Best PR-AUC: 0.783
2024-11-06 19:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-06 19:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-11-06 19:42 - INFO - ---------------------------------------------
2024-11-06 19:50 - INFO - ---------------------------------------------
2024-11-06 19:50 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80359
2024-11-06 19:50 - INFO - 	 Train Loss: 0.089
2024-11-06 19:50 - INFO - 	 Val. Loss: 0.077
2024-11-06 19:50 - INFO - 	 ROC-AUC: 0.981
2024-11-06 19:50 - INFO - 	 PR-AUC: 0.804
2024-11-06 19:50 - INFO - 	 Best Val. Loss: 0.077
2024-11-06 19:50 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 19:50 - INFO - 	 Best PR-AUC: 0.804
2024-11-06 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-06 19:50 - INFO - ---------------------------------------------
2024-11-06 19:58 - INFO - ---------------------------------------------
2024-11-06 19:58 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 19:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81967
2024-11-06 19:58 - INFO - 	 Train Loss: 0.085
2024-11-06 19:58 - INFO - 	 Val. Loss: 0.077
2024-11-06 19:58 - INFO - 	 ROC-AUC: 0.981
2024-11-06 19:58 - INFO - 	 PR-AUC: 0.820
2024-11-06 19:58 - INFO - 	 Best Val. Loss: 0.077
2024-11-06 19:58 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 19:58 - INFO - 	 Best PR-AUC: 0.820
2024-11-06 19:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 19:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-06 19:58 - INFO - ---------------------------------------------
2024-11-06 20:06 - INFO - ---------------------------------------------
2024-11-06 20:06 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 20:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82913
2024-11-06 20:06 - INFO - 	 Train Loss: 0.080
2024-11-06 20:06 - INFO - 	 Val. Loss: 0.073
2024-11-06 20:06 - INFO - 	 ROC-AUC: 0.984
2024-11-06 20:06 - INFO - 	 PR-AUC: 0.829
2024-11-06 20:06 - INFO - 	 Best Val. Loss: 0.073
2024-11-06 20:06 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 20:06 - INFO - 	 Best PR-AUC: 0.829
2024-11-06 20:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 20:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-06 20:06 - INFO - ---------------------------------------------
2024-11-06 20:14 - INFO - ---------------------------------------------
2024-11-06 20:14 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 20:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84528
2024-11-06 20:14 - INFO - 	 Train Loss: 0.075
2024-11-06 20:14 - INFO - 	 Val. Loss: 0.071
2024-11-06 20:14 - INFO - 	 ROC-AUC: 0.984
2024-11-06 20:14 - INFO - 	 PR-AUC: 0.845
2024-11-06 20:14 - INFO - 	 Best Val. Loss: 0.071
2024-11-06 20:14 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 20:14 - INFO - 	 Best PR-AUC: 0.845
2024-11-06 20:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 20:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-06 20:14 - INFO - ---------------------------------------------
2024-11-06 20:23 - INFO - ---------------------------------------------
2024-11-06 20:23 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85465
2024-11-06 20:23 - INFO - 	 Train Loss: 0.073
2024-11-06 20:23 - INFO - 	 Val. Loss: 0.067
2024-11-06 20:23 - INFO - 	 ROC-AUC: 0.985
2024-11-06 20:23 - INFO - 	 PR-AUC: 0.855
2024-11-06 20:23 - INFO - 	 Best Val. Loss: 0.067
2024-11-06 20:23 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 20:23 - INFO - 	 Best PR-AUC: 0.855
2024-11-06 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-06 20:23 - INFO - ---------------------------------------------
2024-11-06 20:25 - INFO - Fit the preprocessing pipeline
2024-11-06 20:25 - INFO - Training using device: cuda
2024-11-06 20:25 - INFO - Creating generators
2024-11-06 20:25 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 20:25 - INFO - * Model:
2024-11-06 20:25 - INFO - * -----------
2024-11-06 20:25 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 20:25 - INFO - * -----------
2024-11-06 20:33 - INFO - ---------------------------------------------
2024-11-06 20:33 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 20:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20136
2024-11-06 20:33 - INFO - 	 Train Loss: 0.250
2024-11-06 20:33 - INFO - 	 Val. Loss: 0.465
2024-11-06 20:33 - INFO - 	 ROC-AUC: 0.746
2024-11-06 20:33 - INFO - 	 PR-AUC: 0.201
2024-11-06 20:33 - INFO - 	 Best Val. Loss: 0.465
2024-11-06 20:33 - INFO - 	 Best ROC-AUC: 0.746
2024-11-06 20:33 - INFO - 	 Best PR-AUC: 0.201
2024-11-06 20:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.710
2024-11-06 20:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.242
2024-11-06 20:33 - INFO - ---------------------------------------------
2024-11-06 20:41 - INFO - ---------------------------------------------
2024-11-06 20:41 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 20:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33897
2024-11-06 20:41 - INFO - 	 Train Loss: 0.198
2024-11-06 20:41 - INFO - 	 Val. Loss: 0.500
2024-11-06 20:41 - INFO - 	 ROC-AUC: 0.874
2024-11-06 20:41 - INFO - 	 PR-AUC: 0.339
2024-11-06 20:41 - INFO - 	 Best Val. Loss: 0.465
2024-11-06 20:41 - INFO - 	 Best ROC-AUC: 0.874
2024-11-06 20:41 - INFO - 	 Best PR-AUC: 0.339
2024-11-06 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.854
2024-11-06 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.373
2024-11-06 20:41 - INFO - ---------------------------------------------
2024-11-06 20:49 - INFO - ---------------------------------------------
2024-11-06 20:49 - INFO - Epoch: 03 | Time: 8m 3s
2024-11-06 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55317
2024-11-06 20:49 - INFO - 	 Train Loss: 0.145
2024-11-06 20:49 - INFO - 	 Val. Loss: 0.238
2024-11-06 20:49 - INFO - 	 ROC-AUC: 0.943
2024-11-06 20:49 - INFO - 	 PR-AUC: 0.553
2024-11-06 20:49 - INFO - 	 Best Val. Loss: 0.238
2024-11-06 20:49 - INFO - 	 Best ROC-AUC: 0.943
2024-11-06 20:49 - INFO - 	 Best PR-AUC: 0.553
2024-11-06 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-06 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.559
2024-11-06 20:49 - INFO - ---------------------------------------------
2024-11-06 20:57 - INFO - ---------------------------------------------
2024-11-06 20:57 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 20:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68519
2024-11-06 20:57 - INFO - 	 Train Loss: 0.119
2024-11-06 20:57 - INFO - 	 Val. Loss: 0.155
2024-11-06 20:57 - INFO - 	 ROC-AUC: 0.965
2024-11-06 20:57 - INFO - 	 PR-AUC: 0.685
2024-11-06 20:57 - INFO - 	 Best Val. Loss: 0.155
2024-11-06 20:57 - INFO - 	 Best ROC-AUC: 0.965
2024-11-06 20:57 - INFO - 	 Best PR-AUC: 0.685
2024-11-06 20:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-06 20:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.668
2024-11-06 20:57 - INFO - ---------------------------------------------
2024-11-06 21:05 - INFO - ---------------------------------------------
2024-11-06 21:05 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 21:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75406
2024-11-06 21:05 - INFO - 	 Train Loss: 0.106
2024-11-06 21:05 - INFO - 	 Val. Loss: 0.102
2024-11-06 21:05 - INFO - 	 ROC-AUC: 0.975
2024-11-06 21:05 - INFO - 	 PR-AUC: 0.754
2024-11-06 21:05 - INFO - 	 Best Val. Loss: 0.102
2024-11-06 21:05 - INFO - 	 Best ROC-AUC: 0.975
2024-11-06 21:05 - INFO - 	 Best PR-AUC: 0.754
2024-11-06 21:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 21:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-11-06 21:05 - INFO - ---------------------------------------------
2024-11-06 21:13 - INFO - ---------------------------------------------
2024-11-06 21:13 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 21:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78576
2024-11-06 21:13 - INFO - 	 Train Loss: 0.095
2024-11-06 21:13 - INFO - 	 Val. Loss: 0.089
2024-11-06 21:13 - INFO - 	 ROC-AUC: 0.978
2024-11-06 21:13 - INFO - 	 PR-AUC: 0.786
2024-11-06 21:13 - INFO - 	 Best Val. Loss: 0.089
2024-11-06 21:13 - INFO - 	 Best ROC-AUC: 0.978
2024-11-06 21:13 - INFO - 	 Best PR-AUC: 0.786
2024-11-06 21:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-06 21:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-11-06 21:13 - INFO - ---------------------------------------------
2024-11-06 21:21 - INFO - ---------------------------------------------
2024-11-06 21:21 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 21:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82682
2024-11-06 21:21 - INFO - 	 Train Loss: 0.088
2024-11-06 21:21 - INFO - 	 Val. Loss: 0.076
2024-11-06 21:21 - INFO - 	 ROC-AUC: 0.983
2024-11-06 21:21 - INFO - 	 PR-AUC: 0.827
2024-11-06 21:21 - INFO - 	 Best Val. Loss: 0.076
2024-11-06 21:21 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 21:21 - INFO - 	 Best PR-AUC: 0.827
2024-11-06 21:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 21:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-11-06 21:21 - INFO - ---------------------------------------------
2024-11-06 21:29 - INFO - ---------------------------------------------
2024-11-06 21:29 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 21:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83543
2024-11-06 21:29 - INFO - 	 Train Loss: 0.083
2024-11-06 21:29 - INFO - 	 Val. Loss: 0.072
2024-11-06 21:29 - INFO - 	 ROC-AUC: 0.985
2024-11-06 21:29 - INFO - 	 PR-AUC: 0.835
2024-11-06 21:29 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 21:29 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 21:29 - INFO - 	 Best PR-AUC: 0.835
2024-11-06 21:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 21:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-06 21:29 - INFO - ---------------------------------------------
2024-11-06 21:37 - INFO - ---------------------------------------------
2024-11-06 21:37 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 21:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8436
2024-11-06 21:37 - INFO - 	 Train Loss: 0.080
2024-11-06 21:37 - INFO - 	 Val. Loss: 0.071
2024-11-06 21:37 - INFO - 	 ROC-AUC: 0.984
2024-11-06 21:37 - INFO - 	 PR-AUC: 0.844
2024-11-06 21:37 - INFO - 	 Best Val. Loss: 0.071
2024-11-06 21:37 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 21:37 - INFO - 	 Best PR-AUC: 0.844
2024-11-06 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-06 21:37 - INFO - ---------------------------------------------
2024-11-06 21:45 - INFO - ---------------------------------------------
2024-11-06 21:45 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-06 21:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86535
2024-11-06 21:45 - INFO - 	 Train Loss: 0.076
2024-11-06 21:45 - INFO - 	 Val. Loss: 0.066
2024-11-06 21:45 - INFO - 	 ROC-AUC: 0.986
2024-11-06 21:45 - INFO - 	 PR-AUC: 0.865
2024-11-06 21:45 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 21:45 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 21:45 - INFO - 	 Best PR-AUC: 0.865
2024-11-06 21:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 21:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-06 21:45 - INFO - ---------------------------------------------
2024-11-06 21:48 - INFO - Fit the preprocessing pipeline
2024-11-06 21:48 - INFO - Training using device: cuda
2024-11-06 21:48 - INFO - Creating generators
2024-11-06 21:48 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 21:48 - INFO - * Model:
2024-11-06 21:48 - INFO - * -----------
2024-11-06 21:48 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 21:48 - INFO - * -----------
2024-11-06 21:56 - INFO - ---------------------------------------------
2024-11-06 21:56 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 21:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2022
2024-11-06 21:56 - INFO - 	 Train Loss: 0.253
2024-11-06 21:56 - INFO - 	 Val. Loss: 0.323
2024-11-06 21:56 - INFO - 	 ROC-AUC: 0.730
2024-11-06 21:56 - INFO - 	 PR-AUC: 0.202
2024-11-06 21:56 - INFO - 	 Best Val. Loss: 0.323
2024-11-06 21:56 - INFO - 	 Best ROC-AUC: 0.730
2024-11-06 21:56 - INFO - 	 Best PR-AUC: 0.202
2024-11-06 21:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-11-06 21:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.242
2024-11-06 21:56 - INFO - ---------------------------------------------
2024-11-06 22:04 - INFO - ---------------------------------------------
2024-11-06 22:04 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 22:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30693
2024-11-06 22:04 - INFO - 	 Train Loss: 0.209
2024-11-06 22:04 - INFO - 	 Val. Loss: 0.397
2024-11-06 22:04 - INFO - 	 ROC-AUC: 0.846
2024-11-06 22:04 - INFO - 	 PR-AUC: 0.307
2024-11-06 22:04 - INFO - 	 Best Val. Loss: 0.323
2024-11-06 22:04 - INFO - 	 Best ROC-AUC: 0.846
2024-11-06 22:04 - INFO - 	 Best PR-AUC: 0.307
2024-11-06 22:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.833
2024-11-06 22:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.358
2024-11-06 22:04 - INFO - ---------------------------------------------
2024-11-06 22:12 - INFO - ---------------------------------------------
2024-11-06 22:12 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 22:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56469
2024-11-06 22:12 - INFO - 	 Train Loss: 0.138
2024-11-06 22:12 - INFO - 	 Val. Loss: 0.269
2024-11-06 22:12 - INFO - 	 ROC-AUC: 0.946
2024-11-06 22:12 - INFO - 	 PR-AUC: 0.565
2024-11-06 22:12 - INFO - 	 Best Val. Loss: 0.269
2024-11-06 22:12 - INFO - 	 Best ROC-AUC: 0.946
2024-11-06 22:12 - INFO - 	 Best PR-AUC: 0.565
2024-11-06 22:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-06 22:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.595
2024-11-06 22:12 - INFO - ---------------------------------------------
2024-11-06 22:20 - INFO - ---------------------------------------------
2024-11-06 22:20 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 22:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69687
2024-11-06 22:20 - INFO - 	 Train Loss: 0.113
2024-11-06 22:20 - INFO - 	 Val. Loss: 0.140
2024-11-06 22:20 - INFO - 	 ROC-AUC: 0.969
2024-11-06 22:20 - INFO - 	 PR-AUC: 0.697
2024-11-06 22:20 - INFO - 	 Best Val. Loss: 0.140
2024-11-06 22:20 - INFO - 	 Best ROC-AUC: 0.969
2024-11-06 22:20 - INFO - 	 Best PR-AUC: 0.697
2024-11-06 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-11-06 22:20 - INFO - ---------------------------------------------
2024-11-06 22:28 - INFO - ---------------------------------------------
2024-11-06 22:28 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 22:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77248
2024-11-06 22:28 - INFO - 	 Train Loss: 0.101
2024-11-06 22:28 - INFO - 	 Val. Loss: 0.091
2024-11-06 22:28 - INFO - 	 ROC-AUC: 0.978
2024-11-06 22:28 - INFO - 	 PR-AUC: 0.772
2024-11-06 22:28 - INFO - 	 Best Val. Loss: 0.091
2024-11-06 22:28 - INFO - 	 Best ROC-AUC: 0.978
2024-11-06 22:28 - INFO - 	 Best PR-AUC: 0.772
2024-11-06 22:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-06 22:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-11-06 22:28 - INFO - ---------------------------------------------
2024-11-06 22:36 - INFO - ---------------------------------------------
2024-11-06 22:36 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80773
2024-11-06 22:36 - INFO - 	 Train Loss: 0.093
2024-11-06 22:36 - INFO - 	 Val. Loss: 0.081
2024-11-06 22:36 - INFO - 	 ROC-AUC: 0.980
2024-11-06 22:36 - INFO - 	 PR-AUC: 0.808
2024-11-06 22:36 - INFO - 	 Best Val. Loss: 0.081
2024-11-06 22:36 - INFO - 	 Best ROC-AUC: 0.980
2024-11-06 22:36 - INFO - 	 Best PR-AUC: 0.808
2024-11-06 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-11-06 22:36 - INFO - ---------------------------------------------
2024-11-06 22:44 - INFO - ---------------------------------------------
2024-11-06 22:44 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81945
2024-11-06 22:44 - INFO - 	 Train Loss: 0.089
2024-11-06 22:44 - INFO - 	 Val. Loss: 0.081
2024-11-06 22:44 - INFO - 	 ROC-AUC: 0.981
2024-11-06 22:44 - INFO - 	 PR-AUC: 0.819
2024-11-06 22:44 - INFO - 	 Best Val. Loss: 0.081
2024-11-06 22:44 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 22:44 - INFO - 	 Best PR-AUC: 0.819
2024-11-06 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-11-06 22:44 - INFO - ---------------------------------------------
2024-11-06 22:52 - INFO - ---------------------------------------------
2024-11-06 22:52 - INFO - Epoch: 08 | Time: 8m 3s
2024-11-06 22:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82575
2024-11-06 22:52 - INFO - 	 Train Loss: 0.084
2024-11-06 22:52 - INFO - 	 Val. Loss: 0.072
2024-11-06 22:52 - INFO - 	 ROC-AUC: 0.982
2024-11-06 22:52 - INFO - 	 PR-AUC: 0.826
2024-11-06 22:52 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 22:52 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 22:52 - INFO - 	 Best PR-AUC: 0.826
2024-11-06 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-06 22:52 - INFO - ---------------------------------------------
2024-11-06 23:00 - INFO - ---------------------------------------------
2024-11-06 23:00 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84751
2024-11-06 23:00 - INFO - 	 Train Loss: 0.079
2024-11-06 23:00 - INFO - 	 Val. Loss: 0.070
2024-11-06 23:00 - INFO - 	 ROC-AUC: 0.983
2024-11-06 23:00 - INFO - 	 PR-AUC: 0.848
2024-11-06 23:00 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 23:00 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 23:00 - INFO - 	 Best PR-AUC: 0.848
2024-11-06 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-06 23:00 - INFO - ---------------------------------------------
2024-11-06 23:08 - INFO - ---------------------------------------------
2024-11-06 23:08 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-06 23:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85438
2024-11-06 23:08 - INFO - 	 Train Loss: 0.076
2024-11-06 23:08 - INFO - 	 Val. Loss: 0.067
2024-11-06 23:08 - INFO - 	 ROC-AUC: 0.985
2024-11-06 23:08 - INFO - 	 PR-AUC: 0.854
2024-11-06 23:08 - INFO - 	 Best Val. Loss: 0.067
2024-11-06 23:08 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 23:08 - INFO - 	 Best PR-AUC: 0.854
2024-11-06 23:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 23:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-11-06 23:08 - INFO - ---------------------------------------------
2024-11-06 23:10 - INFO - Fit the preprocessing pipeline
2024-11-06 23:10 - INFO - Training using device: cuda
2024-11-06 23:10 - INFO - Creating generators
2024-11-06 23:10 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 23:10 - INFO - * Model:
2024-11-06 23:10 - INFO - * -----------
2024-11-06 23:10 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 23:10 - INFO - * -----------
2024-11-06 23:19 - INFO - ---------------------------------------------
2024-11-06 23:19 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 23:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16502
2024-11-06 23:19 - INFO - 	 Train Loss: 0.255
2024-11-06 23:19 - INFO - 	 Val. Loss: 0.455
2024-11-06 23:19 - INFO - 	 ROC-AUC: 0.697
2024-11-06 23:19 - INFO - 	 PR-AUC: 0.165
2024-11-06 23:19 - INFO - 	 Best Val. Loss: 0.455
2024-11-06 23:19 - INFO - 	 Best ROC-AUC: 0.697
2024-11-06 23:19 - INFO - 	 Best PR-AUC: 0.165
2024-11-06 23:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.651
2024-11-06 23:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.191
2024-11-06 23:19 - INFO - ---------------------------------------------
2024-11-06 23:27 - INFO - ---------------------------------------------
2024-11-06 23:27 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 23:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35828
2024-11-06 23:27 - INFO - 	 Train Loss: 0.208
2024-11-06 23:27 - INFO - 	 Val. Loss: 0.432
2024-11-06 23:27 - INFO - 	 ROC-AUC: 0.875
2024-11-06 23:27 - INFO - 	 PR-AUC: 0.358
2024-11-06 23:27 - INFO - 	 Best Val. Loss: 0.432
2024-11-06 23:27 - INFO - 	 Best ROC-AUC: 0.875
2024-11-06 23:27 - INFO - 	 Best PR-AUC: 0.358
2024-11-06 23:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.871
2024-11-06 23:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.404
2024-11-06 23:27 - INFO - ---------------------------------------------
2024-11-06 23:35 - INFO - ---------------------------------------------
2024-11-06 23:35 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 23:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56154
2024-11-06 23:35 - INFO - 	 Train Loss: 0.148
2024-11-06 23:35 - INFO - 	 Val. Loss: 0.266
2024-11-06 23:35 - INFO - 	 ROC-AUC: 0.936
2024-11-06 23:35 - INFO - 	 PR-AUC: 0.562
2024-11-06 23:35 - INFO - 	 Best Val. Loss: 0.266
2024-11-06 23:35 - INFO - 	 Best ROC-AUC: 0.936
2024-11-06 23:35 - INFO - 	 Best PR-AUC: 0.562
2024-11-06 23:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-06 23:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.579
2024-11-06 23:35 - INFO - ---------------------------------------------
2024-11-06 23:43 - INFO - ---------------------------------------------
2024-11-06 23:43 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 23:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65337
2024-11-06 23:43 - INFO - 	 Train Loss: 0.124
2024-11-06 23:43 - INFO - 	 Val. Loss: 0.219
2024-11-06 23:43 - INFO - 	 ROC-AUC: 0.952
2024-11-06 23:43 - INFO - 	 PR-AUC: 0.653
2024-11-06 23:43 - INFO - 	 Best Val. Loss: 0.219
2024-11-06 23:43 - INFO - 	 Best ROC-AUC: 0.952
2024-11-06 23:43 - INFO - 	 Best PR-AUC: 0.653
2024-11-06 23:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-06 23:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-11-06 23:43 - INFO - ---------------------------------------------
2024-11-06 23:51 - INFO - ---------------------------------------------
2024-11-06 23:51 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 23:51 - INFO - 	 Train Loss: 0.113
2024-11-06 23:51 - INFO - 	 Val. Loss: 0.207
2024-11-06 23:51 - INFO - 	 ROC-AUC: 0.956
2024-11-06 23:51 - INFO - 	 PR-AUC: 0.645
2024-11-06 23:51 - INFO - 	 Best Val. Loss: 0.207
2024-11-06 23:51 - INFO - 	 Best ROC-AUC: 0.956
2024-11-06 23:51 - INFO - 	 Best PR-AUC: 0.653
2024-11-06 23:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-06 23:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-11-06 23:51 - INFO - ---------------------------------------------
2024-11-06 23:59 - INFO - ---------------------------------------------
2024-11-06 23:59 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71354
2024-11-06 23:59 - INFO - 	 Train Loss: 0.099
2024-11-06 23:59 - INFO - 	 Val. Loss: 0.160
2024-11-06 23:59 - INFO - 	 ROC-AUC: 0.965
2024-11-06 23:59 - INFO - 	 PR-AUC: 0.714
2024-11-06 23:59 - INFO - 	 Best Val. Loss: 0.160
2024-11-06 23:59 - INFO - 	 Best ROC-AUC: 0.965
2024-11-06 23:59 - INFO - 	 Best PR-AUC: 0.714
2024-11-06 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-06 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.703
2024-11-06 23:59 - INFO - ---------------------------------------------
2024-11-07 00:07 - INFO - ---------------------------------------------
2024-11-07 00:07 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-07 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76789
2024-11-07 00:07 - INFO - 	 Train Loss: 0.087
2024-11-07 00:07 - INFO - 	 Val. Loss: 0.109
2024-11-07 00:07 - INFO - 	 ROC-AUC: 0.975
2024-11-07 00:07 - INFO - 	 PR-AUC: 0.768
2024-11-07 00:07 - INFO - 	 Best Val. Loss: 0.109
2024-11-07 00:07 - INFO - 	 Best ROC-AUC: 0.975
2024-11-07 00:07 - INFO - 	 Best PR-AUC: 0.768
2024-11-07 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-07 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.749
2024-11-07 00:07 - INFO - ---------------------------------------------
2024-11-07 00:15 - INFO - ---------------------------------------------
2024-11-07 00:15 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-07 00:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82968
2024-11-07 00:15 - INFO - 	 Train Loss: 0.083
2024-11-07 00:15 - INFO - 	 Val. Loss: 0.078
2024-11-07 00:15 - INFO - 	 ROC-AUC: 0.980
2024-11-07 00:15 - INFO - 	 PR-AUC: 0.830
2024-11-07 00:15 - INFO - 	 Best Val. Loss: 0.078
2024-11-07 00:15 - INFO - 	 Best ROC-AUC: 0.980
2024-11-07 00:15 - INFO - 	 Best PR-AUC: 0.830
2024-11-07 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-07 00:15 - INFO - ---------------------------------------------
2024-11-07 00:23 - INFO - ---------------------------------------------
2024-11-07 00:23 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 00:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85432
2024-11-07 00:23 - INFO - 	 Train Loss: 0.077
2024-11-07 00:23 - INFO - 	 Val. Loss: 0.080
2024-11-07 00:23 - INFO - 	 ROC-AUC: 0.983
2024-11-07 00:23 - INFO - 	 PR-AUC: 0.854
2024-11-07 00:23 - INFO - 	 Best Val. Loss: 0.078
2024-11-07 00:23 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 00:23 - INFO - 	 Best PR-AUC: 0.854
2024-11-07 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-07 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-07 00:23 - INFO - ---------------------------------------------
2024-11-07 00:31 - INFO - ---------------------------------------------
2024-11-07 00:31 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-07 00:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85614
2024-11-07 00:31 - INFO - 	 Train Loss: 0.072
2024-11-07 00:31 - INFO - 	 Val. Loss: 0.070
2024-11-07 00:31 - INFO - 	 ROC-AUC: 0.984
2024-11-07 00:31 - INFO - 	 PR-AUC: 0.856
2024-11-07 00:31 - INFO - 	 Best Val. Loss: 0.070
2024-11-07 00:31 - INFO - 	 Best ROC-AUC: 0.984
2024-11-07 00:31 - INFO - 	 Best PR-AUC: 0.856
2024-11-07 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-07 00:31 - INFO - ---------------------------------------------
2024-11-07 00:33 - INFO - Fit the preprocessing pipeline
2024-11-07 00:33 - INFO - Training using device: cuda
2024-11-07 00:33 - INFO - Creating generators
2024-11-07 00:33 - INFO - The model has 2,246,929 trainable parameters
2024-11-07 00:33 - INFO - * Model:
2024-11-07 00:33 - INFO - * -----------
2024-11-07 00:33 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-07 00:33 - INFO - * -----------
2024-11-07 00:41 - INFO - ---------------------------------------------
2024-11-07 00:41 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-07 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19761
2024-11-07 00:41 - INFO - 	 Train Loss: 0.248
2024-11-07 00:41 - INFO - 	 Val. Loss: 0.429
2024-11-07 00:41 - INFO - 	 ROC-AUC: 0.731
2024-11-07 00:41 - INFO - 	 PR-AUC: 0.198
2024-11-07 00:41 - INFO - 	 Best Val. Loss: 0.429
2024-11-07 00:41 - INFO - 	 Best ROC-AUC: 0.731
2024-11-07 00:41 - INFO - 	 Best PR-AUC: 0.198
2024-11-07 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.717
2024-11-07 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.239
2024-11-07 00:41 - INFO - ---------------------------------------------
2024-11-07 00:49 - INFO - ---------------------------------------------
2024-11-07 00:49 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-07 00:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37318
2024-11-07 00:49 - INFO - 	 Train Loss: 0.179
2024-11-07 00:49 - INFO - 	 Val. Loss: 0.318
2024-11-07 00:49 - INFO - 	 ROC-AUC: 0.887
2024-11-07 00:49 - INFO - 	 PR-AUC: 0.373
2024-11-07 00:49 - INFO - 	 Best Val. Loss: 0.318
2024-11-07 00:49 - INFO - 	 Best ROC-AUC: 0.887
2024-11-07 00:49 - INFO - 	 Best PR-AUC: 0.373
2024-11-07 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.891
2024-11-07 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-11-07 00:49 - INFO - ---------------------------------------------
2024-11-07 00:57 - INFO - ---------------------------------------------
2024-11-07 00:57 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-07 00:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59924
2024-11-07 00:57 - INFO - 	 Train Loss: 0.129
2024-11-07 00:57 - INFO - 	 Val. Loss: 0.194
2024-11-07 00:57 - INFO - 	 ROC-AUC: 0.948
2024-11-07 00:57 - INFO - 	 PR-AUC: 0.599
2024-11-07 00:57 - INFO - 	 Best Val. Loss: 0.194
2024-11-07 00:57 - INFO - 	 Best ROC-AUC: 0.948
2024-11-07 00:57 - INFO - 	 Best PR-AUC: 0.599
2024-11-07 00:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-07 00:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.582
2024-11-07 00:57 - INFO - ---------------------------------------------
2024-11-07 01:05 - INFO - ---------------------------------------------
2024-11-07 01:05 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-07 01:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67448
2024-11-07 01:05 - INFO - 	 Train Loss: 0.111
2024-11-07 01:05 - INFO - 	 Val. Loss: 0.150
2024-11-07 01:05 - INFO - 	 ROC-AUC: 0.961
2024-11-07 01:05 - INFO - 	 PR-AUC: 0.674
2024-11-07 01:05 - INFO - 	 Best Val. Loss: 0.150
2024-11-07 01:05 - INFO - 	 Best ROC-AUC: 0.961
2024-11-07 01:05 - INFO - 	 Best PR-AUC: 0.674
2024-11-07 01:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-07 01:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.674
2024-11-07 01:05 - INFO - ---------------------------------------------
2024-11-07 01:13 - INFO - ---------------------------------------------
2024-11-07 01:13 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-07 01:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75176
2024-11-07 01:13 - INFO - 	 Train Loss: 0.099
2024-11-07 01:13 - INFO - 	 Val. Loss: 0.117
2024-11-07 01:13 - INFO - 	 ROC-AUC: 0.972
2024-11-07 01:13 - INFO - 	 PR-AUC: 0.752
2024-11-07 01:13 - INFO - 	 Best Val. Loss: 0.117
2024-11-07 01:13 - INFO - 	 Best ROC-AUC: 0.972
2024-11-07 01:13 - INFO - 	 Best PR-AUC: 0.752
2024-11-07 01:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-07 01:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-11-07 01:13 - INFO - ---------------------------------------------
2024-11-07 01:22 - INFO - ---------------------------------------------
2024-11-07 01:22 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-07 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80275
2024-11-07 01:22 - INFO - 	 Train Loss: 0.092
2024-11-07 01:22 - INFO - 	 Val. Loss: 0.084
2024-11-07 01:22 - INFO - 	 ROC-AUC: 0.979
2024-11-07 01:22 - INFO - 	 PR-AUC: 0.803
2024-11-07 01:22 - INFO - 	 Best Val. Loss: 0.084
2024-11-07 01:22 - INFO - 	 Best ROC-AUC: 0.979
2024-11-07 01:22 - INFO - 	 Best PR-AUC: 0.803
2024-11-07 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-07 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-11-07 01:22 - INFO - ---------------------------------------------
2024-11-07 01:30 - INFO - ---------------------------------------------
2024-11-07 01:30 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-07 01:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81525
2024-11-07 01:30 - INFO - 	 Train Loss: 0.088
2024-11-07 01:30 - INFO - 	 Val. Loss: 0.094
2024-11-07 01:30 - INFO - 	 ROC-AUC: 0.979
2024-11-07 01:30 - INFO - 	 PR-AUC: 0.815
2024-11-07 01:30 - INFO - 	 Best Val. Loss: 0.084
2024-11-07 01:30 - INFO - 	 Best ROC-AUC: 0.979
2024-11-07 01:30 - INFO - 	 Best PR-AUC: 0.815
2024-11-07 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-07 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-11-07 01:30 - INFO - ---------------------------------------------
2024-11-07 01:38 - INFO - ---------------------------------------------
2024-11-07 01:38 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-07 01:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83214
2024-11-07 01:38 - INFO - 	 Train Loss: 0.081
2024-11-07 01:38 - INFO - 	 Val. Loss: 0.082
2024-11-07 01:38 - INFO - 	 ROC-AUC: 0.980
2024-11-07 01:38 - INFO - 	 PR-AUC: 0.832
2024-11-07 01:38 - INFO - 	 Best Val. Loss: 0.082
2024-11-07 01:38 - INFO - 	 Best ROC-AUC: 0.980
2024-11-07 01:38 - INFO - 	 Best PR-AUC: 0.832
2024-11-07 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-11-07 01:38 - INFO - ---------------------------------------------
2024-11-07 01:46 - INFO - ---------------------------------------------
2024-11-07 01:46 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 01:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8428
2024-11-07 01:46 - INFO - 	 Train Loss: 0.077
2024-11-07 01:46 - INFO - 	 Val. Loss: 0.072
2024-11-07 01:46 - INFO - 	 ROC-AUC: 0.983
2024-11-07 01:46 - INFO - 	 PR-AUC: 0.843
2024-11-07 01:46 - INFO - 	 Best Val. Loss: 0.072
2024-11-07 01:46 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 01:46 - INFO - 	 Best PR-AUC: 0.843
2024-11-07 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-07 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-07 01:46 - INFO - ---------------------------------------------
2024-11-07 01:54 - INFO - ---------------------------------------------
2024-11-07 01:54 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-07 01:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85602
2024-11-07 01:54 - INFO - 	 Train Loss: 0.072
2024-11-07 01:54 - INFO - 	 Val. Loss: 0.070
2024-11-07 01:54 - INFO - 	 ROC-AUC: 0.983
2024-11-07 01:54 - INFO - 	 PR-AUC: 0.856
2024-11-07 01:54 - INFO - 	 Best Val. Loss: 0.070
2024-11-07 01:54 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 01:54 - INFO - 	 Best PR-AUC: 0.856
2024-11-07 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-07 01:54 - INFO - ---------------------------------------------
2024-11-07 01:56 - INFO - Fit the preprocessing pipeline
2024-11-07 01:56 - INFO - Training using device: cuda
2024-11-07 01:56 - INFO - Creating generators
2024-11-07 01:56 - INFO - The model has 2,246,929 trainable parameters
2024-11-07 01:56 - INFO - * Model:
2024-11-07 01:56 - INFO - * -----------
2024-11-07 01:56 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-07 01:56 - INFO - * -----------
2024-11-07 02:04 - INFO - ---------------------------------------------
2024-11-07 02:04 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-07 02:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20687
2024-11-07 02:04 - INFO - 	 Train Loss: 0.251
2024-11-07 02:04 - INFO - 	 Val. Loss: 0.379
2024-11-07 02:04 - INFO - 	 ROC-AUC: 0.747
2024-11-07 02:04 - INFO - 	 PR-AUC: 0.207
2024-11-07 02:04 - INFO - 	 Best Val. Loss: 0.379
2024-11-07 02:04 - INFO - 	 Best ROC-AUC: 0.747
2024-11-07 02:04 - INFO - 	 Best PR-AUC: 0.207
2024-11-07 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.719
2024-11-07 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.243
2024-11-07 02:04 - INFO - ---------------------------------------------
2024-11-07 02:12 - INFO - ---------------------------------------------
2024-11-07 02:12 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-07 02:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40327
2024-11-07 02:12 - INFO - 	 Train Loss: 0.191
2024-11-07 02:12 - INFO - 	 Val. Loss: 0.314
2024-11-07 02:12 - INFO - 	 ROC-AUC: 0.910
2024-11-07 02:12 - INFO - 	 PR-AUC: 0.403
2024-11-07 02:12 - INFO - 	 Best Val. Loss: 0.314
2024-11-07 02:12 - INFO - 	 Best ROC-AUC: 0.910
2024-11-07 02:12 - INFO - 	 Best PR-AUC: 0.403
2024-11-07 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-07 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-07 02:12 - INFO - ---------------------------------------------
2024-11-07 02:20 - INFO - ---------------------------------------------
2024-11-07 02:20 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-07 02:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64414
2024-11-07 02:20 - INFO - 	 Train Loss: 0.132
2024-11-07 02:20 - INFO - 	 Val. Loss: 0.152
2024-11-07 02:20 - INFO - 	 ROC-AUC: 0.962
2024-11-07 02:20 - INFO - 	 PR-AUC: 0.644
2024-11-07 02:20 - INFO - 	 Best Val. Loss: 0.152
2024-11-07 02:20 - INFO - 	 Best ROC-AUC: 0.962
2024-11-07 02:20 - INFO - 	 Best PR-AUC: 0.644
2024-11-07 02:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-07 02:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.666
2024-11-07 02:20 - INFO - ---------------------------------------------
2024-11-07 02:28 - INFO - ---------------------------------------------
2024-11-07 02:28 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-07 02:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77503
2024-11-07 02:28 - INFO - 	 Train Loss: 0.110
2024-11-07 02:28 - INFO - 	 Val. Loss: 0.125
2024-11-07 02:28 - INFO - 	 ROC-AUC: 0.974
2024-11-07 02:28 - INFO - 	 PR-AUC: 0.775
2024-11-07 02:28 - INFO - 	 Best Val. Loss: 0.125
2024-11-07 02:28 - INFO - 	 Best ROC-AUC: 0.974
2024-11-07 02:28 - INFO - 	 Best PR-AUC: 0.775
2024-11-07 02:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-07 02:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-11-07 02:28 - INFO - ---------------------------------------------
2024-11-07 02:36 - INFO - ---------------------------------------------
2024-11-07 02:36 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-07 02:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8007
2024-11-07 02:36 - INFO - 	 Train Loss: 0.098
2024-11-07 02:36 - INFO - 	 Val. Loss: 0.089
2024-11-07 02:36 - INFO - 	 ROC-AUC: 0.979
2024-11-07 02:36 - INFO - 	 PR-AUC: 0.801
2024-11-07 02:36 - INFO - 	 Best Val. Loss: 0.089
2024-11-07 02:36 - INFO - 	 Best ROC-AUC: 0.979
2024-11-07 02:36 - INFO - 	 Best PR-AUC: 0.801
2024-11-07 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-07 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-11-07 02:36 - INFO - ---------------------------------------------
2024-11-07 02:44 - INFO - ---------------------------------------------
2024-11-07 02:44 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-07 02:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81962
2024-11-07 02:44 - INFO - 	 Train Loss: 0.091
2024-11-07 02:44 - INFO - 	 Val. Loss: 0.077
2024-11-07 02:44 - INFO - 	 ROC-AUC: 0.981
2024-11-07 02:44 - INFO - 	 PR-AUC: 0.820
2024-11-07 02:44 - INFO - 	 Best Val. Loss: 0.077
2024-11-07 02:44 - INFO - 	 Best ROC-AUC: 0.981
2024-11-07 02:44 - INFO - 	 Best PR-AUC: 0.820
2024-11-07 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-07 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-11-07 02:44 - INFO - ---------------------------------------------
2024-11-07 02:52 - INFO - ---------------------------------------------
2024-11-07 02:52 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-07 02:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8393
2024-11-07 02:52 - INFO - 	 Train Loss: 0.085
2024-11-07 02:52 - INFO - 	 Val. Loss: 0.072
2024-11-07 02:52 - INFO - 	 ROC-AUC: 0.983
2024-11-07 02:52 - INFO - 	 PR-AUC: 0.839
2024-11-07 02:52 - INFO - 	 Best Val. Loss: 0.072
2024-11-07 02:52 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 02:52 - INFO - 	 Best PR-AUC: 0.839
2024-11-07 02:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 02:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-07 02:52 - INFO - ---------------------------------------------
2024-11-07 03:00 - INFO - ---------------------------------------------
2024-11-07 03:00 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-07 03:00 - INFO - 	 Train Loss: 0.082
2024-11-07 03:00 - INFO - 	 Val. Loss: 0.075
2024-11-07 03:00 - INFO - 	 ROC-AUC: 0.982
2024-11-07 03:00 - INFO - 	 PR-AUC: 0.829
2024-11-07 03:00 - INFO - 	 Best Val. Loss: 0.072
2024-11-07 03:00 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 03:00 - INFO - 	 Best PR-AUC: 0.839
2024-11-07 03:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 03:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-07 03:00 - INFO - ---------------------------------------------
2024-11-07 03:08 - INFO - ---------------------------------------------
2024-11-07 03:08 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 03:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85098
2024-11-07 03:08 - INFO - 	 Train Loss: 0.079
2024-11-07 03:08 - INFO - 	 Val. Loss: 0.069
2024-11-07 03:08 - INFO - 	 ROC-AUC: 0.984
2024-11-07 03:08 - INFO - 	 PR-AUC: 0.851
2024-11-07 03:08 - INFO - 	 Best Val. Loss: 0.069
2024-11-07 03:08 - INFO - 	 Best ROC-AUC: 0.984
2024-11-07 03:08 - INFO - 	 Best PR-AUC: 0.851
2024-11-07 03:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-07 03:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-07 03:08 - INFO - ---------------------------------------------
2024-11-07 03:16 - INFO - ---------------------------------------------
2024-11-07 03:16 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-07 03:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85352
2024-11-07 03:16 - INFO - 	 Train Loss: 0.075
2024-11-07 03:16 - INFO - 	 Val. Loss: 0.071
2024-11-07 03:16 - INFO - 	 ROC-AUC: 0.984
2024-11-07 03:16 - INFO - 	 PR-AUC: 0.854
2024-11-07 03:16 - INFO - 	 Best Val. Loss: 0.069
2024-11-07 03:16 - INFO - 	 Best ROC-AUC: 0.984
2024-11-07 03:16 - INFO - 	 Best PR-AUC: 0.854
2024-11-07 03:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-07 03:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-07 03:16 - INFO - ---------------------------------------------
2024-11-07 03:19 - INFO - Fit the preprocessing pipeline
2024-11-07 03:19 - INFO - Training using device: cuda
2024-11-07 03:19 - INFO - Creating generators
2024-11-07 03:19 - INFO - The model has 2,246,929 trainable parameters
2024-11-07 03:19 - INFO - * Model:
2024-11-07 03:19 - INFO - * -----------
2024-11-07 03:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-07 03:19 - INFO - * -----------
2024-11-07 03:27 - INFO - ---------------------------------------------
2024-11-07 03:27 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-07 03:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18356
2024-11-07 03:27 - INFO - 	 Train Loss: 0.252
2024-11-07 03:27 - INFO - 	 Val. Loss: 0.537
2024-11-07 03:27 - INFO - 	 ROC-AUC: 0.723
2024-11-07 03:27 - INFO - 	 PR-AUC: 0.184
2024-11-07 03:27 - INFO - 	 Best Val. Loss: 0.537
2024-11-07 03:27 - INFO - 	 Best ROC-AUC: 0.723
2024-11-07 03:27 - INFO - 	 Best PR-AUC: 0.184
2024-11-07 03:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.707
2024-11-07 03:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.218
2024-11-07 03:27 - INFO - ---------------------------------------------
2024-11-07 03:35 - INFO - ---------------------------------------------
2024-11-07 03:35 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-07 03:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41079
2024-11-07 03:35 - INFO - 	 Train Loss: 0.185
2024-11-07 03:35 - INFO - 	 Val. Loss: 0.395
2024-11-07 03:35 - INFO - 	 ROC-AUC: 0.895
2024-11-07 03:35 - INFO - 	 PR-AUC: 0.411
2024-11-07 03:35 - INFO - 	 Best Val. Loss: 0.395
2024-11-07 03:35 - INFO - 	 Best ROC-AUC: 0.895
2024-11-07 03:35 - INFO - 	 Best PR-AUC: 0.411
2024-11-07 03:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.893
2024-11-07 03:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-11-07 03:35 - INFO - ---------------------------------------------
2024-11-07 03:43 - INFO - ---------------------------------------------
2024-11-07 03:43 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-07 03:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63793
2024-11-07 03:43 - INFO - 	 Train Loss: 0.132
2024-11-07 03:43 - INFO - 	 Val. Loss: 0.149
2024-11-07 03:43 - INFO - 	 ROC-AUC: 0.959
2024-11-07 03:43 - INFO - 	 PR-AUC: 0.638
2024-11-07 03:43 - INFO - 	 Best Val. Loss: 0.149
2024-11-07 03:43 - INFO - 	 Best ROC-AUC: 0.959
2024-11-07 03:43 - INFO - 	 Best PR-AUC: 0.638
2024-11-07 03:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-07 03:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.652
2024-11-07 03:43 - INFO - ---------------------------------------------
2024-11-07 03:51 - INFO - ---------------------------------------------
2024-11-07 03:51 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-07 03:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75392
2024-11-07 03:51 - INFO - 	 Train Loss: 0.111
2024-11-07 03:51 - INFO - 	 Val. Loss: 0.123
2024-11-07 03:51 - INFO - 	 ROC-AUC: 0.972
2024-11-07 03:51 - INFO - 	 PR-AUC: 0.754
2024-11-07 03:51 - INFO - 	 Best Val. Loss: 0.123
2024-11-07 03:51 - INFO - 	 Best ROC-AUC: 0.972
2024-11-07 03:51 - INFO - 	 Best PR-AUC: 0.754
2024-11-07 03:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-07 03:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.729
2024-11-07 03:51 - INFO - ---------------------------------------------
2024-11-07 03:59 - INFO - ---------------------------------------------
2024-11-07 03:59 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-07 03:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78518
2024-11-07 03:59 - INFO - 	 Train Loss: 0.099
2024-11-07 03:59 - INFO - 	 Val. Loss: 0.087
2024-11-07 03:59 - INFO - 	 ROC-AUC: 0.977
2024-11-07 03:59 - INFO - 	 PR-AUC: 0.785
2024-11-07 03:59 - INFO - 	 Best Val. Loss: 0.087
2024-11-07 03:59 - INFO - 	 Best ROC-AUC: 0.977
2024-11-07 03:59 - INFO - 	 Best PR-AUC: 0.785
2024-11-07 03:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-07 03:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-11-07 03:59 - INFO - ---------------------------------------------
2024-11-07 04:07 - INFO - ---------------------------------------------
2024-11-07 04:07 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-07 04:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82614
2024-11-07 04:07 - INFO - 	 Train Loss: 0.090
2024-11-07 04:07 - INFO - 	 Val. Loss: 0.078
2024-11-07 04:07 - INFO - 	 ROC-AUC: 0.981
2024-11-07 04:07 - INFO - 	 PR-AUC: 0.826
2024-11-07 04:07 - INFO - 	 Best Val. Loss: 0.078
2024-11-07 04:07 - INFO - 	 Best ROC-AUC: 0.981
2024-11-07 04:07 - INFO - 	 Best PR-AUC: 0.826
2024-11-07 04:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 04:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-11-07 04:07 - INFO - ---------------------------------------------
2024-11-07 04:15 - INFO - ---------------------------------------------
2024-11-07 04:15 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-07 04:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8413
2024-11-07 04:15 - INFO - 	 Train Loss: 0.084
2024-11-07 04:15 - INFO - 	 Val. Loss: 0.072
2024-11-07 04:15 - INFO - 	 ROC-AUC: 0.983
2024-11-07 04:15 - INFO - 	 PR-AUC: 0.841
2024-11-07 04:15 - INFO - 	 Best Val. Loss: 0.072
2024-11-07 04:15 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 04:15 - INFO - 	 Best PR-AUC: 0.841
2024-11-07 04:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 04:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-07 04:15 - INFO - ---------------------------------------------
2024-11-07 04:23 - INFO - ---------------------------------------------
2024-11-07 04:23 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-07 04:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84626
2024-11-07 04:23 - INFO - 	 Train Loss: 0.081
2024-11-07 04:23 - INFO - 	 Val. Loss: 0.070
2024-11-07 04:23 - INFO - 	 ROC-AUC: 0.985
2024-11-07 04:23 - INFO - 	 PR-AUC: 0.846
2024-11-07 04:23 - INFO - 	 Best Val. Loss: 0.070
2024-11-07 04:23 - INFO - 	 Best ROC-AUC: 0.985
2024-11-07 04:23 - INFO - 	 Best PR-AUC: 0.846
2024-11-07 04:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-07 04:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-07 04:23 - INFO - ---------------------------------------------
2024-11-07 04:31 - INFO - ---------------------------------------------
2024-11-07 04:31 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 04:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86264
2024-11-07 04:31 - INFO - 	 Train Loss: 0.078
2024-11-07 04:31 - INFO - 	 Val. Loss: 0.068
2024-11-07 04:31 - INFO - 	 ROC-AUC: 0.985
2024-11-07 04:31 - INFO - 	 PR-AUC: 0.863
2024-11-07 04:31 - INFO - 	 Best Val. Loss: 0.068
2024-11-07 04:31 - INFO - 	 Best ROC-AUC: 0.985
2024-11-07 04:31 - INFO - 	 Best PR-AUC: 0.863
2024-11-07 04:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-07 04:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-07 04:31 - INFO - ---------------------------------------------
2024-11-07 04:39 - INFO - ---------------------------------------------
2024-11-07 04:39 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-07 04:39 - INFO - 	 Train Loss: 0.074
2024-11-07 04:39 - INFO - 	 Val. Loss: 0.069
2024-11-07 04:39 - INFO - 	 ROC-AUC: 0.985
2024-11-07 04:39 - INFO - 	 PR-AUC: 0.851
2024-11-07 04:39 - INFO - 	 Best Val. Loss: 0.068
2024-11-07 04:39 - INFO - 	 Best ROC-AUC: 0.985
2024-11-07 04:39 - INFO - 	 Best PR-AUC: 0.863
2024-11-07 04:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-07 04:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-07 04:39 - INFO - ---------------------------------------------
2024-11-07 04:42 - INFO - Fit the preprocessing pipeline
2024-11-07 04:42 - INFO - Training using device: cuda
2024-11-07 04:42 - INFO - Creating generators
2024-11-07 04:42 - INFO - The model has 2,246,929 trainable parameters
2024-11-07 04:42 - INFO - * Model:
2024-11-07 04:42 - INFO - * -----------
2024-11-07 04:42 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-07 04:42 - INFO - * -----------
2024-11-07 04:50 - INFO - ---------------------------------------------
2024-11-07 04:50 - INFO - Epoch: 01 | Time: 8m 3s
2024-11-07 04:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1826
2024-11-07 04:50 - INFO - 	 Train Loss: 0.255
2024-11-07 04:50 - INFO - 	 Val. Loss: 0.282
2024-11-07 04:50 - INFO - 	 ROC-AUC: 0.719
2024-11-07 04:50 - INFO - 	 PR-AUC: 0.183
2024-11-07 04:50 - INFO - 	 Best Val. Loss: 0.282
2024-11-07 04:50 - INFO - 	 Best ROC-AUC: 0.719
2024-11-07 04:50 - INFO - 	 Best PR-AUC: 0.183
2024-11-07 04:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.687
2024-11-07 04:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.217
2024-11-07 04:50 - INFO - ---------------------------------------------
2024-11-07 04:58 - INFO - ---------------------------------------------
2024-11-07 04:58 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-07 04:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38068
2024-11-07 04:58 - INFO - 	 Train Loss: 0.208
2024-11-07 04:58 - INFO - 	 Val. Loss: 0.403
2024-11-07 04:58 - INFO - 	 ROC-AUC: 0.898
2024-11-07 04:58 - INFO - 	 PR-AUC: 0.381
2024-11-07 04:58 - INFO - 	 Best Val. Loss: 0.282
2024-11-07 04:58 - INFO - 	 Best ROC-AUC: 0.898
2024-11-07 04:58 - INFO - 	 Best PR-AUC: 0.381
2024-11-07 04:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-07 04:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-11-07 04:58 - INFO - ---------------------------------------------
2024-11-07 05:06 - INFO - ---------------------------------------------
2024-11-07 05:06 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-07 05:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60251
2024-11-07 05:06 - INFO - 	 Train Loss: 0.134
2024-11-07 05:06 - INFO - 	 Val. Loss: 0.221
2024-11-07 05:06 - INFO - 	 ROC-AUC: 0.951
2024-11-07 05:06 - INFO - 	 PR-AUC: 0.603
2024-11-07 05:06 - INFO - 	 Best Val. Loss: 0.221
2024-11-07 05:06 - INFO - 	 Best ROC-AUC: 0.951
2024-11-07 05:06 - INFO - 	 Best PR-AUC: 0.603
2024-11-07 05:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-07 05:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.612
2024-11-07 05:06 - INFO - ---------------------------------------------
2024-11-07 05:14 - INFO - ---------------------------------------------
2024-11-07 05:14 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-07 05:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75097
2024-11-07 05:14 - INFO - 	 Train Loss: 0.106
2024-11-07 05:14 - INFO - 	 Val. Loss: 0.122
2024-11-07 05:14 - INFO - 	 ROC-AUC: 0.971
2024-11-07 05:14 - INFO - 	 PR-AUC: 0.751
2024-11-07 05:14 - INFO - 	 Best Val. Loss: 0.122
2024-11-07 05:14 - INFO - 	 Best ROC-AUC: 0.971
2024-11-07 05:14 - INFO - 	 Best PR-AUC: 0.751
2024-11-07 05:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-07 05:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.734
2024-11-07 05:14 - INFO - ---------------------------------------------
2024-11-07 05:22 - INFO - ---------------------------------------------
2024-11-07 05:22 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-07 05:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78717
2024-11-07 05:22 - INFO - 	 Train Loss: 0.096
2024-11-07 05:22 - INFO - 	 Val. Loss: 0.099
2024-11-07 05:22 - INFO - 	 ROC-AUC: 0.977
2024-11-07 05:22 - INFO - 	 PR-AUC: 0.787
2024-11-07 05:22 - INFO - 	 Best Val. Loss: 0.099
2024-11-07 05:22 - INFO - 	 Best ROC-AUC: 0.977
2024-11-07 05:22 - INFO - 	 Best PR-AUC: 0.787
2024-11-07 05:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-07 05:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-11-07 05:22 - INFO - ---------------------------------------------
2024-11-07 05:30 - INFO - ---------------------------------------------
2024-11-07 05:30 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-07 05:30 - INFO - 	 Train Loss: 0.091
2024-11-07 05:30 - INFO - 	 Val. Loss: 0.091
2024-11-07 05:30 - INFO - 	 ROC-AUC: 0.977
2024-11-07 05:30 - INFO - 	 PR-AUC: 0.778
2024-11-07 05:30 - INFO - 	 Best Val. Loss: 0.091
2024-11-07 05:30 - INFO - 	 Best ROC-AUC: 0.977
2024-11-07 05:30 - INFO - 	 Best PR-AUC: 0.787
2024-11-07 05:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-07 05:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-11-07 05:30 - INFO - ---------------------------------------------
2024-11-07 05:38 - INFO - ---------------------------------------------
2024-11-07 05:38 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-07 05:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80426
2024-11-07 05:38 - INFO - 	 Train Loss: 0.087
2024-11-07 05:38 - INFO - 	 Val. Loss: 0.086
2024-11-07 05:38 - INFO - 	 ROC-AUC: 0.979
2024-11-07 05:38 - INFO - 	 PR-AUC: 0.804
2024-11-07 05:38 - INFO - 	 Best Val. Loss: 0.086
2024-11-07 05:38 - INFO - 	 Best ROC-AUC: 0.979
2024-11-07 05:38 - INFO - 	 Best PR-AUC: 0.804
2024-11-07 05:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-07 05:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-11-07 05:38 - INFO - ---------------------------------------------
2024-11-07 05:46 - INFO - ---------------------------------------------
2024-11-07 05:46 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-07 05:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82446
2024-11-07 05:46 - INFO - 	 Train Loss: 0.083
2024-11-07 05:46 - INFO - 	 Val. Loss: 0.079
2024-11-07 05:46 - INFO - 	 ROC-AUC: 0.982
2024-11-07 05:46 - INFO - 	 PR-AUC: 0.824
2024-11-07 05:46 - INFO - 	 Best Val. Loss: 0.079
2024-11-07 05:46 - INFO - 	 Best ROC-AUC: 0.982
2024-11-07 05:46 - INFO - 	 Best PR-AUC: 0.824
2024-11-07 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-07 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-07 05:46 - INFO - ---------------------------------------------
2024-11-07 05:54 - INFO - ---------------------------------------------
2024-11-07 05:54 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 05:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83288
2024-11-07 05:54 - INFO - 	 Train Loss: 0.080
2024-11-07 05:54 - INFO - 	 Val. Loss: 0.073
2024-11-07 05:54 - INFO - 	 ROC-AUC: 0.983
2024-11-07 05:54 - INFO - 	 PR-AUC: 0.833
2024-11-07 05:54 - INFO - 	 Best Val. Loss: 0.073
2024-11-07 05:54 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 05:54 - INFO - 	 Best PR-AUC: 0.833
2024-11-07 05:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-07 05:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-07 05:54 - INFO - ---------------------------------------------
2024-11-07 06:02 - INFO - ---------------------------------------------
2024-11-07 06:02 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-07 06:02 - INFO - 	 Train Loss: 0.077
2024-11-07 06:02 - INFO - 	 Val. Loss: 0.074
2024-11-07 06:02 - INFO - 	 ROC-AUC: 0.982
2024-11-07 06:02 - INFO - 	 PR-AUC: 0.815
2024-11-07 06:02 - INFO - 	 Best Val. Loss: 0.073
2024-11-07 06:02 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 06:02 - INFO - 	 Best PR-AUC: 0.833
2024-11-07 06:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-07 06:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-07 06:02 - INFO - ---------------------------------------------
2024-11-07 06:04 - INFO - Fit the preprocessing pipeline
2024-11-07 06:04 - INFO - Training using device: cuda
2024-11-07 06:04 - INFO - Creating generators
2024-11-07 06:04 - INFO - The model has 2,246,929 trainable parameters
2024-11-07 06:04 - INFO - * Model:
2024-11-07 06:04 - INFO - * -----------
2024-11-07 06:04 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-07 06:04 - INFO - * -----------
2024-11-07 06:12 - INFO - ---------------------------------------------
2024-11-07 06:12 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-07 06:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19535
2024-11-07 06:12 - INFO - 	 Train Loss: 0.251
2024-11-07 06:12 - INFO - 	 Val. Loss: 0.473
2024-11-07 06:12 - INFO - 	 ROC-AUC: 0.736
2024-11-07 06:12 - INFO - 	 PR-AUC: 0.195
2024-11-07 06:12 - INFO - 	 Best Val. Loss: 0.473
2024-11-07 06:12 - INFO - 	 Best ROC-AUC: 0.736
2024-11-07 06:12 - INFO - 	 Best PR-AUC: 0.195
2024-11-07 06:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.716
2024-11-07 06:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.227
2024-11-07 06:12 - INFO - ---------------------------------------------
2024-11-07 06:20 - INFO - ---------------------------------------------
2024-11-07 06:20 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-07 06:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36162
2024-11-07 06:20 - INFO - 	 Train Loss: 0.198
2024-11-07 06:20 - INFO - 	 Val. Loss: 0.350
2024-11-07 06:20 - INFO - 	 ROC-AUC: 0.885
2024-11-07 06:20 - INFO - 	 PR-AUC: 0.362
2024-11-07 06:20 - INFO - 	 Best Val. Loss: 0.350
2024-11-07 06:20 - INFO - 	 Best ROC-AUC: 0.885
2024-11-07 06:20 - INFO - 	 Best PR-AUC: 0.362
2024-11-07 06:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.882
2024-11-07 06:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.403
2024-11-07 06:20 - INFO - ---------------------------------------------
2024-11-07 06:28 - INFO - ---------------------------------------------
2024-11-07 06:28 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-07 06:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6077
2024-11-07 06:28 - INFO - 	 Train Loss: 0.140
2024-11-07 06:28 - INFO - 	 Val. Loss: 0.176
2024-11-07 06:28 - INFO - 	 ROC-AUC: 0.952
2024-11-07 06:28 - INFO - 	 PR-AUC: 0.608
2024-11-07 06:28 - INFO - 	 Best Val. Loss: 0.176
2024-11-07 06:28 - INFO - 	 Best ROC-AUC: 0.952
2024-11-07 06:28 - INFO - 	 Best PR-AUC: 0.608
2024-11-07 06:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-11-07 06:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.631
2024-11-07 06:28 - INFO - ---------------------------------------------
2024-11-07 06:37 - INFO - ---------------------------------------------
2024-11-07 06:37 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-07 06:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74303
2024-11-07 06:37 - INFO - 	 Train Loss: 0.115
2024-11-07 06:37 - INFO - 	 Val. Loss: 0.108
2024-11-07 06:37 - INFO - 	 ROC-AUC: 0.970
2024-11-07 06:37 - INFO - 	 PR-AUC: 0.743
2024-11-07 06:37 - INFO - 	 Best Val. Loss: 0.108
2024-11-07 06:37 - INFO - 	 Best ROC-AUC: 0.970
2024-11-07 06:37 - INFO - 	 Best PR-AUC: 0.743
2024-11-07 06:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-07 06:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.737
2024-11-07 06:37 - INFO - ---------------------------------------------
2024-11-07 06:45 - INFO - ---------------------------------------------
2024-11-07 06:45 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-07 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77607
2024-11-07 06:45 - INFO - 	 Train Loss: 0.101
2024-11-07 06:45 - INFO - 	 Val. Loss: 0.095
2024-11-07 06:45 - INFO - 	 ROC-AUC: 0.977
2024-11-07 06:45 - INFO - 	 PR-AUC: 0.776
2024-11-07 06:45 - INFO - 	 Best Val. Loss: 0.095
2024-11-07 06:45 - INFO - 	 Best ROC-AUC: 0.977
2024-11-07 06:45 - INFO - 	 Best PR-AUC: 0.776
2024-11-07 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-07 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-11-07 06:45 - INFO - ---------------------------------------------
2024-11-07 06:53 - INFO - ---------------------------------------------
2024-11-07 06:53 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-07 06:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78413
2024-11-07 06:53 - INFO - 	 Train Loss: 0.091
2024-11-07 06:53 - INFO - 	 Val. Loss: 0.083
2024-11-07 06:53 - INFO - 	 ROC-AUC: 0.979
2024-11-07 06:53 - INFO - 	 PR-AUC: 0.784
2024-11-07 06:53 - INFO - 	 Best Val. Loss: 0.083
2024-11-07 06:53 - INFO - 	 Best ROC-AUC: 0.979
2024-11-07 06:53 - INFO - 	 Best PR-AUC: 0.784
2024-11-07 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-07 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-11-07 06:53 - INFO - ---------------------------------------------
2024-11-07 07:01 - INFO - ---------------------------------------------
2024-11-07 07:01 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-07 07:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81763
2024-11-07 07:01 - INFO - 	 Train Loss: 0.085
2024-11-07 07:01 - INFO - 	 Val. Loss: 0.076
2024-11-07 07:01 - INFO - 	 ROC-AUC: 0.982
2024-11-07 07:01 - INFO - 	 PR-AUC: 0.818
2024-11-07 07:01 - INFO - 	 Best Val. Loss: 0.076
2024-11-07 07:01 - INFO - 	 Best ROC-AUC: 0.982
2024-11-07 07:01 - INFO - 	 Best PR-AUC: 0.818
2024-11-07 07:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 07:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-11-07 07:01 - INFO - ---------------------------------------------
2024-11-07 07:09 - INFO - ---------------------------------------------
2024-11-07 07:09 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-07 07:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8296
2024-11-07 07:09 - INFO - 	 Train Loss: 0.080
2024-11-07 07:09 - INFO - 	 Val. Loss: 0.075
2024-11-07 07:09 - INFO - 	 ROC-AUC: 0.981
2024-11-07 07:09 - INFO - 	 PR-AUC: 0.830
2024-11-07 07:09 - INFO - 	 Best Val. Loss: 0.075
2024-11-07 07:09 - INFO - 	 Best ROC-AUC: 0.982
2024-11-07 07:09 - INFO - 	 Best PR-AUC: 0.830
2024-11-07 07:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 07:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-07 07:09 - INFO - ---------------------------------------------
2024-11-07 07:17 - INFO - ---------------------------------------------
2024-11-07 07:17 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 07:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8407
2024-11-07 07:17 - INFO - 	 Train Loss: 0.077
2024-11-07 07:17 - INFO - 	 Val. Loss: 0.072
2024-11-07 07:17 - INFO - 	 ROC-AUC: 0.984
2024-11-07 07:17 - INFO - 	 PR-AUC: 0.841
2024-11-07 07:17 - INFO - 	 Best Val. Loss: 0.072
2024-11-07 07:17 - INFO - 	 Best ROC-AUC: 0.984
2024-11-07 07:17 - INFO - 	 Best PR-AUC: 0.841
2024-11-07 07:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-07 07:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-07 07:17 - INFO - ---------------------------------------------
2024-11-07 07:25 - INFO - ---------------------------------------------
2024-11-07 07:25 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-07 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85039
2024-11-07 07:25 - INFO - 	 Train Loss: 0.074
2024-11-07 07:25 - INFO - 	 Val. Loss: 0.068
2024-11-07 07:25 - INFO - 	 ROC-AUC: 0.985
2024-11-07 07:25 - INFO - 	 PR-AUC: 0.850
2024-11-07 07:25 - INFO - 	 Best Val. Loss: 0.068
2024-11-07 07:25 - INFO - 	 Best ROC-AUC: 0.985
2024-11-07 07:25 - INFO - 	 Best PR-AUC: 0.850
2024-11-07 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-07 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-07 07:25 - INFO - ---------------------------------------------
2024-11-07 07:27 - INFO - Fit the preprocessing pipeline
2024-11-07 07:27 - INFO - Training using device: cuda
2024-11-07 07:27 - INFO - Creating generators
2024-11-07 07:27 - INFO - The model has 2,246,929 trainable parameters
2024-11-07 07:27 - INFO - * Model:
2024-11-07 07:27 - INFO - * -----------
2024-11-07 07:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-07 07:27 - INFO - * -----------
2024-11-07 07:35 - INFO - ---------------------------------------------
2024-11-07 07:35 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-07 07:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16223
2024-11-07 07:35 - INFO - 	 Train Loss: 0.258
2024-11-07 07:35 - INFO - 	 Val. Loss: 0.284
2024-11-07 07:35 - INFO - 	 ROC-AUC: 0.687
2024-11-07 07:35 - INFO - 	 PR-AUC: 0.162
2024-11-07 07:35 - INFO - 	 Best Val. Loss: 0.284
2024-11-07 07:35 - INFO - 	 Best ROC-AUC: 0.687
2024-11-07 07:35 - INFO - 	 Best PR-AUC: 0.162
2024-11-07 07:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.665
2024-11-07 07:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.210
2024-11-07 07:35 - INFO - ---------------------------------------------
2024-11-07 07:43 - INFO - ---------------------------------------------
2024-11-07 07:43 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-07 07:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24236
2024-11-07 07:43 - INFO - 	 Train Loss: 0.216
2024-11-07 07:43 - INFO - 	 Val. Loss: 0.576
2024-11-07 07:43 - INFO - 	 ROC-AUC: 0.808
2024-11-07 07:43 - INFO - 	 PR-AUC: 0.242
2024-11-07 07:43 - INFO - 	 Best Val. Loss: 0.284
2024-11-07 07:43 - INFO - 	 Best ROC-AUC: 0.808
2024-11-07 07:43 - INFO - 	 Best PR-AUC: 0.242
2024-11-07 07:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.801
2024-11-07 07:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-07 07:43 - INFO - ---------------------------------------------
2024-11-07 07:51 - INFO - ---------------------------------------------
2024-11-07 07:51 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-07 07:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5075
2024-11-07 07:51 - INFO - 	 Train Loss: 0.155
2024-11-07 07:51 - INFO - 	 Val. Loss: 0.280
2024-11-07 07:51 - INFO - 	 ROC-AUC: 0.928
2024-11-07 07:51 - INFO - 	 PR-AUC: 0.508
2024-11-07 07:51 - INFO - 	 Best Val. Loss: 0.280
2024-11-07 07:51 - INFO - 	 Best ROC-AUC: 0.928
2024-11-07 07:51 - INFO - 	 Best PR-AUC: 0.508
2024-11-07 07:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-07 07:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.523
2024-11-07 07:51 - INFO - ---------------------------------------------
2024-11-07 07:59 - INFO - ---------------------------------------------
2024-11-07 07:59 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-07 07:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64312
2024-11-07 07:59 - INFO - 	 Train Loss: 0.127
2024-11-07 07:59 - INFO - 	 Val. Loss: 0.236
2024-11-07 07:59 - INFO - 	 ROC-AUC: 0.957
2024-11-07 07:59 - INFO - 	 PR-AUC: 0.643
2024-11-07 07:59 - INFO - 	 Best Val. Loss: 0.236
2024-11-07 07:59 - INFO - 	 Best ROC-AUC: 0.957
2024-11-07 07:59 - INFO - 	 Best PR-AUC: 0.643
2024-11-07 07:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-07 07:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-11-07 07:59 - INFO - ---------------------------------------------
2024-11-07 08:07 - INFO - ---------------------------------------------
2024-11-07 08:07 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-07 08:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67151
2024-11-07 08:07 - INFO - 	 Train Loss: 0.111
2024-11-07 08:07 - INFO - 	 Val. Loss: 0.172
2024-11-07 08:07 - INFO - 	 ROC-AUC: 0.961
2024-11-07 08:07 - INFO - 	 PR-AUC: 0.672
2024-11-07 08:07 - INFO - 	 Best Val. Loss: 0.172
2024-11-07 08:07 - INFO - 	 Best ROC-AUC: 0.961
2024-11-07 08:07 - INFO - 	 Best PR-AUC: 0.672
2024-11-07 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-07 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.674
2024-11-07 08:07 - INFO - ---------------------------------------------
2024-11-07 08:15 - INFO - ---------------------------------------------
2024-11-07 08:15 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-07 08:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7805
2024-11-07 08:15 - INFO - 	 Train Loss: 0.100
2024-11-07 08:15 - INFO - 	 Val. Loss: 0.099
2024-11-07 08:15 - INFO - 	 ROC-AUC: 0.976
2024-11-07 08:15 - INFO - 	 PR-AUC: 0.781
2024-11-07 08:15 - INFO - 	 Best Val. Loss: 0.099
2024-11-07 08:15 - INFO - 	 Best ROC-AUC: 0.976
2024-11-07 08:15 - INFO - 	 Best PR-AUC: 0.781
2024-11-07 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-07 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-11-07 08:15 - INFO - ---------------------------------------------
2024-11-07 08:23 - INFO - ---------------------------------------------
2024-11-07 08:23 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-07 08:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80551
2024-11-07 08:23 - INFO - 	 Train Loss: 0.092
2024-11-07 08:23 - INFO - 	 Val. Loss: 0.097
2024-11-07 08:23 - INFO - 	 ROC-AUC: 0.979
2024-11-07 08:23 - INFO - 	 PR-AUC: 0.806
2024-11-07 08:23 - INFO - 	 Best Val. Loss: 0.097
2024-11-07 08:23 - INFO - 	 Best ROC-AUC: 0.979
2024-11-07 08:23 - INFO - 	 Best PR-AUC: 0.806
2024-11-07 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-07 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-11-07 08:23 - INFO - ---------------------------------------------
2024-11-07 08:31 - INFO - ---------------------------------------------
2024-11-07 08:31 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-07 08:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81843
2024-11-07 08:31 - INFO - 	 Train Loss: 0.085
2024-11-07 08:31 - INFO - 	 Val. Loss: 0.096
2024-11-07 08:31 - INFO - 	 ROC-AUC: 0.980
2024-11-07 08:31 - INFO - 	 PR-AUC: 0.818
2024-11-07 08:31 - INFO - 	 Best Val. Loss: 0.096
2024-11-07 08:31 - INFO - 	 Best ROC-AUC: 0.980
2024-11-07 08:31 - INFO - 	 Best PR-AUC: 0.818
2024-11-07 08:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-07 08:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-11-07 08:31 - INFO - ---------------------------------------------
2024-11-07 08:39 - INFO - ---------------------------------------------
2024-11-07 08:39 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83844
2024-11-07 08:39 - INFO - 	 Train Loss: 0.079
2024-11-07 08:39 - INFO - 	 Val. Loss: 0.071
2024-11-07 08:39 - INFO - 	 ROC-AUC: 0.984
2024-11-07 08:39 - INFO - 	 PR-AUC: 0.838
2024-11-07 08:39 - INFO - 	 Best Val. Loss: 0.071
2024-11-07 08:39 - INFO - 	 Best ROC-AUC: 0.984
2024-11-07 08:39 - INFO - 	 Best PR-AUC: 0.838
2024-11-07 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-07 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-07 08:39 - INFO - ---------------------------------------------
2024-11-07 08:48 - INFO - ---------------------------------------------
2024-11-07 08:48 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-07 08:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84101
2024-11-07 08:48 - INFO - 	 Train Loss: 0.074
2024-11-07 08:48 - INFO - 	 Val. Loss: 0.073
2024-11-07 08:48 - INFO - 	 ROC-AUC: 0.983
2024-11-07 08:48 - INFO - 	 PR-AUC: 0.841
2024-11-07 08:48 - INFO - 	 Best Val. Loss: 0.071
2024-11-07 08:48 - INFO - 	 Best ROC-AUC: 0.984
2024-11-07 08:48 - INFO - 	 Best PR-AUC: 0.841
2024-11-07 08:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-07 08:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-07 08:48 - INFO - ---------------------------------------------
2024-11-07 08:50 - INFO - Fit the preprocessing pipeline
2024-11-07 08:50 - INFO - Training using device: cuda
2024-11-07 08:50 - INFO - Creating generators
2024-11-07 08:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-07 08:50 - INFO - * Model:
2024-11-07 08:50 - INFO - * -----------
2024-11-07 08:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-07 08:50 - INFO - * -----------
2024-11-07 08:58 - INFO - ---------------------------------------------
2024-11-07 08:58 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-07 08:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19964
2024-11-07 08:58 - INFO - 	 Train Loss: 0.255
2024-11-07 08:58 - INFO - 	 Val. Loss: 0.247
2024-11-07 08:58 - INFO - 	 ROC-AUC: 0.713
2024-11-07 08:58 - INFO - 	 PR-AUC: 0.200
2024-11-07 08:58 - INFO - 	 Best Val. Loss: 0.247
2024-11-07 08:58 - INFO - 	 Best ROC-AUC: 0.713
2024-11-07 08:58 - INFO - 	 Best PR-AUC: 0.200
2024-11-07 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-11-07 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.258
2024-11-07 08:58 - INFO - ---------------------------------------------
2024-11-07 09:06 - INFO - ---------------------------------------------
2024-11-07 09:06 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-07 09:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27356
2024-11-07 09:06 - INFO - 	 Train Loss: 0.212
2024-11-07 09:06 - INFO - 	 Val. Loss: 0.366
2024-11-07 09:06 - INFO - 	 ROC-AUC: 0.832
2024-11-07 09:06 - INFO - 	 PR-AUC: 0.274
2024-11-07 09:06 - INFO - 	 Best Val. Loss: 0.247
2024-11-07 09:06 - INFO - 	 Best ROC-AUC: 0.832
2024-11-07 09:06 - INFO - 	 Best PR-AUC: 0.274
2024-11-07 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.817
2024-11-07 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.317
2024-11-07 09:06 - INFO - ---------------------------------------------
2024-11-07 09:14 - INFO - ---------------------------------------------
2024-11-07 09:14 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-07 09:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5969
2024-11-07 09:14 - INFO - 	 Train Loss: 0.144
2024-11-07 09:14 - INFO - 	 Val. Loss: 0.188
2024-11-07 09:14 - INFO - 	 ROC-AUC: 0.951
2024-11-07 09:14 - INFO - 	 PR-AUC: 0.597
2024-11-07 09:14 - INFO - 	 Best Val. Loss: 0.188
2024-11-07 09:14 - INFO - 	 Best ROC-AUC: 0.951
2024-11-07 09:14 - INFO - 	 Best PR-AUC: 0.597
2024-11-07 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-07 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.637
2024-11-07 09:14 - INFO - ---------------------------------------------
2024-11-07 09:22 - INFO - ---------------------------------------------
2024-11-07 09:22 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-07 09:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72846
2024-11-07 09:22 - INFO - 	 Train Loss: 0.109
2024-11-07 09:22 - INFO - 	 Val. Loss: 0.107
2024-11-07 09:22 - INFO - 	 ROC-AUC: 0.973
2024-11-07 09:22 - INFO - 	 PR-AUC: 0.728
2024-11-07 09:22 - INFO - 	 Best Val. Loss: 0.107
2024-11-07 09:22 - INFO - 	 Best ROC-AUC: 0.973
2024-11-07 09:22 - INFO - 	 Best PR-AUC: 0.728
2024-11-07 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-07 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.752
2024-11-07 09:22 - INFO - ---------------------------------------------
2024-11-07 09:30 - INFO - ---------------------------------------------
2024-11-07 09:30 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-07 09:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.763
2024-11-07 09:30 - INFO - 	 Train Loss: 0.098
2024-11-07 09:30 - INFO - 	 Val. Loss: 0.106
2024-11-07 09:30 - INFO - 	 ROC-AUC: 0.977
2024-11-07 09:30 - INFO - 	 PR-AUC: 0.763
2024-11-07 09:30 - INFO - 	 Best Val. Loss: 0.106
2024-11-07 09:30 - INFO - 	 Best ROC-AUC: 0.977
2024-11-07 09:30 - INFO - 	 Best PR-AUC: 0.763
2024-11-07 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-07 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.741
2024-11-07 09:30 - INFO - ---------------------------------------------
2024-11-07 09:38 - INFO - ---------------------------------------------
2024-11-07 09:38 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-07 09:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79672
2024-11-07 09:38 - INFO - 	 Train Loss: 0.091
2024-11-07 09:38 - INFO - 	 Val. Loss: 0.089
2024-11-07 09:38 - INFO - 	 ROC-AUC: 0.979
2024-11-07 09:38 - INFO - 	 PR-AUC: 0.797
2024-11-07 09:38 - INFO - 	 Best Val. Loss: 0.089
2024-11-07 09:38 - INFO - 	 Best ROC-AUC: 0.979
2024-11-07 09:38 - INFO - 	 Best PR-AUC: 0.797
2024-11-07 09:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-07 09:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-11-07 09:38 - INFO - ---------------------------------------------
2024-11-07 09:46 - INFO - ---------------------------------------------
2024-11-07 09:46 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-07 09:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83107
2024-11-07 09:46 - INFO - 	 Train Loss: 0.086
2024-11-07 09:46 - INFO - 	 Val. Loss: 0.075
2024-11-07 09:46 - INFO - 	 ROC-AUC: 0.983
2024-11-07 09:46 - INFO - 	 PR-AUC: 0.831
2024-11-07 09:46 - INFO - 	 Best Val. Loss: 0.075
2024-11-07 09:46 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 09:46 - INFO - 	 Best PR-AUC: 0.831
2024-11-07 09:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 09:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-11-07 09:46 - INFO - ---------------------------------------------
2024-11-07 09:54 - INFO - ---------------------------------------------
2024-11-07 09:54 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-07 09:54 - INFO - 	 Train Loss: 0.083
2024-11-07 09:54 - INFO - 	 Val. Loss: 0.079
2024-11-07 09:54 - INFO - 	 ROC-AUC: 0.983
2024-11-07 09:54 - INFO - 	 PR-AUC: 0.819
2024-11-07 09:54 - INFO - 	 Best Val. Loss: 0.075
2024-11-07 09:54 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 09:54 - INFO - 	 Best PR-AUC: 0.831
2024-11-07 09:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 09:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-11-07 09:54 - INFO - ---------------------------------------------
2024-11-07 10:02 - INFO - ---------------------------------------------
2024-11-07 10:02 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-07 10:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83898
2024-11-07 10:02 - INFO - 	 Train Loss: 0.079
2024-11-07 10:02 - INFO - 	 Val. Loss: 0.073
2024-11-07 10:02 - INFO - 	 ROC-AUC: 0.983
2024-11-07 10:02 - INFO - 	 PR-AUC: 0.839
2024-11-07 10:02 - INFO - 	 Best Val. Loss: 0.073
2024-11-07 10:02 - INFO - 	 Best ROC-AUC: 0.983
2024-11-07 10:02 - INFO - 	 Best PR-AUC: 0.839
2024-11-07 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-07 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-07 10:02 - INFO - ---------------------------------------------
2024-11-07 10:10 - INFO - ---------------------------------------------
2024-11-07 10:10 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-07 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85551
2024-11-07 10:10 - INFO - 	 Train Loss: 0.076
2024-11-07 10:10 - INFO - 	 Val. Loss: 0.073
2024-11-07 10:10 - INFO - 	 ROC-AUC: 0.984
2024-11-07 10:10 - INFO - 	 PR-AUC: 0.856
2024-11-07 10:10 - INFO - 	 Best Val. Loss: 0.073
2024-11-07 10:10 - INFO - 	 Best ROC-AUC: 0.984
2024-11-07 10:10 - INFO - 	 Best PR-AUC: 0.856
2024-11-07 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-07 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-07 10:10 - INFO - ---------------------------------------------
