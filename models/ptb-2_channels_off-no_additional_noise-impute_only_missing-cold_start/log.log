2024-11-03 02:49 - INFO - Fit the preprocessing pipeline
2024-11-03 02:49 - INFO - Training using device: cuda
2024-11-03 02:49 - INFO - Creating generators
2024-11-03 02:49 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 02:49 - INFO - * Model:
2024-11-03 02:49 - INFO - * -----------
2024-11-03 02:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 02:49 - INFO - * -----------
2024-11-03 02:57 - INFO - ---------------------------------------------
2024-11-03 02:57 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 02:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33231
2024-11-03 02:57 - INFO - 	 Train Loss: 0.225
2024-11-03 02:57 - INFO - 	 Val. Loss: 0.465
2024-11-03 02:57 - INFO - 	 ROC-AUC: 0.868
2024-11-03 02:57 - INFO - 	 PR-AUC: 0.332
2024-11-03 02:57 - INFO - 	 Best Val. Loss: 0.465
2024-11-03 02:57 - INFO - 	 Best ROC-AUC: 0.868
2024-11-03 02:57 - INFO - 	 Best PR-AUC: 0.332
2024-11-03 02:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.850
2024-11-03 02:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.385
2024-11-03 02:57 - INFO - ---------------------------------------------
2024-11-03 03:05 - INFO - ---------------------------------------------
2024-11-03 03:05 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-03 03:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7967
2024-11-03 03:05 - INFO - 	 Train Loss: 0.119
2024-11-03 03:05 - INFO - 	 Val. Loss: 0.100
2024-11-03 03:05 - INFO - 	 ROC-AUC: 0.977
2024-11-03 03:05 - INFO - 	 PR-AUC: 0.797
2024-11-03 03:05 - INFO - 	 Best Val. Loss: 0.100
2024-11-03 03:05 - INFO - 	 Best ROC-AUC: 0.977
2024-11-03 03:05 - INFO - 	 Best PR-AUC: 0.797
2024-11-03 03:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-03 03:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-11-03 03:05 - INFO - ---------------------------------------------
2024-11-03 03:13 - INFO - ---------------------------------------------
2024-11-03 03:13 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-03 03:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85564
2024-11-03 03:13 - INFO - 	 Train Loss: 0.087
2024-11-03 03:13 - INFO - 	 Val. Loss: 0.070
2024-11-03 03:13 - INFO - 	 ROC-AUC: 0.984
2024-11-03 03:13 - INFO - 	 PR-AUC: 0.856
2024-11-03 03:13 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 03:13 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 03:13 - INFO - 	 Best PR-AUC: 0.856
2024-11-03 03:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-03 03:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-03 03:13 - INFO - ---------------------------------------------
2024-11-03 03:21 - INFO - ---------------------------------------------
2024-11-03 03:21 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-03 03:21 - INFO - 	 Train Loss: 0.079
2024-11-03 03:21 - INFO - 	 Val. Loss: 0.091
2024-11-03 03:21 - INFO - 	 ROC-AUC: 0.984
2024-11-03 03:21 - INFO - 	 PR-AUC: 0.855
2024-11-03 03:21 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 03:21 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 03:21 - INFO - 	 Best PR-AUC: 0.856
2024-11-03 03:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-03 03:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-03 03:21 - INFO - ---------------------------------------------
2024-11-03 03:29 - INFO - ---------------------------------------------
2024-11-03 03:29 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-03 03:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86563
2024-11-03 03:29 - INFO - 	 Train Loss: 0.074
2024-11-03 03:29 - INFO - 	 Val. Loss: 0.072
2024-11-03 03:29 - INFO - 	 ROC-AUC: 0.985
2024-11-03 03:29 - INFO - 	 PR-AUC: 0.866
2024-11-03 03:29 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 03:29 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 03:29 - INFO - 	 Best PR-AUC: 0.866
2024-11-03 03:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 03:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-03 03:29 - INFO - ---------------------------------------------
2024-11-03 03:37 - INFO - ---------------------------------------------
2024-11-03 03:37 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-03 03:37 - INFO - 	 Train Loss: 0.070
2024-11-03 03:37 - INFO - 	 Val. Loss: 0.064
2024-11-03 03:37 - INFO - 	 ROC-AUC: 0.987
2024-11-03 03:37 - INFO - 	 PR-AUC: 0.863
2024-11-03 03:37 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 03:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 03:37 - INFO - 	 Best PR-AUC: 0.866
2024-11-03 03:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 03:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-03 03:37 - INFO - ---------------------------------------------
2024-11-03 03:45 - INFO - ---------------------------------------------
2024-11-03 03:45 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-03 03:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87936
2024-11-03 03:45 - INFO - 	 Train Loss: 0.067
2024-11-03 03:45 - INFO - 	 Val. Loss: 0.062
2024-11-03 03:45 - INFO - 	 ROC-AUC: 0.987
2024-11-03 03:45 - INFO - 	 PR-AUC: 0.879
2024-11-03 03:45 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 03:45 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 03:45 - INFO - 	 Best PR-AUC: 0.879
2024-11-03 03:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 03:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-03 03:45 - INFO - ---------------------------------------------
2024-11-03 03:53 - INFO - ---------------------------------------------
2024-11-03 03:53 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-03 03:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88161
2024-11-03 03:53 - INFO - 	 Train Loss: 0.064
2024-11-03 03:53 - INFO - 	 Val. Loss: 0.060
2024-11-03 03:53 - INFO - 	 ROC-AUC: 0.988
2024-11-03 03:53 - INFO - 	 PR-AUC: 0.882
2024-11-03 03:53 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 03:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 03:53 - INFO - 	 Best PR-AUC: 0.882
2024-11-03 03:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 03:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-03 03:53 - INFO - ---------------------------------------------
2024-11-03 04:01 - INFO - ---------------------------------------------
2024-11-03 04:01 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-03 04:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88854
2024-11-03 04:01 - INFO - 	 Train Loss: 0.062
2024-11-03 04:01 - INFO - 	 Val. Loss: 0.059
2024-11-03 04:01 - INFO - 	 ROC-AUC: 0.987
2024-11-03 04:01 - INFO - 	 PR-AUC: 0.889
2024-11-03 04:01 - INFO - 	 Best Val. Loss: 0.059
2024-11-03 04:01 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 04:01 - INFO - 	 Best PR-AUC: 0.889
2024-11-03 04:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 04:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-03 04:01 - INFO - ---------------------------------------------
2024-11-03 04:09 - INFO - ---------------------------------------------
2024-11-03 04:09 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-03 04:09 - INFO - 	 Train Loss: 0.058
2024-11-03 04:09 - INFO - 	 Val. Loss: 0.061
2024-11-03 04:09 - INFO - 	 ROC-AUC: 0.988
2024-11-03 04:09 - INFO - 	 PR-AUC: 0.885
2024-11-03 04:09 - INFO - 	 Best Val. Loss: 0.059
2024-11-03 04:09 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 04:09 - INFO - 	 Best PR-AUC: 0.889
2024-11-03 04:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 04:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-03 04:09 - INFO - ---------------------------------------------
2024-11-03 04:11 - INFO - Fit the preprocessing pipeline
2024-11-03 04:11 - INFO - Training using device: cuda
2024-11-03 04:11 - INFO - Creating generators
2024-11-03 04:11 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 04:11 - INFO - * Model:
2024-11-03 04:11 - INFO - * -----------
2024-11-03 04:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 04:11 - INFO - * -----------
2024-11-03 04:19 - INFO - ---------------------------------------------
2024-11-03 04:19 - INFO - Epoch: 01 | Time: 8m 0s
2024-11-03 04:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41495
2024-11-03 04:19 - INFO - 	 Train Loss: 0.220
2024-11-03 04:19 - INFO - 	 Val. Loss: 0.318
2024-11-03 04:19 - INFO - 	 ROC-AUC: 0.905
2024-11-03 04:19 - INFO - 	 PR-AUC: 0.415
2024-11-03 04:19 - INFO - 	 Best Val. Loss: 0.318
2024-11-03 04:19 - INFO - 	 Best ROC-AUC: 0.905
2024-11-03 04:19 - INFO - 	 Best PR-AUC: 0.415
2024-11-03 04:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.904
2024-11-03 04:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.473
2024-11-03 04:19 - INFO - ---------------------------------------------
2024-11-03 04:27 - INFO - ---------------------------------------------
2024-11-03 04:27 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-03 04:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77062
2024-11-03 04:27 - INFO - 	 Train Loss: 0.112
2024-11-03 04:27 - INFO - 	 Val. Loss: 0.127
2024-11-03 04:27 - INFO - 	 ROC-AUC: 0.975
2024-11-03 04:27 - INFO - 	 PR-AUC: 0.771
2024-11-03 04:27 - INFO - 	 Best Val. Loss: 0.127
2024-11-03 04:27 - INFO - 	 Best ROC-AUC: 0.975
2024-11-03 04:27 - INFO - 	 Best PR-AUC: 0.771
2024-11-03 04:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-03 04:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-11-03 04:27 - INFO - ---------------------------------------------
2024-11-03 04:35 - INFO - ---------------------------------------------
2024-11-03 04:35 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-03 04:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83609
2024-11-03 04:35 - INFO - 	 Train Loss: 0.087
2024-11-03 04:35 - INFO - 	 Val. Loss: 0.079
2024-11-03 04:35 - INFO - 	 ROC-AUC: 0.982
2024-11-03 04:35 - INFO - 	 PR-AUC: 0.836
2024-11-03 04:35 - INFO - 	 Best Val. Loss: 0.079
2024-11-03 04:35 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 04:35 - INFO - 	 Best PR-AUC: 0.836
2024-11-03 04:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-03 04:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-03 04:35 - INFO - ---------------------------------------------
2024-11-03 04:43 - INFO - ---------------------------------------------
2024-11-03 04:43 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-03 04:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85354
2024-11-03 04:43 - INFO - 	 Train Loss: 0.078
2024-11-03 04:43 - INFO - 	 Val. Loss: 0.069
2024-11-03 04:43 - INFO - 	 ROC-AUC: 0.985
2024-11-03 04:43 - INFO - 	 PR-AUC: 0.854
2024-11-03 04:43 - INFO - 	 Best Val. Loss: 0.069
2024-11-03 04:43 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 04:43 - INFO - 	 Best PR-AUC: 0.854
2024-11-03 04:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-03 04:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-03 04:43 - INFO - ---------------------------------------------
2024-11-03 04:51 - INFO - ---------------------------------------------
2024-11-03 04:51 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-03 04:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86058
2024-11-03 04:51 - INFO - 	 Train Loss: 0.072
2024-11-03 04:51 - INFO - 	 Val. Loss: 0.068
2024-11-03 04:51 - INFO - 	 ROC-AUC: 0.985
2024-11-03 04:51 - INFO - 	 PR-AUC: 0.861
2024-11-03 04:51 - INFO - 	 Best Val. Loss: 0.068
2024-11-03 04:51 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 04:51 - INFO - 	 Best PR-AUC: 0.861
2024-11-03 04:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-03 04:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-03 04:51 - INFO - ---------------------------------------------
2024-11-03 04:59 - INFO - ---------------------------------------------
2024-11-03 04:59 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-03 04:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87486
2024-11-03 04:59 - INFO - 	 Train Loss: 0.067
2024-11-03 04:59 - INFO - 	 Val. Loss: 0.063
2024-11-03 04:59 - INFO - 	 ROC-AUC: 0.986
2024-11-03 04:59 - INFO - 	 PR-AUC: 0.875
2024-11-03 04:59 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 04:59 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 04:59 - INFO - 	 Best PR-AUC: 0.875
2024-11-03 04:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 04:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-03 04:59 - INFO - ---------------------------------------------
2024-11-03 05:07 - INFO - ---------------------------------------------
2024-11-03 05:07 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-03 05:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87869
2024-11-03 05:07 - INFO - 	 Train Loss: 0.064
2024-11-03 05:07 - INFO - 	 Val. Loss: 0.063
2024-11-03 05:07 - INFO - 	 ROC-AUC: 0.987
2024-11-03 05:07 - INFO - 	 PR-AUC: 0.879
2024-11-03 05:07 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 05:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 05:07 - INFO - 	 Best PR-AUC: 0.879
2024-11-03 05:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 05:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-03 05:07 - INFO - ---------------------------------------------
2024-11-03 05:15 - INFO - ---------------------------------------------
2024-11-03 05:15 - INFO - Epoch: 08 | Time: 7m 59s
2024-11-03 05:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88962
2024-11-03 05:15 - INFO - 	 Train Loss: 0.062
2024-11-03 05:15 - INFO - 	 Val. Loss: 0.059
2024-11-03 05:15 - INFO - 	 ROC-AUC: 0.987
2024-11-03 05:15 - INFO - 	 PR-AUC: 0.890
2024-11-03 05:15 - INFO - 	 Best Val. Loss: 0.059
2024-11-03 05:15 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 05:15 - INFO - 	 Best PR-AUC: 0.890
2024-11-03 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-03 05:15 - INFO - ---------------------------------------------
2024-11-03 05:23 - INFO - ---------------------------------------------
2024-11-03 05:23 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-03 05:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89189
2024-11-03 05:23 - INFO - 	 Train Loss: 0.060
2024-11-03 05:23 - INFO - 	 Val. Loss: 0.058
2024-11-03 05:23 - INFO - 	 ROC-AUC: 0.987
2024-11-03 05:23 - INFO - 	 PR-AUC: 0.892
2024-11-03 05:23 - INFO - 	 Best Val. Loss: 0.058
2024-11-03 05:23 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 05:23 - INFO - 	 Best PR-AUC: 0.892
2024-11-03 05:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 05:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-03 05:23 - INFO - ---------------------------------------------
2024-11-03 05:31 - INFO - ---------------------------------------------
2024-11-03 05:31 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-03 05:31 - INFO - 	 Train Loss: 0.058
2024-11-03 05:31 - INFO - 	 Val. Loss: 0.060
2024-11-03 05:31 - INFO - 	 ROC-AUC: 0.987
2024-11-03 05:31 - INFO - 	 PR-AUC: 0.887
2024-11-03 05:31 - INFO - 	 Best Val. Loss: 0.058
2024-11-03 05:31 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 05:31 - INFO - 	 Best PR-AUC: 0.892
2024-11-03 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-03 05:31 - INFO - ---------------------------------------------
2024-11-03 05:34 - INFO - Fit the preprocessing pipeline
2024-11-03 05:34 - INFO - Training using device: cuda
2024-11-03 05:34 - INFO - Creating generators
2024-11-03 05:34 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 05:34 - INFO - * Model:
2024-11-03 05:34 - INFO - * -----------
2024-11-03 05:34 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 05:34 - INFO - * -----------
2024-11-03 05:42 - INFO - ---------------------------------------------
2024-11-03 05:42 - INFO - Epoch: 01 | Time: 8m 0s
2024-11-03 05:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36544
2024-11-03 05:42 - INFO - 	 Train Loss: 0.216
2024-11-03 05:42 - INFO - 	 Val. Loss: 0.358
2024-11-03 05:42 - INFO - 	 ROC-AUC: 0.893
2024-11-03 05:42 - INFO - 	 PR-AUC: 0.365
2024-11-03 05:42 - INFO - 	 Best Val. Loss: 0.358
2024-11-03 05:42 - INFO - 	 Best ROC-AUC: 0.893
2024-11-03 05:42 - INFO - 	 Best PR-AUC: 0.365
2024-11-03 05:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.893
2024-11-03 05:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-11-03 05:42 - INFO - ---------------------------------------------
2024-11-03 05:50 - INFO - ---------------------------------------------
2024-11-03 05:50 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-03 05:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75788
2024-11-03 05:50 - INFO - 	 Train Loss: 0.109
2024-11-03 05:50 - INFO - 	 Val. Loss: 0.127
2024-11-03 05:50 - INFO - 	 ROC-AUC: 0.972
2024-11-03 05:50 - INFO - 	 PR-AUC: 0.758
2024-11-03 05:50 - INFO - 	 Best Val. Loss: 0.127
2024-11-03 05:50 - INFO - 	 Best ROC-AUC: 0.972
2024-11-03 05:50 - INFO - 	 Best PR-AUC: 0.758
2024-11-03 05:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-03 05:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-11-03 05:50 - INFO - ---------------------------------------------
2024-11-03 05:58 - INFO - ---------------------------------------------
2024-11-03 05:58 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-03 05:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82904
2024-11-03 05:58 - INFO - 	 Train Loss: 0.085
2024-11-03 05:58 - INFO - 	 Val. Loss: 0.077
2024-11-03 05:58 - INFO - 	 ROC-AUC: 0.982
2024-11-03 05:58 - INFO - 	 PR-AUC: 0.829
2024-11-03 05:58 - INFO - 	 Best Val. Loss: 0.077
2024-11-03 05:58 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 05:58 - INFO - 	 Best PR-AUC: 0.829
2024-11-03 05:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-03 05:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-11-03 05:58 - INFO - ---------------------------------------------
2024-11-03 06:06 - INFO - ---------------------------------------------
2024-11-03 06:06 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-03 06:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86435
2024-11-03 06:06 - INFO - 	 Train Loss: 0.078
2024-11-03 06:06 - INFO - 	 Val. Loss: 0.066
2024-11-03 06:06 - INFO - 	 ROC-AUC: 0.986
2024-11-03 06:06 - INFO - 	 PR-AUC: 0.864
2024-11-03 06:06 - INFO - 	 Best Val. Loss: 0.066
2024-11-03 06:06 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 06:06 - INFO - 	 Best PR-AUC: 0.864
2024-11-03 06:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 06:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-03 06:06 - INFO - ---------------------------------------------
2024-11-03 06:14 - INFO - ---------------------------------------------
2024-11-03 06:14 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-03 06:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87293
2024-11-03 06:14 - INFO - 	 Train Loss: 0.073
2024-11-03 06:14 - INFO - 	 Val. Loss: 0.065
2024-11-03 06:14 - INFO - 	 ROC-AUC: 0.986
2024-11-03 06:14 - INFO - 	 PR-AUC: 0.873
2024-11-03 06:14 - INFO - 	 Best Val. Loss: 0.065
2024-11-03 06:14 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 06:14 - INFO - 	 Best PR-AUC: 0.873
2024-11-03 06:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 06:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-03 06:14 - INFO - ---------------------------------------------
2024-11-03 06:22 - INFO - ---------------------------------------------
2024-11-03 06:22 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-03 06:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87805
2024-11-03 06:22 - INFO - 	 Train Loss: 0.068
2024-11-03 06:22 - INFO - 	 Val. Loss: 0.063
2024-11-03 06:22 - INFO - 	 ROC-AUC: 0.988
2024-11-03 06:22 - INFO - 	 PR-AUC: 0.878
2024-11-03 06:22 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 06:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 06:22 - INFO - 	 Best PR-AUC: 0.878
2024-11-03 06:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 06:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-03 06:22 - INFO - ---------------------------------------------
2024-11-03 06:30 - INFO - ---------------------------------------------
2024-11-03 06:30 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-03 06:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89111
2024-11-03 06:30 - INFO - 	 Train Loss: 0.066
2024-11-03 06:30 - INFO - 	 Val. Loss: 0.060
2024-11-03 06:30 - INFO - 	 ROC-AUC: 0.988
2024-11-03 06:30 - INFO - 	 PR-AUC: 0.891
2024-11-03 06:30 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 06:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 06:30 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 06:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 06:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 06:30 - INFO - ---------------------------------------------
2024-11-03 06:38 - INFO - ---------------------------------------------
2024-11-03 06:38 - INFO - Epoch: 08 | Time: 7m 59s
2024-11-03 06:38 - INFO - 	 Train Loss: 0.063
2024-11-03 06:38 - INFO - 	 Val. Loss: 0.060
2024-11-03 06:38 - INFO - 	 ROC-AUC: 0.987
2024-11-03 06:38 - INFO - 	 PR-AUC: 0.886
2024-11-03 06:38 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 06:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 06:38 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 06:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 06:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 06:38 - INFO - ---------------------------------------------
2024-11-03 06:46 - INFO - ---------------------------------------------
2024-11-03 06:46 - INFO - Epoch: 09 | Time: 7m 59s
2024-11-03 06:46 - INFO - 	 Train Loss: 0.061
2024-11-03 06:46 - INFO - 	 Val. Loss: 0.060
2024-11-03 06:46 - INFO - 	 ROC-AUC: 0.988
2024-11-03 06:46 - INFO - 	 PR-AUC: 0.891
2024-11-03 06:46 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 06:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 06:46 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 06:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 06:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 06:46 - INFO - ---------------------------------------------
2024-11-03 06:54 - INFO - ---------------------------------------------
2024-11-03 06:54 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-03 06:54 - INFO - 	 Train Loss: 0.059
2024-11-03 06:54 - INFO - 	 Val. Loss: 0.058
2024-11-03 06:54 - INFO - 	 ROC-AUC: 0.988
2024-11-03 06:54 - INFO - 	 PR-AUC: 0.891
2024-11-03 06:54 - INFO - 	 Best Val. Loss: 0.058
2024-11-03 06:54 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 06:54 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 06:54 - INFO - ---------------------------------------------
2024-11-03 06:56 - INFO - Fit the preprocessing pipeline
2024-11-03 06:56 - INFO - Training using device: cuda
2024-11-03 06:56 - INFO - Creating generators
2024-11-03 06:56 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 06:56 - INFO - * Model:
2024-11-03 06:56 - INFO - * -----------
2024-11-03 06:56 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 06:56 - INFO - * -----------
2024-11-03 07:04 - INFO - ---------------------------------------------
2024-11-03 07:04 - INFO - Epoch: 01 | Time: 8m 0s
2024-11-03 07:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39367
2024-11-03 07:04 - INFO - 	 Train Loss: 0.211
2024-11-03 07:04 - INFO - 	 Val. Loss: 0.297
2024-11-03 07:04 - INFO - 	 ROC-AUC: 0.900
2024-11-03 07:04 - INFO - 	 PR-AUC: 0.394
2024-11-03 07:04 - INFO - 	 Best Val. Loss: 0.297
2024-11-03 07:04 - INFO - 	 Best ROC-AUC: 0.900
2024-11-03 07:04 - INFO - 	 Best PR-AUC: 0.394
2024-11-03 07:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.904
2024-11-03 07:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.495
2024-11-03 07:04 - INFO - ---------------------------------------------
2024-11-03 07:12 - INFO - ---------------------------------------------
2024-11-03 07:12 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-03 07:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78196
2024-11-03 07:12 - INFO - 	 Train Loss: 0.111
2024-11-03 07:12 - INFO - 	 Val. Loss: 0.114
2024-11-03 07:12 - INFO - 	 ROC-AUC: 0.974
2024-11-03 07:12 - INFO - 	 PR-AUC: 0.782
2024-11-03 07:12 - INFO - 	 Best Val. Loss: 0.114
2024-11-03 07:12 - INFO - 	 Best ROC-AUC: 0.974
2024-11-03 07:12 - INFO - 	 Best PR-AUC: 0.782
2024-11-03 07:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-03 07:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-11-03 07:12 - INFO - ---------------------------------------------
2024-11-03 07:20 - INFO - ---------------------------------------------
2024-11-03 07:20 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-03 07:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83657
2024-11-03 07:20 - INFO - 	 Train Loss: 0.087
2024-11-03 07:20 - INFO - 	 Val. Loss: 0.081
2024-11-03 07:20 - INFO - 	 ROC-AUC: 0.981
2024-11-03 07:20 - INFO - 	 PR-AUC: 0.837
2024-11-03 07:20 - INFO - 	 Best Val. Loss: 0.081
2024-11-03 07:20 - INFO - 	 Best ROC-AUC: 0.981
2024-11-03 07:20 - INFO - 	 Best PR-AUC: 0.837
2024-11-03 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-03 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-11-03 07:20 - INFO - ---------------------------------------------
2024-11-03 07:28 - INFO - ---------------------------------------------
2024-11-03 07:28 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-03 07:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85028
2024-11-03 07:28 - INFO - 	 Train Loss: 0.078
2024-11-03 07:28 - INFO - 	 Val. Loss: 0.069
2024-11-03 07:28 - INFO - 	 ROC-AUC: 0.984
2024-11-03 07:28 - INFO - 	 PR-AUC: 0.850
2024-11-03 07:28 - INFO - 	 Best Val. Loss: 0.069
2024-11-03 07:28 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 07:28 - INFO - 	 Best PR-AUC: 0.850
2024-11-03 07:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 07:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-03 07:28 - INFO - ---------------------------------------------
2024-11-03 07:36 - INFO - ---------------------------------------------
2024-11-03 07:36 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-03 07:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85861
2024-11-03 07:36 - INFO - 	 Train Loss: 0.073
2024-11-03 07:36 - INFO - 	 Val. Loss: 0.066
2024-11-03 07:36 - INFO - 	 ROC-AUC: 0.986
2024-11-03 07:36 - INFO - 	 PR-AUC: 0.859
2024-11-03 07:36 - INFO - 	 Best Val. Loss: 0.066
2024-11-03 07:36 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 07:36 - INFO - 	 Best PR-AUC: 0.859
2024-11-03 07:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 07:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-03 07:36 - INFO - ---------------------------------------------
2024-11-03 07:44 - INFO - ---------------------------------------------
2024-11-03 07:44 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 07:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8701
2024-11-03 07:44 - INFO - 	 Train Loss: 0.068
2024-11-03 07:44 - INFO - 	 Val. Loss: 0.063
2024-11-03 07:44 - INFO - 	 ROC-AUC: 0.987
2024-11-03 07:44 - INFO - 	 PR-AUC: 0.870
2024-11-03 07:44 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 07:44 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 07:44 - INFO - 	 Best PR-AUC: 0.870
2024-11-03 07:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 07:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-03 07:44 - INFO - ---------------------------------------------
2024-11-03 07:52 - INFO - ---------------------------------------------
2024-11-03 07:52 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-03 07:52 - INFO - 	 Train Loss: 0.065
2024-11-03 07:52 - INFO - 	 Val. Loss: 0.067
2024-11-03 07:52 - INFO - 	 ROC-AUC: 0.985
2024-11-03 07:52 - INFO - 	 PR-AUC: 0.865
2024-11-03 07:52 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 07:52 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 07:52 - INFO - 	 Best PR-AUC: 0.870
2024-11-03 07:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 07:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-03 07:52 - INFO - ---------------------------------------------
2024-11-03 08:00 - INFO - ---------------------------------------------
2024-11-03 08:00 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87203
2024-11-03 08:00 - INFO - 	 Train Loss: 0.061
2024-11-03 08:00 - INFO - 	 Val. Loss: 0.066
2024-11-03 08:00 - INFO - 	 ROC-AUC: 0.986
2024-11-03 08:00 - INFO - 	 PR-AUC: 0.872
2024-11-03 08:00 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 08:00 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 08:00 - INFO - 	 Best PR-AUC: 0.872
2024-11-03 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-03 08:00 - INFO - ---------------------------------------------
2024-11-03 08:08 - INFO - ---------------------------------------------
2024-11-03 08:08 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 08:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87298
2024-11-03 08:08 - INFO - 	 Train Loss: 0.059
2024-11-03 08:08 - INFO - 	 Val. Loss: 0.064
2024-11-03 08:08 - INFO - 	 ROC-AUC: 0.987
2024-11-03 08:08 - INFO - 	 PR-AUC: 0.873
2024-11-03 08:08 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 08:08 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 08:08 - INFO - 	 Best PR-AUC: 0.873
2024-11-03 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-03 08:08 - INFO - ---------------------------------------------
2024-11-03 08:16 - INFO - ---------------------------------------------
2024-11-03 08:16 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-03 08:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88139
2024-11-03 08:16 - INFO - 	 Train Loss: 0.057
2024-11-03 08:16 - INFO - 	 Val. Loss: 0.060
2024-11-03 08:16 - INFO - 	 ROC-AUC: 0.988
2024-11-03 08:16 - INFO - 	 PR-AUC: 0.881
2024-11-03 08:16 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 08:16 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 08:16 - INFO - 	 Best PR-AUC: 0.881
2024-11-03 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-03 08:16 - INFO - ---------------------------------------------
2024-11-03 08:18 - INFO - Fit the preprocessing pipeline
2024-11-03 08:18 - INFO - Training using device: cuda
2024-11-03 08:18 - INFO - Creating generators
2024-11-03 08:19 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 08:19 - INFO - * Model:
2024-11-03 08:19 - INFO - * -----------
2024-11-03 08:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 08:19 - INFO - * -----------
2024-11-03 08:27 - INFO - ---------------------------------------------
2024-11-03 08:27 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 08:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40333
2024-11-03 08:27 - INFO - 	 Train Loss: 0.211
2024-11-03 08:27 - INFO - 	 Val. Loss: 0.359
2024-11-03 08:27 - INFO - 	 ROC-AUC: 0.920
2024-11-03 08:27 - INFO - 	 PR-AUC: 0.403
2024-11-03 08:27 - INFO - 	 Best Val. Loss: 0.359
2024-11-03 08:27 - INFO - 	 Best ROC-AUC: 0.920
2024-11-03 08:27 - INFO - 	 Best PR-AUC: 0.403
2024-11-03 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.912
2024-11-03 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.465
2024-11-03 08:27 - INFO - ---------------------------------------------
2024-11-03 08:35 - INFO - ---------------------------------------------
2024-11-03 08:35 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-03 08:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79486
2024-11-03 08:35 - INFO - 	 Train Loss: 0.105
2024-11-03 08:35 - INFO - 	 Val. Loss: 0.095
2024-11-03 08:35 - INFO - 	 ROC-AUC: 0.978
2024-11-03 08:35 - INFO - 	 PR-AUC: 0.795
2024-11-03 08:35 - INFO - 	 Best Val. Loss: 0.095
2024-11-03 08:35 - INFO - 	 Best ROC-AUC: 0.978
2024-11-03 08:35 - INFO - 	 Best PR-AUC: 0.795
2024-11-03 08:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-03 08:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-11-03 08:35 - INFO - ---------------------------------------------
2024-11-03 08:43 - INFO - ---------------------------------------------
2024-11-03 08:43 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-03 08:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83037
2024-11-03 08:43 - INFO - 	 Train Loss: 0.087
2024-11-03 08:43 - INFO - 	 Val. Loss: 0.082
2024-11-03 08:43 - INFO - 	 ROC-AUC: 0.982
2024-11-03 08:43 - INFO - 	 PR-AUC: 0.830
2024-11-03 08:43 - INFO - 	 Best Val. Loss: 0.082
2024-11-03 08:43 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 08:43 - INFO - 	 Best PR-AUC: 0.830
2024-11-03 08:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-03 08:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-03 08:43 - INFO - ---------------------------------------------
2024-11-03 08:51 - INFO - ---------------------------------------------
2024-11-03 08:51 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 08:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85246
2024-11-03 08:51 - INFO - 	 Train Loss: 0.078
2024-11-03 08:51 - INFO - 	 Val. Loss: 0.072
2024-11-03 08:51 - INFO - 	 ROC-AUC: 0.983
2024-11-03 08:51 - INFO - 	 PR-AUC: 0.852
2024-11-03 08:51 - INFO - 	 Best Val. Loss: 0.072
2024-11-03 08:51 - INFO - 	 Best ROC-AUC: 0.983
2024-11-03 08:51 - INFO - 	 Best PR-AUC: 0.852
2024-11-03 08:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-03 08:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-03 08:51 - INFO - ---------------------------------------------
2024-11-03 08:59 - INFO - ---------------------------------------------
2024-11-03 08:59 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 08:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85732
2024-11-03 08:59 - INFO - 	 Train Loss: 0.074
2024-11-03 08:59 - INFO - 	 Val. Loss: 0.067
2024-11-03 08:59 - INFO - 	 ROC-AUC: 0.985
2024-11-03 08:59 - INFO - 	 PR-AUC: 0.857
2024-11-03 08:59 - INFO - 	 Best Val. Loss: 0.067
2024-11-03 08:59 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 08:59 - INFO - 	 Best PR-AUC: 0.857
2024-11-03 08:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 08:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-03 08:59 - INFO - ---------------------------------------------
2024-11-03 09:07 - INFO - ---------------------------------------------
2024-11-03 09:07 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 09:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86602
2024-11-03 09:07 - INFO - 	 Train Loss: 0.069
2024-11-03 09:07 - INFO - 	 Val. Loss: 0.066
2024-11-03 09:07 - INFO - 	 ROC-AUC: 0.986
2024-11-03 09:07 - INFO - 	 PR-AUC: 0.866
2024-11-03 09:07 - INFO - 	 Best Val. Loss: 0.066
2024-11-03 09:07 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 09:07 - INFO - 	 Best PR-AUC: 0.866
2024-11-03 09:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 09:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-03 09:07 - INFO - ---------------------------------------------
2024-11-03 09:15 - INFO - ---------------------------------------------
2024-11-03 09:15 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-03 09:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8721
2024-11-03 09:15 - INFO - 	 Train Loss: 0.066
2024-11-03 09:15 - INFO - 	 Val. Loss: 0.063
2024-11-03 09:15 - INFO - 	 ROC-AUC: 0.986
2024-11-03 09:15 - INFO - 	 PR-AUC: 0.872
2024-11-03 09:15 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 09:15 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 09:15 - INFO - 	 Best PR-AUC: 0.872
2024-11-03 09:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 09:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 09:15 - INFO - ---------------------------------------------
2024-11-03 09:23 - INFO - ---------------------------------------------
2024-11-03 09:23 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 09:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88579
2024-11-03 09:23 - INFO - 	 Train Loss: 0.063
2024-11-03 09:23 - INFO - 	 Val. Loss: 0.062
2024-11-03 09:23 - INFO - 	 ROC-AUC: 0.988
2024-11-03 09:23 - INFO - 	 PR-AUC: 0.886
2024-11-03 09:23 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 09:23 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 09:23 - INFO - 	 Best PR-AUC: 0.886
2024-11-03 09:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 09:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-03 09:23 - INFO - ---------------------------------------------
2024-11-03 09:31 - INFO - ---------------------------------------------
2024-11-03 09:31 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 09:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88747
2024-11-03 09:31 - INFO - 	 Train Loss: 0.060
2024-11-03 09:31 - INFO - 	 Val. Loss: 0.061
2024-11-03 09:31 - INFO - 	 ROC-AUC: 0.988
2024-11-03 09:31 - INFO - 	 PR-AUC: 0.887
2024-11-03 09:31 - INFO - 	 Best Val. Loss: 0.061
2024-11-03 09:31 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 09:31 - INFO - 	 Best PR-AUC: 0.887
2024-11-03 09:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 09:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-03 09:31 - INFO - ---------------------------------------------
2024-11-03 09:39 - INFO - ---------------------------------------------
2024-11-03 09:39 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-03 09:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88854
2024-11-03 09:39 - INFO - 	 Train Loss: 0.058
2024-11-03 09:39 - INFO - 	 Val. Loss: 0.058
2024-11-03 09:39 - INFO - 	 ROC-AUC: 0.988
2024-11-03 09:39 - INFO - 	 PR-AUC: 0.889
2024-11-03 09:39 - INFO - 	 Best Val. Loss: 0.058
2024-11-03 09:39 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 09:39 - INFO - 	 Best PR-AUC: 0.889
2024-11-03 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-11-03 09:39 - INFO - ---------------------------------------------
2024-11-03 09:41 - INFO - Fit the preprocessing pipeline
2024-11-03 09:41 - INFO - Training using device: cuda
2024-11-03 09:41 - INFO - Creating generators
2024-11-03 09:41 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 09:41 - INFO - * Model:
2024-11-03 09:41 - INFO - * -----------
2024-11-03 09:41 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 09:41 - INFO - * -----------
2024-11-03 09:49 - INFO - ---------------------------------------------
2024-11-03 09:49 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-03 09:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45839
2024-11-03 09:49 - INFO - 	 Train Loss: 0.215
2024-11-03 09:49 - INFO - 	 Val. Loss: 0.291
2024-11-03 09:49 - INFO - 	 ROC-AUC: 0.918
2024-11-03 09:49 - INFO - 	 PR-AUC: 0.458
2024-11-03 09:49 - INFO - 	 Best Val. Loss: 0.291
2024-11-03 09:49 - INFO - 	 Best ROC-AUC: 0.918
2024-11-03 09:49 - INFO - 	 Best PR-AUC: 0.458
2024-11-03 09:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-03 09:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.515
2024-11-03 09:49 - INFO - ---------------------------------------------
2024-11-03 09:57 - INFO - ---------------------------------------------
2024-11-03 09:57 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-03 09:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75306
2024-11-03 09:57 - INFO - 	 Train Loss: 0.115
2024-11-03 09:57 - INFO - 	 Val. Loss: 0.130
2024-11-03 09:57 - INFO - 	 ROC-AUC: 0.974
2024-11-03 09:57 - INFO - 	 PR-AUC: 0.753
2024-11-03 09:57 - INFO - 	 Best Val. Loss: 0.130
2024-11-03 09:57 - INFO - 	 Best ROC-AUC: 0.974
2024-11-03 09:57 - INFO - 	 Best PR-AUC: 0.753
2024-11-03 09:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-03 09:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-11-03 09:57 - INFO - ---------------------------------------------
2024-11-03 10:05 - INFO - ---------------------------------------------
2024-11-03 10:05 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 10:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8291
2024-11-03 10:05 - INFO - 	 Train Loss: 0.092
2024-11-03 10:05 - INFO - 	 Val. Loss: 0.084
2024-11-03 10:05 - INFO - 	 ROC-AUC: 0.982
2024-11-03 10:05 - INFO - 	 PR-AUC: 0.829
2024-11-03 10:05 - INFO - 	 Best Val. Loss: 0.084
2024-11-03 10:05 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 10:05 - INFO - 	 Best PR-AUC: 0.829
2024-11-03 10:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-03 10:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-11-03 10:05 - INFO - ---------------------------------------------
2024-11-03 10:13 - INFO - ---------------------------------------------
2024-11-03 10:13 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-03 10:13 - INFO - 	 Train Loss: 0.083
2024-11-03 10:13 - INFO - 	 Val. Loss: 0.094
2024-11-03 10:13 - INFO - 	 ROC-AUC: 0.982
2024-11-03 10:13 - INFO - 	 PR-AUC: 0.825
2024-11-03 10:13 - INFO - 	 Best Val. Loss: 0.084
2024-11-03 10:13 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 10:13 - INFO - 	 Best PR-AUC: 0.829
2024-11-03 10:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-03 10:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-11-03 10:13 - INFO - ---------------------------------------------
2024-11-03 10:21 - INFO - ---------------------------------------------
2024-11-03 10:21 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 10:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86078
2024-11-03 10:21 - INFO - 	 Train Loss: 0.076
2024-11-03 10:21 - INFO - 	 Val. Loss: 0.068
2024-11-03 10:21 - INFO - 	 ROC-AUC: 0.985
2024-11-03 10:21 - INFO - 	 PR-AUC: 0.861
2024-11-03 10:21 - INFO - 	 Best Val. Loss: 0.068
2024-11-03 10:21 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 10:21 - INFO - 	 Best PR-AUC: 0.861
2024-11-03 10:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 10:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 10:21 - INFO - ---------------------------------------------
2024-11-03 10:29 - INFO - ---------------------------------------------
2024-11-03 10:29 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 10:29 - INFO - 	 Train Loss: 0.071
2024-11-03 10:29 - INFO - 	 Val. Loss: 0.066
2024-11-03 10:29 - INFO - 	 ROC-AUC: 0.986
2024-11-03 10:29 - INFO - 	 PR-AUC: 0.860
2024-11-03 10:29 - INFO - 	 Best Val. Loss: 0.066
2024-11-03 10:29 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 10:29 - INFO - 	 Best PR-AUC: 0.861
2024-11-03 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 10:29 - INFO - ---------------------------------------------
2024-11-03 10:37 - INFO - ---------------------------------------------
2024-11-03 10:37 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-03 10:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87189
2024-11-03 10:37 - INFO - 	 Train Loss: 0.066
2024-11-03 10:37 - INFO - 	 Val. Loss: 0.064
2024-11-03 10:37 - INFO - 	 ROC-AUC: 0.986
2024-11-03 10:37 - INFO - 	 PR-AUC: 0.872
2024-11-03 10:37 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 10:37 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 10:37 - INFO - 	 Best PR-AUC: 0.872
2024-11-03 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-03 10:37 - INFO - ---------------------------------------------
2024-11-03 10:45 - INFO - ---------------------------------------------
2024-11-03 10:45 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 10:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87584
2024-11-03 10:45 - INFO - 	 Train Loss: 0.063
2024-11-03 10:45 - INFO - 	 Val. Loss: 0.064
2024-11-03 10:45 - INFO - 	 ROC-AUC: 0.986
2024-11-03 10:45 - INFO - 	 PR-AUC: 0.876
2024-11-03 10:45 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 10:45 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 10:45 - INFO - 	 Best PR-AUC: 0.876
2024-11-03 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-03 10:45 - INFO - ---------------------------------------------
2024-11-03 10:54 - INFO - ---------------------------------------------
2024-11-03 10:54 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 10:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88309
2024-11-03 10:54 - INFO - 	 Train Loss: 0.060
2024-11-03 10:54 - INFO - 	 Val. Loss: 0.062
2024-11-03 10:54 - INFO - 	 ROC-AUC: 0.986
2024-11-03 10:54 - INFO - 	 PR-AUC: 0.883
2024-11-03 10:54 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 10:54 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 10:54 - INFO - 	 Best PR-AUC: 0.883
2024-11-03 10:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 10:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-03 10:54 - INFO - ---------------------------------------------
2024-11-03 11:02 - INFO - ---------------------------------------------
2024-11-03 11:02 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-03 11:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89346
2024-11-03 11:02 - INFO - 	 Train Loss: 0.059
2024-11-03 11:02 - INFO - 	 Val. Loss: 0.060
2024-11-03 11:02 - INFO - 	 ROC-AUC: 0.988
2024-11-03 11:02 - INFO - 	 PR-AUC: 0.893
2024-11-03 11:02 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 11:02 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 11:02 - INFO - 	 Best PR-AUC: 0.893
2024-11-03 11:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 11:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-03 11:02 - INFO - ---------------------------------------------
2024-11-03 11:04 - INFO - Fit the preprocessing pipeline
2024-11-03 11:04 - INFO - Training using device: cuda
2024-11-03 11:04 - INFO - Creating generators
2024-11-03 11:04 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 11:04 - INFO - * Model:
2024-11-03 11:04 - INFO - * -----------
2024-11-03 11:04 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 11:04 - INFO - * -----------
2024-11-03 11:12 - INFO - ---------------------------------------------
2024-11-03 11:12 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-03 11:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39666
2024-11-03 11:12 - INFO - 	 Train Loss: 0.212
2024-11-03 11:12 - INFO - 	 Val. Loss: 0.399
2024-11-03 11:12 - INFO - 	 ROC-AUC: 0.916
2024-11-03 11:12 - INFO - 	 PR-AUC: 0.397
2024-11-03 11:12 - INFO - 	 Best Val. Loss: 0.399
2024-11-03 11:12 - INFO - 	 Best ROC-AUC: 0.916
2024-11-03 11:12 - INFO - 	 Best PR-AUC: 0.397
2024-11-03 11:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-03 11:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.466
2024-11-03 11:12 - INFO - ---------------------------------------------
2024-11-03 11:20 - INFO - ---------------------------------------------
2024-11-03 11:20 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 11:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80531
2024-11-03 11:20 - INFO - 	 Train Loss: 0.105
2024-11-03 11:20 - INFO - 	 Val. Loss: 0.121
2024-11-03 11:20 - INFO - 	 ROC-AUC: 0.979
2024-11-03 11:20 - INFO - 	 PR-AUC: 0.805
2024-11-03 11:20 - INFO - 	 Best Val. Loss: 0.121
2024-11-03 11:20 - INFO - 	 Best ROC-AUC: 0.979
2024-11-03 11:20 - INFO - 	 Best PR-AUC: 0.805
2024-11-03 11:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-03 11:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-11-03 11:20 - INFO - ---------------------------------------------
2024-11-03 11:28 - INFO - ---------------------------------------------
2024-11-03 11:28 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 11:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84012
2024-11-03 11:28 - INFO - 	 Train Loss: 0.087
2024-11-03 11:28 - INFO - 	 Val. Loss: 0.078
2024-11-03 11:28 - INFO - 	 ROC-AUC: 0.983
2024-11-03 11:28 - INFO - 	 PR-AUC: 0.840
2024-11-03 11:28 - INFO - 	 Best Val. Loss: 0.078
2024-11-03 11:28 - INFO - 	 Best ROC-AUC: 0.983
2024-11-03 11:28 - INFO - 	 Best PR-AUC: 0.840
2024-11-03 11:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-03 11:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-11-03 11:28 - INFO - ---------------------------------------------
2024-11-03 11:36 - INFO - ---------------------------------------------
2024-11-03 11:36 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-03 11:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86223
2024-11-03 11:36 - INFO - 	 Train Loss: 0.079
2024-11-03 11:36 - INFO - 	 Val. Loss: 0.070
2024-11-03 11:36 - INFO - 	 ROC-AUC: 0.985
2024-11-03 11:36 - INFO - 	 PR-AUC: 0.862
2024-11-03 11:36 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 11:36 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 11:36 - INFO - 	 Best PR-AUC: 0.862
2024-11-03 11:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 11:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 11:36 - INFO - ---------------------------------------------
2024-11-03 11:44 - INFO - ---------------------------------------------
2024-11-03 11:44 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 11:44 - INFO - 	 Train Loss: 0.074
2024-11-03 11:44 - INFO - 	 Val. Loss: 0.074
2024-11-03 11:44 - INFO - 	 ROC-AUC: 0.984
2024-11-03 11:44 - INFO - 	 PR-AUC: 0.853
2024-11-03 11:44 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 11:44 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 11:44 - INFO - 	 Best PR-AUC: 0.862
2024-11-03 11:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 11:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 11:44 - INFO - ---------------------------------------------
2024-11-03 11:52 - INFO - ---------------------------------------------
2024-11-03 11:52 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-03 11:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86561
2024-11-03 11:52 - INFO - 	 Train Loss: 0.071
2024-11-03 11:52 - INFO - 	 Val. Loss: 0.067
2024-11-03 11:52 - INFO - 	 ROC-AUC: 0.985
2024-11-03 11:52 - INFO - 	 PR-AUC: 0.866
2024-11-03 11:52 - INFO - 	 Best Val. Loss: 0.067
2024-11-03 11:52 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 11:52 - INFO - 	 Best PR-AUC: 0.866
2024-11-03 11:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 11:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-03 11:52 - INFO - ---------------------------------------------
2024-11-03 12:00 - INFO - ---------------------------------------------
2024-11-03 12:00 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-03 12:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86752
2024-11-03 12:00 - INFO - 	 Train Loss: 0.068
2024-11-03 12:00 - INFO - 	 Val. Loss: 0.064
2024-11-03 12:00 - INFO - 	 ROC-AUC: 0.986
2024-11-03 12:00 - INFO - 	 PR-AUC: 0.868
2024-11-03 12:00 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 12:00 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 12:00 - INFO - 	 Best PR-AUC: 0.868
2024-11-03 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-03 12:00 - INFO - ---------------------------------------------
2024-11-03 12:08 - INFO - ---------------------------------------------
2024-11-03 12:08 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 12:08 - INFO - 	 Train Loss: 0.064
2024-11-03 12:08 - INFO - 	 Val. Loss: 0.072
2024-11-03 12:08 - INFO - 	 ROC-AUC: 0.986
2024-11-03 12:08 - INFO - 	 PR-AUC: 0.856
2024-11-03 12:08 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 12:08 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 12:08 - INFO - 	 Best PR-AUC: 0.868
2024-11-03 12:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 12:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-03 12:08 - INFO - ---------------------------------------------
2024-11-03 12:16 - INFO - ---------------------------------------------
2024-11-03 12:16 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 12:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87515
2024-11-03 12:16 - INFO - 	 Train Loss: 0.062
2024-11-03 12:16 - INFO - 	 Val. Loss: 0.062
2024-11-03 12:16 - INFO - 	 ROC-AUC: 0.988
2024-11-03 12:16 - INFO - 	 PR-AUC: 0.875
2024-11-03 12:16 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 12:16 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 12:16 - INFO - 	 Best PR-AUC: 0.875
2024-11-03 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-03 12:16 - INFO - ---------------------------------------------
2024-11-03 12:24 - INFO - ---------------------------------------------
2024-11-03 12:24 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-03 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87983
2024-11-03 12:24 - INFO - 	 Train Loss: 0.059
2024-11-03 12:24 - INFO - 	 Val. Loss: 0.061
2024-11-03 12:24 - INFO - 	 ROC-AUC: 0.987
2024-11-03 12:24 - INFO - 	 PR-AUC: 0.880
2024-11-03 12:24 - INFO - 	 Best Val. Loss: 0.061
2024-11-03 12:24 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 12:24 - INFO - 	 Best PR-AUC: 0.880
2024-11-03 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-03 12:24 - INFO - ---------------------------------------------
2024-11-03 12:27 - INFO - Fit the preprocessing pipeline
2024-11-03 12:27 - INFO - Training using device: cuda
2024-11-03 12:27 - INFO - Creating generators
2024-11-03 12:27 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 12:27 - INFO - * Model:
2024-11-03 12:27 - INFO - * -----------
2024-11-03 12:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 12:27 - INFO - * -----------
2024-11-03 12:35 - INFO - ---------------------------------------------
2024-11-03 12:35 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 12:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46074
2024-11-03 12:35 - INFO - 	 Train Loss: 0.205
2024-11-03 12:35 - INFO - 	 Val. Loss: 0.443
2024-11-03 12:35 - INFO - 	 ROC-AUC: 0.918
2024-11-03 12:35 - INFO - 	 PR-AUC: 0.461
2024-11-03 12:35 - INFO - 	 Best Val. Loss: 0.443
2024-11-03 12:35 - INFO - 	 Best ROC-AUC: 0.918
2024-11-03 12:35 - INFO - 	 Best PR-AUC: 0.461
2024-11-03 12:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-03 12:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-03 12:35 - INFO - ---------------------------------------------
2024-11-03 12:43 - INFO - ---------------------------------------------
2024-11-03 12:43 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 12:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75978
2024-11-03 12:43 - INFO - 	 Train Loss: 0.108
2024-11-03 12:43 - INFO - 	 Val. Loss: 0.114
2024-11-03 12:43 - INFO - 	 ROC-AUC: 0.973
2024-11-03 12:43 - INFO - 	 PR-AUC: 0.760
2024-11-03 12:43 - INFO - 	 Best Val. Loss: 0.114
2024-11-03 12:43 - INFO - 	 Best ROC-AUC: 0.973
2024-11-03 12:43 - INFO - 	 Best PR-AUC: 0.760
2024-11-03 12:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-03 12:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.749
2024-11-03 12:43 - INFO - ---------------------------------------------
2024-11-03 12:51 - INFO - ---------------------------------------------
2024-11-03 12:51 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 12:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78776
2024-11-03 12:51 - INFO - 	 Train Loss: 0.089
2024-11-03 12:51 - INFO - 	 Val. Loss: 0.109
2024-11-03 12:51 - INFO - 	 ROC-AUC: 0.977
2024-11-03 12:51 - INFO - 	 PR-AUC: 0.788
2024-11-03 12:51 - INFO - 	 Best Val. Loss: 0.109
2024-11-03 12:51 - INFO - 	 Best ROC-AUC: 0.977
2024-11-03 12:51 - INFO - 	 Best PR-AUC: 0.788
2024-11-03 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-03 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.773
2024-11-03 12:51 - INFO - ---------------------------------------------
2024-11-03 12:59 - INFO - ---------------------------------------------
2024-11-03 12:59 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-03 12:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83034
2024-11-03 12:59 - INFO - 	 Train Loss: 0.083
2024-11-03 12:59 - INFO - 	 Val. Loss: 0.079
2024-11-03 12:59 - INFO - 	 ROC-AUC: 0.982
2024-11-03 12:59 - INFO - 	 PR-AUC: 0.830
2024-11-03 12:59 - INFO - 	 Best Val. Loss: 0.079
2024-11-03 12:59 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 12:59 - INFO - 	 Best PR-AUC: 0.830
2024-11-03 12:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-03 12:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-11-03 12:59 - INFO - ---------------------------------------------
2024-11-03 13:07 - INFO - ---------------------------------------------
2024-11-03 13:07 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-03 13:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84386
2024-11-03 13:07 - INFO - 	 Train Loss: 0.076
2024-11-03 13:07 - INFO - 	 Val. Loss: 0.079
2024-11-03 13:07 - INFO - 	 ROC-AUC: 0.982
2024-11-03 13:07 - INFO - 	 PR-AUC: 0.844
2024-11-03 13:07 - INFO - 	 Best Val. Loss: 0.079
2024-11-03 13:07 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 13:07 - INFO - 	 Best PR-AUC: 0.844
2024-11-03 13:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-03 13:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-11-03 13:07 - INFO - ---------------------------------------------
2024-11-03 13:15 - INFO - ---------------------------------------------
2024-11-03 13:15 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 13:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86283
2024-11-03 13:15 - INFO - 	 Train Loss: 0.071
2024-11-03 13:15 - INFO - 	 Val. Loss: 0.065
2024-11-03 13:15 - INFO - 	 ROC-AUC: 0.986
2024-11-03 13:15 - INFO - 	 PR-AUC: 0.863
2024-11-03 13:15 - INFO - 	 Best Val. Loss: 0.065
2024-11-03 13:15 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 13:15 - INFO - 	 Best PR-AUC: 0.863
2024-11-03 13:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 13:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-03 13:15 - INFO - ---------------------------------------------
2024-11-03 13:23 - INFO - ---------------------------------------------
2024-11-03 13:23 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-03 13:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87892
2024-11-03 13:23 - INFO - 	 Train Loss: 0.065
2024-11-03 13:23 - INFO - 	 Val. Loss: 0.062
2024-11-03 13:23 - INFO - 	 ROC-AUC: 0.986
2024-11-03 13:23 - INFO - 	 PR-AUC: 0.879
2024-11-03 13:23 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 13:23 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 13:23 - INFO - 	 Best PR-AUC: 0.879
2024-11-03 13:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 13:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 13:23 - INFO - ---------------------------------------------
2024-11-03 13:31 - INFO - ---------------------------------------------
2024-11-03 13:31 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 13:31 - INFO - 	 Train Loss: 0.061
2024-11-03 13:31 - INFO - 	 Val. Loss: 0.062
2024-11-03 13:31 - INFO - 	 ROC-AUC: 0.987
2024-11-03 13:31 - INFO - 	 PR-AUC: 0.873
2024-11-03 13:31 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 13:31 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 13:31 - INFO - 	 Best PR-AUC: 0.879
2024-11-03 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 13:31 - INFO - ---------------------------------------------
2024-11-03 13:39 - INFO - ---------------------------------------------
2024-11-03 13:39 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 13:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88755
2024-11-03 13:39 - INFO - 	 Train Loss: 0.059
2024-11-03 13:39 - INFO - 	 Val. Loss: 0.060
2024-11-03 13:39 - INFO - 	 ROC-AUC: 0.987
2024-11-03 13:39 - INFO - 	 PR-AUC: 0.888
2024-11-03 13:39 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 13:39 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 13:39 - INFO - 	 Best PR-AUC: 0.888
2024-11-03 13:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 13:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-03 13:39 - INFO - ---------------------------------------------
2024-11-03 13:47 - INFO - ---------------------------------------------
2024-11-03 13:47 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-03 13:47 - INFO - 	 Train Loss: 0.058
2024-11-03 13:47 - INFO - 	 Val. Loss: 0.059
2024-11-03 13:47 - INFO - 	 ROC-AUC: 0.988
2024-11-03 13:47 - INFO - 	 PR-AUC: 0.886
2024-11-03 13:47 - INFO - 	 Best Val. Loss: 0.059
2024-11-03 13:47 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 13:47 - INFO - 	 Best PR-AUC: 0.888
2024-11-03 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-03 13:47 - INFO - ---------------------------------------------
2024-11-03 13:49 - INFO - Fit the preprocessing pipeline
2024-11-03 13:49 - INFO - Training using device: cuda
2024-11-03 13:49 - INFO - Creating generators
2024-11-03 13:49 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 13:49 - INFO - * Model:
2024-11-03 13:49 - INFO - * -----------
2024-11-03 13:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 13:49 - INFO - * -----------
2024-11-03 13:57 - INFO - ---------------------------------------------
2024-11-03 13:57 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-03 13:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56576
2024-11-03 13:57 - INFO - 	 Train Loss: 0.203
2024-11-03 13:57 - INFO - 	 Val. Loss: 0.236
2024-11-03 13:57 - INFO - 	 ROC-AUC: 0.951
2024-11-03 13:57 - INFO - 	 PR-AUC: 0.566
2024-11-03 13:57 - INFO - 	 Best Val. Loss: 0.236
2024-11-03 13:57 - INFO - 	 Best ROC-AUC: 0.951
2024-11-03 13:57 - INFO - 	 Best PR-AUC: 0.566
2024-11-03 13:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-03 13:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.631
2024-11-03 13:57 - INFO - ---------------------------------------------
2024-11-03 14:05 - INFO - ---------------------------------------------
2024-11-03 14:05 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 14:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7938
2024-11-03 14:05 - INFO - 	 Train Loss: 0.102
2024-11-03 14:05 - INFO - 	 Val. Loss: 0.098
2024-11-03 14:05 - INFO - 	 ROC-AUC: 0.978
2024-11-03 14:05 - INFO - 	 PR-AUC: 0.794
2024-11-03 14:05 - INFO - 	 Best Val. Loss: 0.098
2024-11-03 14:05 - INFO - 	 Best ROC-AUC: 0.978
2024-11-03 14:05 - INFO - 	 Best PR-AUC: 0.794
2024-11-03 14:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-03 14:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-11-03 14:05 - INFO - ---------------------------------------------
2024-11-03 14:13 - INFO - ---------------------------------------------
2024-11-03 14:13 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 14:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81613
2024-11-03 14:13 - INFO - 	 Train Loss: 0.086
2024-11-03 14:13 - INFO - 	 Val. Loss: 0.131
2024-11-03 14:13 - INFO - 	 ROC-AUC: 0.980
2024-11-03 14:13 - INFO - 	 PR-AUC: 0.816
2024-11-03 14:13 - INFO - 	 Best Val. Loss: 0.098
2024-11-03 14:13 - INFO - 	 Best ROC-AUC: 0.980
2024-11-03 14:13 - INFO - 	 Best PR-AUC: 0.816
2024-11-03 14:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-03 14:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-11-03 14:13 - INFO - ---------------------------------------------
2024-11-03 14:21 - INFO - ---------------------------------------------
2024-11-03 14:21 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 14:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85552
2024-11-03 14:21 - INFO - 	 Train Loss: 0.079
2024-11-03 14:21 - INFO - 	 Val. Loss: 0.072
2024-11-03 14:21 - INFO - 	 ROC-AUC: 0.984
2024-11-03 14:21 - INFO - 	 PR-AUC: 0.856
2024-11-03 14:21 - INFO - 	 Best Val. Loss: 0.072
2024-11-03 14:21 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 14:21 - INFO - 	 Best PR-AUC: 0.856
2024-11-03 14:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-03 14:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-11-03 14:21 - INFO - ---------------------------------------------
2024-11-03 14:29 - INFO - ---------------------------------------------
2024-11-03 14:29 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 14:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86741
2024-11-03 14:29 - INFO - 	 Train Loss: 0.073
2024-11-03 14:29 - INFO - 	 Val. Loss: 0.064
2024-11-03 14:29 - INFO - 	 ROC-AUC: 0.987
2024-11-03 14:29 - INFO - 	 PR-AUC: 0.867
2024-11-03 14:29 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 14:29 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 14:29 - INFO - 	 Best PR-AUC: 0.867
2024-11-03 14:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 14:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-03 14:29 - INFO - ---------------------------------------------
2024-11-03 14:37 - INFO - ---------------------------------------------
2024-11-03 14:37 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 14:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87449
2024-11-03 14:37 - INFO - 	 Train Loss: 0.069
2024-11-03 14:37 - INFO - 	 Val. Loss: 0.064
2024-11-03 14:37 - INFO - 	 ROC-AUC: 0.987
2024-11-03 14:37 - INFO - 	 PR-AUC: 0.874
2024-11-03 14:37 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 14:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 14:37 - INFO - 	 Best PR-AUC: 0.874
2024-11-03 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-03 14:37 - INFO - ---------------------------------------------
2024-11-03 14:46 - INFO - ---------------------------------------------
2024-11-03 14:46 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-03 14:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88548
2024-11-03 14:46 - INFO - 	 Train Loss: 0.066
2024-11-03 14:46 - INFO - 	 Val. Loss: 0.064
2024-11-03 14:46 - INFO - 	 ROC-AUC: 0.987
2024-11-03 14:46 - INFO - 	 PR-AUC: 0.885
2024-11-03 14:46 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 14:46 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 14:46 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 14:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 14:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-03 14:46 - INFO - ---------------------------------------------
2024-11-03 14:54 - INFO - ---------------------------------------------
2024-11-03 14:54 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 14:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8924
2024-11-03 14:54 - INFO - 	 Train Loss: 0.062
2024-11-03 14:54 - INFO - 	 Val. Loss: 0.059
2024-11-03 14:54 - INFO - 	 ROC-AUC: 0.988
2024-11-03 14:54 - INFO - 	 PR-AUC: 0.892
2024-11-03 14:54 - INFO - 	 Best Val. Loss: 0.059
2024-11-03 14:54 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 14:54 - INFO - 	 Best PR-AUC: 0.892
2024-11-03 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-03 14:54 - INFO - ---------------------------------------------
2024-11-03 15:02 - INFO - ---------------------------------------------
2024-11-03 15:02 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 15:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89533
2024-11-03 15:02 - INFO - 	 Train Loss: 0.059
2024-11-03 15:02 - INFO - 	 Val. Loss: 0.059
2024-11-03 15:02 - INFO - 	 ROC-AUC: 0.989
2024-11-03 15:02 - INFO - 	 PR-AUC: 0.895
2024-11-03 15:02 - INFO - 	 Best Val. Loss: 0.059
2024-11-03 15:02 - INFO - 	 Best ROC-AUC: 0.989
2024-11-03 15:02 - INFO - 	 Best PR-AUC: 0.895
2024-11-03 15:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 15:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-03 15:02 - INFO - ---------------------------------------------
2024-11-03 15:10 - INFO - ---------------------------------------------
2024-11-03 15:10 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-03 15:10 - INFO - 	 Train Loss: 0.058
2024-11-03 15:10 - INFO - 	 Val. Loss: 0.060
2024-11-03 15:10 - INFO - 	 ROC-AUC: 0.988
2024-11-03 15:10 - INFO - 	 PR-AUC: 0.886
2024-11-03 15:10 - INFO - 	 Best Val. Loss: 0.059
2024-11-03 15:10 - INFO - 	 Best ROC-AUC: 0.989
2024-11-03 15:10 - INFO - 	 Best PR-AUC: 0.895
2024-11-03 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-03 15:10 - INFO - ---------------------------------------------
2024-11-03 15:12 - INFO - Fit the preprocessing pipeline
2024-11-03 15:12 - INFO - Training using device: cuda
2024-11-03 15:12 - INFO - Creating generators
2024-11-03 15:12 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 15:12 - INFO - * Model:
2024-11-03 15:12 - INFO - * -----------
2024-11-03 15:12 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 15:12 - INFO - * -----------
2024-11-03 15:20 - INFO - ---------------------------------------------
2024-11-03 15:20 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-03 15:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50166
2024-11-03 15:20 - INFO - 	 Train Loss: 0.206
2024-11-03 15:20 - INFO - 	 Val. Loss: 0.217
2024-11-03 15:20 - INFO - 	 ROC-AUC: 0.934
2024-11-03 15:20 - INFO - 	 PR-AUC: 0.502
2024-11-03 15:20 - INFO - 	 Best Val. Loss: 0.217
2024-11-03 15:20 - INFO - 	 Best ROC-AUC: 0.934
2024-11-03 15:20 - INFO - 	 Best PR-AUC: 0.502
2024-11-03 15:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-03 15:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.554
2024-11-03 15:20 - INFO - ---------------------------------------------
2024-11-03 15:28 - INFO - ---------------------------------------------
2024-11-03 15:28 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 15:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75889
2024-11-03 15:28 - INFO - 	 Train Loss: 0.107
2024-11-03 15:28 - INFO - 	 Val. Loss: 0.127
2024-11-03 15:28 - INFO - 	 ROC-AUC: 0.973
2024-11-03 15:28 - INFO - 	 PR-AUC: 0.759
2024-11-03 15:28 - INFO - 	 Best Val. Loss: 0.127
2024-11-03 15:28 - INFO - 	 Best ROC-AUC: 0.973
2024-11-03 15:28 - INFO - 	 Best PR-AUC: 0.759
2024-11-03 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-03 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-11-03 15:28 - INFO - ---------------------------------------------
2024-11-03 15:36 - INFO - ---------------------------------------------
2024-11-03 15:36 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-03 15:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84843
2024-11-03 15:36 - INFO - 	 Train Loss: 0.088
2024-11-03 15:36 - INFO - 	 Val. Loss: 0.078
2024-11-03 15:36 - INFO - 	 ROC-AUC: 0.982
2024-11-03 15:36 - INFO - 	 PR-AUC: 0.848
2024-11-03 15:36 - INFO - 	 Best Val. Loss: 0.078
2024-11-03 15:36 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 15:36 - INFO - 	 Best PR-AUC: 0.848
2024-11-03 15:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-03 15:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-11-03 15:36 - INFO - ---------------------------------------------
2024-11-03 15:44 - INFO - ---------------------------------------------
2024-11-03 15:44 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 15:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87095
2024-11-03 15:44 - INFO - 	 Train Loss: 0.079
2024-11-03 15:44 - INFO - 	 Val. Loss: 0.068
2024-11-03 15:44 - INFO - 	 ROC-AUC: 0.985
2024-11-03 15:44 - INFO - 	 PR-AUC: 0.871
2024-11-03 15:44 - INFO - 	 Best Val. Loss: 0.068
2024-11-03 15:44 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 15:44 - INFO - 	 Best PR-AUC: 0.871
2024-11-03 15:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 15:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 15:44 - INFO - ---------------------------------------------
2024-11-03 15:52 - INFO - ---------------------------------------------
2024-11-03 15:52 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87732
2024-11-03 15:52 - INFO - 	 Train Loss: 0.073
2024-11-03 15:52 - INFO - 	 Val. Loss: 0.064
2024-11-03 15:52 - INFO - 	 ROC-AUC: 0.986
2024-11-03 15:52 - INFO - 	 PR-AUC: 0.877
2024-11-03 15:52 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 15:52 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 15:52 - INFO - 	 Best PR-AUC: 0.877
2024-11-03 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-03 15:52 - INFO - ---------------------------------------------
2024-11-03 16:00 - INFO - ---------------------------------------------
2024-11-03 16:00 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87859
2024-11-03 16:00 - INFO - 	 Train Loss: 0.068
2024-11-03 16:00 - INFO - 	 Val. Loss: 0.062
2024-11-03 16:00 - INFO - 	 ROC-AUC: 0.987
2024-11-03 16:00 - INFO - 	 PR-AUC: 0.879
2024-11-03 16:00 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 16:00 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 16:00 - INFO - 	 Best PR-AUC: 0.879
2024-11-03 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-03 16:00 - INFO - ---------------------------------------------
2024-11-03 16:08 - INFO - ---------------------------------------------
2024-11-03 16:08 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-03 16:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88378
2024-11-03 16:08 - INFO - 	 Train Loss: 0.065
2024-11-03 16:08 - INFO - 	 Val. Loss: 0.062
2024-11-03 16:08 - INFO - 	 ROC-AUC: 0.988
2024-11-03 16:08 - INFO - 	 PR-AUC: 0.884
2024-11-03 16:08 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 16:08 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 16:08 - INFO - 	 Best PR-AUC: 0.884
2024-11-03 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-03 16:08 - INFO - ---------------------------------------------
2024-11-03 16:16 - INFO - ---------------------------------------------
2024-11-03 16:16 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-03 16:16 - INFO - 	 Train Loss: 0.063
2024-11-03 16:16 - INFO - 	 Val. Loss: 0.065
2024-11-03 16:16 - INFO - 	 ROC-AUC: 0.986
2024-11-03 16:16 - INFO - 	 PR-AUC: 0.873
2024-11-03 16:16 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 16:16 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 16:16 - INFO - 	 Best PR-AUC: 0.884
2024-11-03 16:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 16:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-03 16:16 - INFO - ---------------------------------------------
2024-11-03 16:24 - INFO - ---------------------------------------------
2024-11-03 16:24 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-03 16:24 - INFO - 	 Train Loss: 0.060
2024-11-03 16:24 - INFO - 	 Val. Loss: 0.060
2024-11-03 16:24 - INFO - 	 ROC-AUC: 0.988
2024-11-03 16:24 - INFO - 	 PR-AUC: 0.882
2024-11-03 16:24 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 16:24 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 16:24 - INFO - 	 Best PR-AUC: 0.884
2024-11-03 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-03 16:24 - INFO - ---------------------------------------------
2024-11-03 16:32 - INFO - ---------------------------------------------
2024-11-03 16:32 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-03 16:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88519
2024-11-03 16:32 - INFO - 	 Train Loss: 0.058
2024-11-03 16:32 - INFO - 	 Val. Loss: 0.060
2024-11-03 16:32 - INFO - 	 ROC-AUC: 0.988
2024-11-03 16:32 - INFO - 	 PR-AUC: 0.885
2024-11-03 16:32 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 16:32 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 16:32 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 16:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 16:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-03 16:32 - INFO - ---------------------------------------------
2024-11-03 16:35 - INFO - Fit the preprocessing pipeline
2024-11-03 16:35 - INFO - Training using device: cuda
2024-11-03 16:35 - INFO - Creating generators
2024-11-03 16:35 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 16:35 - INFO - * Model:
2024-11-03 16:35 - INFO - * -----------
2024-11-03 16:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 16:35 - INFO - * -----------
2024-11-03 16:43 - INFO - ---------------------------------------------
2024-11-03 16:43 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 16:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47491
2024-11-03 16:43 - INFO - 	 Train Loss: 0.211
2024-11-03 16:43 - INFO - 	 Val. Loss: 0.301
2024-11-03 16:43 - INFO - 	 ROC-AUC: 0.915
2024-11-03 16:43 - INFO - 	 PR-AUC: 0.475
2024-11-03 16:43 - INFO - 	 Best Val. Loss: 0.301
2024-11-03 16:43 - INFO - 	 Best ROC-AUC: 0.915
2024-11-03 16:43 - INFO - 	 Best PR-AUC: 0.475
2024-11-03 16:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-03 16:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.506
2024-11-03 16:43 - INFO - ---------------------------------------------
2024-11-03 16:51 - INFO - ---------------------------------------------
2024-11-03 16:51 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 16:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80557
2024-11-03 16:51 - INFO - 	 Train Loss: 0.108
2024-11-03 16:51 - INFO - 	 Val. Loss: 0.090
2024-11-03 16:51 - INFO - 	 ROC-AUC: 0.978
2024-11-03 16:51 - INFO - 	 PR-AUC: 0.806
2024-11-03 16:51 - INFO - 	 Best Val. Loss: 0.090
2024-11-03 16:51 - INFO - 	 Best ROC-AUC: 0.978
2024-11-03 16:51 - INFO - 	 Best PR-AUC: 0.806
2024-11-03 16:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-03 16:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-11-03 16:51 - INFO - ---------------------------------------------
2024-11-03 16:59 - INFO - ---------------------------------------------
2024-11-03 16:59 - INFO - Epoch: 03 | Time: 8m 3s
2024-11-03 16:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83344
2024-11-03 16:59 - INFO - 	 Train Loss: 0.088
2024-11-03 16:59 - INFO - 	 Val. Loss: 0.076
2024-11-03 16:59 - INFO - 	 ROC-AUC: 0.983
2024-11-03 16:59 - INFO - 	 PR-AUC: 0.833
2024-11-03 16:59 - INFO - 	 Best Val. Loss: 0.076
2024-11-03 16:59 - INFO - 	 Best ROC-AUC: 0.983
2024-11-03 16:59 - INFO - 	 Best PR-AUC: 0.833
2024-11-03 16:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-03 16:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-11-03 16:59 - INFO - ---------------------------------------------
2024-11-03 17:07 - INFO - ---------------------------------------------
2024-11-03 17:07 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-03 17:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85427
2024-11-03 17:07 - INFO - 	 Train Loss: 0.080
2024-11-03 17:07 - INFO - 	 Val. Loss: 0.069
2024-11-03 17:07 - INFO - 	 ROC-AUC: 0.984
2024-11-03 17:07 - INFO - 	 PR-AUC: 0.854
2024-11-03 17:07 - INFO - 	 Best Val. Loss: 0.069
2024-11-03 17:07 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 17:07 - INFO - 	 Best PR-AUC: 0.854
2024-11-03 17:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-03 17:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-03 17:07 - INFO - ---------------------------------------------
2024-11-03 17:15 - INFO - ---------------------------------------------
2024-11-03 17:15 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-03 17:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86866
2024-11-03 17:15 - INFO - 	 Train Loss: 0.075
2024-11-03 17:15 - INFO - 	 Val. Loss: 0.064
2024-11-03 17:15 - INFO - 	 ROC-AUC: 0.986
2024-11-03 17:15 - INFO - 	 PR-AUC: 0.869
2024-11-03 17:15 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 17:15 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 17:15 - INFO - 	 Best PR-AUC: 0.869
2024-11-03 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 17:15 - INFO - ---------------------------------------------
2024-11-03 17:23 - INFO - ---------------------------------------------
2024-11-03 17:23 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-03 17:23 - INFO - 	 Train Loss: 0.071
2024-11-03 17:23 - INFO - 	 Val. Loss: 0.067
2024-11-03 17:23 - INFO - 	 ROC-AUC: 0.986
2024-11-03 17:23 - INFO - 	 PR-AUC: 0.860
2024-11-03 17:23 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 17:23 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 17:23 - INFO - 	 Best PR-AUC: 0.869
2024-11-03 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 17:23 - INFO - ---------------------------------------------
2024-11-03 17:31 - INFO - ---------------------------------------------
2024-11-03 17:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-03 17:31 - INFO - 	 Train Loss: 0.068
2024-11-03 17:31 - INFO - 	 Val. Loss: 0.066
2024-11-03 17:31 - INFO - 	 ROC-AUC: 0.986
2024-11-03 17:31 - INFO - 	 PR-AUC: 0.861
2024-11-03 17:31 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 17:31 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 17:31 - INFO - 	 Best PR-AUC: 0.869
2024-11-03 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 17:31 - INFO - ---------------------------------------------
2024-11-03 17:39 - INFO - ---------------------------------------------
2024-11-03 17:39 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-03 17:39 - INFO - 	 Train Loss: 0.064
2024-11-03 17:39 - INFO - 	 Val. Loss: 0.065
2024-11-03 17:39 - INFO - 	 ROC-AUC: 0.986
2024-11-03 17:39 - INFO - 	 PR-AUC: 0.867
2024-11-03 17:39 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 17:39 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 17:39 - INFO - 	 Best PR-AUC: 0.869
2024-11-03 17:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 17:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-03 17:39 - INFO - ---------------------------------------------
2024-11-03 17:47 - INFO - ---------------------------------------------
2024-11-03 17:47 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 17:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87925
2024-11-03 17:47 - INFO - 	 Train Loss: 0.062
2024-11-03 17:47 - INFO - 	 Val. Loss: 0.062
2024-11-03 17:47 - INFO - 	 ROC-AUC: 0.987
2024-11-03 17:47 - INFO - 	 PR-AUC: 0.879
2024-11-03 17:47 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 17:47 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 17:47 - INFO - 	 Best PR-AUC: 0.879
2024-11-03 17:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 17:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-03 17:47 - INFO - ---------------------------------------------
2024-11-03 17:55 - INFO - ---------------------------------------------
2024-11-03 17:55 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-03 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88041
2024-11-03 17:55 - INFO - 	 Train Loss: 0.059
2024-11-03 17:55 - INFO - 	 Val. Loss: 0.061
2024-11-03 17:55 - INFO - 	 ROC-AUC: 0.987
2024-11-03 17:55 - INFO - 	 PR-AUC: 0.880
2024-11-03 17:55 - INFO - 	 Best Val. Loss: 0.061
2024-11-03 17:55 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 17:55 - INFO - 	 Best PR-AUC: 0.880
2024-11-03 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-03 17:55 - INFO - ---------------------------------------------
2024-11-03 17:57 - INFO - Fit the preprocessing pipeline
2024-11-03 17:57 - INFO - Training using device: cuda
2024-11-03 17:57 - INFO - Creating generators
2024-11-03 17:57 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 17:57 - INFO - * Model:
2024-11-03 17:57 - INFO - * -----------
2024-11-03 17:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 17:57 - INFO - * -----------
2024-11-03 18:06 - INFO - ---------------------------------------------
2024-11-03 18:06 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 18:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35732
2024-11-03 18:06 - INFO - 	 Train Loss: 0.226
2024-11-03 18:06 - INFO - 	 Val. Loss: 0.205
2024-11-03 18:06 - INFO - 	 ROC-AUC: 0.869
2024-11-03 18:06 - INFO - 	 PR-AUC: 0.357
2024-11-03 18:06 - INFO - 	 Best Val. Loss: 0.205
2024-11-03 18:06 - INFO - 	 Best ROC-AUC: 0.869
2024-11-03 18:06 - INFO - 	 Best PR-AUC: 0.357
2024-11-03 18:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.895
2024-11-03 18:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.471
2024-11-03 18:06 - INFO - ---------------------------------------------
2024-11-03 18:14 - INFO - ---------------------------------------------
2024-11-03 18:14 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 18:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7558
2024-11-03 18:14 - INFO - 	 Train Loss: 0.109
2024-11-03 18:14 - INFO - 	 Val. Loss: 0.101
2024-11-03 18:14 - INFO - 	 ROC-AUC: 0.971
2024-11-03 18:14 - INFO - 	 PR-AUC: 0.756
2024-11-03 18:14 - INFO - 	 Best Val. Loss: 0.101
2024-11-03 18:14 - INFO - 	 Best ROC-AUC: 0.971
2024-11-03 18:14 - INFO - 	 Best PR-AUC: 0.756
2024-11-03 18:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-03 18:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.736
2024-11-03 18:14 - INFO - ---------------------------------------------
2024-11-03 18:22 - INFO - ---------------------------------------------
2024-11-03 18:22 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-03 18:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82798
2024-11-03 18:22 - INFO - 	 Train Loss: 0.086
2024-11-03 18:22 - INFO - 	 Val. Loss: 0.081
2024-11-03 18:22 - INFO - 	 ROC-AUC: 0.982
2024-11-03 18:22 - INFO - 	 PR-AUC: 0.828
2024-11-03 18:22 - INFO - 	 Best Val. Loss: 0.081
2024-11-03 18:22 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 18:22 - INFO - 	 Best PR-AUC: 0.828
2024-11-03 18:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-03 18:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-11-03 18:22 - INFO - ---------------------------------------------
2024-11-03 18:30 - INFO - ---------------------------------------------
2024-11-03 18:30 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 18:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85598
2024-11-03 18:30 - INFO - 	 Train Loss: 0.077
2024-11-03 18:30 - INFO - 	 Val. Loss: 0.070
2024-11-03 18:30 - INFO - 	 ROC-AUC: 0.985
2024-11-03 18:30 - INFO - 	 PR-AUC: 0.856
2024-11-03 18:30 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 18:30 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 18:30 - INFO - 	 Best PR-AUC: 0.856
2024-11-03 18:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 18:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-03 18:30 - INFO - ---------------------------------------------
2024-11-03 18:38 - INFO - ---------------------------------------------
2024-11-03 18:38 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-03 18:38 - INFO - 	 Train Loss: 0.073
2024-11-03 18:38 - INFO - 	 Val. Loss: 0.067
2024-11-03 18:38 - INFO - 	 ROC-AUC: 0.985
2024-11-03 18:38 - INFO - 	 PR-AUC: 0.854
2024-11-03 18:38 - INFO - 	 Best Val. Loss: 0.067
2024-11-03 18:38 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 18:38 - INFO - 	 Best PR-AUC: 0.856
2024-11-03 18:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 18:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-03 18:38 - INFO - ---------------------------------------------
2024-11-03 18:46 - INFO - ---------------------------------------------
2024-11-03 18:46 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-03 18:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87505
2024-11-03 18:46 - INFO - 	 Train Loss: 0.069
2024-11-03 18:46 - INFO - 	 Val. Loss: 0.062
2024-11-03 18:46 - INFO - 	 ROC-AUC: 0.987
2024-11-03 18:46 - INFO - 	 PR-AUC: 0.875
2024-11-03 18:46 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 18:46 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 18:46 - INFO - 	 Best PR-AUC: 0.875
2024-11-03 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-03 18:46 - INFO - ---------------------------------------------
2024-11-03 18:54 - INFO - ---------------------------------------------
2024-11-03 18:54 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-03 18:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87689
2024-11-03 18:54 - INFO - 	 Train Loss: 0.067
2024-11-03 18:54 - INFO - 	 Val. Loss: 0.063
2024-11-03 18:54 - INFO - 	 ROC-AUC: 0.986
2024-11-03 18:54 - INFO - 	 PR-AUC: 0.877
2024-11-03 18:54 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 18:54 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 18:54 - INFO - 	 Best PR-AUC: 0.877
2024-11-03 18:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 18:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-03 18:54 - INFO - ---------------------------------------------
2024-11-03 19:02 - INFO - ---------------------------------------------
2024-11-03 19:02 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 19:02 - INFO - 	 Train Loss: 0.064
2024-11-03 19:02 - INFO - 	 Val. Loss: 0.063
2024-11-03 19:02 - INFO - 	 ROC-AUC: 0.986
2024-11-03 19:02 - INFO - 	 PR-AUC: 0.869
2024-11-03 19:02 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 19:02 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 19:02 - INFO - 	 Best PR-AUC: 0.877
2024-11-03 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-03 19:02 - INFO - ---------------------------------------------
2024-11-03 19:10 - INFO - ---------------------------------------------
2024-11-03 19:10 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-03 19:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88177
2024-11-03 19:10 - INFO - 	 Train Loss: 0.062
2024-11-03 19:10 - INFO - 	 Val. Loss: 0.061
2024-11-03 19:10 - INFO - 	 ROC-AUC: 0.987
2024-11-03 19:10 - INFO - 	 PR-AUC: 0.882
2024-11-03 19:10 - INFO - 	 Best Val. Loss: 0.061
2024-11-03 19:10 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 19:10 - INFO - 	 Best PR-AUC: 0.882
2024-11-03 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-03 19:10 - INFO - ---------------------------------------------
2024-11-03 19:18 - INFO - ---------------------------------------------
2024-11-03 19:18 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-03 19:18 - INFO - 	 Train Loss: 0.059
2024-11-03 19:18 - INFO - 	 Val. Loss: 0.063
2024-11-03 19:18 - INFO - 	 ROC-AUC: 0.986
2024-11-03 19:18 - INFO - 	 PR-AUC: 0.873
2024-11-03 19:18 - INFO - 	 Best Val. Loss: 0.061
2024-11-03 19:18 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 19:18 - INFO - 	 Best PR-AUC: 0.882
2024-11-03 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-03 19:18 - INFO - ---------------------------------------------
2024-11-03 19:20 - INFO - Fit the preprocessing pipeline
2024-11-03 19:20 - INFO - Training using device: cuda
2024-11-03 19:20 - INFO - Creating generators
2024-11-03 19:20 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 19:20 - INFO - * Model:
2024-11-03 19:20 - INFO - * -----------
2024-11-03 19:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 19:20 - INFO - * -----------
2024-11-03 19:28 - INFO - ---------------------------------------------
2024-11-03 19:28 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 19:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38604
2024-11-03 19:28 - INFO - 	 Train Loss: 0.213
2024-11-03 19:28 - INFO - 	 Val. Loss: 0.382
2024-11-03 19:28 - INFO - 	 ROC-AUC: 0.895
2024-11-03 19:28 - INFO - 	 PR-AUC: 0.386
2024-11-03 19:28 - INFO - 	 Best Val. Loss: 0.382
2024-11-03 19:28 - INFO - 	 Best ROC-AUC: 0.895
2024-11-03 19:28 - INFO - 	 Best PR-AUC: 0.386
2024-11-03 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.886
2024-11-03 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-11-03 19:28 - INFO - ---------------------------------------------
2024-11-03 19:36 - INFO - ---------------------------------------------
2024-11-03 19:36 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 19:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78293
2024-11-03 19:36 - INFO - 	 Train Loss: 0.115
2024-11-03 19:36 - INFO - 	 Val. Loss: 0.103
2024-11-03 19:36 - INFO - 	 ROC-AUC: 0.976
2024-11-03 19:36 - INFO - 	 PR-AUC: 0.783
2024-11-03 19:36 - INFO - 	 Best Val. Loss: 0.103
2024-11-03 19:36 - INFO - 	 Best ROC-AUC: 0.976
2024-11-03 19:36 - INFO - 	 Best PR-AUC: 0.783
2024-11-03 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-03 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-11-03 19:36 - INFO - ---------------------------------------------
2024-11-03 19:44 - INFO - ---------------------------------------------
2024-11-03 19:44 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-03 19:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83759
2024-11-03 19:44 - INFO - 	 Train Loss: 0.089
2024-11-03 19:44 - INFO - 	 Val. Loss: 0.084
2024-11-03 19:44 - INFO - 	 ROC-AUC: 0.981
2024-11-03 19:44 - INFO - 	 PR-AUC: 0.838
2024-11-03 19:44 - INFO - 	 Best Val. Loss: 0.084
2024-11-03 19:44 - INFO - 	 Best ROC-AUC: 0.981
2024-11-03 19:44 - INFO - 	 Best PR-AUC: 0.838
2024-11-03 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-03 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-11-03 19:44 - INFO - ---------------------------------------------
2024-11-03 19:52 - INFO - ---------------------------------------------
2024-11-03 19:52 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-03 19:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86692
2024-11-03 19:52 - INFO - 	 Train Loss: 0.079
2024-11-03 19:52 - INFO - 	 Val. Loss: 0.069
2024-11-03 19:52 - INFO - 	 ROC-AUC: 0.984
2024-11-03 19:52 - INFO - 	 PR-AUC: 0.867
2024-11-03 19:52 - INFO - 	 Best Val. Loss: 0.069
2024-11-03 19:52 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 19:52 - INFO - 	 Best PR-AUC: 0.867
2024-11-03 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-03 19:52 - INFO - ---------------------------------------------
2024-11-03 20:00 - INFO - ---------------------------------------------
2024-11-03 20:00 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 20:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86861
2024-11-03 20:00 - INFO - 	 Train Loss: 0.072
2024-11-03 20:00 - INFO - 	 Val. Loss: 0.067
2024-11-03 20:00 - INFO - 	 ROC-AUC: 0.985
2024-11-03 20:00 - INFO - 	 PR-AUC: 0.869
2024-11-03 20:00 - INFO - 	 Best Val. Loss: 0.067
2024-11-03 20:00 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 20:00 - INFO - 	 Best PR-AUC: 0.869
2024-11-03 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-03 20:00 - INFO - ---------------------------------------------
2024-11-03 20:09 - INFO - ---------------------------------------------
2024-11-03 20:09 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-03 20:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.871
2024-11-03 20:09 - INFO - 	 Train Loss: 0.067
2024-11-03 20:09 - INFO - 	 Val. Loss: 0.070
2024-11-03 20:09 - INFO - 	 ROC-AUC: 0.986
2024-11-03 20:09 - INFO - 	 PR-AUC: 0.871
2024-11-03 20:09 - INFO - 	 Best Val. Loss: 0.067
2024-11-03 20:09 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 20:09 - INFO - 	 Best PR-AUC: 0.871
2024-11-03 20:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 20:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-03 20:09 - INFO - ---------------------------------------------
2024-11-03 20:17 - INFO - ---------------------------------------------
2024-11-03 20:17 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-03 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8848
2024-11-03 20:17 - INFO - 	 Train Loss: 0.063
2024-11-03 20:17 - INFO - 	 Val. Loss: 0.063
2024-11-03 20:17 - INFO - 	 ROC-AUC: 0.986
2024-11-03 20:17 - INFO - 	 PR-AUC: 0.885
2024-11-03 20:17 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 20:17 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 20:17 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-03 20:17 - INFO - ---------------------------------------------
2024-11-03 20:25 - INFO - ---------------------------------------------
2024-11-03 20:25 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 20:25 - INFO - 	 Train Loss: 0.060
2024-11-03 20:25 - INFO - 	 Val. Loss: 0.066
2024-11-03 20:25 - INFO - 	 ROC-AUC: 0.986
2024-11-03 20:25 - INFO - 	 PR-AUC: 0.879
2024-11-03 20:25 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 20:25 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 20:25 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 20:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 20:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-03 20:25 - INFO - ---------------------------------------------
2024-11-03 20:33 - INFO - ---------------------------------------------
2024-11-03 20:33 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-03 20:33 - INFO - 	 Train Loss: 0.059
2024-11-03 20:33 - INFO - 	 Val. Loss: 0.063
2024-11-03 20:33 - INFO - 	 ROC-AUC: 0.987
2024-11-03 20:33 - INFO - 	 PR-AUC: 0.879
2024-11-03 20:33 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 20:33 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 20:33 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 20:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 20:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-03 20:33 - INFO - ---------------------------------------------
2024-11-03 20:41 - INFO - ---------------------------------------------
2024-11-03 20:41 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-03 20:41 - INFO - 	 Train Loss: 0.057
2024-11-03 20:41 - INFO - 	 Val. Loss: 0.064
2024-11-03 20:41 - INFO - 	 ROC-AUC: 0.986
2024-11-03 20:41 - INFO - 	 PR-AUC: 0.880
2024-11-03 20:41 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 20:41 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 20:41 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-03 20:41 - INFO - ---------------------------------------------
2024-11-03 20:43 - INFO - Fit the preprocessing pipeline
2024-11-03 20:43 - INFO - Training using device: cuda
2024-11-03 20:43 - INFO - Creating generators
2024-11-03 20:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 20:43 - INFO - * Model:
2024-11-03 20:43 - INFO - * -----------
2024-11-03 20:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 20:43 - INFO - * -----------
2024-11-03 20:51 - INFO - ---------------------------------------------
2024-11-03 20:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 20:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40771
2024-11-03 20:51 - INFO - 	 Train Loss: 0.209
2024-11-03 20:51 - INFO - 	 Val. Loss: 0.366
2024-11-03 20:51 - INFO - 	 ROC-AUC: 0.913
2024-11-03 20:51 - INFO - 	 PR-AUC: 0.408
2024-11-03 20:51 - INFO - 	 Best Val. Loss: 0.366
2024-11-03 20:51 - INFO - 	 Best ROC-AUC: 0.913
2024-11-03 20:51 - INFO - 	 Best PR-AUC: 0.408
2024-11-03 20:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-03 20:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.452
2024-11-03 20:51 - INFO - ---------------------------------------------
2024-11-03 20:59 - INFO - ---------------------------------------------
2024-11-03 20:59 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-03 20:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77306
2024-11-03 20:59 - INFO - 	 Train Loss: 0.111
2024-11-03 20:59 - INFO - 	 Val. Loss: 0.142
2024-11-03 20:59 - INFO - 	 ROC-AUC: 0.973
2024-11-03 20:59 - INFO - 	 PR-AUC: 0.773
2024-11-03 20:59 - INFO - 	 Best Val. Loss: 0.142
2024-11-03 20:59 - INFO - 	 Best ROC-AUC: 0.973
2024-11-03 20:59 - INFO - 	 Best PR-AUC: 0.773
2024-11-03 20:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-03 20:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.731
2024-11-03 20:59 - INFO - ---------------------------------------------
2024-11-03 21:07 - INFO - ---------------------------------------------
2024-11-03 21:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 21:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80841
2024-11-03 21:07 - INFO - 	 Train Loss: 0.091
2024-11-03 21:07 - INFO - 	 Val. Loss: 0.096
2024-11-03 21:07 - INFO - 	 ROC-AUC: 0.978
2024-11-03 21:07 - INFO - 	 PR-AUC: 0.808
2024-11-03 21:07 - INFO - 	 Best Val. Loss: 0.096
2024-11-03 21:07 - INFO - 	 Best ROC-AUC: 0.978
2024-11-03 21:07 - INFO - 	 Best PR-AUC: 0.808
2024-11-03 21:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-03 21:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-11-03 21:07 - INFO - ---------------------------------------------
2024-11-03 21:15 - INFO - ---------------------------------------------
2024-11-03 21:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 21:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83984
2024-11-03 21:15 - INFO - 	 Train Loss: 0.081
2024-11-03 21:15 - INFO - 	 Val. Loss: 0.081
2024-11-03 21:15 - INFO - 	 ROC-AUC: 0.982
2024-11-03 21:15 - INFO - 	 PR-AUC: 0.840
2024-11-03 21:15 - INFO - 	 Best Val. Loss: 0.081
2024-11-03 21:15 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 21:15 - INFO - 	 Best PR-AUC: 0.840
2024-11-03 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-03 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-11-03 21:15 - INFO - ---------------------------------------------
2024-11-03 21:23 - INFO - ---------------------------------------------
2024-11-03 21:23 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-03 21:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85798
2024-11-03 21:23 - INFO - 	 Train Loss: 0.075
2024-11-03 21:23 - INFO - 	 Val. Loss: 0.079
2024-11-03 21:23 - INFO - 	 ROC-AUC: 0.984
2024-11-03 21:23 - INFO - 	 PR-AUC: 0.858
2024-11-03 21:23 - INFO - 	 Best Val. Loss: 0.079
2024-11-03 21:23 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 21:23 - INFO - 	 Best PR-AUC: 0.858
2024-11-03 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-03 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-03 21:23 - INFO - ---------------------------------------------
2024-11-03 21:31 - INFO - ---------------------------------------------
2024-11-03 21:31 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-03 21:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87725
2024-11-03 21:31 - INFO - 	 Train Loss: 0.071
2024-11-03 21:31 - INFO - 	 Val. Loss: 0.065
2024-11-03 21:31 - INFO - 	 ROC-AUC: 0.986
2024-11-03 21:31 - INFO - 	 PR-AUC: 0.877
2024-11-03 21:31 - INFO - 	 Best Val. Loss: 0.065
2024-11-03 21:31 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 21:31 - INFO - 	 Best PR-AUC: 0.877
2024-11-03 21:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 21:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-03 21:31 - INFO - ---------------------------------------------
2024-11-03 21:39 - INFO - ---------------------------------------------
2024-11-03 21:39 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-03 21:39 - INFO - 	 Train Loss: 0.065
2024-11-03 21:39 - INFO - 	 Val. Loss: 0.065
2024-11-03 21:39 - INFO - 	 ROC-AUC: 0.985
2024-11-03 21:39 - INFO - 	 PR-AUC: 0.866
2024-11-03 21:39 - INFO - 	 Best Val. Loss: 0.065
2024-11-03 21:39 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 21:39 - INFO - 	 Best PR-AUC: 0.877
2024-11-03 21:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 21:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-03 21:39 - INFO - ---------------------------------------------
2024-11-03 21:47 - INFO - ---------------------------------------------
2024-11-03 21:47 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-03 21:47 - INFO - 	 Train Loss: 0.062
2024-11-03 21:47 - INFO - 	 Val. Loss: 0.062
2024-11-03 21:47 - INFO - 	 ROC-AUC: 0.987
2024-11-03 21:47 - INFO - 	 PR-AUC: 0.875
2024-11-03 21:47 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 21:47 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 21:47 - INFO - 	 Best PR-AUC: 0.877
2024-11-03 21:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 21:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-03 21:47 - INFO - ---------------------------------------------
2024-11-03 21:55 - INFO - ---------------------------------------------
2024-11-03 21:55 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-03 21:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88344
2024-11-03 21:55 - INFO - 	 Train Loss: 0.059
2024-11-03 21:55 - INFO - 	 Val. Loss: 0.062
2024-11-03 21:55 - INFO - 	 ROC-AUC: 0.988
2024-11-03 21:55 - INFO - 	 PR-AUC: 0.883
2024-11-03 21:55 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 21:55 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 21:55 - INFO - 	 Best PR-AUC: 0.883
2024-11-03 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-03 21:55 - INFO - ---------------------------------------------
2024-11-03 22:03 - INFO - ---------------------------------------------
2024-11-03 22:03 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-03 22:03 - INFO - 	 Train Loss: 0.058
2024-11-03 22:03 - INFO - 	 Val. Loss: 0.066
2024-11-03 22:03 - INFO - 	 ROC-AUC: 0.987
2024-11-03 22:03 - INFO - 	 PR-AUC: 0.877
2024-11-03 22:03 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 22:03 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 22:03 - INFO - 	 Best PR-AUC: 0.883
2024-11-03 22:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 22:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-03 22:03 - INFO - ---------------------------------------------
2024-11-03 22:06 - INFO - Fit the preprocessing pipeline
2024-11-03 22:06 - INFO - Training using device: cuda
2024-11-03 22:06 - INFO - Creating generators
2024-11-03 22:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 22:06 - INFO - * Model:
2024-11-03 22:06 - INFO - * -----------
2024-11-03 22:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 22:06 - INFO - * -----------
2024-11-03 22:14 - INFO - ---------------------------------------------
2024-11-03 22:14 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 22:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37742
2024-11-03 22:14 - INFO - 	 Train Loss: 0.220
2024-11-03 22:14 - INFO - 	 Val. Loss: 0.339
2024-11-03 22:14 - INFO - 	 ROC-AUC: 0.894
2024-11-03 22:14 - INFO - 	 PR-AUC: 0.377
2024-11-03 22:14 - INFO - 	 Best Val. Loss: 0.339
2024-11-03 22:14 - INFO - 	 Best ROC-AUC: 0.894
2024-11-03 22:14 - INFO - 	 Best PR-AUC: 0.377
2024-11-03 22:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-03 22:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-11-03 22:14 - INFO - ---------------------------------------------
2024-11-03 22:22 - INFO - ---------------------------------------------
2024-11-03 22:22 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-03 22:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79759
2024-11-03 22:22 - INFO - 	 Train Loss: 0.111
2024-11-03 22:22 - INFO - 	 Val. Loss: 0.095
2024-11-03 22:22 - INFO - 	 ROC-AUC: 0.977
2024-11-03 22:22 - INFO - 	 PR-AUC: 0.798
2024-11-03 22:22 - INFO - 	 Best Val. Loss: 0.095
2024-11-03 22:22 - INFO - 	 Best ROC-AUC: 0.977
2024-11-03 22:22 - INFO - 	 Best PR-AUC: 0.798
2024-11-03 22:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-03 22:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-11-03 22:22 - INFO - ---------------------------------------------
2024-11-03 22:30 - INFO - ---------------------------------------------
2024-11-03 22:30 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-03 22:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82683
2024-11-03 22:30 - INFO - 	 Train Loss: 0.085
2024-11-03 22:30 - INFO - 	 Val. Loss: 0.081
2024-11-03 22:30 - INFO - 	 ROC-AUC: 0.982
2024-11-03 22:30 - INFO - 	 PR-AUC: 0.827
2024-11-03 22:30 - INFO - 	 Best Val. Loss: 0.081
2024-11-03 22:30 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 22:30 - INFO - 	 Best PR-AUC: 0.827
2024-11-03 22:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 22:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-11-03 22:30 - INFO - ---------------------------------------------
2024-11-03 22:38 - INFO - ---------------------------------------------
2024-11-03 22:38 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-03 22:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84153
2024-11-03 22:38 - INFO - 	 Train Loss: 0.078
2024-11-03 22:38 - INFO - 	 Val. Loss: 0.072
2024-11-03 22:38 - INFO - 	 ROC-AUC: 0.983
2024-11-03 22:38 - INFO - 	 PR-AUC: 0.842
2024-11-03 22:38 - INFO - 	 Best Val. Loss: 0.072
2024-11-03 22:38 - INFO - 	 Best ROC-AUC: 0.983
2024-11-03 22:38 - INFO - 	 Best PR-AUC: 0.842
2024-11-03 22:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 22:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-03 22:38 - INFO - ---------------------------------------------
2024-11-03 22:46 - INFO - ---------------------------------------------
2024-11-03 22:46 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-03 22:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85726
2024-11-03 22:46 - INFO - 	 Train Loss: 0.073
2024-11-03 22:46 - INFO - 	 Val. Loss: 0.067
2024-11-03 22:46 - INFO - 	 ROC-AUC: 0.985
2024-11-03 22:46 - INFO - 	 PR-AUC: 0.857
2024-11-03 22:46 - INFO - 	 Best Val. Loss: 0.067
2024-11-03 22:46 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 22:46 - INFO - 	 Best PR-AUC: 0.857
2024-11-03 22:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 22:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-03 22:46 - INFO - ---------------------------------------------
2024-11-03 22:54 - INFO - ---------------------------------------------
2024-11-03 22:54 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 22:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87436
2024-11-03 22:54 - INFO - 	 Train Loss: 0.069
2024-11-03 22:54 - INFO - 	 Val. Loss: 0.064
2024-11-03 22:54 - INFO - 	 ROC-AUC: 0.985
2024-11-03 22:54 - INFO - 	 PR-AUC: 0.874
2024-11-03 22:54 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 22:54 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 22:54 - INFO - 	 Best PR-AUC: 0.874
2024-11-03 22:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 22:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-03 22:54 - INFO - ---------------------------------------------
2024-11-03 23:02 - INFO - ---------------------------------------------
2024-11-03 23:02 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-03 23:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87605
2024-11-03 23:02 - INFO - 	 Train Loss: 0.067
2024-11-03 23:02 - INFO - 	 Val. Loss: 0.064
2024-11-03 23:02 - INFO - 	 ROC-AUC: 0.986
2024-11-03 23:02 - INFO - 	 PR-AUC: 0.876
2024-11-03 23:02 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 23:02 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 23:02 - INFO - 	 Best PR-AUC: 0.876
2024-11-03 23:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 23:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-03 23:02 - INFO - ---------------------------------------------
2024-11-03 23:10 - INFO - ---------------------------------------------
2024-11-03 23:10 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 23:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87978
2024-11-03 23:10 - INFO - 	 Train Loss: 0.064
2024-11-03 23:10 - INFO - 	 Val. Loss: 0.063
2024-11-03 23:10 - INFO - 	 ROC-AUC: 0.987
2024-11-03 23:10 - INFO - 	 PR-AUC: 0.880
2024-11-03 23:10 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 23:10 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 23:10 - INFO - 	 Best PR-AUC: 0.880
2024-11-03 23:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 23:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-03 23:10 - INFO - ---------------------------------------------
2024-11-03 23:18 - INFO - ---------------------------------------------
2024-11-03 23:18 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 23:18 - INFO - 	 Train Loss: 0.061
2024-11-03 23:18 - INFO - 	 Val. Loss: 0.064
2024-11-03 23:18 - INFO - 	 ROC-AUC: 0.985
2024-11-03 23:18 - INFO - 	 PR-AUC: 0.874
2024-11-03 23:18 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 23:18 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 23:18 - INFO - 	 Best PR-AUC: 0.880
2024-11-03 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-03 23:18 - INFO - ---------------------------------------------
2024-11-03 23:26 - INFO - ---------------------------------------------
2024-11-03 23:26 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-03 23:26 - INFO - 	 Train Loss: 0.058
2024-11-03 23:26 - INFO - 	 Val. Loss: 0.064
2024-11-03 23:26 - INFO - 	 ROC-AUC: 0.986
2024-11-03 23:26 - INFO - 	 PR-AUC: 0.880
2024-11-03 23:26 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 23:26 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 23:26 - INFO - 	 Best PR-AUC: 0.880
2024-11-03 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-03 23:26 - INFO - ---------------------------------------------
