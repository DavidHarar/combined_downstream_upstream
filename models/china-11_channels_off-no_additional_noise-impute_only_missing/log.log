2024-11-17 10:03 - INFO - Fit the preprocessing pipeline
2024-11-17 10:03 - INFO - Training using device: cuda
2024-11-17 10:03 - INFO - Creating generators
2024-11-17 10:03 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 10:03 - INFO - * Model:
2024-11-17 10:03 - INFO - * -----------
2024-11-17 10:03 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 10:03 - INFO - * -----------
2024-11-17 10:11 - INFO - ---------------------------------------------
2024-11-17 10:11 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-17 10:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10154
2024-11-17 10:11 - INFO - 	 Train Loss: 0.180
2024-11-17 10:11 - INFO - 	 Val. Loss: 0.201
2024-11-17 10:11 - INFO - 	 ROC-AUC: 0.669
2024-11-17 10:11 - INFO - 	 PR-AUC: 0.102
2024-11-17 10:11 - INFO - 	 Best Val. Loss: 0.201
2024-11-17 10:11 - INFO - 	 Best ROC-AUC: 0.669
2024-11-17 10:11 - INFO - 	 Best PR-AUC: 0.102
2024-11-17 10:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.624
2024-11-17 10:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.076
2024-11-17 10:11 - INFO - ---------------------------------------------
2024-11-17 10:18 - INFO - ---------------------------------------------
2024-11-17 10:18 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-17 10:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17592
2024-11-17 10:18 - INFO - 	 Train Loss: 0.174
2024-11-17 10:18 - INFO - 	 Val. Loss: 0.208
2024-11-17 10:18 - INFO - 	 ROC-AUC: 0.666
2024-11-17 10:18 - INFO - 	 PR-AUC: 0.176
2024-11-17 10:18 - INFO - 	 Best Val. Loss: 0.201
2024-11-17 10:18 - INFO - 	 Best ROC-AUC: 0.669
2024-11-17 10:18 - INFO - 	 Best PR-AUC: 0.176
2024-11-17 10:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.624
2024-11-17 10:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-17 10:18 - INFO - ---------------------------------------------
2024-11-17 10:25 - INFO - ---------------------------------------------
2024-11-17 10:25 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18107
2024-11-17 10:25 - INFO - 	 Train Loss: 0.174
2024-11-17 10:25 - INFO - 	 Val. Loss: 0.202
2024-11-17 10:25 - INFO - 	 ROC-AUC: 0.684
2024-11-17 10:25 - INFO - 	 PR-AUC: 0.181
2024-11-17 10:25 - INFO - 	 Best Val. Loss: 0.201
2024-11-17 10:25 - INFO - 	 Best ROC-AUC: 0.684
2024-11-17 10:25 - INFO - 	 Best PR-AUC: 0.181
2024-11-17 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-17 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.089
2024-11-17 10:25 - INFO - ---------------------------------------------
2024-11-17 10:32 - INFO - ---------------------------------------------
2024-11-17 10:32 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 10:32 - INFO - 	 Train Loss: 0.173
2024-11-17 10:32 - INFO - 	 Val. Loss: 0.202
2024-11-17 10:32 - INFO - 	 ROC-AUC: 0.675
2024-11-17 10:32 - INFO - 	 PR-AUC: 0.167
2024-11-17 10:32 - INFO - 	 Best Val. Loss: 0.201
2024-11-17 10:32 - INFO - 	 Best ROC-AUC: 0.684
2024-11-17 10:32 - INFO - 	 Best PR-AUC: 0.181
2024-11-17 10:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-17 10:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.089
2024-11-17 10:32 - INFO - ---------------------------------------------
2024-11-17 10:39 - INFO - ---------------------------------------------
2024-11-17 10:39 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-17 10:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18724
2024-11-17 10:39 - INFO - 	 Train Loss: 0.172
2024-11-17 10:39 - INFO - 	 Val. Loss: 0.197
2024-11-17 10:39 - INFO - 	 ROC-AUC: 0.752
2024-11-17 10:39 - INFO - 	 PR-AUC: 0.187
2024-11-17 10:39 - INFO - 	 Best Val. Loss: 0.197
2024-11-17 10:39 - INFO - 	 Best ROC-AUC: 0.752
2024-11-17 10:39 - INFO - 	 Best PR-AUC: 0.187
2024-11-17 10:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.668
2024-11-17 10:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-17 10:39 - INFO - ---------------------------------------------
2024-11-17 10:46 - INFO - ---------------------------------------------
2024-11-17 10:46 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-17 10:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2035
2024-11-17 10:46 - INFO - 	 Train Loss: 0.169
2024-11-17 10:46 - INFO - 	 Val. Loss: 0.186
2024-11-17 10:46 - INFO - 	 ROC-AUC: 0.743
2024-11-17 10:46 - INFO - 	 PR-AUC: 0.203
2024-11-17 10:46 - INFO - 	 Best Val. Loss: 0.186
2024-11-17 10:46 - INFO - 	 Best ROC-AUC: 0.752
2024-11-17 10:46 - INFO - 	 Best PR-AUC: 0.203
2024-11-17 10:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.668
2024-11-17 10:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-17 10:46 - INFO - ---------------------------------------------
2024-11-17 10:53 - INFO - ---------------------------------------------
2024-11-17 10:53 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-17 10:53 - INFO - 	 Train Loss: 0.167
2024-11-17 10:53 - INFO - 	 Val. Loss: 0.185
2024-11-17 10:53 - INFO - 	 ROC-AUC: 0.740
2024-11-17 10:53 - INFO - 	 PR-AUC: 0.202
2024-11-17 10:53 - INFO - 	 Best Val. Loss: 0.185
2024-11-17 10:53 - INFO - 	 Best ROC-AUC: 0.752
2024-11-17 10:53 - INFO - 	 Best PR-AUC: 0.203
2024-11-17 10:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.668
2024-11-17 10:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-17 10:53 - INFO - ---------------------------------------------
2024-11-17 11:01 - INFO - ---------------------------------------------
2024-11-17 11:01 - INFO - Epoch: 08 | Time: 7m 10s
2024-11-17 11:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21413
2024-11-17 11:01 - INFO - 	 Train Loss: 0.165
2024-11-17 11:01 - INFO - 	 Val. Loss: 0.178
2024-11-17 11:01 - INFO - 	 ROC-AUC: 0.756
2024-11-17 11:01 - INFO - 	 PR-AUC: 0.214
2024-11-17 11:01 - INFO - 	 Best Val. Loss: 0.178
2024-11-17 11:01 - INFO - 	 Best ROC-AUC: 0.756
2024-11-17 11:01 - INFO - 	 Best PR-AUC: 0.214
2024-11-17 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.674
2024-11-17 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.107
2024-11-17 11:01 - INFO - ---------------------------------------------
2024-11-17 11:08 - INFO - ---------------------------------------------
2024-11-17 11:08 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-17 11:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22493
2024-11-17 11:08 - INFO - 	 Train Loss: 0.165
2024-11-17 11:08 - INFO - 	 Val. Loss: 0.176
2024-11-17 11:08 - INFO - 	 ROC-AUC: 0.776
2024-11-17 11:08 - INFO - 	 PR-AUC: 0.225
2024-11-17 11:08 - INFO - 	 Best Val. Loss: 0.176
2024-11-17 11:08 - INFO - 	 Best ROC-AUC: 0.776
2024-11-17 11:08 - INFO - 	 Best PR-AUC: 0.225
2024-11-17 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-11-17 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.121
2024-11-17 11:08 - INFO - ---------------------------------------------
2024-11-17 11:15 - INFO - ---------------------------------------------
2024-11-17 11:15 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-17 11:15 - INFO - 	 Train Loss: 0.164
2024-11-17 11:15 - INFO - 	 Val. Loss: 0.185
2024-11-17 11:15 - INFO - 	 ROC-AUC: 0.768
2024-11-17 11:15 - INFO - 	 PR-AUC: 0.215
2024-11-17 11:15 - INFO - 	 Best Val. Loss: 0.176
2024-11-17 11:15 - INFO - 	 Best ROC-AUC: 0.776
2024-11-17 11:15 - INFO - 	 Best PR-AUC: 0.225
2024-11-17 11:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.693
2024-11-17 11:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.121
2024-11-17 11:15 - INFO - ---------------------------------------------
2024-11-17 11:17 - INFO - Fit the preprocessing pipeline
2024-11-17 11:17 - INFO - Training using device: cuda
2024-11-17 11:17 - INFO - Creating generators
2024-11-17 11:17 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 11:17 - INFO - * Model:
2024-11-17 11:17 - INFO - * -----------
2024-11-17 11:17 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 11:17 - INFO - * -----------
2024-11-17 11:24 - INFO - ---------------------------------------------
2024-11-17 11:24 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-17 11:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11924
2024-11-17 11:24 - INFO - 	 Train Loss: 0.180
2024-11-17 11:24 - INFO - 	 Val. Loss: 0.204
2024-11-17 11:24 - INFO - 	 ROC-AUC: 0.660
2024-11-17 11:24 - INFO - 	 PR-AUC: 0.119
2024-11-17 11:24 - INFO - 	 Best Val. Loss: 0.204
2024-11-17 11:24 - INFO - 	 Best ROC-AUC: 0.660
2024-11-17 11:24 - INFO - 	 Best PR-AUC: 0.119
2024-11-17 11:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.611
2024-11-17 11:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.079
2024-11-17 11:24 - INFO - ---------------------------------------------
2024-11-17 11:31 - INFO - ---------------------------------------------
2024-11-17 11:31 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-17 11:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14235
2024-11-17 11:31 - INFO - 	 Train Loss: 0.175
2024-11-17 11:31 - INFO - 	 Val. Loss: 0.203
2024-11-17 11:31 - INFO - 	 ROC-AUC: 0.682
2024-11-17 11:31 - INFO - 	 PR-AUC: 0.142
2024-11-17 11:31 - INFO - 	 Best Val. Loss: 0.203
2024-11-17 11:31 - INFO - 	 Best ROC-AUC: 0.682
2024-11-17 11:31 - INFO - 	 Best PR-AUC: 0.142
2024-11-17 11:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-17 11:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.091
2024-11-17 11:31 - INFO - ---------------------------------------------
2024-11-17 11:38 - INFO - ---------------------------------------------
2024-11-17 11:38 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 11:38 - INFO - 	 Train Loss: 0.171
2024-11-17 11:38 - INFO - 	 Val. Loss: 0.196
2024-11-17 11:38 - INFO - 	 ROC-AUC: 0.665
2024-11-17 11:38 - INFO - 	 PR-AUC: 0.115
2024-11-17 11:38 - INFO - 	 Best Val. Loss: 0.196
2024-11-17 11:38 - INFO - 	 Best ROC-AUC: 0.682
2024-11-17 11:38 - INFO - 	 Best PR-AUC: 0.142
2024-11-17 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-17 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.091
2024-11-17 11:38 - INFO - ---------------------------------------------
2024-11-17 11:45 - INFO - ---------------------------------------------
2024-11-17 11:45 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 11:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1598
2024-11-17 11:45 - INFO - 	 Train Loss: 0.167
2024-11-17 11:45 - INFO - 	 Val. Loss: 0.191
2024-11-17 11:45 - INFO - 	 ROC-AUC: 0.713
2024-11-17 11:45 - INFO - 	 PR-AUC: 0.160
2024-11-17 11:45 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 11:45 - INFO - 	 Best ROC-AUC: 0.713
2024-11-17 11:45 - INFO - 	 Best PR-AUC: 0.160
2024-11-17 11:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.649
2024-11-17 11:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-17 11:45 - INFO - ---------------------------------------------
2024-11-17 11:52 - INFO - ---------------------------------------------
2024-11-17 11:52 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-17 11:52 - INFO - 	 Train Loss: 0.166
2024-11-17 11:52 - INFO - 	 Val. Loss: 0.193
2024-11-17 11:52 - INFO - 	 ROC-AUC: 0.687
2024-11-17 11:52 - INFO - 	 PR-AUC: 0.142
2024-11-17 11:52 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 11:52 - INFO - 	 Best ROC-AUC: 0.713
2024-11-17 11:52 - INFO - 	 Best PR-AUC: 0.160
2024-11-17 11:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.649
2024-11-17 11:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-17 11:52 - INFO - ---------------------------------------------
2024-11-17 11:59 - INFO - ---------------------------------------------
2024-11-17 11:59 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-17 11:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1895
2024-11-17 11:59 - INFO - 	 Train Loss: 0.165
2024-11-17 11:59 - INFO - 	 Val. Loss: 0.188
2024-11-17 11:59 - INFO - 	 ROC-AUC: 0.727
2024-11-17 11:59 - INFO - 	 PR-AUC: 0.190
2024-11-17 11:59 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 11:59 - INFO - 	 Best ROC-AUC: 0.727
2024-11-17 11:59 - INFO - 	 Best PR-AUC: 0.190
2024-11-17 11:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.654
2024-11-17 11:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.094
2024-11-17 11:59 - INFO - ---------------------------------------------
2024-11-17 12:07 - INFO - ---------------------------------------------
2024-11-17 12:07 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-17 12:07 - INFO - 	 Train Loss: 0.167
2024-11-17 12:07 - INFO - 	 Val. Loss: 0.187
2024-11-17 12:07 - INFO - 	 ROC-AUC: 0.711
2024-11-17 12:07 - INFO - 	 PR-AUC: 0.159
2024-11-17 12:07 - INFO - 	 Best Val. Loss: 0.187
2024-11-17 12:07 - INFO - 	 Best ROC-AUC: 0.727
2024-11-17 12:07 - INFO - 	 Best PR-AUC: 0.190
2024-11-17 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.654
2024-11-17 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.094
2024-11-17 12:07 - INFO - ---------------------------------------------
2024-11-17 12:14 - INFO - ---------------------------------------------
2024-11-17 12:14 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-17 12:14 - INFO - 	 Train Loss: 0.165
2024-11-17 12:14 - INFO - 	 Val. Loss: 0.187
2024-11-17 12:14 - INFO - 	 ROC-AUC: 0.719
2024-11-17 12:14 - INFO - 	 PR-AUC: 0.160
2024-11-17 12:14 - INFO - 	 Best Val. Loss: 0.187
2024-11-17 12:14 - INFO - 	 Best ROC-AUC: 0.727
2024-11-17 12:14 - INFO - 	 Best PR-AUC: 0.190
2024-11-17 12:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.654
2024-11-17 12:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.094
2024-11-17 12:14 - INFO - ---------------------------------------------
2024-11-17 12:21 - INFO - ---------------------------------------------
2024-11-17 12:21 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-17 12:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19209
2024-11-17 12:21 - INFO - 	 Train Loss: 0.164
2024-11-17 12:21 - INFO - 	 Val. Loss: 0.183
2024-11-17 12:21 - INFO - 	 ROC-AUC: 0.749
2024-11-17 12:21 - INFO - 	 PR-AUC: 0.192
2024-11-17 12:21 - INFO - 	 Best Val. Loss: 0.183
2024-11-17 12:21 - INFO - 	 Best ROC-AUC: 0.749
2024-11-17 12:21 - INFO - 	 Best PR-AUC: 0.192
2024-11-17 12:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.675
2024-11-17 12:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-17 12:21 - INFO - ---------------------------------------------
2024-11-17 12:28 - INFO - ---------------------------------------------
2024-11-17 12:28 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-17 12:28 - INFO - 	 Train Loss: 0.162
2024-11-17 12:28 - INFO - 	 Val. Loss: 0.189
2024-11-17 12:28 - INFO - 	 ROC-AUC: 0.743
2024-11-17 12:28 - INFO - 	 PR-AUC: 0.167
2024-11-17 12:28 - INFO - 	 Best Val. Loss: 0.183
2024-11-17 12:28 - INFO - 	 Best ROC-AUC: 0.749
2024-11-17 12:28 - INFO - 	 Best PR-AUC: 0.192
2024-11-17 12:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.675
2024-11-17 12:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-17 12:28 - INFO - ---------------------------------------------
2024-11-17 12:30 - INFO - Fit the preprocessing pipeline
2024-11-17 12:30 - INFO - Training using device: cuda
2024-11-17 12:30 - INFO - Creating generators
2024-11-17 12:30 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 12:30 - INFO - * Model:
2024-11-17 12:30 - INFO - * -----------
2024-11-17 12:30 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 12:30 - INFO - * -----------
2024-11-17 12:37 - INFO - ---------------------------------------------
2024-11-17 12:37 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-17 12:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12583
2024-11-17 12:37 - INFO - 	 Train Loss: 0.181
2024-11-17 12:37 - INFO - 	 Val. Loss: 0.207
2024-11-17 12:37 - INFO - 	 ROC-AUC: 0.647
2024-11-17 12:37 - INFO - 	 PR-AUC: 0.126
2024-11-17 12:37 - INFO - 	 Best Val. Loss: 0.207
2024-11-17 12:37 - INFO - 	 Best ROC-AUC: 0.647
2024-11-17 12:37 - INFO - 	 Best PR-AUC: 0.126
2024-11-17 12:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.609
2024-11-17 12:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-17 12:37 - INFO - ---------------------------------------------
2024-11-17 12:44 - INFO - ---------------------------------------------
2024-11-17 12:44 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-17 12:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14528
2024-11-17 12:44 - INFO - 	 Train Loss: 0.176
2024-11-17 12:44 - INFO - 	 Val. Loss: 0.209
2024-11-17 12:44 - INFO - 	 ROC-AUC: 0.641
2024-11-17 12:44 - INFO - 	 PR-AUC: 0.145
2024-11-17 12:44 - INFO - 	 Best Val. Loss: 0.207
2024-11-17 12:44 - INFO - 	 Best ROC-AUC: 0.647
2024-11-17 12:44 - INFO - 	 Best PR-AUC: 0.145
2024-11-17 12:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.609
2024-11-17 12:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.079
2024-11-17 12:44 - INFO - ---------------------------------------------
2024-11-17 12:51 - INFO - ---------------------------------------------
2024-11-17 12:51 - INFO - Epoch: 03 | Time: 7m 9s
2024-11-17 12:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15568
2024-11-17 12:51 - INFO - 	 Train Loss: 0.172
2024-11-17 12:51 - INFO - 	 Val. Loss: 0.194
2024-11-17 12:51 - INFO - 	 ROC-AUC: 0.702
2024-11-17 12:51 - INFO - 	 PR-AUC: 0.156
2024-11-17 12:51 - INFO - 	 Best Val. Loss: 0.194
2024-11-17 12:51 - INFO - 	 Best ROC-AUC: 0.702
2024-11-17 12:51 - INFO - 	 Best PR-AUC: 0.156
2024-11-17 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.624
2024-11-17 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.080
2024-11-17 12:51 - INFO - ---------------------------------------------
2024-11-17 12:58 - INFO - ---------------------------------------------
2024-11-17 12:58 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 12:58 - INFO - 	 Train Loss: 0.170
2024-11-17 12:58 - INFO - 	 Val. Loss: 0.199
2024-11-17 12:58 - INFO - 	 ROC-AUC: 0.683
2024-11-17 12:58 - INFO - 	 PR-AUC: 0.144
2024-11-17 12:58 - INFO - 	 Best Val. Loss: 0.194
2024-11-17 12:58 - INFO - 	 Best ROC-AUC: 0.702
2024-11-17 12:58 - INFO - 	 Best PR-AUC: 0.156
2024-11-17 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.624
2024-11-17 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.080
2024-11-17 12:58 - INFO - ---------------------------------------------
2024-11-17 13:05 - INFO - ---------------------------------------------
2024-11-17 13:05 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-17 13:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17688
2024-11-17 13:05 - INFO - 	 Train Loss: 0.172
2024-11-17 13:05 - INFO - 	 Val. Loss: 0.191
2024-11-17 13:05 - INFO - 	 ROC-AUC: 0.690
2024-11-17 13:05 - INFO - 	 PR-AUC: 0.177
2024-11-17 13:05 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 13:05 - INFO - 	 Best ROC-AUC: 0.702
2024-11-17 13:05 - INFO - 	 Best PR-AUC: 0.177
2024-11-17 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.624
2024-11-17 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-17 13:05 - INFO - ---------------------------------------------
2024-11-17 13:13 - INFO - ---------------------------------------------
2024-11-17 13:13 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-17 13:13 - INFO - 	 Train Loss: 0.168
2024-11-17 13:13 - INFO - 	 Val. Loss: 0.188
2024-11-17 13:13 - INFO - 	 ROC-AUC: 0.723
2024-11-17 13:13 - INFO - 	 PR-AUC: 0.173
2024-11-17 13:13 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 13:13 - INFO - 	 Best ROC-AUC: 0.723
2024-11-17 13:13 - INFO - 	 Best PR-AUC: 0.177
2024-11-17 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.654
2024-11-17 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-17 13:13 - INFO - ---------------------------------------------
2024-11-17 13:20 - INFO - ---------------------------------------------
2024-11-17 13:20 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-17 13:20 - INFO - 	 Train Loss: 0.166
2024-11-17 13:20 - INFO - 	 Val. Loss: 0.191
2024-11-17 13:20 - INFO - 	 ROC-AUC: 0.720
2024-11-17 13:20 - INFO - 	 PR-AUC: 0.169
2024-11-17 13:20 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 13:20 - INFO - 	 Best ROC-AUC: 0.723
2024-11-17 13:20 - INFO - 	 Best PR-AUC: 0.177
2024-11-17 13:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.654
2024-11-17 13:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-17 13:20 - INFO - ---------------------------------------------
2024-11-17 13:27 - INFO - ---------------------------------------------
2024-11-17 13:27 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 13:27 - INFO - 	 Train Loss: 0.167
2024-11-17 13:27 - INFO - 	 Val. Loss: 0.186
2024-11-17 13:27 - INFO - 	 ROC-AUC: 0.722
2024-11-17 13:27 - INFO - 	 PR-AUC: 0.170
2024-11-17 13:27 - INFO - 	 Best Val. Loss: 0.186
2024-11-17 13:27 - INFO - 	 Best ROC-AUC: 0.723
2024-11-17 13:27 - INFO - 	 Best PR-AUC: 0.177
2024-11-17 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.654
2024-11-17 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-17 13:27 - INFO - ---------------------------------------------
2024-11-17 13:36 - INFO - Fit the preprocessing pipeline
2024-11-17 13:36 - INFO - Training using device: cuda
2024-11-17 13:36 - INFO - Creating generators
2024-11-17 13:36 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 13:36 - INFO - * Model:
2024-11-17 13:36 - INFO - * -----------
2024-11-17 13:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 13:36 - INFO - * -----------
2024-11-17 13:43 - INFO - ---------------------------------------------
2024-11-17 13:43 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-17 13:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.05999
2024-11-17 13:43 - INFO - 	 Train Loss: 0.180
2024-11-17 13:43 - INFO - 	 Val. Loss: 0.263
2024-11-17 13:43 - INFO - 	 ROC-AUC: 0.497
2024-11-17 13:43 - INFO - 	 PR-AUC: 0.060
2024-11-17 13:43 - INFO - 	 Best Val. Loss: 0.263
2024-11-17 13:43 - INFO - 	 Best ROC-AUC: 0.497
2024-11-17 13:43 - INFO - 	 Best PR-AUC: 0.060
2024-11-17 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.488
2024-11-17 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.055
2024-11-17 13:43 - INFO - ---------------------------------------------
2024-11-17 13:50 - INFO - ---------------------------------------------
2024-11-17 13:50 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-17 13:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1201
2024-11-17 13:50 - INFO - 	 Train Loss: 0.176
2024-11-17 13:50 - INFO - 	 Val. Loss: 0.205
2024-11-17 13:50 - INFO - 	 ROC-AUC: 0.646
2024-11-17 13:50 - INFO - 	 PR-AUC: 0.120
2024-11-17 13:50 - INFO - 	 Best Val. Loss: 0.205
2024-11-17 13:50 - INFO - 	 Best ROC-AUC: 0.646
2024-11-17 13:50 - INFO - 	 Best PR-AUC: 0.120
2024-11-17 13:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-17 13:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.073
2024-11-17 13:50 - INFO - ---------------------------------------------
2024-11-17 13:57 - INFO - ---------------------------------------------
2024-11-17 13:57 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 13:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17427
2024-11-17 13:57 - INFO - 	 Train Loss: 0.171
2024-11-17 13:57 - INFO - 	 Val. Loss: 0.196
2024-11-17 13:57 - INFO - 	 ROC-AUC: 0.700
2024-11-17 13:57 - INFO - 	 PR-AUC: 0.174
2024-11-17 13:57 - INFO - 	 Best Val. Loss: 0.196
2024-11-17 13:57 - INFO - 	 Best ROC-AUC: 0.700
2024-11-17 13:57 - INFO - 	 Best PR-AUC: 0.174
2024-11-17 13:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.595
2024-11-17 13:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.081
2024-11-17 13:57 - INFO - ---------------------------------------------
2024-11-17 14:04 - INFO - ---------------------------------------------
2024-11-17 14:04 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 14:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19709
2024-11-17 14:04 - INFO - 	 Train Loss: 0.171
2024-11-17 14:04 - INFO - 	 Val. Loss: 0.193
2024-11-17 14:04 - INFO - 	 ROC-AUC: 0.741
2024-11-17 14:04 - INFO - 	 PR-AUC: 0.197
2024-11-17 14:04 - INFO - 	 Best Val. Loss: 0.193
2024-11-17 14:04 - INFO - 	 Best ROC-AUC: 0.741
2024-11-17 14:04 - INFO - 	 Best PR-AUC: 0.197
2024-11-17 14:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.673
2024-11-17 14:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-17 14:04 - INFO - ---------------------------------------------
2024-11-17 14:11 - INFO - ---------------------------------------------
2024-11-17 14:11 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-17 14:11 - INFO - 	 Train Loss: 0.168
2024-11-17 14:11 - INFO - 	 Val. Loss: 0.191
2024-11-17 14:11 - INFO - 	 ROC-AUC: 0.729
2024-11-17 14:11 - INFO - 	 PR-AUC: 0.187
2024-11-17 14:11 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 14:11 - INFO - 	 Best ROC-AUC: 0.741
2024-11-17 14:11 - INFO - 	 Best PR-AUC: 0.197
2024-11-17 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.673
2024-11-17 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-17 14:11 - INFO - ---------------------------------------------
2024-11-17 14:19 - INFO - ---------------------------------------------
2024-11-17 14:19 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-17 14:19 - INFO - 	 Train Loss: 0.167
2024-11-17 14:19 - INFO - 	 Val. Loss: 0.187
2024-11-17 14:19 - INFO - 	 ROC-AUC: 0.718
2024-11-17 14:19 - INFO - 	 PR-AUC: 0.180
2024-11-17 14:19 - INFO - 	 Best Val. Loss: 0.187
2024-11-17 14:19 - INFO - 	 Best ROC-AUC: 0.741
2024-11-17 14:19 - INFO - 	 Best PR-AUC: 0.197
2024-11-17 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.673
2024-11-17 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-17 14:19 - INFO - ---------------------------------------------
2024-11-17 14:26 - INFO - ---------------------------------------------
2024-11-17 14:26 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-17 14:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19843
2024-11-17 14:26 - INFO - 	 Train Loss: 0.166
2024-11-17 14:26 - INFO - 	 Val. Loss: 0.185
2024-11-17 14:26 - INFO - 	 ROC-AUC: 0.755
2024-11-17 14:26 - INFO - 	 PR-AUC: 0.198
2024-11-17 14:26 - INFO - 	 Best Val. Loss: 0.185
2024-11-17 14:26 - INFO - 	 Best ROC-AUC: 0.755
2024-11-17 14:26 - INFO - 	 Best PR-AUC: 0.198
2024-11-17 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-11-17 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-17 14:26 - INFO - ---------------------------------------------
2024-11-17 14:33 - INFO - ---------------------------------------------
2024-11-17 14:33 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 14:33 - INFO - 	 Train Loss: 0.166
2024-11-17 14:33 - INFO - 	 Val. Loss: 0.187
2024-11-17 14:33 - INFO - 	 ROC-AUC: 0.749
2024-11-17 14:33 - INFO - 	 PR-AUC: 0.184
2024-11-17 14:33 - INFO - 	 Best Val. Loss: 0.185
2024-11-17 14:33 - INFO - 	 Best ROC-AUC: 0.755
2024-11-17 14:33 - INFO - 	 Best PR-AUC: 0.198
2024-11-17 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-11-17 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-17 14:33 - INFO - ---------------------------------------------
2024-11-17 14:40 - INFO - ---------------------------------------------
2024-11-17 14:40 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-17 14:40 - INFO - 	 Train Loss: 0.166
2024-11-17 14:40 - INFO - 	 Val. Loss: 0.200
2024-11-17 14:40 - INFO - 	 ROC-AUC: 0.742
2024-11-17 14:40 - INFO - 	 PR-AUC: 0.173
2024-11-17 14:40 - INFO - 	 Best Val. Loss: 0.185
2024-11-17 14:40 - INFO - 	 Best ROC-AUC: 0.755
2024-11-17 14:40 - INFO - 	 Best PR-AUC: 0.198
2024-11-17 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.679
2024-11-17 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-17 14:40 - INFO - ---------------------------------------------
2024-11-17 14:47 - INFO - ---------------------------------------------
2024-11-17 14:47 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-17 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23114
2024-11-17 14:47 - INFO - 	 Train Loss: 0.167
2024-11-17 14:47 - INFO - 	 Val. Loss: 0.183
2024-11-17 14:47 - INFO - 	 ROC-AUC: 0.772
2024-11-17 14:47 - INFO - 	 PR-AUC: 0.231
2024-11-17 14:47 - INFO - 	 Best Val. Loss: 0.183
2024-11-17 14:47 - INFO - 	 Best ROC-AUC: 0.772
2024-11-17 14:47 - INFO - 	 Best PR-AUC: 0.231
2024-11-17 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.696
2024-11-17 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.112
2024-11-17 14:47 - INFO - ---------------------------------------------
2024-11-17 14:49 - INFO - Fit the preprocessing pipeline
2024-11-17 14:49 - INFO - Training using device: cuda
2024-11-17 14:49 - INFO - Creating generators
2024-11-17 14:49 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 14:49 - INFO - * Model:
2024-11-17 14:49 - INFO - * -----------
2024-11-17 14:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 14:49 - INFO - * -----------
2024-11-17 14:56 - INFO - ---------------------------------------------
2024-11-17 14:56 - INFO - Epoch: 01 | Time: 7m 11s
2024-11-17 14:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10402
2024-11-17 14:56 - INFO - 	 Train Loss: 0.181
2024-11-17 14:56 - INFO - 	 Val. Loss: 0.228
2024-11-17 14:56 - INFO - 	 ROC-AUC: 0.633
2024-11-17 14:56 - INFO - 	 PR-AUC: 0.104
2024-11-17 14:56 - INFO - 	 Best Val. Loss: 0.228
2024-11-17 14:56 - INFO - 	 Best ROC-AUC: 0.633
2024-11-17 14:56 - INFO - 	 Best PR-AUC: 0.104
2024-11-17 14:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.587
2024-11-17 14:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.074
2024-11-17 14:56 - INFO - ---------------------------------------------
2024-11-17 15:03 - INFO - ---------------------------------------------
2024-11-17 15:03 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-17 15:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13595
2024-11-17 15:03 - INFO - 	 Train Loss: 0.174
2024-11-17 15:03 - INFO - 	 Val. Loss: 0.221
2024-11-17 15:03 - INFO - 	 ROC-AUC: 0.639
2024-11-17 15:03 - INFO - 	 PR-AUC: 0.136
2024-11-17 15:03 - INFO - 	 Best Val. Loss: 0.221
2024-11-17 15:03 - INFO - 	 Best ROC-AUC: 0.639
2024-11-17 15:03 - INFO - 	 Best PR-AUC: 0.136
2024-11-17 15:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-17 15:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-17 15:03 - INFO - ---------------------------------------------
2024-11-17 15:10 - INFO - ---------------------------------------------
2024-11-17 15:10 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15389
2024-11-17 15:10 - INFO - 	 Train Loss: 0.172
2024-11-17 15:10 - INFO - 	 Val. Loss: 0.202
2024-11-17 15:10 - INFO - 	 ROC-AUC: 0.650
2024-11-17 15:10 - INFO - 	 PR-AUC: 0.154
2024-11-17 15:10 - INFO - 	 Best Val. Loss: 0.202
2024-11-17 15:10 - INFO - 	 Best ROC-AUC: 0.650
2024-11-17 15:10 - INFO - 	 Best PR-AUC: 0.154
2024-11-17 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.586
2024-11-17 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.076
2024-11-17 15:10 - INFO - ---------------------------------------------
2024-11-17 15:17 - INFO - ---------------------------------------------
2024-11-17 15:17 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 15:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16115
2024-11-17 15:17 - INFO - 	 Train Loss: 0.173
2024-11-17 15:17 - INFO - 	 Val. Loss: 0.219
2024-11-17 15:17 - INFO - 	 ROC-AUC: 0.673
2024-11-17 15:17 - INFO - 	 PR-AUC: 0.161
2024-11-17 15:17 - INFO - 	 Best Val. Loss: 0.202
2024-11-17 15:17 - INFO - 	 Best ROC-AUC: 0.673
2024-11-17 15:17 - INFO - 	 Best PR-AUC: 0.161
2024-11-17 15:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.597
2024-11-17 15:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.101
2024-11-17 15:17 - INFO - ---------------------------------------------
2024-11-17 15:25 - INFO - ---------------------------------------------
2024-11-17 15:25 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-17 15:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18126
2024-11-17 15:25 - INFO - 	 Train Loss: 0.170
2024-11-17 15:25 - INFO - 	 Val. Loss: 0.201
2024-11-17 15:25 - INFO - 	 ROC-AUC: 0.689
2024-11-17 15:25 - INFO - 	 PR-AUC: 0.181
2024-11-17 15:25 - INFO - 	 Best Val. Loss: 0.201
2024-11-17 15:25 - INFO - 	 Best ROC-AUC: 0.689
2024-11-17 15:25 - INFO - 	 Best PR-AUC: 0.181
2024-11-17 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.614
2024-11-17 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-17 15:25 - INFO - ---------------------------------------------
2024-11-17 15:32 - INFO - ---------------------------------------------
2024-11-17 15:32 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-17 15:32 - INFO - 	 Train Loss: 0.169
2024-11-17 15:32 - INFO - 	 Val. Loss: 0.191
2024-11-17 15:32 - INFO - 	 ROC-AUC: 0.729
2024-11-17 15:32 - INFO - 	 PR-AUC: 0.178
2024-11-17 15:32 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 15:32 - INFO - 	 Best ROC-AUC: 0.729
2024-11-17 15:32 - INFO - 	 Best PR-AUC: 0.181
2024-11-17 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.649
2024-11-17 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.087
2024-11-17 15:32 - INFO - ---------------------------------------------
2024-11-17 15:39 - INFO - ---------------------------------------------
2024-11-17 15:39 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-17 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19221
2024-11-17 15:39 - INFO - 	 Train Loss: 0.166
2024-11-17 15:39 - INFO - 	 Val. Loss: 0.192
2024-11-17 15:39 - INFO - 	 ROC-AUC: 0.727
2024-11-17 15:39 - INFO - 	 PR-AUC: 0.192
2024-11-17 15:39 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 15:39 - INFO - 	 Best ROC-AUC: 0.729
2024-11-17 15:39 - INFO - 	 Best PR-AUC: 0.192
2024-11-17 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.649
2024-11-17 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.104
2024-11-17 15:39 - INFO - ---------------------------------------------
2024-11-17 15:46 - INFO - ---------------------------------------------
2024-11-17 15:46 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 15:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20037
2024-11-17 15:46 - INFO - 	 Train Loss: 0.166
2024-11-17 15:46 - INFO - 	 Val. Loss: 0.194
2024-11-17 15:46 - INFO - 	 ROC-AUC: 0.732
2024-11-17 15:46 - INFO - 	 PR-AUC: 0.200
2024-11-17 15:46 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 15:46 - INFO - 	 Best ROC-AUC: 0.732
2024-11-17 15:46 - INFO - 	 Best PR-AUC: 0.200
2024-11-17 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.680
2024-11-17 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.123
2024-11-17 15:46 - INFO - ---------------------------------------------
2024-11-17 15:53 - INFO - ---------------------------------------------
2024-11-17 15:53 - INFO - Epoch: 09 | Time: 7m 9s
2024-11-17 15:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2052
2024-11-17 15:53 - INFO - 	 Train Loss: 0.166
2024-11-17 15:53 - INFO - 	 Val. Loss: 0.192
2024-11-17 15:53 - INFO - 	 ROC-AUC: 0.745
2024-11-17 15:53 - INFO - 	 PR-AUC: 0.205
2024-11-17 15:53 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 15:53 - INFO - 	 Best ROC-AUC: 0.745
2024-11-17 15:53 - INFO - 	 Best PR-AUC: 0.205
2024-11-17 15:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.703
2024-11-17 15:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-17 15:53 - INFO - ---------------------------------------------
2024-11-17 16:00 - INFO - ---------------------------------------------
2024-11-17 16:00 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-17 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21364
2024-11-17 16:00 - INFO - 	 Train Loss: 0.166
2024-11-17 16:00 - INFO - 	 Val. Loss: 0.180
2024-11-17 16:00 - INFO - 	 ROC-AUC: 0.756
2024-11-17 16:00 - INFO - 	 PR-AUC: 0.214
2024-11-17 16:00 - INFO - 	 Best Val. Loss: 0.180
2024-11-17 16:00 - INFO - 	 Best ROC-AUC: 0.756
2024-11-17 16:00 - INFO - 	 Best PR-AUC: 0.214
2024-11-17 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.695
2024-11-17 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.113
2024-11-17 16:00 - INFO - ---------------------------------------------
2024-11-17 16:02 - INFO - Fit the preprocessing pipeline
2024-11-17 16:02 - INFO - Training using device: cuda
2024-11-17 16:02 - INFO - Creating generators
2024-11-17 16:02 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 16:02 - INFO - * Model:
2024-11-17 16:02 - INFO - * -----------
2024-11-17 16:02 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 16:02 - INFO - * -----------
2024-11-17 16:09 - INFO - ---------------------------------------------
2024-11-17 16:09 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-17 16:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13334
2024-11-17 16:09 - INFO - 	 Train Loss: 0.181
2024-11-17 16:09 - INFO - 	 Val. Loss: 0.222
2024-11-17 16:09 - INFO - 	 ROC-AUC: 0.690
2024-11-17 16:09 - INFO - 	 PR-AUC: 0.133
2024-11-17 16:09 - INFO - 	 Best Val. Loss: 0.222
2024-11-17 16:09 - INFO - 	 Best ROC-AUC: 0.690
2024-11-17 16:09 - INFO - 	 Best PR-AUC: 0.133
2024-11-17 16:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.607
2024-11-17 16:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.082
2024-11-17 16:09 - INFO - ---------------------------------------------
2024-11-17 16:16 - INFO - ---------------------------------------------
2024-11-17 16:16 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-17 16:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14738
2024-11-17 16:16 - INFO - 	 Train Loss: 0.176
2024-11-17 16:16 - INFO - 	 Val. Loss: 0.202
2024-11-17 16:16 - INFO - 	 ROC-AUC: 0.703
2024-11-17 16:16 - INFO - 	 PR-AUC: 0.147
2024-11-17 16:16 - INFO - 	 Best Val. Loss: 0.202
2024-11-17 16:16 - INFO - 	 Best ROC-AUC: 0.703
2024-11-17 16:16 - INFO - 	 Best PR-AUC: 0.147
2024-11-17 16:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.619
2024-11-17 16:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.085
2024-11-17 16:16 - INFO - ---------------------------------------------
2024-11-17 16:23 - INFO - ---------------------------------------------
2024-11-17 16:23 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 16:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16811
2024-11-17 16:23 - INFO - 	 Train Loss: 0.173
2024-11-17 16:23 - INFO - 	 Val. Loss: 0.204
2024-11-17 16:23 - INFO - 	 ROC-AUC: 0.700
2024-11-17 16:23 - INFO - 	 PR-AUC: 0.168
2024-11-17 16:23 - INFO - 	 Best Val. Loss: 0.202
2024-11-17 16:23 - INFO - 	 Best ROC-AUC: 0.703
2024-11-17 16:23 - INFO - 	 Best PR-AUC: 0.168
2024-11-17 16:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.619
2024-11-17 16:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.097
2024-11-17 16:23 - INFO - ---------------------------------------------
2024-11-17 16:30 - INFO - ---------------------------------------------
2024-11-17 16:30 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 16:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19723
2024-11-17 16:30 - INFO - 	 Train Loss: 0.170
2024-11-17 16:30 - INFO - 	 Val. Loss: 0.186
2024-11-17 16:30 - INFO - 	 ROC-AUC: 0.740
2024-11-17 16:30 - INFO - 	 PR-AUC: 0.197
2024-11-17 16:30 - INFO - 	 Best Val. Loss: 0.186
2024-11-17 16:30 - INFO - 	 Best ROC-AUC: 0.740
2024-11-17 16:30 - INFO - 	 Best PR-AUC: 0.197
2024-11-17 16:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.695
2024-11-17 16:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-17 16:30 - INFO - ---------------------------------------------
2024-11-17 16:38 - INFO - ---------------------------------------------
2024-11-17 16:38 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-17 16:38 - INFO - 	 Train Loss: 0.168
2024-11-17 16:38 - INFO - 	 Val. Loss: 0.186
2024-11-17 16:38 - INFO - 	 ROC-AUC: 0.728
2024-11-17 16:38 - INFO - 	 PR-AUC: 0.177
2024-11-17 16:38 - INFO - 	 Best Val. Loss: 0.186
2024-11-17 16:38 - INFO - 	 Best ROC-AUC: 0.740
2024-11-17 16:38 - INFO - 	 Best PR-AUC: 0.197
2024-11-17 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.695
2024-11-17 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-17 16:38 - INFO - ---------------------------------------------
2024-11-17 16:45 - INFO - ---------------------------------------------
2024-11-17 16:45 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-17 16:45 - INFO - 	 Train Loss: 0.169
2024-11-17 16:45 - INFO - 	 Val. Loss: 0.183
2024-11-17 16:45 - INFO - 	 ROC-AUC: 0.763
2024-11-17 16:45 - INFO - 	 PR-AUC: 0.189
2024-11-17 16:45 - INFO - 	 Best Val. Loss: 0.183
2024-11-17 16:45 - INFO - 	 Best ROC-AUC: 0.763
2024-11-17 16:45 - INFO - 	 Best PR-AUC: 0.197
2024-11-17 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.687
2024-11-17 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-17 16:45 - INFO - ---------------------------------------------
2024-11-17 16:52 - INFO - ---------------------------------------------
2024-11-17 16:52 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-17 16:52 - INFO - 	 Train Loss: 0.165
2024-11-17 16:52 - INFO - 	 Val. Loss: 0.188
2024-11-17 16:52 - INFO - 	 ROC-AUC: 0.729
2024-11-17 16:52 - INFO - 	 PR-AUC: 0.181
2024-11-17 16:52 - INFO - 	 Best Val. Loss: 0.183
2024-11-17 16:52 - INFO - 	 Best ROC-AUC: 0.763
2024-11-17 16:52 - INFO - 	 Best PR-AUC: 0.197
2024-11-17 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.687
2024-11-17 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-17 16:52 - INFO - ---------------------------------------------
2024-11-17 17:01 - INFO - Fit the preprocessing pipeline
2024-11-17 17:01 - INFO - Training using device: cuda
2024-11-17 17:01 - INFO - Creating generators
2024-11-17 17:01 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 17:01 - INFO - * Model:
2024-11-17 17:01 - INFO - * -----------
2024-11-17 17:01 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 17:01 - INFO - * -----------
2024-11-17 17:08 - INFO - ---------------------------------------------
2024-11-17 17:08 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-17 17:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13204
2024-11-17 17:08 - INFO - 	 Train Loss: 0.181
2024-11-17 17:08 - INFO - 	 Val. Loss: 0.211
2024-11-17 17:08 - INFO - 	 ROC-AUC: 0.664
2024-11-17 17:08 - INFO - 	 PR-AUC: 0.132
2024-11-17 17:08 - INFO - 	 Best Val. Loss: 0.211
2024-11-17 17:08 - INFO - 	 Best ROC-AUC: 0.664
2024-11-17 17:08 - INFO - 	 Best PR-AUC: 0.132
2024-11-17 17:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-17 17:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.081
2024-11-17 17:08 - INFO - ---------------------------------------------
2024-11-17 17:15 - INFO - ---------------------------------------------
2024-11-17 17:15 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-17 17:15 - INFO - 	 Train Loss: 0.174
2024-11-17 17:15 - INFO - 	 Val. Loss: 0.248
2024-11-17 17:15 - INFO - 	 ROC-AUC: 0.481
2024-11-17 17:15 - INFO - 	 PR-AUC: 0.061
2024-11-17 17:15 - INFO - 	 Best Val. Loss: 0.211
2024-11-17 17:15 - INFO - 	 Best ROC-AUC: 0.664
2024-11-17 17:15 - INFO - 	 Best PR-AUC: 0.132
2024-11-17 17:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-17 17:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.081
2024-11-17 17:15 - INFO - ---------------------------------------------
2024-11-17 17:22 - INFO - ---------------------------------------------
2024-11-17 17:22 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 17:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14714
2024-11-17 17:22 - INFO - 	 Train Loss: 0.173
2024-11-17 17:22 - INFO - 	 Val. Loss: 0.194
2024-11-17 17:22 - INFO - 	 ROC-AUC: 0.702
2024-11-17 17:22 - INFO - 	 PR-AUC: 0.147
2024-11-17 17:22 - INFO - 	 Best Val. Loss: 0.194
2024-11-17 17:22 - INFO - 	 Best ROC-AUC: 0.702
2024-11-17 17:22 - INFO - 	 Best PR-AUC: 0.147
2024-11-17 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.617
2024-11-17 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-17 17:22 - INFO - ---------------------------------------------
2024-11-17 17:29 - INFO - ---------------------------------------------
2024-11-17 17:29 - INFO - Epoch: 04 | Time: 7m 10s
2024-11-17 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1802
2024-11-17 17:29 - INFO - 	 Train Loss: 0.170
2024-11-17 17:29 - INFO - 	 Val. Loss: 0.188
2024-11-17 17:29 - INFO - 	 ROC-AUC: 0.703
2024-11-17 17:29 - INFO - 	 PR-AUC: 0.180
2024-11-17 17:29 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 17:29 - INFO - 	 Best ROC-AUC: 0.703
2024-11-17 17:29 - INFO - 	 Best PR-AUC: 0.180
2024-11-17 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.640
2024-11-17 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.089
2024-11-17 17:29 - INFO - ---------------------------------------------
2024-11-17 17:36 - INFO - ---------------------------------------------
2024-11-17 17:36 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-17 17:36 - INFO - 	 Train Loss: 0.167
2024-11-17 17:36 - INFO - 	 Val. Loss: 0.190
2024-11-17 17:36 - INFO - 	 ROC-AUC: 0.713
2024-11-17 17:36 - INFO - 	 PR-AUC: 0.173
2024-11-17 17:36 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 17:36 - INFO - 	 Best ROC-AUC: 0.713
2024-11-17 17:36 - INFO - 	 Best PR-AUC: 0.180
2024-11-17 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.661
2024-11-17 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.089
2024-11-17 17:36 - INFO - ---------------------------------------------
2024-11-17 17:44 - INFO - ---------------------------------------------
2024-11-17 17:44 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-17 17:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20218
2024-11-17 17:44 - INFO - 	 Train Loss: 0.166
2024-11-17 17:44 - INFO - 	 Val. Loss: 0.205
2024-11-17 17:44 - INFO - 	 ROC-AUC: 0.690
2024-11-17 17:44 - INFO - 	 PR-AUC: 0.202
2024-11-17 17:44 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 17:44 - INFO - 	 Best ROC-AUC: 0.713
2024-11-17 17:44 - INFO - 	 Best PR-AUC: 0.202
2024-11-17 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.661
2024-11-17 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-17 17:44 - INFO - ---------------------------------------------
2024-11-17 17:51 - INFO - ---------------------------------------------
2024-11-17 17:51 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-17 17:51 - INFO - 	 Train Loss: 0.166
2024-11-17 17:51 - INFO - 	 Val. Loss: 0.193
2024-11-17 17:51 - INFO - 	 ROC-AUC: 0.663
2024-11-17 17:51 - INFO - 	 PR-AUC: 0.128
2024-11-17 17:51 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 17:51 - INFO - 	 Best ROC-AUC: 0.713
2024-11-17 17:51 - INFO - 	 Best PR-AUC: 0.202
2024-11-17 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.661
2024-11-17 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-17 17:51 - INFO - ---------------------------------------------
2024-11-17 17:58 - INFO - ---------------------------------------------
2024-11-17 17:58 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 17:58 - INFO - 	 Train Loss: 0.165
2024-11-17 17:58 - INFO - 	 Val. Loss: 0.189
2024-11-17 17:58 - INFO - 	 ROC-AUC: 0.704
2024-11-17 17:58 - INFO - 	 PR-AUC: 0.173
2024-11-17 17:58 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 17:58 - INFO - 	 Best ROC-AUC: 0.713
2024-11-17 17:58 - INFO - 	 Best PR-AUC: 0.202
2024-11-17 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.661
2024-11-17 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.103
2024-11-17 17:58 - INFO - ---------------------------------------------
2024-11-17 18:05 - INFO - ---------------------------------------------
2024-11-17 18:05 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-17 18:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21089
2024-11-17 18:05 - INFO - 	 Train Loss: 0.165
2024-11-17 18:05 - INFO - 	 Val. Loss: 0.181
2024-11-17 18:05 - INFO - 	 ROC-AUC: 0.776
2024-11-17 18:05 - INFO - 	 PR-AUC: 0.211
2024-11-17 18:05 - INFO - 	 Best Val. Loss: 0.181
2024-11-17 18:05 - INFO - 	 Best ROC-AUC: 0.776
2024-11-17 18:05 - INFO - 	 Best PR-AUC: 0.211
2024-11-17 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.694
2024-11-17 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-17 18:05 - INFO - ---------------------------------------------
2024-11-17 18:12 - INFO - ---------------------------------------------
2024-11-17 18:12 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-17 18:12 - INFO - 	 Train Loss: 0.161
2024-11-17 18:12 - INFO - 	 Val. Loss: 0.186
2024-11-17 18:12 - INFO - 	 ROC-AUC: 0.742
2024-11-17 18:12 - INFO - 	 PR-AUC: 0.209
2024-11-17 18:12 - INFO - 	 Best Val. Loss: 0.181
2024-11-17 18:12 - INFO - 	 Best ROC-AUC: 0.776
2024-11-17 18:12 - INFO - 	 Best PR-AUC: 0.211
2024-11-17 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.694
2024-11-17 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.122
2024-11-17 18:12 - INFO - ---------------------------------------------
2024-11-17 18:14 - INFO - Fit the preprocessing pipeline
2024-11-17 18:14 - INFO - Training using device: cuda
2024-11-17 18:14 - INFO - Creating generators
2024-11-17 18:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 18:14 - INFO - * Model:
2024-11-17 18:14 - INFO - * -----------
2024-11-17 18:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 18:14 - INFO - * -----------
2024-11-17 18:21 - INFO - ---------------------------------------------
2024-11-17 18:21 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-17 18:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12027
2024-11-17 18:21 - INFO - 	 Train Loss: 0.181
2024-11-17 18:21 - INFO - 	 Val. Loss: 0.201
2024-11-17 18:21 - INFO - 	 ROC-AUC: 0.670
2024-11-17 18:21 - INFO - 	 PR-AUC: 0.120
2024-11-17 18:21 - INFO - 	 Best Val. Loss: 0.201
2024-11-17 18:21 - INFO - 	 Best ROC-AUC: 0.670
2024-11-17 18:21 - INFO - 	 Best PR-AUC: 0.120
2024-11-17 18:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.621
2024-11-17 18:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.078
2024-11-17 18:21 - INFO - ---------------------------------------------
2024-11-17 18:28 - INFO - ---------------------------------------------
2024-11-17 18:28 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-17 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17126
2024-11-17 18:28 - INFO - 	 Train Loss: 0.173
2024-11-17 18:28 - INFO - 	 Val. Loss: 0.199
2024-11-17 18:28 - INFO - 	 ROC-AUC: 0.686
2024-11-17 18:28 - INFO - 	 PR-AUC: 0.171
2024-11-17 18:28 - INFO - 	 Best Val. Loss: 0.199
2024-11-17 18:28 - INFO - 	 Best ROC-AUC: 0.686
2024-11-17 18:28 - INFO - 	 Best PR-AUC: 0.171
2024-11-17 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.623
2024-11-17 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.096
2024-11-17 18:28 - INFO - ---------------------------------------------
2024-11-17 18:35 - INFO - ---------------------------------------------
2024-11-17 18:35 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 18:35 - INFO - 	 Train Loss: 0.171
2024-11-17 18:35 - INFO - 	 Val. Loss: 0.191
2024-11-17 18:35 - INFO - 	 ROC-AUC: 0.724
2024-11-17 18:35 - INFO - 	 PR-AUC: 0.167
2024-11-17 18:35 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 18:35 - INFO - 	 Best ROC-AUC: 0.724
2024-11-17 18:35 - INFO - 	 Best PR-AUC: 0.171
2024-11-17 18:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.634
2024-11-17 18:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.096
2024-11-17 18:35 - INFO - ---------------------------------------------
2024-11-17 18:42 - INFO - ---------------------------------------------
2024-11-17 18:42 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 18:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20213
2024-11-17 18:42 - INFO - 	 Train Loss: 0.169
2024-11-17 18:42 - INFO - 	 Val. Loss: 0.193
2024-11-17 18:42 - INFO - 	 ROC-AUC: 0.703
2024-11-17 18:42 - INFO - 	 PR-AUC: 0.202
2024-11-17 18:42 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 18:42 - INFO - 	 Best ROC-AUC: 0.724
2024-11-17 18:42 - INFO - 	 Best PR-AUC: 0.202
2024-11-17 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.634
2024-11-17 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-17 18:42 - INFO - ---------------------------------------------
2024-11-17 18:49 - INFO - ---------------------------------------------
2024-11-17 18:49 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-17 18:49 - INFO - 	 Train Loss: 0.167
2024-11-17 18:49 - INFO - 	 Val. Loss: 0.182
2024-11-17 18:49 - INFO - 	 ROC-AUC: 0.719
2024-11-17 18:49 - INFO - 	 PR-AUC: 0.174
2024-11-17 18:49 - INFO - 	 Best Val. Loss: 0.182
2024-11-17 18:49 - INFO - 	 Best ROC-AUC: 0.724
2024-11-17 18:49 - INFO - 	 Best PR-AUC: 0.202
2024-11-17 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.634
2024-11-17 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-17 18:49 - INFO - ---------------------------------------------
2024-11-17 18:57 - INFO - ---------------------------------------------
2024-11-17 18:57 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-17 18:57 - INFO - 	 Train Loss: 0.167
2024-11-17 18:57 - INFO - 	 Val. Loss: 0.184
2024-11-17 18:57 - INFO - 	 ROC-AUC: 0.733
2024-11-17 18:57 - INFO - 	 PR-AUC: 0.181
2024-11-17 18:57 - INFO - 	 Best Val. Loss: 0.182
2024-11-17 18:57 - INFO - 	 Best ROC-AUC: 0.733
2024-11-17 18:57 - INFO - 	 Best PR-AUC: 0.202
2024-11-17 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.655
2024-11-17 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.100
2024-11-17 18:57 - INFO - ---------------------------------------------
2024-11-17 19:04 - INFO - ---------------------------------------------
2024-11-17 19:04 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-17 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21114
2024-11-17 19:04 - INFO - 	 Train Loss: 0.166
2024-11-17 19:04 - INFO - 	 Val. Loss: 0.182
2024-11-17 19:04 - INFO - 	 ROC-AUC: 0.742
2024-11-17 19:04 - INFO - 	 PR-AUC: 0.211
2024-11-17 19:04 - INFO - 	 Best Val. Loss: 0.182
2024-11-17 19:04 - INFO - 	 Best ROC-AUC: 0.742
2024-11-17 19:04 - INFO - 	 Best PR-AUC: 0.211
2024-11-17 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.676
2024-11-17 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-17 19:04 - INFO - ---------------------------------------------
2024-11-17 19:11 - INFO - ---------------------------------------------
2024-11-17 19:11 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-17 19:11 - INFO - 	 Train Loss: 0.165
2024-11-17 19:11 - INFO - 	 Val. Loss: 0.181
2024-11-17 19:11 - INFO - 	 ROC-AUC: 0.744
2024-11-17 19:11 - INFO - 	 PR-AUC: 0.185
2024-11-17 19:11 - INFO - 	 Best Val. Loss: 0.181
2024-11-17 19:11 - INFO - 	 Best ROC-AUC: 0.744
2024-11-17 19:11 - INFO - 	 Best PR-AUC: 0.211
2024-11-17 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.677
2024-11-17 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.109
2024-11-17 19:11 - INFO - ---------------------------------------------
2024-11-17 19:18 - INFO - ---------------------------------------------
2024-11-17 19:18 - INFO - Epoch: 09 | Time: 7m 10s
2024-11-17 19:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21457
2024-11-17 19:18 - INFO - 	 Train Loss: 0.166
2024-11-17 19:18 - INFO - 	 Val. Loss: 0.182
2024-11-17 19:18 - INFO - 	 ROC-AUC: 0.748
2024-11-17 19:18 - INFO - 	 PR-AUC: 0.215
2024-11-17 19:18 - INFO - 	 Best Val. Loss: 0.181
2024-11-17 19:18 - INFO - 	 Best ROC-AUC: 0.748
2024-11-17 19:18 - INFO - 	 Best PR-AUC: 0.215
2024-11-17 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.669
2024-11-17 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.107
2024-11-17 19:18 - INFO - ---------------------------------------------
2024-11-17 19:25 - INFO - ---------------------------------------------
2024-11-17 19:25 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-17 19:25 - INFO - 	 Train Loss: 0.165
2024-11-17 19:25 - INFO - 	 Val. Loss: 0.181
2024-11-17 19:25 - INFO - 	 ROC-AUC: 0.743
2024-11-17 19:25 - INFO - 	 PR-AUC: 0.213
2024-11-17 19:25 - INFO - 	 Best Val. Loss: 0.181
2024-11-17 19:25 - INFO - 	 Best ROC-AUC: 0.748
2024-11-17 19:25 - INFO - 	 Best PR-AUC: 0.215
2024-11-17 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.669
2024-11-17 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.107
2024-11-17 19:25 - INFO - ---------------------------------------------
2024-11-17 19:27 - INFO - Fit the preprocessing pipeline
2024-11-17 19:27 - INFO - Training using device: cuda
2024-11-17 19:27 - INFO - Creating generators
2024-11-17 19:27 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 19:27 - INFO - * Model:
2024-11-17 19:27 - INFO - * -----------
2024-11-17 19:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 19:27 - INFO - * -----------
2024-11-17 19:34 - INFO - ---------------------------------------------
2024-11-17 19:34 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-17 19:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11812
2024-11-17 19:34 - INFO - 	 Train Loss: 0.181
2024-11-17 19:34 - INFO - 	 Val. Loss: 0.214
2024-11-17 19:34 - INFO - 	 ROC-AUC: 0.599
2024-11-17 19:34 - INFO - 	 PR-AUC: 0.118
2024-11-17 19:34 - INFO - 	 Best Val. Loss: 0.214
2024-11-17 19:34 - INFO - 	 Best ROC-AUC: 0.599
2024-11-17 19:34 - INFO - 	 Best PR-AUC: 0.118
2024-11-17 19:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.577
2024-11-17 19:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.084
2024-11-17 19:34 - INFO - ---------------------------------------------
2024-11-17 19:41 - INFO - ---------------------------------------------
2024-11-17 19:41 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-17 19:41 - INFO - 	 Train Loss: 0.173
2024-11-17 19:41 - INFO - 	 Val. Loss: 0.200
2024-11-17 19:41 - INFO - 	 ROC-AUC: 0.650
2024-11-17 19:41 - INFO - 	 PR-AUC: 0.107
2024-11-17 19:41 - INFO - 	 Best Val. Loss: 0.200
2024-11-17 19:41 - INFO - 	 Best ROC-AUC: 0.650
2024-11-17 19:41 - INFO - 	 Best PR-AUC: 0.118
2024-11-17 19:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.601
2024-11-17 19:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.084
2024-11-17 19:41 - INFO - ---------------------------------------------
2024-11-17 19:48 - INFO - ---------------------------------------------
2024-11-17 19:48 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 19:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13462
2024-11-17 19:48 - INFO - 	 Train Loss: 0.171
2024-11-17 19:48 - INFO - 	 Val. Loss: 0.193
2024-11-17 19:48 - INFO - 	 ROC-AUC: 0.696
2024-11-17 19:48 - INFO - 	 PR-AUC: 0.135
2024-11-17 19:48 - INFO - 	 Best Val. Loss: 0.193
2024-11-17 19:48 - INFO - 	 Best ROC-AUC: 0.696
2024-11-17 19:48 - INFO - 	 Best PR-AUC: 0.135
2024-11-17 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.662
2024-11-17 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.099
2024-11-17 19:48 - INFO - ---------------------------------------------
2024-11-17 19:55 - INFO - ---------------------------------------------
2024-11-17 19:55 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 19:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1701
2024-11-17 19:55 - INFO - 	 Train Loss: 0.173
2024-11-17 19:55 - INFO - 	 Val. Loss: 0.194
2024-11-17 19:55 - INFO - 	 ROC-AUC: 0.697
2024-11-17 19:55 - INFO - 	 PR-AUC: 0.170
2024-11-17 19:55 - INFO - 	 Best Val. Loss: 0.193
2024-11-17 19:55 - INFO - 	 Best ROC-AUC: 0.697
2024-11-17 19:55 - INFO - 	 Best PR-AUC: 0.170
2024-11-17 19:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.632
2024-11-17 19:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-17 19:55 - INFO - ---------------------------------------------
2024-11-17 20:02 - INFO - ---------------------------------------------
2024-11-17 20:02 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-17 20:02 - INFO - 	 Train Loss: 0.168
2024-11-17 20:02 - INFO - 	 Val. Loss: 0.198
2024-11-17 20:02 - INFO - 	 ROC-AUC: 0.705
2024-11-17 20:02 - INFO - 	 PR-AUC: 0.159
2024-11-17 20:02 - INFO - 	 Best Val. Loss: 0.193
2024-11-17 20:02 - INFO - 	 Best ROC-AUC: 0.705
2024-11-17 20:02 - INFO - 	 Best PR-AUC: 0.170
2024-11-17 20:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.628
2024-11-17 20:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-17 20:02 - INFO - ---------------------------------------------
2024-11-17 20:10 - INFO - ---------------------------------------------
2024-11-17 20:10 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-17 20:10 - INFO - 	 Train Loss: 0.168
2024-11-17 20:10 - INFO - 	 Val. Loss: 0.191
2024-11-17 20:10 - INFO - 	 ROC-AUC: 0.719
2024-11-17 20:10 - INFO - 	 PR-AUC: 0.165
2024-11-17 20:10 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 20:10 - INFO - 	 Best ROC-AUC: 0.719
2024-11-17 20:10 - INFO - 	 Best PR-AUC: 0.170
2024-11-17 20:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.670
2024-11-17 20:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.088
2024-11-17 20:10 - INFO - ---------------------------------------------
2024-11-17 20:17 - INFO - ---------------------------------------------
2024-11-17 20:17 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-17 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17846
2024-11-17 20:17 - INFO - 	 Train Loss: 0.166
2024-11-17 20:17 - INFO - 	 Val. Loss: 0.191
2024-11-17 20:17 - INFO - 	 ROC-AUC: 0.736
2024-11-17 20:17 - INFO - 	 PR-AUC: 0.178
2024-11-17 20:17 - INFO - 	 Best Val. Loss: 0.191
2024-11-17 20:17 - INFO - 	 Best ROC-AUC: 0.736
2024-11-17 20:17 - INFO - 	 Best PR-AUC: 0.178
2024-11-17 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.682
2024-11-17 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.108
2024-11-17 20:17 - INFO - ---------------------------------------------
2024-11-17 20:24 - INFO - ---------------------------------------------
2024-11-17 20:24 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-17 20:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17872
2024-11-17 20:24 - INFO - 	 Train Loss: 0.165
2024-11-17 20:24 - INFO - 	 Val. Loss: 0.188
2024-11-17 20:24 - INFO - 	 ROC-AUC: 0.752
2024-11-17 20:24 - INFO - 	 PR-AUC: 0.179
2024-11-17 20:24 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 20:24 - INFO - 	 Best ROC-AUC: 0.752
2024-11-17 20:24 - INFO - 	 Best PR-AUC: 0.179
2024-11-17 20:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-11-17 20:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-17 20:24 - INFO - ---------------------------------------------
2024-11-17 20:31 - INFO - ---------------------------------------------
2024-11-17 20:31 - INFO - Epoch: 09 | Time: 7m 10s
2024-11-17 20:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20361
2024-11-17 20:31 - INFO - 	 Train Loss: 0.165
2024-11-17 20:31 - INFO - 	 Val. Loss: 0.192
2024-11-17 20:31 - INFO - 	 ROC-AUC: 0.723
2024-11-17 20:31 - INFO - 	 PR-AUC: 0.204
2024-11-17 20:31 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 20:31 - INFO - 	 Best ROC-AUC: 0.752
2024-11-17 20:31 - INFO - 	 Best PR-AUC: 0.204
2024-11-17 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-11-17 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.110
2024-11-17 20:31 - INFO - ---------------------------------------------
2024-11-17 20:38 - INFO - ---------------------------------------------
2024-11-17 20:38 - INFO - Epoch: 10 | Time: 7m 6s
2024-11-17 20:38 - INFO - 	 Train Loss: 0.163
2024-11-17 20:38 - INFO - 	 Val. Loss: 0.191
2024-11-17 20:38 - INFO - 	 ROC-AUC: 0.764
2024-11-17 20:38 - INFO - 	 PR-AUC: 0.199
2024-11-17 20:38 - INFO - 	 Best Val. Loss: 0.188
2024-11-17 20:38 - INFO - 	 Best ROC-AUC: 0.764
2024-11-17 20:38 - INFO - 	 Best PR-AUC: 0.204
2024-11-17 20:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-17 20:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.110
2024-11-17 20:38 - INFO - ---------------------------------------------
2024-11-17 20:40 - INFO - Fit the preprocessing pipeline
2024-11-17 20:40 - INFO - Training using device: cuda
2024-11-17 20:40 - INFO - Creating generators
2024-11-17 20:40 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 20:40 - INFO - * Model:
2024-11-17 20:40 - INFO - * -----------
2024-11-17 20:40 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 20:40 - INFO - * -----------
2024-11-17 20:47 - INFO - ---------------------------------------------
2024-11-17 20:47 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-17 20:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12771
2024-11-17 20:47 - INFO - 	 Train Loss: 0.180
2024-11-17 20:47 - INFO - 	 Val. Loss: 0.200
2024-11-17 20:47 - INFO - 	 ROC-AUC: 0.648
2024-11-17 20:47 - INFO - 	 PR-AUC: 0.128
2024-11-17 20:47 - INFO - 	 Best Val. Loss: 0.200
2024-11-17 20:47 - INFO - 	 Best ROC-AUC: 0.648
2024-11-17 20:47 - INFO - 	 Best PR-AUC: 0.128
2024-11-17 20:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.602
2024-11-17 20:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.083
2024-11-17 20:47 - INFO - ---------------------------------------------
2024-11-17 20:54 - INFO - ---------------------------------------------
2024-11-17 20:54 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-17 20:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1448
2024-11-17 20:54 - INFO - 	 Train Loss: 0.173
2024-11-17 20:54 - INFO - 	 Val. Loss: 0.203
2024-11-17 20:54 - INFO - 	 ROC-AUC: 0.634
2024-11-17 20:54 - INFO - 	 PR-AUC: 0.145
2024-11-17 20:54 - INFO - 	 Best Val. Loss: 0.200
2024-11-17 20:54 - INFO - 	 Best ROC-AUC: 0.648
2024-11-17 20:54 - INFO - 	 Best PR-AUC: 0.145
2024-11-17 20:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.602
2024-11-17 20:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-17 20:54 - INFO - ---------------------------------------------
2024-11-17 21:01 - INFO - ---------------------------------------------
2024-11-17 21:01 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 21:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15763
2024-11-17 21:01 - INFO - 	 Train Loss: 0.172
2024-11-17 21:01 - INFO - 	 Val. Loss: 0.199
2024-11-17 21:01 - INFO - 	 ROC-AUC: 0.677
2024-11-17 21:01 - INFO - 	 PR-AUC: 0.158
2024-11-17 21:01 - INFO - 	 Best Val. Loss: 0.199
2024-11-17 21:01 - INFO - 	 Best ROC-AUC: 0.677
2024-11-17 21:01 - INFO - 	 Best PR-AUC: 0.158
2024-11-17 21:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.644
2024-11-17 21:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.094
2024-11-17 21:01 - INFO - ---------------------------------------------
2024-11-17 21:08 - INFO - ---------------------------------------------
2024-11-17 21:08 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 21:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17478
2024-11-17 21:08 - INFO - 	 Train Loss: 0.171
2024-11-17 21:08 - INFO - 	 Val. Loss: 0.189
2024-11-17 21:08 - INFO - 	 ROC-AUC: 0.729
2024-11-17 21:08 - INFO - 	 PR-AUC: 0.175
2024-11-17 21:08 - INFO - 	 Best Val. Loss: 0.189
2024-11-17 21:08 - INFO - 	 Best ROC-AUC: 0.729
2024-11-17 21:08 - INFO - 	 Best PR-AUC: 0.175
2024-11-17 21:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.658
2024-11-17 21:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.096
2024-11-17 21:08 - INFO - ---------------------------------------------
