2024-10-21 09:44 - INFO - Fit the preprocessing pipeline
2024-10-21 09:44 - INFO - Training using device: cuda
2024-10-21 09:44 - INFO - Creating generators
2024-10-21 09:44 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 09:44 - INFO - * Model:
2024-10-21 09:44 - INFO - * -----------
2024-10-21 09:44 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 09:44 - INFO - * -----------
2024-10-21 09:53 - INFO - ---------------------------------------------
2024-10-21 09:53 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 09:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47035
2024-10-21 09:53 - INFO - 	 Train Loss: 0.189
2024-10-21 09:53 - INFO - 	 Val. Loss: 0.146
2024-10-21 09:53 - INFO - 	 ROC-AUC: 0.926
2024-10-21 09:53 - INFO - 	 PR-AUC: 0.470
2024-10-21 09:53 - INFO - 	 Best Val. Loss: 0.146
2024-10-21 09:53 - INFO - 	 Best ROC-AUC: 0.926
2024-10-21 09:53 - INFO - 	 Best PR-AUC: 0.470
2024-10-21 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-10-21 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.496
2024-10-21 09:53 - INFO - ---------------------------------------------
2024-10-21 10:01 - INFO - ---------------------------------------------
2024-10-21 10:01 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-21 10:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55919
2024-10-21 10:01 - INFO - 	 Train Loss: 0.150
2024-10-21 10:01 - INFO - 	 Val. Loss: 0.125
2024-10-21 10:01 - INFO - 	 ROC-AUC: 0.952
2024-10-21 10:01 - INFO - 	 PR-AUC: 0.559
2024-10-21 10:01 - INFO - 	 Best Val. Loss: 0.125
2024-10-21 10:01 - INFO - 	 Best ROC-AUC: 0.952
2024-10-21 10:01 - INFO - 	 Best PR-AUC: 0.559
2024-10-21 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-21 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.599
2024-10-21 10:01 - INFO - ---------------------------------------------
2024-10-21 10:09 - INFO - ---------------------------------------------
2024-10-21 10:09 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-21 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6264
2024-10-21 10:09 - INFO - 	 Train Loss: 0.134
2024-10-21 10:09 - INFO - 	 Val. Loss: 0.127
2024-10-21 10:09 - INFO - 	 ROC-AUC: 0.958
2024-10-21 10:09 - INFO - 	 PR-AUC: 0.626
2024-10-21 10:09 - INFO - 	 Best Val. Loss: 0.125
2024-10-21 10:09 - INFO - 	 Best ROC-AUC: 0.958
2024-10-21 10:09 - INFO - 	 Best PR-AUC: 0.626
2024-10-21 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-21 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.663
2024-10-21 10:09 - INFO - ---------------------------------------------
2024-10-21 10:17 - INFO - ---------------------------------------------
2024-10-21 10:17 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-21 10:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63344
2024-10-21 10:17 - INFO - 	 Train Loss: 0.128
2024-10-21 10:17 - INFO - 	 Val. Loss: 0.112
2024-10-21 10:17 - INFO - 	 ROC-AUC: 0.961
2024-10-21 10:17 - INFO - 	 PR-AUC: 0.633
2024-10-21 10:17 - INFO - 	 Best Val. Loss: 0.112
2024-10-21 10:17 - INFO - 	 Best ROC-AUC: 0.961
2024-10-21 10:17 - INFO - 	 Best PR-AUC: 0.633
2024-10-21 10:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-21 10:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.681
2024-10-21 10:17 - INFO - ---------------------------------------------
2024-10-21 10:25 - INFO - ---------------------------------------------
2024-10-21 10:25 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-21 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64799
2024-10-21 10:25 - INFO - 	 Train Loss: 0.122
2024-10-21 10:25 - INFO - 	 Val. Loss: 0.109
2024-10-21 10:25 - INFO - 	 ROC-AUC: 0.964
2024-10-21 10:25 - INFO - 	 PR-AUC: 0.648
2024-10-21 10:25 - INFO - 	 Best Val. Loss: 0.109
2024-10-21 10:25 - INFO - 	 Best ROC-AUC: 0.964
2024-10-21 10:25 - INFO - 	 Best PR-AUC: 0.648
2024-10-21 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-21 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-10-21 10:25 - INFO - ---------------------------------------------
2024-10-21 10:33 - INFO - ---------------------------------------------
2024-10-21 10:33 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-21 10:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67806
2024-10-21 10:33 - INFO - 	 Train Loss: 0.121
2024-10-21 10:33 - INFO - 	 Val. Loss: 0.109
2024-10-21 10:33 - INFO - 	 ROC-AUC: 0.963
2024-10-21 10:33 - INFO - 	 PR-AUC: 0.678
2024-10-21 10:33 - INFO - 	 Best Val. Loss: 0.109
2024-10-21 10:33 - INFO - 	 Best ROC-AUC: 0.964
2024-10-21 10:33 - INFO - 	 Best PR-AUC: 0.678
2024-10-21 10:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-21 10:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.680
2024-10-21 10:33 - INFO - ---------------------------------------------
2024-10-21 10:41 - INFO - ---------------------------------------------
2024-10-21 10:41 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-21 10:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68667
2024-10-21 10:41 - INFO - 	 Train Loss: 0.117
2024-10-21 10:41 - INFO - 	 Val. Loss: 0.104
2024-10-21 10:41 - INFO - 	 ROC-AUC: 0.966
2024-10-21 10:41 - INFO - 	 PR-AUC: 0.687
2024-10-21 10:41 - INFO - 	 Best Val. Loss: 0.104
2024-10-21 10:41 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 10:41 - INFO - 	 Best PR-AUC: 0.687
2024-10-21 10:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 10:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.719
2024-10-21 10:41 - INFO - ---------------------------------------------
2024-10-21 10:49 - INFO - ---------------------------------------------
2024-10-21 10:49 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-21 10:49 - INFO - 	 Train Loss: 0.114
2024-10-21 10:49 - INFO - 	 Val. Loss: 0.119
2024-10-21 10:49 - INFO - 	 ROC-AUC: 0.957
2024-10-21 10:49 - INFO - 	 PR-AUC: 0.604
2024-10-21 10:49 - INFO - 	 Best Val. Loss: 0.104
2024-10-21 10:49 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 10:49 - INFO - 	 Best PR-AUC: 0.687
2024-10-21 10:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 10:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.719
2024-10-21 10:49 - INFO - ---------------------------------------------
2024-10-21 10:57 - INFO - ---------------------------------------------
2024-10-21 10:57 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-21 10:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70687
2024-10-21 10:57 - INFO - 	 Train Loss: 0.115
2024-10-21 10:57 - INFO - 	 Val. Loss: 0.102
2024-10-21 10:57 - INFO - 	 ROC-AUC: 0.966
2024-10-21 10:57 - INFO - 	 PR-AUC: 0.707
2024-10-21 10:57 - INFO - 	 Best Val. Loss: 0.102
2024-10-21 10:57 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 10:57 - INFO - 	 Best PR-AUC: 0.707
2024-10-21 10:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 10:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-21 10:57 - INFO - ---------------------------------------------
2024-10-21 11:05 - INFO - ---------------------------------------------
2024-10-21 11:05 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-21 11:05 - INFO - 	 Train Loss: 0.112
2024-10-21 11:05 - INFO - 	 Val. Loss: 0.101
2024-10-21 11:05 - INFO - 	 ROC-AUC: 0.969
2024-10-21 11:05 - INFO - 	 PR-AUC: 0.703
2024-10-21 11:05 - INFO - 	 Best Val. Loss: 0.101
2024-10-21 11:05 - INFO - 	 Best ROC-AUC: 0.969
2024-10-21 11:05 - INFO - 	 Best PR-AUC: 0.707
2024-10-21 11:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 11:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.721
2024-10-21 11:05 - INFO - ---------------------------------------------
2024-10-21 11:07 - INFO - Fit the preprocessing pipeline
2024-10-21 11:07 - INFO - Training using device: cuda
2024-10-21 11:07 - INFO - Creating generators
2024-10-21 11:07 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 11:07 - INFO - * Model:
2024-10-21 11:07 - INFO - * -----------
2024-10-21 11:07 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 11:07 - INFO - * -----------
2024-10-21 11:15 - INFO - ---------------------------------------------
2024-10-21 11:15 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 11:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46577
2024-10-21 11:15 - INFO - 	 Train Loss: 0.184
2024-10-21 11:15 - INFO - 	 Val. Loss: 0.144
2024-10-21 11:15 - INFO - 	 ROC-AUC: 0.930
2024-10-21 11:15 - INFO - 	 PR-AUC: 0.466
2024-10-21 11:15 - INFO - 	 Best Val. Loss: 0.144
2024-10-21 11:15 - INFO - 	 Best ROC-AUC: 0.930
2024-10-21 11:15 - INFO - 	 Best PR-AUC: 0.466
2024-10-21 11:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-10-21 11:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.536
2024-10-21 11:15 - INFO - ---------------------------------------------
2024-10-21 11:23 - INFO - ---------------------------------------------
2024-10-21 11:23 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 11:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52555
2024-10-21 11:23 - INFO - 	 Train Loss: 0.148
2024-10-21 11:23 - INFO - 	 Val. Loss: 0.133
2024-10-21 11:23 - INFO - 	 ROC-AUC: 0.944
2024-10-21 11:23 - INFO - 	 PR-AUC: 0.526
2024-10-21 11:23 - INFO - 	 Best Val. Loss: 0.133
2024-10-21 11:23 - INFO - 	 Best ROC-AUC: 0.944
2024-10-21 11:23 - INFO - 	 Best PR-AUC: 0.526
2024-10-21 11:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-10-21 11:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.579
2024-10-21 11:23 - INFO - ---------------------------------------------
2024-10-21 11:31 - INFO - ---------------------------------------------
2024-10-21 11:31 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-21 11:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61838
2024-10-21 11:31 - INFO - 	 Train Loss: 0.135
2024-10-21 11:31 - INFO - 	 Val. Loss: 0.118
2024-10-21 11:31 - INFO - 	 ROC-AUC: 0.960
2024-10-21 11:31 - INFO - 	 PR-AUC: 0.618
2024-10-21 11:31 - INFO - 	 Best Val. Loss: 0.118
2024-10-21 11:31 - INFO - 	 Best ROC-AUC: 0.960
2024-10-21 11:31 - INFO - 	 Best PR-AUC: 0.618
2024-10-21 11:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-21 11:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.646
2024-10-21 11:31 - INFO - ---------------------------------------------
2024-10-21 11:39 - INFO - ---------------------------------------------
2024-10-21 11:39 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 11:39 - INFO - 	 Train Loss: 0.128
2024-10-21 11:39 - INFO - 	 Val. Loss: 0.118
2024-10-21 11:39 - INFO - 	 ROC-AUC: 0.955
2024-10-21 11:39 - INFO - 	 PR-AUC: 0.616
2024-10-21 11:39 - INFO - 	 Best Val. Loss: 0.118
2024-10-21 11:39 - INFO - 	 Best ROC-AUC: 0.960
2024-10-21 11:39 - INFO - 	 Best PR-AUC: 0.618
2024-10-21 11:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-21 11:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.646
2024-10-21 11:39 - INFO - ---------------------------------------------
2024-10-21 11:47 - INFO - ---------------------------------------------
2024-10-21 11:47 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 11:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66227
2024-10-21 11:47 - INFO - 	 Train Loss: 0.124
2024-10-21 11:47 - INFO - 	 Val. Loss: 0.111
2024-10-21 11:47 - INFO - 	 ROC-AUC: 0.961
2024-10-21 11:47 - INFO - 	 PR-AUC: 0.662
2024-10-21 11:47 - INFO - 	 Best Val. Loss: 0.111
2024-10-21 11:47 - INFO - 	 Best ROC-AUC: 0.961
2024-10-21 11:47 - INFO - 	 Best PR-AUC: 0.662
2024-10-21 11:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-21 11:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.691
2024-10-21 11:47 - INFO - ---------------------------------------------
2024-10-21 11:55 - INFO - ---------------------------------------------
2024-10-21 11:55 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 11:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69002
2024-10-21 11:55 - INFO - 	 Train Loss: 0.121
2024-10-21 11:55 - INFO - 	 Val. Loss: 0.107
2024-10-21 11:55 - INFO - 	 ROC-AUC: 0.964
2024-10-21 11:55 - INFO - 	 PR-AUC: 0.690
2024-10-21 11:55 - INFO - 	 Best Val. Loss: 0.107
2024-10-21 11:55 - INFO - 	 Best ROC-AUC: 0.964
2024-10-21 11:55 - INFO - 	 Best PR-AUC: 0.690
2024-10-21 11:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-21 11:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-10-21 11:55 - INFO - ---------------------------------------------
2024-10-21 12:03 - INFO - ---------------------------------------------
2024-10-21 12:03 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 12:03 - INFO - 	 Train Loss: 0.117
2024-10-21 12:03 - INFO - 	 Val. Loss: 0.106
2024-10-21 12:03 - INFO - 	 ROC-AUC: 0.965
2024-10-21 12:03 - INFO - 	 PR-AUC: 0.685
2024-10-21 12:03 - INFO - 	 Best Val. Loss: 0.106
2024-10-21 12:03 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 12:03 - INFO - 	 Best PR-AUC: 0.690
2024-10-21 12:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 12:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-10-21 12:03 - INFO - ---------------------------------------------
2024-10-21 12:11 - INFO - ---------------------------------------------
2024-10-21 12:11 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 12:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7093
2024-10-21 12:11 - INFO - 	 Train Loss: 0.115
2024-10-21 12:11 - INFO - 	 Val. Loss: 0.102
2024-10-21 12:11 - INFO - 	 ROC-AUC: 0.967
2024-10-21 12:11 - INFO - 	 PR-AUC: 0.709
2024-10-21 12:11 - INFO - 	 Best Val. Loss: 0.102
2024-10-21 12:11 - INFO - 	 Best ROC-AUC: 0.967
2024-10-21 12:11 - INFO - 	 Best PR-AUC: 0.709
2024-10-21 12:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 12:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.713
2024-10-21 12:11 - INFO - ---------------------------------------------
2024-10-21 12:19 - INFO - ---------------------------------------------
2024-10-21 12:19 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-21 12:19 - INFO - 	 Train Loss: 0.115
2024-10-21 12:19 - INFO - 	 Val. Loss: 0.104
2024-10-21 12:19 - INFO - 	 ROC-AUC: 0.966
2024-10-21 12:19 - INFO - 	 PR-AUC: 0.693
2024-10-21 12:19 - INFO - 	 Best Val. Loss: 0.102
2024-10-21 12:19 - INFO - 	 Best ROC-AUC: 0.967
2024-10-21 12:19 - INFO - 	 Best PR-AUC: 0.709
2024-10-21 12:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 12:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.713
2024-10-21 12:19 - INFO - ---------------------------------------------
2024-10-21 12:27 - INFO - ---------------------------------------------
2024-10-21 12:27 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 12:27 - INFO - 	 Train Loss: 0.113
2024-10-21 12:27 - INFO - 	 Val. Loss: 0.110
2024-10-21 12:27 - INFO - 	 ROC-AUC: 0.963
2024-10-21 12:27 - INFO - 	 PR-AUC: 0.659
2024-10-21 12:27 - INFO - 	 Best Val. Loss: 0.102
2024-10-21 12:27 - INFO - 	 Best ROC-AUC: 0.967
2024-10-21 12:27 - INFO - 	 Best PR-AUC: 0.709
2024-10-21 12:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 12:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.713
2024-10-21 12:27 - INFO - ---------------------------------------------
2024-10-21 12:30 - INFO - Fit the preprocessing pipeline
2024-10-21 12:30 - INFO - Training using device: cuda
2024-10-21 12:30 - INFO - Creating generators
2024-10-21 12:30 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 12:30 - INFO - * Model:
2024-10-21 12:30 - INFO - * -----------
2024-10-21 12:30 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 12:30 - INFO - * -----------
2024-10-21 12:38 - INFO - ---------------------------------------------
2024-10-21 12:38 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 12:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41922
2024-10-21 12:38 - INFO - 	 Train Loss: 0.183
2024-10-21 12:38 - INFO - 	 Val. Loss: 0.174
2024-10-21 12:38 - INFO - 	 ROC-AUC: 0.910
2024-10-21 12:38 - INFO - 	 PR-AUC: 0.419
2024-10-21 12:38 - INFO - 	 Best Val. Loss: 0.174
2024-10-21 12:38 - INFO - 	 Best ROC-AUC: 0.910
2024-10-21 12:38 - INFO - 	 Best PR-AUC: 0.419
2024-10-21 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-10-21 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.453
2024-10-21 12:38 - INFO - ---------------------------------------------
2024-10-21 12:46 - INFO - ---------------------------------------------
2024-10-21 12:46 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 12:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54321
2024-10-21 12:46 - INFO - 	 Train Loss: 0.149
2024-10-21 12:46 - INFO - 	 Val. Loss: 0.129
2024-10-21 12:46 - INFO - 	 ROC-AUC: 0.948
2024-10-21 12:46 - INFO - 	 PR-AUC: 0.543
2024-10-21 12:46 - INFO - 	 Best Val. Loss: 0.129
2024-10-21 12:46 - INFO - 	 Best ROC-AUC: 0.948
2024-10-21 12:46 - INFO - 	 Best PR-AUC: 0.543
2024-10-21 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-10-21 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.601
2024-10-21 12:46 - INFO - ---------------------------------------------
2024-10-21 12:54 - INFO - ---------------------------------------------
2024-10-21 12:54 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 12:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60813
2024-10-21 12:54 - INFO - 	 Train Loss: 0.132
2024-10-21 12:54 - INFO - 	 Val. Loss: 0.120
2024-10-21 12:54 - INFO - 	 ROC-AUC: 0.955
2024-10-21 12:54 - INFO - 	 PR-AUC: 0.608
2024-10-21 12:54 - INFO - 	 Best Val. Loss: 0.120
2024-10-21 12:54 - INFO - 	 Best ROC-AUC: 0.955
2024-10-21 12:54 - INFO - 	 Best PR-AUC: 0.608
2024-10-21 12:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-21 12:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.676
2024-10-21 12:54 - INFO - ---------------------------------------------
2024-10-21 13:02 - INFO - ---------------------------------------------
2024-10-21 13:02 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-21 13:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6616
2024-10-21 13:02 - INFO - 	 Train Loss: 0.127
2024-10-21 13:02 - INFO - 	 Val. Loss: 0.111
2024-10-21 13:02 - INFO - 	 ROC-AUC: 0.962
2024-10-21 13:02 - INFO - 	 PR-AUC: 0.662
2024-10-21 13:02 - INFO - 	 Best Val. Loss: 0.111
2024-10-21 13:02 - INFO - 	 Best ROC-AUC: 0.962
2024-10-21 13:02 - INFO - 	 Best PR-AUC: 0.662
2024-10-21 13:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-21 13:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.640
2024-10-21 13:02 - INFO - ---------------------------------------------
2024-10-21 13:10 - INFO - ---------------------------------------------
2024-10-21 13:10 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-21 13:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68388
2024-10-21 13:10 - INFO - 	 Train Loss: 0.122
2024-10-21 13:10 - INFO - 	 Val. Loss: 0.107
2024-10-21 13:10 - INFO - 	 ROC-AUC: 0.964
2024-10-21 13:10 - INFO - 	 PR-AUC: 0.684
2024-10-21 13:10 - INFO - 	 Best Val. Loss: 0.107
2024-10-21 13:10 - INFO - 	 Best ROC-AUC: 0.964
2024-10-21 13:10 - INFO - 	 Best PR-AUC: 0.684
2024-10-21 13:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 13:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.709
2024-10-21 13:10 - INFO - ---------------------------------------------
2024-10-21 13:18 - INFO - ---------------------------------------------
2024-10-21 13:18 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 13:18 - INFO - 	 Train Loss: 0.120
2024-10-21 13:18 - INFO - 	 Val. Loss: 0.112
2024-10-21 13:18 - INFO - 	 ROC-AUC: 0.962
2024-10-21 13:18 - INFO - 	 PR-AUC: 0.663
2024-10-21 13:18 - INFO - 	 Best Val. Loss: 0.107
2024-10-21 13:18 - INFO - 	 Best ROC-AUC: 0.964
2024-10-21 13:18 - INFO - 	 Best PR-AUC: 0.684
2024-10-21 13:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 13:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.709
2024-10-21 13:18 - INFO - ---------------------------------------------
2024-10-21 13:26 - INFO - ---------------------------------------------
2024-10-21 13:26 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 13:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71181
2024-10-21 13:26 - INFO - 	 Train Loss: 0.117
2024-10-21 13:26 - INFO - 	 Val. Loss: 0.103
2024-10-21 13:26 - INFO - 	 ROC-AUC: 0.967
2024-10-21 13:26 - INFO - 	 PR-AUC: 0.712
2024-10-21 13:26 - INFO - 	 Best Val. Loss: 0.103
2024-10-21 13:26 - INFO - 	 Best ROC-AUC: 0.967
2024-10-21 13:26 - INFO - 	 Best PR-AUC: 0.712
2024-10-21 13:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 13:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-21 13:26 - INFO - ---------------------------------------------
2024-10-21 13:34 - INFO - ---------------------------------------------
2024-10-21 13:34 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 13:34 - INFO - 	 Train Loss: 0.115
2024-10-21 13:34 - INFO - 	 Val. Loss: 0.104
2024-10-21 13:34 - INFO - 	 ROC-AUC: 0.968
2024-10-21 13:34 - INFO - 	 PR-AUC: 0.700
2024-10-21 13:34 - INFO - 	 Best Val. Loss: 0.103
2024-10-21 13:34 - INFO - 	 Best ROC-AUC: 0.968
2024-10-21 13:34 - INFO - 	 Best PR-AUC: 0.712
2024-10-21 13:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 13:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-21 13:34 - INFO - ---------------------------------------------
2024-10-21 13:42 - INFO - ---------------------------------------------
2024-10-21 13:42 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 13:42 - INFO - 	 Train Loss: 0.115
2024-10-21 13:42 - INFO - 	 Val. Loss: 0.103
2024-10-21 13:42 - INFO - 	 ROC-AUC: 0.966
2024-10-21 13:42 - INFO - 	 PR-AUC: 0.695
2024-10-21 13:42 - INFO - 	 Best Val. Loss: 0.103
2024-10-21 13:42 - INFO - 	 Best ROC-AUC: 0.968
2024-10-21 13:42 - INFO - 	 Best PR-AUC: 0.712
2024-10-21 13:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 13:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-21 13:42 - INFO - ---------------------------------------------
2024-10-21 13:50 - INFO - ---------------------------------------------
2024-10-21 13:50 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 13:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72675
2024-10-21 13:50 - INFO - 	 Train Loss: 0.113
2024-10-21 13:50 - INFO - 	 Val. Loss: 0.098
2024-10-21 13:50 - INFO - 	 ROC-AUC: 0.969
2024-10-21 13:50 - INFO - 	 PR-AUC: 0.727
2024-10-21 13:50 - INFO - 	 Best Val. Loss: 0.098
2024-10-21 13:50 - INFO - 	 Best ROC-AUC: 0.969
2024-10-21 13:50 - INFO - 	 Best PR-AUC: 0.727
2024-10-21 13:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 13:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-10-21 13:50 - INFO - ---------------------------------------------
2024-10-21 13:52 - INFO - Fit the preprocessing pipeline
2024-10-21 13:52 - INFO - Training using device: cuda
2024-10-21 13:52 - INFO - Creating generators
2024-10-21 13:52 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 13:52 - INFO - * Model:
2024-10-21 13:52 - INFO - * -----------
2024-10-21 13:52 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 13:52 - INFO - * -----------
2024-10-21 14:00 - INFO - ---------------------------------------------
2024-10-21 14:00 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 14:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46413
2024-10-21 14:00 - INFO - 	 Train Loss: 0.182
2024-10-21 14:00 - INFO - 	 Val. Loss: 0.146
2024-10-21 14:00 - INFO - 	 ROC-AUC: 0.934
2024-10-21 14:00 - INFO - 	 PR-AUC: 0.464
2024-10-21 14:00 - INFO - 	 Best Val. Loss: 0.146
2024-10-21 14:00 - INFO - 	 Best ROC-AUC: 0.934
2024-10-21 14:00 - INFO - 	 Best PR-AUC: 0.464
2024-10-21 14:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-10-21 14:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.498
2024-10-21 14:00 - INFO - ---------------------------------------------
2024-10-21 14:08 - INFO - ---------------------------------------------
2024-10-21 14:08 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 14:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58202
2024-10-21 14:08 - INFO - 	 Train Loss: 0.146
2024-10-21 14:08 - INFO - 	 Val. Loss: 0.127
2024-10-21 14:08 - INFO - 	 ROC-AUC: 0.948
2024-10-21 14:08 - INFO - 	 PR-AUC: 0.582
2024-10-21 14:08 - INFO - 	 Best Val. Loss: 0.127
2024-10-21 14:08 - INFO - 	 Best ROC-AUC: 0.948
2024-10-21 14:08 - INFO - 	 Best PR-AUC: 0.582
2024-10-21 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-10-21 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.583
2024-10-21 14:08 - INFO - ---------------------------------------------
2024-10-21 14:16 - INFO - ---------------------------------------------
2024-10-21 14:16 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 14:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62651
2024-10-21 14:16 - INFO - 	 Train Loss: 0.135
2024-10-21 14:16 - INFO - 	 Val. Loss: 0.118
2024-10-21 14:16 - INFO - 	 ROC-AUC: 0.955
2024-10-21 14:16 - INFO - 	 PR-AUC: 0.627
2024-10-21 14:16 - INFO - 	 Best Val. Loss: 0.118
2024-10-21 14:16 - INFO - 	 Best ROC-AUC: 0.955
2024-10-21 14:16 - INFO - 	 Best PR-AUC: 0.627
2024-10-21 14:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-10-21 14:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.639
2024-10-21 14:16 - INFO - ---------------------------------------------
2024-10-21 14:24 - INFO - ---------------------------------------------
2024-10-21 14:24 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 14:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6533
2024-10-21 14:24 - INFO - 	 Train Loss: 0.129
2024-10-21 14:24 - INFO - 	 Val. Loss: 0.110
2024-10-21 14:24 - INFO - 	 ROC-AUC: 0.963
2024-10-21 14:24 - INFO - 	 PR-AUC: 0.653
2024-10-21 14:24 - INFO - 	 Best Val. Loss: 0.110
2024-10-21 14:24 - INFO - 	 Best ROC-AUC: 0.963
2024-10-21 14:24 - INFO - 	 Best PR-AUC: 0.653
2024-10-21 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.671
2024-10-21 14:24 - INFO - ---------------------------------------------
2024-10-21 14:32 - INFO - ---------------------------------------------
2024-10-21 14:32 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 14:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65849
2024-10-21 14:32 - INFO - 	 Train Loss: 0.123
2024-10-21 14:32 - INFO - 	 Val. Loss: 0.111
2024-10-21 14:32 - INFO - 	 ROC-AUC: 0.962
2024-10-21 14:32 - INFO - 	 PR-AUC: 0.658
2024-10-21 14:32 - INFO - 	 Best Val. Loss: 0.110
2024-10-21 14:32 - INFO - 	 Best ROC-AUC: 0.963
2024-10-21 14:32 - INFO - 	 Best PR-AUC: 0.658
2024-10-21 14:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 14:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.697
2024-10-21 14:32 - INFO - ---------------------------------------------
2024-10-21 14:40 - INFO - ---------------------------------------------
2024-10-21 14:40 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 14:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68522
2024-10-21 14:40 - INFO - 	 Train Loss: 0.121
2024-10-21 14:40 - INFO - 	 Val. Loss: 0.106
2024-10-21 14:40 - INFO - 	 ROC-AUC: 0.966
2024-10-21 14:40 - INFO - 	 PR-AUC: 0.685
2024-10-21 14:40 - INFO - 	 Best Val. Loss: 0.106
2024-10-21 14:40 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 14:40 - INFO - 	 Best PR-AUC: 0.685
2024-10-21 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.706
2024-10-21 14:40 - INFO - ---------------------------------------------
2024-10-21 14:48 - INFO - ---------------------------------------------
2024-10-21 14:48 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 14:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68682
2024-10-21 14:48 - INFO - 	 Train Loss: 0.118
2024-10-21 14:48 - INFO - 	 Val. Loss: 0.106
2024-10-21 14:48 - INFO - 	 ROC-AUC: 0.966
2024-10-21 14:48 - INFO - 	 PR-AUC: 0.687
2024-10-21 14:48 - INFO - 	 Best Val. Loss: 0.106
2024-10-21 14:48 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 14:48 - INFO - 	 Best PR-AUC: 0.687
2024-10-21 14:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 14:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-21 14:48 - INFO - ---------------------------------------------
2024-10-21 14:56 - INFO - ---------------------------------------------
2024-10-21 14:56 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 14:56 - INFO - 	 Train Loss: 0.116
2024-10-21 14:56 - INFO - 	 Val. Loss: 0.105
2024-10-21 14:56 - INFO - 	 ROC-AUC: 0.966
2024-10-21 14:56 - INFO - 	 PR-AUC: 0.685
2024-10-21 14:56 - INFO - 	 Best Val. Loss: 0.105
2024-10-21 14:56 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 14:56 - INFO - 	 Best PR-AUC: 0.687
2024-10-21 14:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 14:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-21 14:56 - INFO - ---------------------------------------------
2024-10-21 15:05 - INFO - ---------------------------------------------
2024-10-21 15:05 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 15:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70239
2024-10-21 15:05 - INFO - 	 Train Loss: 0.114
2024-10-21 15:05 - INFO - 	 Val. Loss: 0.101
2024-10-21 15:05 - INFO - 	 ROC-AUC: 0.969
2024-10-21 15:05 - INFO - 	 PR-AUC: 0.702
2024-10-21 15:05 - INFO - 	 Best Val. Loss: 0.101
2024-10-21 15:05 - INFO - 	 Best ROC-AUC: 0.969
2024-10-21 15:05 - INFO - 	 Best PR-AUC: 0.702
2024-10-21 15:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-21 15:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.713
2024-10-21 15:05 - INFO - ---------------------------------------------
2024-10-21 15:13 - INFO - ---------------------------------------------
2024-10-21 15:13 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 15:13 - INFO - 	 Train Loss: 0.112
2024-10-21 15:13 - INFO - 	 Val. Loss: 0.103
2024-10-21 15:13 - INFO - 	 ROC-AUC: 0.968
2024-10-21 15:13 - INFO - 	 PR-AUC: 0.693
2024-10-21 15:13 - INFO - 	 Best Val. Loss: 0.101
2024-10-21 15:13 - INFO - 	 Best ROC-AUC: 0.969
2024-10-21 15:13 - INFO - 	 Best PR-AUC: 0.702
2024-10-21 15:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-21 15:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.713
2024-10-21 15:13 - INFO - ---------------------------------------------
2024-10-21 15:15 - INFO - Fit the preprocessing pipeline
2024-10-21 15:15 - INFO - Training using device: cuda
2024-10-21 15:15 - INFO - Creating generators
2024-10-21 15:15 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 15:15 - INFO - * Model:
2024-10-21 15:15 - INFO - * -----------
2024-10-21 15:15 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 15:15 - INFO - * -----------
2024-10-21 15:23 - INFO - ---------------------------------------------
2024-10-21 15:23 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 15:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45644
2024-10-21 15:23 - INFO - 	 Train Loss: 0.188
2024-10-21 15:23 - INFO - 	 Val. Loss: 0.148
2024-10-21 15:23 - INFO - 	 ROC-AUC: 0.930
2024-10-21 15:23 - INFO - 	 PR-AUC: 0.456
2024-10-21 15:23 - INFO - 	 Best Val. Loss: 0.148
2024-10-21 15:23 - INFO - 	 Best ROC-AUC: 0.930
2024-10-21 15:23 - INFO - 	 Best PR-AUC: 0.456
2024-10-21 15:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-10-21 15:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.493
2024-10-21 15:23 - INFO - ---------------------------------------------
2024-10-21 15:31 - INFO - ---------------------------------------------
2024-10-21 15:31 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 15:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58648
2024-10-21 15:31 - INFO - 	 Train Loss: 0.146
2024-10-21 15:31 - INFO - 	 Val. Loss: 0.121
2024-10-21 15:31 - INFO - 	 ROC-AUC: 0.957
2024-10-21 15:31 - INFO - 	 PR-AUC: 0.586
2024-10-21 15:31 - INFO - 	 Best Val. Loss: 0.121
2024-10-21 15:31 - INFO - 	 Best ROC-AUC: 0.957
2024-10-21 15:31 - INFO - 	 Best PR-AUC: 0.586
2024-10-21 15:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-10-21 15:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.617
2024-10-21 15:31 - INFO - ---------------------------------------------
2024-10-21 15:39 - INFO - ---------------------------------------------
2024-10-21 15:39 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64046
2024-10-21 15:39 - INFO - 	 Train Loss: 0.134
2024-10-21 15:39 - INFO - 	 Val. Loss: 0.114
2024-10-21 15:39 - INFO - 	 ROC-AUC: 0.960
2024-10-21 15:39 - INFO - 	 PR-AUC: 0.640
2024-10-21 15:39 - INFO - 	 Best Val. Loss: 0.114
2024-10-21 15:39 - INFO - 	 Best ROC-AUC: 0.960
2024-10-21 15:39 - INFO - 	 Best PR-AUC: 0.640
2024-10-21 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-21 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.674
2024-10-21 15:39 - INFO - ---------------------------------------------
2024-10-21 15:47 - INFO - ---------------------------------------------
2024-10-21 15:47 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 15:47 - INFO - 	 Train Loss: 0.127
2024-10-21 15:47 - INFO - 	 Val. Loss: 0.116
2024-10-21 15:47 - INFO - 	 ROC-AUC: 0.959
2024-10-21 15:47 - INFO - 	 PR-AUC: 0.637
2024-10-21 15:47 - INFO - 	 Best Val. Loss: 0.114
2024-10-21 15:47 - INFO - 	 Best ROC-AUC: 0.960
2024-10-21 15:47 - INFO - 	 Best PR-AUC: 0.640
2024-10-21 15:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-21 15:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.674
2024-10-21 15:47 - INFO - ---------------------------------------------
2024-10-21 15:55 - INFO - ---------------------------------------------
2024-10-21 15:55 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 15:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64476
2024-10-21 15:55 - INFO - 	 Train Loss: 0.123
2024-10-21 15:55 - INFO - 	 Val. Loss: 0.114
2024-10-21 15:55 - INFO - 	 ROC-AUC: 0.960
2024-10-21 15:55 - INFO - 	 PR-AUC: 0.645
2024-10-21 15:55 - INFO - 	 Best Val. Loss: 0.114
2024-10-21 15:55 - INFO - 	 Best ROC-AUC: 0.960
2024-10-21 15:55 - INFO - 	 Best PR-AUC: 0.645
2024-10-21 15:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-21 15:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.672
2024-10-21 15:55 - INFO - ---------------------------------------------
2024-10-21 16:03 - INFO - ---------------------------------------------
2024-10-21 16:03 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 16:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69115
2024-10-21 16:03 - INFO - 	 Train Loss: 0.119
2024-10-21 16:03 - INFO - 	 Val. Loss: 0.106
2024-10-21 16:03 - INFO - 	 ROC-AUC: 0.965
2024-10-21 16:03 - INFO - 	 PR-AUC: 0.691
2024-10-21 16:03 - INFO - 	 Best Val. Loss: 0.106
2024-10-21 16:03 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 16:03 - INFO - 	 Best PR-AUC: 0.691
2024-10-21 16:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 16:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.711
2024-10-21 16:03 - INFO - ---------------------------------------------
2024-10-21 16:11 - INFO - ---------------------------------------------
2024-10-21 16:11 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 16:11 - INFO - 	 Train Loss: 0.116
2024-10-21 16:11 - INFO - 	 Val. Loss: 0.106
2024-10-21 16:11 - INFO - 	 ROC-AUC: 0.965
2024-10-21 16:11 - INFO - 	 PR-AUC: 0.682
2024-10-21 16:11 - INFO - 	 Best Val. Loss: 0.106
2024-10-21 16:11 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 16:11 - INFO - 	 Best PR-AUC: 0.691
2024-10-21 16:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 16:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.711
2024-10-21 16:11 - INFO - ---------------------------------------------
2024-10-21 16:19 - INFO - ---------------------------------------------
2024-10-21 16:19 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 16:19 - INFO - 	 Train Loss: 0.114
2024-10-21 16:19 - INFO - 	 Val. Loss: 0.108
2024-10-21 16:19 - INFO - 	 ROC-AUC: 0.963
2024-10-21 16:19 - INFO - 	 PR-AUC: 0.677
2024-10-21 16:19 - INFO - 	 Best Val. Loss: 0.106
2024-10-21 16:19 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 16:19 - INFO - 	 Best PR-AUC: 0.691
2024-10-21 16:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 16:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.711
2024-10-21 16:19 - INFO - ---------------------------------------------
2024-10-21 16:27 - INFO - ---------------------------------------------
2024-10-21 16:27 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-21 16:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69807
2024-10-21 16:27 - INFO - 	 Train Loss: 0.114
2024-10-21 16:27 - INFO - 	 Val. Loss: 0.103
2024-10-21 16:27 - INFO - 	 ROC-AUC: 0.968
2024-10-21 16:27 - INFO - 	 PR-AUC: 0.698
2024-10-21 16:27 - INFO - 	 Best Val. Loss: 0.103
2024-10-21 16:27 - INFO - 	 Best ROC-AUC: 0.968
2024-10-21 16:27 - INFO - 	 Best PR-AUC: 0.698
2024-10-21 16:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 16:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-10-21 16:27 - INFO - ---------------------------------------------
2024-10-21 16:35 - INFO - ---------------------------------------------
2024-10-21 16:35 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 16:35 - INFO - 	 Train Loss: 0.111
2024-10-21 16:35 - INFO - 	 Val. Loss: 0.104
2024-10-21 16:35 - INFO - 	 ROC-AUC: 0.966
2024-10-21 16:35 - INFO - 	 PR-AUC: 0.688
2024-10-21 16:35 - INFO - 	 Best Val. Loss: 0.103
2024-10-21 16:35 - INFO - 	 Best ROC-AUC: 0.968
2024-10-21 16:35 - INFO - 	 Best PR-AUC: 0.698
2024-10-21 16:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 16:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-10-21 16:35 - INFO - ---------------------------------------------
2024-10-21 16:38 - INFO - Fit the preprocessing pipeline
2024-10-21 16:38 - INFO - Training using device: cuda
2024-10-21 16:38 - INFO - Creating generators
2024-10-21 16:38 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 16:38 - INFO - * Model:
2024-10-21 16:38 - INFO - * -----------
2024-10-21 16:38 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 16:38 - INFO - * -----------
2024-10-21 16:46 - INFO - ---------------------------------------------
2024-10-21 16:46 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-21 16:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5349
2024-10-21 16:46 - INFO - 	 Train Loss: 0.186
2024-10-21 16:46 - INFO - 	 Val. Loss: 0.131
2024-10-21 16:46 - INFO - 	 ROC-AUC: 0.945
2024-10-21 16:46 - INFO - 	 PR-AUC: 0.535
2024-10-21 16:46 - INFO - 	 Best Val. Loss: 0.131
2024-10-21 16:46 - INFO - 	 Best ROC-AUC: 0.945
2024-10-21 16:46 - INFO - 	 Best PR-AUC: 0.535
2024-10-21 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-10-21 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.557
2024-10-21 16:46 - INFO - ---------------------------------------------
2024-10-21 16:54 - INFO - ---------------------------------------------
2024-10-21 16:54 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58086
2024-10-21 16:54 - INFO - 	 Train Loss: 0.147
2024-10-21 16:54 - INFO - 	 Val. Loss: 0.131
2024-10-21 16:54 - INFO - 	 ROC-AUC: 0.950
2024-10-21 16:54 - INFO - 	 PR-AUC: 0.581
2024-10-21 16:54 - INFO - 	 Best Val. Loss: 0.131
2024-10-21 16:54 - INFO - 	 Best ROC-AUC: 0.950
2024-10-21 16:54 - INFO - 	 Best PR-AUC: 0.581
2024-10-21 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-21 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.605
2024-10-21 16:54 - INFO - ---------------------------------------------
2024-10-21 17:02 - INFO - ---------------------------------------------
2024-10-21 17:02 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 17:02 - INFO - 	 Train Loss: 0.136
2024-10-21 17:02 - INFO - 	 Val. Loss: 0.123
2024-10-21 17:02 - INFO - 	 ROC-AUC: 0.954
2024-10-21 17:02 - INFO - 	 PR-AUC: 0.574
2024-10-21 17:02 - INFO - 	 Best Val. Loss: 0.123
2024-10-21 17:02 - INFO - 	 Best ROC-AUC: 0.954
2024-10-21 17:02 - INFO - 	 Best PR-AUC: 0.581
2024-10-21 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-21 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.605
2024-10-21 17:02 - INFO - ---------------------------------------------
2024-10-21 17:10 - INFO - ---------------------------------------------
2024-10-21 17:10 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 17:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61552
2024-10-21 17:10 - INFO - 	 Train Loss: 0.128
2024-10-21 17:10 - INFO - 	 Val. Loss: 0.118
2024-10-21 17:10 - INFO - 	 ROC-AUC: 0.958
2024-10-21 17:10 - INFO - 	 PR-AUC: 0.616
2024-10-21 17:10 - INFO - 	 Best Val. Loss: 0.118
2024-10-21 17:10 - INFO - 	 Best ROC-AUC: 0.958
2024-10-21 17:10 - INFO - 	 Best PR-AUC: 0.616
2024-10-21 17:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-21 17:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.659
2024-10-21 17:10 - INFO - ---------------------------------------------
2024-10-21 17:18 - INFO - ---------------------------------------------
2024-10-21 17:18 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-21 17:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62964
2024-10-21 17:18 - INFO - 	 Train Loss: 0.124
2024-10-21 17:18 - INFO - 	 Val. Loss: 0.113
2024-10-21 17:18 - INFO - 	 ROC-AUC: 0.960
2024-10-21 17:18 - INFO - 	 PR-AUC: 0.630
2024-10-21 17:18 - INFO - 	 Best Val. Loss: 0.113
2024-10-21 17:18 - INFO - 	 Best ROC-AUC: 0.960
2024-10-21 17:18 - INFO - 	 Best PR-AUC: 0.630
2024-10-21 17:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-21 17:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.659
2024-10-21 17:18 - INFO - ---------------------------------------------
2024-10-21 17:26 - INFO - ---------------------------------------------
2024-10-21 17:26 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-21 17:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64676
2024-10-21 17:26 - INFO - 	 Train Loss: 0.121
2024-10-21 17:26 - INFO - 	 Val. Loss: 0.110
2024-10-21 17:26 - INFO - 	 ROC-AUC: 0.963
2024-10-21 17:26 - INFO - 	 PR-AUC: 0.647
2024-10-21 17:26 - INFO - 	 Best Val. Loss: 0.110
2024-10-21 17:26 - INFO - 	 Best ROC-AUC: 0.963
2024-10-21 17:26 - INFO - 	 Best PR-AUC: 0.647
2024-10-21 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-21 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.689
2024-10-21 17:26 - INFO - ---------------------------------------------
2024-10-21 17:34 - INFO - ---------------------------------------------
2024-10-21 17:34 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 17:34 - INFO - 	 Train Loss: 0.116
2024-10-21 17:34 - INFO - 	 Val. Loss: 0.110
2024-10-21 17:34 - INFO - 	 ROC-AUC: 0.965
2024-10-21 17:34 - INFO - 	 PR-AUC: 0.637
2024-10-21 17:34 - INFO - 	 Best Val. Loss: 0.110
2024-10-21 17:34 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 17:34 - INFO - 	 Best PR-AUC: 0.647
2024-10-21 17:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-21 17:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.689
2024-10-21 17:34 - INFO - ---------------------------------------------
2024-10-21 17:42 - INFO - ---------------------------------------------
2024-10-21 17:42 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 17:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69001
2024-10-21 17:42 - INFO - 	 Train Loss: 0.116
2024-10-21 17:42 - INFO - 	 Val. Loss: 0.105
2024-10-21 17:42 - INFO - 	 ROC-AUC: 0.965
2024-10-21 17:42 - INFO - 	 PR-AUC: 0.690
2024-10-21 17:42 - INFO - 	 Best Val. Loss: 0.105
2024-10-21 17:42 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 17:42 - INFO - 	 Best PR-AUC: 0.690
2024-10-21 17:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 17:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.734
2024-10-21 17:42 - INFO - ---------------------------------------------
2024-10-21 17:50 - INFO - ---------------------------------------------
2024-10-21 17:50 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 17:50 - INFO - 	 Train Loss: 0.114
2024-10-21 17:50 - INFO - 	 Val. Loss: 0.107
2024-10-21 17:50 - INFO - 	 ROC-AUC: 0.965
2024-10-21 17:50 - INFO - 	 PR-AUC: 0.687
2024-10-21 17:50 - INFO - 	 Best Val. Loss: 0.105
2024-10-21 17:50 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 17:50 - INFO - 	 Best PR-AUC: 0.690
2024-10-21 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.734
2024-10-21 17:50 - INFO - ---------------------------------------------
2024-10-21 17:58 - INFO - ---------------------------------------------
2024-10-21 17:58 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 17:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69438
2024-10-21 17:58 - INFO - 	 Train Loss: 0.113
2024-10-21 17:58 - INFO - 	 Val. Loss: 0.104
2024-10-21 17:58 - INFO - 	 ROC-AUC: 0.967
2024-10-21 17:58 - INFO - 	 PR-AUC: 0.694
2024-10-21 17:58 - INFO - 	 Best Val. Loss: 0.104
2024-10-21 17:58 - INFO - 	 Best ROC-AUC: 0.967
2024-10-21 17:58 - INFO - 	 Best PR-AUC: 0.694
2024-10-21 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.699
2024-10-21 17:58 - INFO - ---------------------------------------------
2024-10-21 18:00 - INFO - Fit the preprocessing pipeline
2024-10-21 18:00 - INFO - Training using device: cuda
2024-10-21 18:00 - INFO - Creating generators
2024-10-21 18:00 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 18:00 - INFO - * Model:
2024-10-21 18:00 - INFO - * -----------
2024-10-21 18:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 18:00 - INFO - * -----------
2024-10-21 18:08 - INFO - ---------------------------------------------
2024-10-21 18:08 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 18:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46617
2024-10-21 18:08 - INFO - 	 Train Loss: 0.188
2024-10-21 18:08 - INFO - 	 Val. Loss: 0.142
2024-10-21 18:08 - INFO - 	 ROC-AUC: 0.936
2024-10-21 18:08 - INFO - 	 PR-AUC: 0.466
2024-10-21 18:08 - INFO - 	 Best Val. Loss: 0.142
2024-10-21 18:08 - INFO - 	 Best ROC-AUC: 0.936
2024-10-21 18:08 - INFO - 	 Best PR-AUC: 0.466
2024-10-21 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-10-21 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.512
2024-10-21 18:08 - INFO - ---------------------------------------------
2024-10-21 18:16 - INFO - ---------------------------------------------
2024-10-21 18:16 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 18:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53168
2024-10-21 18:16 - INFO - 	 Train Loss: 0.147
2024-10-21 18:16 - INFO - 	 Val. Loss: 0.129
2024-10-21 18:16 - INFO - 	 ROC-AUC: 0.947
2024-10-21 18:16 - INFO - 	 PR-AUC: 0.532
2024-10-21 18:16 - INFO - 	 Best Val. Loss: 0.129
2024-10-21 18:16 - INFO - 	 Best ROC-AUC: 0.947
2024-10-21 18:16 - INFO - 	 Best PR-AUC: 0.532
2024-10-21 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-21 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.581
2024-10-21 18:16 - INFO - ---------------------------------------------
2024-10-21 18:24 - INFO - ---------------------------------------------
2024-10-21 18:24 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 18:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61828
2024-10-21 18:24 - INFO - 	 Train Loss: 0.136
2024-10-21 18:24 - INFO - 	 Val. Loss: 0.113
2024-10-21 18:24 - INFO - 	 ROC-AUC: 0.961
2024-10-21 18:24 - INFO - 	 PR-AUC: 0.618
2024-10-21 18:24 - INFO - 	 Best Val. Loss: 0.113
2024-10-21 18:24 - INFO - 	 Best ROC-AUC: 0.961
2024-10-21 18:24 - INFO - 	 Best PR-AUC: 0.618
2024-10-21 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-10-21 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.649
2024-10-21 18:24 - INFO - ---------------------------------------------
2024-10-21 18:32 - INFO - ---------------------------------------------
2024-10-21 18:32 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6442
2024-10-21 18:32 - INFO - 	 Train Loss: 0.127
2024-10-21 18:32 - INFO - 	 Val. Loss: 0.111
2024-10-21 18:32 - INFO - 	 ROC-AUC: 0.962
2024-10-21 18:32 - INFO - 	 PR-AUC: 0.644
2024-10-21 18:32 - INFO - 	 Best Val. Loss: 0.111
2024-10-21 18:32 - INFO - 	 Best ROC-AUC: 0.962
2024-10-21 18:32 - INFO - 	 Best PR-AUC: 0.644
2024-10-21 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.693
2024-10-21 18:32 - INFO - ---------------------------------------------
2024-10-21 18:40 - INFO - ---------------------------------------------
2024-10-21 18:40 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 18:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64423
2024-10-21 18:40 - INFO - 	 Train Loss: 0.123
2024-10-21 18:40 - INFO - 	 Val. Loss: 0.113
2024-10-21 18:40 - INFO - 	 ROC-AUC: 0.961
2024-10-21 18:40 - INFO - 	 PR-AUC: 0.644
2024-10-21 18:40 - INFO - 	 Best Val. Loss: 0.111
2024-10-21 18:40 - INFO - 	 Best ROC-AUC: 0.962
2024-10-21 18:40 - INFO - 	 Best PR-AUC: 0.644
2024-10-21 18:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-21 18:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.702
2024-10-21 18:40 - INFO - ---------------------------------------------
2024-10-21 18:48 - INFO - ---------------------------------------------
2024-10-21 18:48 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 18:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67689
2024-10-21 18:48 - INFO - 	 Train Loss: 0.120
2024-10-21 18:48 - INFO - 	 Val. Loss: 0.107
2024-10-21 18:48 - INFO - 	 ROC-AUC: 0.965
2024-10-21 18:48 - INFO - 	 PR-AUC: 0.677
2024-10-21 18:48 - INFO - 	 Best Val. Loss: 0.107
2024-10-21 18:48 - INFO - 	 Best ROC-AUC: 0.965
2024-10-21 18:48 - INFO - 	 Best PR-AUC: 0.677
2024-10-21 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-10-21 18:48 - INFO - ---------------------------------------------
2024-10-21 18:57 - INFO - ---------------------------------------------
2024-10-21 18:57 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 18:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68615
2024-10-21 18:57 - INFO - 	 Train Loss: 0.118
2024-10-21 18:57 - INFO - 	 Val. Loss: 0.104
2024-10-21 18:57 - INFO - 	 ROC-AUC: 0.966
2024-10-21 18:57 - INFO - 	 PR-AUC: 0.686
2024-10-21 18:57 - INFO - 	 Best Val. Loss: 0.104
2024-10-21 18:57 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 18:57 - INFO - 	 Best PR-AUC: 0.686
2024-10-21 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-10-21 18:57 - INFO - ---------------------------------------------
2024-10-21 19:05 - INFO - ---------------------------------------------
2024-10-21 19:05 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 19:05 - INFO - 	 Train Loss: 0.115
2024-10-21 19:05 - INFO - 	 Val. Loss: 0.112
2024-10-21 19:05 - INFO - 	 ROC-AUC: 0.964
2024-10-21 19:05 - INFO - 	 PR-AUC: 0.618
2024-10-21 19:05 - INFO - 	 Best Val. Loss: 0.104
2024-10-21 19:05 - INFO - 	 Best ROC-AUC: 0.966
2024-10-21 19:05 - INFO - 	 Best PR-AUC: 0.686
2024-10-21 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-10-21 19:05 - INFO - ---------------------------------------------
2024-10-21 19:13 - INFO - ---------------------------------------------
2024-10-21 19:13 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 19:13 - INFO - 	 Train Loss: 0.115
2024-10-21 19:13 - INFO - 	 Val. Loss: 0.103
2024-10-21 19:13 - INFO - 	 ROC-AUC: 0.967
2024-10-21 19:13 - INFO - 	 PR-AUC: 0.682
2024-10-21 19:13 - INFO - 	 Best Val. Loss: 0.103
2024-10-21 19:13 - INFO - 	 Best ROC-AUC: 0.967
2024-10-21 19:13 - INFO - 	 Best PR-AUC: 0.686
2024-10-21 19:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 19:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-10-21 19:13 - INFO - ---------------------------------------------
2024-10-21 19:21 - INFO - ---------------------------------------------
2024-10-21 19:21 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 19:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69207
2024-10-21 19:21 - INFO - 	 Train Loss: 0.114
2024-10-21 19:21 - INFO - 	 Val. Loss: 0.103
2024-10-21 19:21 - INFO - 	 ROC-AUC: 0.968
2024-10-21 19:21 - INFO - 	 PR-AUC: 0.692
2024-10-21 19:21 - INFO - 	 Best Val. Loss: 0.103
2024-10-21 19:21 - INFO - 	 Best ROC-AUC: 0.968
2024-10-21 19:21 - INFO - 	 Best PR-AUC: 0.692
2024-10-21 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-21 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-10-21 19:21 - INFO - ---------------------------------------------
2024-10-21 19:23 - INFO - Fit the preprocessing pipeline
2024-10-21 19:23 - INFO - Training using device: cuda
2024-10-21 19:23 - INFO - Creating generators
2024-10-21 19:23 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 19:23 - INFO - * Model:
2024-10-21 19:23 - INFO - * -----------
2024-10-21 19:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 19:23 - INFO - * -----------
2024-10-21 19:31 - INFO - ---------------------------------------------
2024-10-21 19:31 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 19:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51906
2024-10-21 19:31 - INFO - 	 Train Loss: 0.184
2024-10-21 19:31 - INFO - 	 Val. Loss: 0.138
2024-10-21 19:31 - INFO - 	 ROC-AUC: 0.935
2024-10-21 19:31 - INFO - 	 PR-AUC: 0.519
2024-10-21 19:31 - INFO - 	 Best Val. Loss: 0.138
2024-10-21 19:31 - INFO - 	 Best ROC-AUC: 0.935
2024-10-21 19:31 - INFO - 	 Best PR-AUC: 0.519
2024-10-21 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-10-21 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.538
2024-10-21 19:31 - INFO - ---------------------------------------------
2024-10-21 19:39 - INFO - ---------------------------------------------
2024-10-21 19:39 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 19:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58649
2024-10-21 19:39 - INFO - 	 Train Loss: 0.144
2024-10-21 19:39 - INFO - 	 Val. Loss: 0.122
2024-10-21 19:39 - INFO - 	 ROC-AUC: 0.954
2024-10-21 19:39 - INFO - 	 PR-AUC: 0.586
2024-10-21 19:39 - INFO - 	 Best Val. Loss: 0.122
2024-10-21 19:39 - INFO - 	 Best ROC-AUC: 0.954
2024-10-21 19:39 - INFO - 	 Best PR-AUC: 0.586
2024-10-21 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-10-21 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.611
2024-10-21 19:39 - INFO - ---------------------------------------------
2024-10-21 19:47 - INFO - ---------------------------------------------
2024-10-21 19:47 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 19:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61339
2024-10-21 19:47 - INFO - 	 Train Loss: 0.134
2024-10-21 19:47 - INFO - 	 Val. Loss: 0.116
2024-10-21 19:47 - INFO - 	 ROC-AUC: 0.958
2024-10-21 19:47 - INFO - 	 PR-AUC: 0.613
2024-10-21 19:47 - INFO - 	 Best Val. Loss: 0.116
2024-10-21 19:47 - INFO - 	 Best ROC-AUC: 0.958
2024-10-21 19:47 - INFO - 	 Best PR-AUC: 0.613
2024-10-21 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-21 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.649
2024-10-21 19:47 - INFO - ---------------------------------------------
2024-10-21 19:55 - INFO - ---------------------------------------------
2024-10-21 19:55 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 19:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63204
2024-10-21 19:55 - INFO - 	 Train Loss: 0.127
2024-10-21 19:55 - INFO - 	 Val. Loss: 0.116
2024-10-21 19:55 - INFO - 	 ROC-AUC: 0.960
2024-10-21 19:55 - INFO - 	 PR-AUC: 0.632
2024-10-21 19:55 - INFO - 	 Best Val. Loss: 0.116
2024-10-21 19:55 - INFO - 	 Best ROC-AUC: 0.960
2024-10-21 19:55 - INFO - 	 Best PR-AUC: 0.632
2024-10-21 19:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-10-21 19:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.658
2024-10-21 19:55 - INFO - ---------------------------------------------
2024-10-21 20:03 - INFO - ---------------------------------------------
2024-10-21 20:03 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 20:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66957
2024-10-21 20:03 - INFO - 	 Train Loss: 0.124
2024-10-21 20:03 - INFO - 	 Val. Loss: 0.111
2024-10-21 20:03 - INFO - 	 ROC-AUC: 0.962
2024-10-21 20:03 - INFO - 	 PR-AUC: 0.670
2024-10-21 20:03 - INFO - 	 Best Val. Loss: 0.111
2024-10-21 20:03 - INFO - 	 Best ROC-AUC: 0.962
2024-10-21 20:03 - INFO - 	 Best PR-AUC: 0.670
2024-10-21 20:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-21 20:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-21 20:03 - INFO - ---------------------------------------------
2024-10-21 20:11 - INFO - ---------------------------------------------
2024-10-21 20:11 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 20:11 - INFO - 	 Train Loss: 0.120
2024-10-21 20:11 - INFO - 	 Val. Loss: 0.112
2024-10-21 20:11 - INFO - 	 ROC-AUC: 0.961
2024-10-21 20:11 - INFO - 	 PR-AUC: 0.661
2024-10-21 20:11 - INFO - 	 Best Val. Loss: 0.111
2024-10-21 20:11 - INFO - 	 Best ROC-AUC: 0.962
2024-10-21 20:11 - INFO - 	 Best PR-AUC: 0.670
2024-10-21 20:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-21 20:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-21 20:11 - INFO - ---------------------------------------------
2024-10-21 20:19 - INFO - ---------------------------------------------
2024-10-21 20:19 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-21 20:19 - INFO - 	 Train Loss: 0.116
2024-10-21 20:19 - INFO - 	 Val. Loss: 0.110
2024-10-21 20:19 - INFO - 	 ROC-AUC: 0.963
2024-10-21 20:19 - INFO - 	 PR-AUC: 0.656
2024-10-21 20:19 - INFO - 	 Best Val. Loss: 0.110
2024-10-21 20:19 - INFO - 	 Best ROC-AUC: 0.963
2024-10-21 20:19 - INFO - 	 Best PR-AUC: 0.670
2024-10-21 20:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-10-21 20:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-21 20:19 - INFO - ---------------------------------------------
