2024-11-09 03:35 - INFO - Fit the preprocessing pipeline
2024-11-09 03:35 - INFO - Training using device: cuda
2024-11-09 03:35 - INFO - Creating generators
2024-11-09 03:35 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 03:35 - INFO - * Model:
2024-11-09 03:35 - INFO - * -----------
2024-11-09 03:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 03:35 - INFO - * -----------
2024-11-09 03:43 - INFO - ---------------------------------------------
2024-11-09 03:43 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 03:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10628
2024-11-09 03:43 - INFO - 	 Train Loss: 0.264
2024-11-09 03:43 - INFO - 	 Val. Loss: 0.289
2024-11-09 03:43 - INFO - 	 ROC-AUC: 0.560
2024-11-09 03:43 - INFO - 	 PR-AUC: 0.106
2024-11-09 03:43 - INFO - 	 Best Val. Loss: 0.289
2024-11-09 03:43 - INFO - 	 Best ROC-AUC: 0.560
2024-11-09 03:43 - INFO - 	 Best PR-AUC: 0.106
2024-11-09 03:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.553
2024-11-09 03:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.127
2024-11-09 03:43 - INFO - ---------------------------------------------
2024-11-09 03:51 - INFO - ---------------------------------------------
2024-11-09 03:51 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-09 03:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17092
2024-11-09 03:51 - INFO - 	 Train Loss: 0.244
2024-11-09 03:51 - INFO - 	 Val. Loss: 0.266
2024-11-09 03:51 - INFO - 	 ROC-AUC: 0.664
2024-11-09 03:51 - INFO - 	 PR-AUC: 0.171
2024-11-09 03:51 - INFO - 	 Best Val. Loss: 0.266
2024-11-09 03:51 - INFO - 	 Best ROC-AUC: 0.664
2024-11-09 03:51 - INFO - 	 Best PR-AUC: 0.171
2024-11-09 03:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.628
2024-11-09 03:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.191
2024-11-09 03:51 - INFO - ---------------------------------------------
2024-11-09 03:59 - INFO - ---------------------------------------------
2024-11-09 03:59 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-09 03:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23911
2024-11-09 03:59 - INFO - 	 Train Loss: 0.215
2024-11-09 03:59 - INFO - 	 Val. Loss: 0.383
2024-11-09 03:59 - INFO - 	 ROC-AUC: 0.776
2024-11-09 03:59 - INFO - 	 PR-AUC: 0.239
2024-11-09 03:59 - INFO - 	 Best Val. Loss: 0.266
2024-11-09 03:59 - INFO - 	 Best ROC-AUC: 0.776
2024-11-09 03:59 - INFO - 	 Best PR-AUC: 0.239
2024-11-09 03:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.747
2024-11-09 03:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-09 03:59 - INFO - ---------------------------------------------
2024-11-09 04:07 - INFO - ---------------------------------------------
2024-11-09 04:07 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-09 04:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36516
2024-11-09 04:07 - INFO - 	 Train Loss: 0.177
2024-11-09 04:07 - INFO - 	 Val. Loss: 0.331
2024-11-09 04:07 - INFO - 	 ROC-AUC: 0.884
2024-11-09 04:07 - INFO - 	 PR-AUC: 0.365
2024-11-09 04:07 - INFO - 	 Best Val. Loss: 0.266
2024-11-09 04:07 - INFO - 	 Best ROC-AUC: 0.884
2024-11-09 04:07 - INFO - 	 Best PR-AUC: 0.365
2024-11-09 04:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.886
2024-11-09 04:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.423
2024-11-09 04:07 - INFO - ---------------------------------------------
2024-11-09 04:15 - INFO - ---------------------------------------------
2024-11-09 04:15 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-09 04:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46331
2024-11-09 04:15 - INFO - 	 Train Loss: 0.152
2024-11-09 04:15 - INFO - 	 Val. Loss: 0.323
2024-11-09 04:15 - INFO - 	 ROC-AUC: 0.911
2024-11-09 04:15 - INFO - 	 PR-AUC: 0.463
2024-11-09 04:15 - INFO - 	 Best Val. Loss: 0.266
2024-11-09 04:15 - INFO - 	 Best ROC-AUC: 0.911
2024-11-09 04:15 - INFO - 	 Best PR-AUC: 0.463
2024-11-09 04:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-09 04:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.476
2024-11-09 04:15 - INFO - ---------------------------------------------
2024-11-09 04:23 - INFO - ---------------------------------------------
2024-11-09 04:23 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-09 04:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51971
2024-11-09 04:23 - INFO - 	 Train Loss: 0.136
2024-11-09 04:23 - INFO - 	 Val. Loss: 0.281
2024-11-09 04:23 - INFO - 	 ROC-AUC: 0.926
2024-11-09 04:23 - INFO - 	 PR-AUC: 0.520
2024-11-09 04:23 - INFO - 	 Best Val. Loss: 0.266
2024-11-09 04:23 - INFO - 	 Best ROC-AUC: 0.926
2024-11-09 04:23 - INFO - 	 Best PR-AUC: 0.520
2024-11-09 04:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.923
2024-11-09 04:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.528
2024-11-09 04:23 - INFO - ---------------------------------------------
2024-11-09 04:31 - INFO - ---------------------------------------------
2024-11-09 04:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 04:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60135
2024-11-09 04:31 - INFO - 	 Train Loss: 0.126
2024-11-09 04:31 - INFO - 	 Val. Loss: 0.187
2024-11-09 04:31 - INFO - 	 ROC-AUC: 0.952
2024-11-09 04:31 - INFO - 	 PR-AUC: 0.601
2024-11-09 04:31 - INFO - 	 Best Val. Loss: 0.187
2024-11-09 04:31 - INFO - 	 Best ROC-AUC: 0.952
2024-11-09 04:31 - INFO - 	 Best PR-AUC: 0.601
2024-11-09 04:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-09 04:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.617
2024-11-09 04:31 - INFO - ---------------------------------------------
2024-11-09 04:39 - INFO - ---------------------------------------------
2024-11-09 04:39 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-09 04:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69722
2024-11-09 04:39 - INFO - 	 Train Loss: 0.117
2024-11-09 04:39 - INFO - 	 Val. Loss: 0.149
2024-11-09 04:39 - INFO - 	 ROC-AUC: 0.964
2024-11-09 04:39 - INFO - 	 PR-AUC: 0.697
2024-11-09 04:39 - INFO - 	 Best Val. Loss: 0.149
2024-11-09 04:39 - INFO - 	 Best ROC-AUC: 0.964
2024-11-09 04:39 - INFO - 	 Best PR-AUC: 0.697
2024-11-09 04:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-11-09 04:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.686
2024-11-09 04:39 - INFO - ---------------------------------------------
2024-11-09 04:47 - INFO - ---------------------------------------------
2024-11-09 04:47 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-09 04:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73693
2024-11-09 04:47 - INFO - 	 Train Loss: 0.112
2024-11-09 04:47 - INFO - 	 Val. Loss: 0.100
2024-11-09 04:47 - INFO - 	 ROC-AUC: 0.970
2024-11-09 04:47 - INFO - 	 PR-AUC: 0.737
2024-11-09 04:47 - INFO - 	 Best Val. Loss: 0.100
2024-11-09 04:47 - INFO - 	 Best ROC-AUC: 0.970
2024-11-09 04:47 - INFO - 	 Best PR-AUC: 0.737
2024-11-09 04:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-09 04:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-11-09 04:47 - INFO - ---------------------------------------------
2024-11-09 04:56 - INFO - ---------------------------------------------
2024-11-09 04:56 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-09 04:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76185
2024-11-09 04:56 - INFO - 	 Train Loss: 0.105
2024-11-09 04:56 - INFO - 	 Val. Loss: 0.092
2024-11-09 04:56 - INFO - 	 ROC-AUC: 0.975
2024-11-09 04:56 - INFO - 	 PR-AUC: 0.762
2024-11-09 04:56 - INFO - 	 Best Val. Loss: 0.092
2024-11-09 04:56 - INFO - 	 Best ROC-AUC: 0.975
2024-11-09 04:56 - INFO - 	 Best PR-AUC: 0.762
2024-11-09 04:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-09 04:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-11-09 04:56 - INFO - ---------------------------------------------
2024-11-09 04:58 - INFO - Fit the preprocessing pipeline
2024-11-09 04:58 - INFO - Training using device: cuda
2024-11-09 04:58 - INFO - Creating generators
2024-11-09 04:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 04:58 - INFO - * Model:
2024-11-09 04:58 - INFO - * -----------
2024-11-09 04:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 04:58 - INFO - * -----------
2024-11-09 05:06 - INFO - ---------------------------------------------
2024-11-09 05:06 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-09 05:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11637
2024-11-09 05:06 - INFO - 	 Train Loss: 0.268
2024-11-09 05:06 - INFO - 	 Val. Loss: 0.266
2024-11-09 05:06 - INFO - 	 ROC-AUC: 0.611
2024-11-09 05:06 - INFO - 	 PR-AUC: 0.116
2024-11-09 05:06 - INFO - 	 Best Val. Loss: 0.266
2024-11-09 05:06 - INFO - 	 Best ROC-AUC: 0.611
2024-11-09 05:06 - INFO - 	 Best PR-AUC: 0.116
2024-11-09 05:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.578
2024-11-09 05:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-09 05:06 - INFO - ---------------------------------------------
2024-11-09 05:14 - INFO - ---------------------------------------------
2024-11-09 05:14 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-09 05:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12826
2024-11-09 05:14 - INFO - 	 Train Loss: 0.251
2024-11-09 05:14 - INFO - 	 Val. Loss: 0.286
2024-11-09 05:14 - INFO - 	 ROC-AUC: 0.618
2024-11-09 05:14 - INFO - 	 PR-AUC: 0.128
2024-11-09 05:14 - INFO - 	 Best Val. Loss: 0.266
2024-11-09 05:14 - INFO - 	 Best ROC-AUC: 0.618
2024-11-09 05:14 - INFO - 	 Best PR-AUC: 0.128
2024-11-09 05:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.584
2024-11-09 05:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-09 05:14 - INFO - ---------------------------------------------
2024-11-09 05:22 - INFO - ---------------------------------------------
2024-11-09 05:22 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-09 05:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14822
2024-11-09 05:22 - INFO - 	 Train Loss: 0.240
2024-11-09 05:22 - INFO - 	 Val. Loss: 0.251
2024-11-09 05:22 - INFO - 	 ROC-AUC: 0.651
2024-11-09 05:22 - INFO - 	 PR-AUC: 0.148
2024-11-09 05:22 - INFO - 	 Best Val. Loss: 0.251
2024-11-09 05:22 - INFO - 	 Best ROC-AUC: 0.651
2024-11-09 05:22 - INFO - 	 Best PR-AUC: 0.148
2024-11-09 05:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.635
2024-11-09 05:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.176
2024-11-09 05:22 - INFO - ---------------------------------------------
2024-11-09 05:30 - INFO - ---------------------------------------------
2024-11-09 05:30 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-09 05:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22692
2024-11-09 05:30 - INFO - 	 Train Loss: 0.222
2024-11-09 05:30 - INFO - 	 Val. Loss: 0.312
2024-11-09 05:30 - INFO - 	 ROC-AUC: 0.806
2024-11-09 05:30 - INFO - 	 PR-AUC: 0.227
2024-11-09 05:30 - INFO - 	 Best Val. Loss: 0.251
2024-11-09 05:30 - INFO - 	 Best ROC-AUC: 0.806
2024-11-09 05:30 - INFO - 	 Best PR-AUC: 0.227
2024-11-09 05:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.786
2024-11-09 05:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.248
2024-11-09 05:30 - INFO - ---------------------------------------------
2024-11-09 05:38 - INFO - ---------------------------------------------
2024-11-09 05:38 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-09 05:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45434
2024-11-09 05:38 - INFO - 	 Train Loss: 0.176
2024-11-09 05:38 - INFO - 	 Val. Loss: 0.221
2024-11-09 05:38 - INFO - 	 ROC-AUC: 0.918
2024-11-09 05:38 - INFO - 	 PR-AUC: 0.454
2024-11-09 05:38 - INFO - 	 Best Val. Loss: 0.221
2024-11-09 05:38 - INFO - 	 Best ROC-AUC: 0.918
2024-11-09 05:38 - INFO - 	 Best PR-AUC: 0.454
2024-11-09 05:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.901
2024-11-09 05:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-09 05:38 - INFO - ---------------------------------------------
2024-11-09 05:46 - INFO - ---------------------------------------------
2024-11-09 05:46 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 05:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56949
2024-11-09 05:46 - INFO - 	 Train Loss: 0.137
2024-11-09 05:46 - INFO - 	 Val. Loss: 0.166
2024-11-09 05:46 - INFO - 	 ROC-AUC: 0.946
2024-11-09 05:46 - INFO - 	 PR-AUC: 0.569
2024-11-09 05:46 - INFO - 	 Best Val. Loss: 0.166
2024-11-09 05:46 - INFO - 	 Best ROC-AUC: 0.946
2024-11-09 05:46 - INFO - 	 Best PR-AUC: 0.569
2024-11-09 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-09 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.599
2024-11-09 05:46 - INFO - ---------------------------------------------
2024-11-09 05:54 - INFO - ---------------------------------------------
2024-11-09 05:54 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 05:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65706
2024-11-09 05:54 - INFO - 	 Train Loss: 0.122
2024-11-09 05:54 - INFO - 	 Val. Loss: 0.116
2024-11-09 05:54 - INFO - 	 ROC-AUC: 0.965
2024-11-09 05:54 - INFO - 	 PR-AUC: 0.657
2024-11-09 05:54 - INFO - 	 Best Val. Loss: 0.116
2024-11-09 05:54 - INFO - 	 Best ROC-AUC: 0.965
2024-11-09 05:54 - INFO - 	 Best PR-AUC: 0.657
2024-11-09 05:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-09 05:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.643
2024-11-09 05:54 - INFO - ---------------------------------------------
2024-11-09 06:02 - INFO - ---------------------------------------------
2024-11-09 06:02 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-09 06:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70717
2024-11-09 06:02 - INFO - 	 Train Loss: 0.112
2024-11-09 06:02 - INFO - 	 Val. Loss: 0.109
2024-11-09 06:02 - INFO - 	 ROC-AUC: 0.970
2024-11-09 06:02 - INFO - 	 PR-AUC: 0.707
2024-11-09 06:02 - INFO - 	 Best Val. Loss: 0.109
2024-11-09 06:02 - INFO - 	 Best ROC-AUC: 0.970
2024-11-09 06:02 - INFO - 	 Best PR-AUC: 0.707
2024-11-09 06:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-09 06:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.679
2024-11-09 06:02 - INFO - ---------------------------------------------
2024-11-09 06:10 - INFO - ---------------------------------------------
2024-11-09 06:10 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-09 06:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72041
2024-11-09 06:10 - INFO - 	 Train Loss: 0.108
2024-11-09 06:10 - INFO - 	 Val. Loss: 0.098
2024-11-09 06:10 - INFO - 	 ROC-AUC: 0.972
2024-11-09 06:10 - INFO - 	 PR-AUC: 0.720
2024-11-09 06:10 - INFO - 	 Best Val. Loss: 0.098
2024-11-09 06:10 - INFO - 	 Best ROC-AUC: 0.972
2024-11-09 06:10 - INFO - 	 Best PR-AUC: 0.720
2024-11-09 06:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-09 06:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-11-09 06:10 - INFO - ---------------------------------------------
2024-11-09 06:18 - INFO - ---------------------------------------------
2024-11-09 06:18 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-09 06:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74467
2024-11-09 06:18 - INFO - 	 Train Loss: 0.101
2024-11-09 06:18 - INFO - 	 Val. Loss: 0.092
2024-11-09 06:18 - INFO - 	 ROC-AUC: 0.974
2024-11-09 06:18 - INFO - 	 PR-AUC: 0.745
2024-11-09 06:18 - INFO - 	 Best Val. Loss: 0.092
2024-11-09 06:18 - INFO - 	 Best ROC-AUC: 0.974
2024-11-09 06:18 - INFO - 	 Best PR-AUC: 0.745
2024-11-09 06:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-09 06:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.723
2024-11-09 06:18 - INFO - ---------------------------------------------
2024-11-09 06:20 - INFO - Fit the preprocessing pipeline
2024-11-09 06:20 - INFO - Training using device: cuda
2024-11-09 06:20 - INFO - Creating generators
2024-11-09 06:20 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 06:20 - INFO - * Model:
2024-11-09 06:20 - INFO - * -----------
2024-11-09 06:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 06:20 - INFO - * -----------
2024-11-09 06:28 - INFO - ---------------------------------------------
2024-11-09 06:28 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-09 06:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12755
2024-11-09 06:28 - INFO - 	 Train Loss: 0.264
2024-11-09 06:28 - INFO - 	 Val. Loss: 0.239
2024-11-09 06:28 - INFO - 	 ROC-AUC: 0.624
2024-11-09 06:28 - INFO - 	 PR-AUC: 0.128
2024-11-09 06:28 - INFO - 	 Best Val. Loss: 0.239
2024-11-09 06:28 - INFO - 	 Best ROC-AUC: 0.624
2024-11-09 06:28 - INFO - 	 Best PR-AUC: 0.128
2024-11-09 06:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.595
2024-11-09 06:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-09 06:28 - INFO - ---------------------------------------------
2024-11-09 06:36 - INFO - ---------------------------------------------
2024-11-09 06:36 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-09 06:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14538
2024-11-09 06:36 - INFO - 	 Train Loss: 0.253
2024-11-09 06:36 - INFO - 	 Val. Loss: 0.249
2024-11-09 06:36 - INFO - 	 ROC-AUC: 0.628
2024-11-09 06:36 - INFO - 	 PR-AUC: 0.145
2024-11-09 06:36 - INFO - 	 Best Val. Loss: 0.239
2024-11-09 06:36 - INFO - 	 Best ROC-AUC: 0.628
2024-11-09 06:36 - INFO - 	 Best PR-AUC: 0.145
2024-11-09 06:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.603
2024-11-09 06:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-09 06:36 - INFO - ---------------------------------------------
2024-11-09 06:44 - INFO - ---------------------------------------------
2024-11-09 06:44 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-09 06:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20289
2024-11-09 06:44 - INFO - 	 Train Loss: 0.237
2024-11-09 06:44 - INFO - 	 Val. Loss: 0.242
2024-11-09 06:44 - INFO - 	 ROC-AUC: 0.753
2024-11-09 06:44 - INFO - 	 PR-AUC: 0.203
2024-11-09 06:44 - INFO - 	 Best Val. Loss: 0.239
2024-11-09 06:44 - INFO - 	 Best ROC-AUC: 0.753
2024-11-09 06:44 - INFO - 	 Best PR-AUC: 0.203
2024-11-09 06:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.722
2024-11-09 06:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.232
2024-11-09 06:44 - INFO - ---------------------------------------------
2024-11-09 06:52 - INFO - ---------------------------------------------
2024-11-09 06:52 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-09 06:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2733
2024-11-09 06:52 - INFO - 	 Train Loss: 0.216
2024-11-09 06:52 - INFO - 	 Val. Loss: 0.294
2024-11-09 06:52 - INFO - 	 ROC-AUC: 0.831
2024-11-09 06:52 - INFO - 	 PR-AUC: 0.273
2024-11-09 06:52 - INFO - 	 Best Val. Loss: 0.239
2024-11-09 06:52 - INFO - 	 Best ROC-AUC: 0.831
2024-11-09 06:52 - INFO - 	 Best PR-AUC: 0.273
2024-11-09 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.806
2024-11-09 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.285
2024-11-09 06:52 - INFO - ---------------------------------------------
2024-11-09 07:00 - INFO - ---------------------------------------------
2024-11-09 07:00 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-09 07:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42281
2024-11-09 07:00 - INFO - 	 Train Loss: 0.178
2024-11-09 07:00 - INFO - 	 Val. Loss: 0.300
2024-11-09 07:00 - INFO - 	 ROC-AUC: 0.905
2024-11-09 07:00 - INFO - 	 PR-AUC: 0.423
2024-11-09 07:00 - INFO - 	 Best Val. Loss: 0.239
2024-11-09 07:00 - INFO - 	 Best ROC-AUC: 0.905
2024-11-09 07:00 - INFO - 	 Best PR-AUC: 0.423
2024-11-09 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.900
2024-11-09 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.467
2024-11-09 07:00 - INFO - ---------------------------------------------
2024-11-09 07:08 - INFO - ---------------------------------------------
2024-11-09 07:08 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 07:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51993
2024-11-09 07:08 - INFO - 	 Train Loss: 0.146
2024-11-09 07:08 - INFO - 	 Val. Loss: 0.234
2024-11-09 07:08 - INFO - 	 ROC-AUC: 0.938
2024-11-09 07:08 - INFO - 	 PR-AUC: 0.520
2024-11-09 07:08 - INFO - 	 Best Val. Loss: 0.234
2024-11-09 07:08 - INFO - 	 Best ROC-AUC: 0.938
2024-11-09 07:08 - INFO - 	 Best PR-AUC: 0.520
2024-11-09 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-09 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.555
2024-11-09 07:08 - INFO - ---------------------------------------------
2024-11-09 07:16 - INFO - ---------------------------------------------
2024-11-09 07:16 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 07:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58973
2024-11-09 07:16 - INFO - 	 Train Loss: 0.131
2024-11-09 07:16 - INFO - 	 Val. Loss: 0.162
2024-11-09 07:16 - INFO - 	 ROC-AUC: 0.951
2024-11-09 07:16 - INFO - 	 PR-AUC: 0.590
2024-11-09 07:16 - INFO - 	 Best Val. Loss: 0.162
2024-11-09 07:16 - INFO - 	 Best ROC-AUC: 0.951
2024-11-09 07:16 - INFO - 	 Best PR-AUC: 0.590
2024-11-09 07:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-09 07:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.624
2024-11-09 07:16 - INFO - ---------------------------------------------
2024-11-09 07:25 - INFO - ---------------------------------------------
2024-11-09 07:25 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-09 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63525
2024-11-09 07:25 - INFO - 	 Train Loss: 0.121
2024-11-09 07:25 - INFO - 	 Val. Loss: 0.128
2024-11-09 07:25 - INFO - 	 ROC-AUC: 0.958
2024-11-09 07:25 - INFO - 	 PR-AUC: 0.635
2024-11-09 07:25 - INFO - 	 Best Val. Loss: 0.128
2024-11-09 07:25 - INFO - 	 Best ROC-AUC: 0.958
2024-11-09 07:25 - INFO - 	 Best PR-AUC: 0.635
2024-11-09 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-09 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.670
2024-11-09 07:25 - INFO - ---------------------------------------------
2024-11-09 07:33 - INFO - ---------------------------------------------
2024-11-09 07:33 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-09 07:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68513
2024-11-09 07:33 - INFO - 	 Train Loss: 0.114
2024-11-09 07:33 - INFO - 	 Val. Loss: 0.115
2024-11-09 07:33 - INFO - 	 ROC-AUC: 0.968
2024-11-09 07:33 - INFO - 	 PR-AUC: 0.685
2024-11-09 07:33 - INFO - 	 Best Val. Loss: 0.115
2024-11-09 07:33 - INFO - 	 Best ROC-AUC: 0.968
2024-11-09 07:33 - INFO - 	 Best PR-AUC: 0.685
2024-11-09 07:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-09 07:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-11-09 07:33 - INFO - ---------------------------------------------
2024-11-09 07:41 - INFO - ---------------------------------------------
2024-11-09 07:41 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-09 07:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73401
2024-11-09 07:41 - INFO - 	 Train Loss: 0.109
2024-11-09 07:41 - INFO - 	 Val. Loss: 0.113
2024-11-09 07:41 - INFO - 	 ROC-AUC: 0.970
2024-11-09 07:41 - INFO - 	 PR-AUC: 0.734
2024-11-09 07:41 - INFO - 	 Best Val. Loss: 0.113
2024-11-09 07:41 - INFO - 	 Best ROC-AUC: 0.970
2024-11-09 07:41 - INFO - 	 Best PR-AUC: 0.734
2024-11-09 07:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-09 07:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.744
2024-11-09 07:41 - INFO - ---------------------------------------------
2024-11-09 07:43 - INFO - Fit the preprocessing pipeline
2024-11-09 07:43 - INFO - Training using device: cuda
2024-11-09 07:43 - INFO - Creating generators
2024-11-09 07:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 07:43 - INFO - * Model:
2024-11-09 07:43 - INFO - * -----------
2024-11-09 07:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 07:43 - INFO - * -----------
2024-11-09 07:51 - INFO - ---------------------------------------------
2024-11-09 07:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-09 07:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12761
2024-11-09 07:51 - INFO - 	 Train Loss: 0.263
2024-11-09 07:51 - INFO - 	 Val. Loss: 0.256
2024-11-09 07:51 - INFO - 	 ROC-AUC: 0.594
2024-11-09 07:51 - INFO - 	 PR-AUC: 0.128
2024-11-09 07:51 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 07:51 - INFO - 	 Best ROC-AUC: 0.594
2024-11-09 07:51 - INFO - 	 Best PR-AUC: 0.128
2024-11-09 07:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.569
2024-11-09 07:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-09 07:51 - INFO - ---------------------------------------------
2024-11-09 07:59 - INFO - ---------------------------------------------
2024-11-09 07:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-09 07:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15295
2024-11-09 07:59 - INFO - 	 Train Loss: 0.242
2024-11-09 07:59 - INFO - 	 Val. Loss: 0.312
2024-11-09 07:59 - INFO - 	 ROC-AUC: 0.649
2024-11-09 07:59 - INFO - 	 PR-AUC: 0.153
2024-11-09 07:59 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 07:59 - INFO - 	 Best ROC-AUC: 0.649
2024-11-09 07:59 - INFO - 	 Best PR-AUC: 0.153
2024-11-09 07:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.641
2024-11-09 07:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.195
2024-11-09 07:59 - INFO - ---------------------------------------------
2024-11-09 08:07 - INFO - ---------------------------------------------
2024-11-09 08:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-09 08:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21448
2024-11-09 08:07 - INFO - 	 Train Loss: 0.213
2024-11-09 08:07 - INFO - 	 Val. Loss: 0.500
2024-11-09 08:07 - INFO - 	 ROC-AUC: 0.750
2024-11-09 08:07 - INFO - 	 PR-AUC: 0.214
2024-11-09 08:07 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 08:07 - INFO - 	 Best ROC-AUC: 0.750
2024-11-09 08:07 - INFO - 	 Best PR-AUC: 0.214
2024-11-09 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.744
2024-11-09 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.256
2024-11-09 08:07 - INFO - ---------------------------------------------
2024-11-09 08:15 - INFO - ---------------------------------------------
2024-11-09 08:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-09 08:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31625
2024-11-09 08:15 - INFO - 	 Train Loss: 0.175
2024-11-09 08:15 - INFO - 	 Val. Loss: 0.513
2024-11-09 08:15 - INFO - 	 ROC-AUC: 0.872
2024-11-09 08:15 - INFO - 	 PR-AUC: 0.316
2024-11-09 08:15 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 08:15 - INFO - 	 Best ROC-AUC: 0.872
2024-11-09 08:15 - INFO - 	 Best PR-AUC: 0.316
2024-11-09 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.872
2024-11-09 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.366
2024-11-09 08:15 - INFO - ---------------------------------------------
2024-11-09 08:23 - INFO - ---------------------------------------------
2024-11-09 08:23 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 08:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57789
2024-11-09 08:23 - INFO - 	 Train Loss: 0.148
2024-11-09 08:23 - INFO - 	 Val. Loss: 0.158
2024-11-09 08:23 - INFO - 	 ROC-AUC: 0.946
2024-11-09 08:23 - INFO - 	 PR-AUC: 0.578
2024-11-09 08:23 - INFO - 	 Best Val. Loss: 0.158
2024-11-09 08:23 - INFO - 	 Best ROC-AUC: 0.946
2024-11-09 08:23 - INFO - 	 Best PR-AUC: 0.578
2024-11-09 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-09 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.603
2024-11-09 08:23 - INFO - ---------------------------------------------
2024-11-09 08:31 - INFO - ---------------------------------------------
2024-11-09 08:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 08:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61886
2024-11-09 08:31 - INFO - 	 Train Loss: 0.131
2024-11-09 08:31 - INFO - 	 Val. Loss: 0.146
2024-11-09 08:31 - INFO - 	 ROC-AUC: 0.953
2024-11-09 08:31 - INFO - 	 PR-AUC: 0.619
2024-11-09 08:31 - INFO - 	 Best Val. Loss: 0.146
2024-11-09 08:31 - INFO - 	 Best ROC-AUC: 0.953
2024-11-09 08:31 - INFO - 	 Best PR-AUC: 0.619
2024-11-09 08:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-09 08:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.628
2024-11-09 08:31 - INFO - ---------------------------------------------
2024-11-09 08:39 - INFO - ---------------------------------------------
2024-11-09 08:39 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66633
2024-11-09 08:39 - INFO - 	 Train Loss: 0.122
2024-11-09 08:39 - INFO - 	 Val. Loss: 0.127
2024-11-09 08:39 - INFO - 	 ROC-AUC: 0.963
2024-11-09 08:39 - INFO - 	 PR-AUC: 0.666
2024-11-09 08:39 - INFO - 	 Best Val. Loss: 0.127
2024-11-09 08:39 - INFO - 	 Best ROC-AUC: 0.963
2024-11-09 08:39 - INFO - 	 Best PR-AUC: 0.666
2024-11-09 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-09 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.661
2024-11-09 08:39 - INFO - ---------------------------------------------
2024-11-09 08:47 - INFO - ---------------------------------------------
2024-11-09 08:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-09 08:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71413
2024-11-09 08:47 - INFO - 	 Train Loss: 0.113
2024-11-09 08:47 - INFO - 	 Val. Loss: 0.111
2024-11-09 08:47 - INFO - 	 ROC-AUC: 0.968
2024-11-09 08:47 - INFO - 	 PR-AUC: 0.714
2024-11-09 08:47 - INFO - 	 Best Val. Loss: 0.111
2024-11-09 08:47 - INFO - 	 Best ROC-AUC: 0.968
2024-11-09 08:47 - INFO - 	 Best PR-AUC: 0.714
2024-11-09 08:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-09 08:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.718
2024-11-09 08:47 - INFO - ---------------------------------------------
2024-11-09 08:55 - INFO - ---------------------------------------------
2024-11-09 08:55 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-09 08:55 - INFO - 	 Train Loss: 0.105
2024-11-09 08:55 - INFO - 	 Val. Loss: 0.100
2024-11-09 08:55 - INFO - 	 ROC-AUC: 0.972
2024-11-09 08:55 - INFO - 	 PR-AUC: 0.697
2024-11-09 08:55 - INFO - 	 Best Val. Loss: 0.100
2024-11-09 08:55 - INFO - 	 Best ROC-AUC: 0.972
2024-11-09 08:55 - INFO - 	 Best PR-AUC: 0.714
2024-11-09 08:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-09 08:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.718
2024-11-09 08:55 - INFO - ---------------------------------------------
2024-11-09 09:03 - INFO - ---------------------------------------------
2024-11-09 09:03 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-09 09:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76518
2024-11-09 09:03 - INFO - 	 Train Loss: 0.102
2024-11-09 09:03 - INFO - 	 Val. Loss: 0.088
2024-11-09 09:03 - INFO - 	 ROC-AUC: 0.976
2024-11-09 09:03 - INFO - 	 PR-AUC: 0.765
2024-11-09 09:03 - INFO - 	 Best Val. Loss: 0.088
2024-11-09 09:03 - INFO - 	 Best ROC-AUC: 0.976
2024-11-09 09:03 - INFO - 	 Best PR-AUC: 0.765
2024-11-09 09:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-09 09:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-11-09 09:03 - INFO - ---------------------------------------------
2024-11-09 09:06 - INFO - Fit the preprocessing pipeline
2024-11-09 09:06 - INFO - Training using device: cuda
2024-11-09 09:06 - INFO - Creating generators
2024-11-09 09:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 09:06 - INFO - * Model:
2024-11-09 09:06 - INFO - * -----------
2024-11-09 09:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 09:06 - INFO - * -----------
2024-11-09 09:14 - INFO - ---------------------------------------------
2024-11-09 09:14 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-09 09:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10283
2024-11-09 09:14 - INFO - 	 Train Loss: 0.265
2024-11-09 09:14 - INFO - 	 Val. Loss: 0.253
2024-11-09 09:14 - INFO - 	 ROC-AUC: 0.578
2024-11-09 09:14 - INFO - 	 PR-AUC: 0.103
2024-11-09 09:14 - INFO - 	 Best Val. Loss: 0.253
2024-11-09 09:14 - INFO - 	 Best ROC-AUC: 0.578
2024-11-09 09:14 - INFO - 	 Best PR-AUC: 0.103
2024-11-09 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.551
2024-11-09 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.115
2024-11-09 09:14 - INFO - ---------------------------------------------
2024-11-09 09:22 - INFO - ---------------------------------------------
2024-11-09 09:22 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-09 09:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1423
2024-11-09 09:22 - INFO - 	 Train Loss: 0.249
2024-11-09 09:22 - INFO - 	 Val. Loss: 0.240
2024-11-09 09:22 - INFO - 	 ROC-AUC: 0.616
2024-11-09 09:22 - INFO - 	 PR-AUC: 0.142
2024-11-09 09:22 - INFO - 	 Best Val. Loss: 0.240
2024-11-09 09:22 - INFO - 	 Best ROC-AUC: 0.616
2024-11-09 09:22 - INFO - 	 Best PR-AUC: 0.142
2024-11-09 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.599
2024-11-09 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-09 09:22 - INFO - ---------------------------------------------
2024-11-09 09:30 - INFO - ---------------------------------------------
2024-11-09 09:30 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-09 09:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15986
2024-11-09 09:30 - INFO - 	 Train Loss: 0.243
2024-11-09 09:30 - INFO - 	 Val. Loss: 0.233
2024-11-09 09:30 - INFO - 	 ROC-AUC: 0.644
2024-11-09 09:30 - INFO - 	 PR-AUC: 0.160
2024-11-09 09:30 - INFO - 	 Best Val. Loss: 0.233
2024-11-09 09:30 - INFO - 	 Best ROC-AUC: 0.644
2024-11-09 09:30 - INFO - 	 Best PR-AUC: 0.160
2024-11-09 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.638
2024-11-09 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.209
2024-11-09 09:30 - INFO - ---------------------------------------------
2024-11-09 09:38 - INFO - ---------------------------------------------
2024-11-09 09:38 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-09 09:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22694
2024-11-09 09:38 - INFO - 	 Train Loss: 0.228
2024-11-09 09:38 - INFO - 	 Val. Loss: 0.304
2024-11-09 09:38 - INFO - 	 ROC-AUC: 0.752
2024-11-09 09:38 - INFO - 	 PR-AUC: 0.227
2024-11-09 09:38 - INFO - 	 Best Val. Loss: 0.233
2024-11-09 09:38 - INFO - 	 Best ROC-AUC: 0.752
2024-11-09 09:38 - INFO - 	 Best PR-AUC: 0.227
2024-11-09 09:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.743
2024-11-09 09:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.276
2024-11-09 09:38 - INFO - ---------------------------------------------
2024-11-09 09:46 - INFO - ---------------------------------------------
2024-11-09 09:46 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 09:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39871
2024-11-09 09:46 - INFO - 	 Train Loss: 0.182
2024-11-09 09:46 - INFO - 	 Val. Loss: 0.273
2024-11-09 09:46 - INFO - 	 ROC-AUC: 0.908
2024-11-09 09:46 - INFO - 	 PR-AUC: 0.399
2024-11-09 09:46 - INFO - 	 Best Val. Loss: 0.233
2024-11-09 09:46 - INFO - 	 Best ROC-AUC: 0.908
2024-11-09 09:46 - INFO - 	 Best PR-AUC: 0.399
2024-11-09 09:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-09 09:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-11-09 09:46 - INFO - ---------------------------------------------
2024-11-09 09:54 - INFO - ---------------------------------------------
2024-11-09 09:54 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 09:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5285
2024-11-09 09:54 - INFO - 	 Train Loss: 0.147
2024-11-09 09:54 - INFO - 	 Val. Loss: 0.266
2024-11-09 09:54 - INFO - 	 ROC-AUC: 0.934
2024-11-09 09:54 - INFO - 	 PR-AUC: 0.528
2024-11-09 09:54 - INFO - 	 Best Val. Loss: 0.233
2024-11-09 09:54 - INFO - 	 Best ROC-AUC: 0.934
2024-11-09 09:54 - INFO - 	 Best PR-AUC: 0.528
2024-11-09 09:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-09 09:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.547
2024-11-09 09:54 - INFO - ---------------------------------------------
2024-11-09 10:02 - INFO - ---------------------------------------------
2024-11-09 10:02 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-09 10:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63043
2024-11-09 10:02 - INFO - 	 Train Loss: 0.131
2024-11-09 10:02 - INFO - 	 Val. Loss: 0.135
2024-11-09 10:02 - INFO - 	 ROC-AUC: 0.962
2024-11-09 10:02 - INFO - 	 PR-AUC: 0.630
2024-11-09 10:02 - INFO - 	 Best Val. Loss: 0.135
2024-11-09 10:02 - INFO - 	 Best ROC-AUC: 0.962
2024-11-09 10:02 - INFO - 	 Best PR-AUC: 0.630
2024-11-09 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-09 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.666
2024-11-09 10:02 - INFO - ---------------------------------------------
2024-11-09 10:10 - INFO - ---------------------------------------------
2024-11-09 10:10 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-09 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64919
2024-11-09 10:10 - INFO - 	 Train Loss: 0.120
2024-11-09 10:10 - INFO - 	 Val. Loss: 0.131
2024-11-09 10:10 - INFO - 	 ROC-AUC: 0.962
2024-11-09 10:10 - INFO - 	 PR-AUC: 0.649
2024-11-09 10:10 - INFO - 	 Best Val. Loss: 0.131
2024-11-09 10:10 - INFO - 	 Best ROC-AUC: 0.962
2024-11-09 10:10 - INFO - 	 Best PR-AUC: 0.649
2024-11-09 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-09 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.654
2024-11-09 10:10 - INFO - ---------------------------------------------
2024-11-09 10:18 - INFO - ---------------------------------------------
2024-11-09 10:18 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-09 10:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74794
2024-11-09 10:18 - INFO - 	 Train Loss: 0.112
2024-11-09 10:18 - INFO - 	 Val. Loss: 0.095
2024-11-09 10:18 - INFO - 	 ROC-AUC: 0.973
2024-11-09 10:18 - INFO - 	 PR-AUC: 0.748
2024-11-09 10:18 - INFO - 	 Best Val. Loss: 0.095
2024-11-09 10:18 - INFO - 	 Best ROC-AUC: 0.973
2024-11-09 10:18 - INFO - 	 Best PR-AUC: 0.748
2024-11-09 10:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-09 10:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-11-09 10:18 - INFO - ---------------------------------------------
2024-11-09 10:26 - INFO - ---------------------------------------------
2024-11-09 10:26 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-09 10:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75686
2024-11-09 10:26 - INFO - 	 Train Loss: 0.103
2024-11-09 10:26 - INFO - 	 Val. Loss: 0.094
2024-11-09 10:26 - INFO - 	 ROC-AUC: 0.974
2024-11-09 10:26 - INFO - 	 PR-AUC: 0.757
2024-11-09 10:26 - INFO - 	 Best Val. Loss: 0.094
2024-11-09 10:26 - INFO - 	 Best ROC-AUC: 0.974
2024-11-09 10:26 - INFO - 	 Best PR-AUC: 0.757
2024-11-09 10:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-09 10:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.761
2024-11-09 10:26 - INFO - ---------------------------------------------
2024-11-09 10:28 - INFO - Fit the preprocessing pipeline
2024-11-09 10:28 - INFO - Training using device: cuda
2024-11-09 10:28 - INFO - Creating generators
2024-11-09 10:28 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 10:28 - INFO - * Model:
2024-11-09 10:28 - INFO - * -----------
2024-11-09 10:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 10:28 - INFO - * -----------
2024-11-09 10:36 - INFO - ---------------------------------------------
2024-11-09 10:36 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 10:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11977
2024-11-09 10:36 - INFO - 	 Train Loss: 0.265
2024-11-09 10:36 - INFO - 	 Val. Loss: 0.262
2024-11-09 10:36 - INFO - 	 ROC-AUC: 0.595
2024-11-09 10:36 - INFO - 	 PR-AUC: 0.120
2024-11-09 10:36 - INFO - 	 Best Val. Loss: 0.262
2024-11-09 10:36 - INFO - 	 Best ROC-AUC: 0.595
2024-11-09 10:36 - INFO - 	 Best PR-AUC: 0.120
2024-11-09 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.584
2024-11-09 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-09 10:36 - INFO - ---------------------------------------------
2024-11-09 10:44 - INFO - ---------------------------------------------
2024-11-09 10:44 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-09 10:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16688
2024-11-09 10:44 - INFO - 	 Train Loss: 0.248
2024-11-09 10:44 - INFO - 	 Val. Loss: 0.306
2024-11-09 10:44 - INFO - 	 ROC-AUC: 0.660
2024-11-09 10:44 - INFO - 	 PR-AUC: 0.167
2024-11-09 10:44 - INFO - 	 Best Val. Loss: 0.262
2024-11-09 10:44 - INFO - 	 Best ROC-AUC: 0.660
2024-11-09 10:44 - INFO - 	 Best PR-AUC: 0.167
2024-11-09 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.631
2024-11-09 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.191
2024-11-09 10:44 - INFO - ---------------------------------------------
2024-11-09 10:52 - INFO - ---------------------------------------------
2024-11-09 10:52 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-09 10:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23086
2024-11-09 10:52 - INFO - 	 Train Loss: 0.219
2024-11-09 10:52 - INFO - 	 Val. Loss: 0.446
2024-11-09 10:52 - INFO - 	 ROC-AUC: 0.771
2024-11-09 10:52 - INFO - 	 PR-AUC: 0.231
2024-11-09 10:52 - INFO - 	 Best Val. Loss: 0.262
2024-11-09 10:52 - INFO - 	 Best ROC-AUC: 0.771
2024-11-09 10:52 - INFO - 	 Best PR-AUC: 0.231
2024-11-09 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-09 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.264
2024-11-09 10:52 - INFO - ---------------------------------------------
2024-11-09 11:00 - INFO - ---------------------------------------------
2024-11-09 11:00 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 11:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35323
2024-11-09 11:00 - INFO - 	 Train Loss: 0.184
2024-11-09 11:00 - INFO - 	 Val. Loss: 0.336
2024-11-09 11:00 - INFO - 	 ROC-AUC: 0.882
2024-11-09 11:00 - INFO - 	 PR-AUC: 0.353
2024-11-09 11:00 - INFO - 	 Best Val. Loss: 0.262
2024-11-09 11:00 - INFO - 	 Best ROC-AUC: 0.882
2024-11-09 11:00 - INFO - 	 Best PR-AUC: 0.353
2024-11-09 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-09 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.360
2024-11-09 11:00 - INFO - ---------------------------------------------
2024-11-09 11:08 - INFO - ---------------------------------------------
2024-11-09 11:08 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-09 11:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42926
2024-11-09 11:08 - INFO - 	 Train Loss: 0.155
2024-11-09 11:08 - INFO - 	 Val. Loss: 0.216
2024-11-09 11:08 - INFO - 	 ROC-AUC: 0.921
2024-11-09 11:08 - INFO - 	 PR-AUC: 0.429
2024-11-09 11:08 - INFO - 	 Best Val. Loss: 0.216
2024-11-09 11:08 - INFO - 	 Best ROC-AUC: 0.921
2024-11-09 11:08 - INFO - 	 Best PR-AUC: 0.429
2024-11-09 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-09 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.478
2024-11-09 11:08 - INFO - ---------------------------------------------
2024-11-09 11:16 - INFO - ---------------------------------------------
2024-11-09 11:16 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 11:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56834
2024-11-09 11:16 - INFO - 	 Train Loss: 0.136
2024-11-09 11:16 - INFO - 	 Val. Loss: 0.202
2024-11-09 11:16 - INFO - 	 ROC-AUC: 0.945
2024-11-09 11:16 - INFO - 	 PR-AUC: 0.568
2024-11-09 11:16 - INFO - 	 Best Val. Loss: 0.202
2024-11-09 11:16 - INFO - 	 Best ROC-AUC: 0.945
2024-11-09 11:16 - INFO - 	 Best PR-AUC: 0.568
2024-11-09 11:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-09 11:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.599
2024-11-09 11:16 - INFO - ---------------------------------------------
2024-11-09 11:25 - INFO - ---------------------------------------------
2024-11-09 11:25 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-09 11:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.638
2024-11-09 11:25 - INFO - 	 Train Loss: 0.124
2024-11-09 11:25 - INFO - 	 Val. Loss: 0.130
2024-11-09 11:25 - INFO - 	 ROC-AUC: 0.961
2024-11-09 11:25 - INFO - 	 PR-AUC: 0.638
2024-11-09 11:25 - INFO - 	 Best Val. Loss: 0.130
2024-11-09 11:25 - INFO - 	 Best ROC-AUC: 0.961
2024-11-09 11:25 - INFO - 	 Best PR-AUC: 0.638
2024-11-09 11:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-09 11:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.659
2024-11-09 11:25 - INFO - ---------------------------------------------
2024-11-09 11:33 - INFO - ---------------------------------------------
2024-11-09 11:33 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-09 11:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66692
2024-11-09 11:33 - INFO - 	 Train Loss: 0.115
2024-11-09 11:33 - INFO - 	 Val. Loss: 0.116
2024-11-09 11:33 - INFO - 	 ROC-AUC: 0.966
2024-11-09 11:33 - INFO - 	 PR-AUC: 0.667
2024-11-09 11:33 - INFO - 	 Best Val. Loss: 0.116
2024-11-09 11:33 - INFO - 	 Best ROC-AUC: 0.966
2024-11-09 11:33 - INFO - 	 Best PR-AUC: 0.667
2024-11-09 11:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-09 11:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.701
2024-11-09 11:33 - INFO - ---------------------------------------------
2024-11-09 11:41 - INFO - ---------------------------------------------
2024-11-09 11:41 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-09 11:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73375
2024-11-09 11:41 - INFO - 	 Train Loss: 0.110
2024-11-09 11:41 - INFO - 	 Val. Loss: 0.107
2024-11-09 11:41 - INFO - 	 ROC-AUC: 0.969
2024-11-09 11:41 - INFO - 	 PR-AUC: 0.734
2024-11-09 11:41 - INFO - 	 Best Val. Loss: 0.107
2024-11-09 11:41 - INFO - 	 Best ROC-AUC: 0.969
2024-11-09 11:41 - INFO - 	 Best PR-AUC: 0.734
2024-11-09 11:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-09 11:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-11-09 11:41 - INFO - ---------------------------------------------
2024-11-09 11:49 - INFO - ---------------------------------------------
2024-11-09 11:49 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-09 11:49 - INFO - 	 Train Loss: 0.103
2024-11-09 11:49 - INFO - 	 Val. Loss: 0.105
2024-11-09 11:49 - INFO - 	 ROC-AUC: 0.972
2024-11-09 11:49 - INFO - 	 PR-AUC: 0.730
2024-11-09 11:49 - INFO - 	 Best Val. Loss: 0.105
2024-11-09 11:49 - INFO - 	 Best ROC-AUC: 0.972
2024-11-09 11:49 - INFO - 	 Best PR-AUC: 0.734
2024-11-09 11:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-09 11:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.733
2024-11-09 11:49 - INFO - ---------------------------------------------
2024-11-09 11:51 - INFO - Fit the preprocessing pipeline
2024-11-09 11:51 - INFO - Training using device: cuda
2024-11-09 11:51 - INFO - Creating generators
2024-11-09 11:51 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 11:51 - INFO - * Model:
2024-11-09 11:51 - INFO - * -----------
2024-11-09 11:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 11:51 - INFO - * -----------
2024-11-09 11:59 - INFO - ---------------------------------------------
2024-11-09 11:59 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 11:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12213
2024-11-09 11:59 - INFO - 	 Train Loss: 0.264
2024-11-09 11:59 - INFO - 	 Val. Loss: 0.268
2024-11-09 11:59 - INFO - 	 ROC-AUC: 0.582
2024-11-09 11:59 - INFO - 	 PR-AUC: 0.122
2024-11-09 11:59 - INFO - 	 Best Val. Loss: 0.268
2024-11-09 11:59 - INFO - 	 Best ROC-AUC: 0.582
2024-11-09 11:59 - INFO - 	 Best PR-AUC: 0.122
2024-11-09 11:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.580
2024-11-09 11:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.156
2024-11-09 11:59 - INFO - ---------------------------------------------
2024-11-09 12:07 - INFO - ---------------------------------------------
2024-11-09 12:07 - INFO - Epoch: 02 | Time: 8m 10s
2024-11-09 12:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15942
2024-11-09 12:07 - INFO - 	 Train Loss: 0.246
2024-11-09 12:07 - INFO - 	 Val. Loss: 0.270
2024-11-09 12:07 - INFO - 	 ROC-AUC: 0.662
2024-11-09 12:07 - INFO - 	 PR-AUC: 0.159
2024-11-09 12:07 - INFO - 	 Best Val. Loss: 0.268
2024-11-09 12:07 - INFO - 	 Best ROC-AUC: 0.662
2024-11-09 12:07 - INFO - 	 Best PR-AUC: 0.159
2024-11-09 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.646
2024-11-09 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.190
2024-11-09 12:07 - INFO - ---------------------------------------------
2024-11-09 12:16 - INFO - ---------------------------------------------
2024-11-09 12:16 - INFO - Epoch: 03 | Time: 8m 36s
2024-11-09 12:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18034
2024-11-09 12:16 - INFO - 	 Train Loss: 0.221
2024-11-09 12:16 - INFO - 	 Val. Loss: 0.522
2024-11-09 12:16 - INFO - 	 ROC-AUC: 0.698
2024-11-09 12:16 - INFO - 	 PR-AUC: 0.180
2024-11-09 12:16 - INFO - 	 Best Val. Loss: 0.268
2024-11-09 12:16 - INFO - 	 Best ROC-AUC: 0.698
2024-11-09 12:16 - INFO - 	 Best PR-AUC: 0.180
2024-11-09 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.698
2024-11-09 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.220
2024-11-09 12:16 - INFO - ---------------------------------------------
2024-11-09 12:24 - INFO - ---------------------------------------------
2024-11-09 12:24 - INFO - Epoch: 04 | Time: 8m 17s
2024-11-09 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35496
2024-11-09 12:24 - INFO - 	 Train Loss: 0.182
2024-11-09 12:24 - INFO - 	 Val. Loss: 0.356
2024-11-09 12:24 - INFO - 	 ROC-AUC: 0.870
2024-11-09 12:24 - INFO - 	 PR-AUC: 0.355
2024-11-09 12:24 - INFO - 	 Best Val. Loss: 0.268
2024-11-09 12:24 - INFO - 	 Best ROC-AUC: 0.870
2024-11-09 12:24 - INFO - 	 Best PR-AUC: 0.355
2024-11-09 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.864
2024-11-09 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.383
2024-11-09 12:24 - INFO - ---------------------------------------------
2024-11-09 12:32 - INFO - ---------------------------------------------
2024-11-09 12:32 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 12:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41172
2024-11-09 12:32 - INFO - 	 Train Loss: 0.152
2024-11-09 12:32 - INFO - 	 Val. Loss: 0.347
2024-11-09 12:32 - INFO - 	 ROC-AUC: 0.897
2024-11-09 12:32 - INFO - 	 PR-AUC: 0.412
2024-11-09 12:32 - INFO - 	 Best Val. Loss: 0.268
2024-11-09 12:32 - INFO - 	 Best ROC-AUC: 0.897
2024-11-09 12:32 - INFO - 	 Best PR-AUC: 0.412
2024-11-09 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-09 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-11-09 12:32 - INFO - ---------------------------------------------
2024-11-09 12:40 - INFO - ---------------------------------------------
2024-11-09 12:40 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-09 12:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53954
2024-11-09 12:40 - INFO - 	 Train Loss: 0.136
2024-11-09 12:40 - INFO - 	 Val. Loss: 0.202
2024-11-09 12:40 - INFO - 	 ROC-AUC: 0.941
2024-11-09 12:40 - INFO - 	 PR-AUC: 0.540
2024-11-09 12:40 - INFO - 	 Best Val. Loss: 0.202
2024-11-09 12:40 - INFO - 	 Best ROC-AUC: 0.941
2024-11-09 12:40 - INFO - 	 Best PR-AUC: 0.540
2024-11-09 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-09 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.585
2024-11-09 12:40 - INFO - ---------------------------------------------
2024-11-09 12:48 - INFO - ---------------------------------------------
2024-11-09 12:48 - INFO - Epoch: 07 | Time: 8m 4s
2024-11-09 12:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60263
2024-11-09 12:48 - INFO - 	 Train Loss: 0.124
2024-11-09 12:48 - INFO - 	 Val. Loss: 0.161
2024-11-09 12:48 - INFO - 	 ROC-AUC: 0.955
2024-11-09 12:48 - INFO - 	 PR-AUC: 0.603
2024-11-09 12:48 - INFO - 	 Best Val. Loss: 0.161
2024-11-09 12:48 - INFO - 	 Best ROC-AUC: 0.955
2024-11-09 12:48 - INFO - 	 Best PR-AUC: 0.603
2024-11-09 12:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-09 12:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.625
2024-11-09 12:48 - INFO - ---------------------------------------------
2024-11-09 12:57 - INFO - ---------------------------------------------
2024-11-09 12:57 - INFO - Epoch: 08 | Time: 8m 19s
2024-11-09 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64876
2024-11-09 12:57 - INFO - 	 Train Loss: 0.116
2024-11-09 12:57 - INFO - 	 Val. Loss: 0.115
2024-11-09 12:57 - INFO - 	 ROC-AUC: 0.965
2024-11-09 12:57 - INFO - 	 PR-AUC: 0.649
2024-11-09 12:57 - INFO - 	 Best Val. Loss: 0.115
2024-11-09 12:57 - INFO - 	 Best ROC-AUC: 0.965
2024-11-09 12:57 - INFO - 	 Best PR-AUC: 0.649
2024-11-09 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-09 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.705
2024-11-09 12:57 - INFO - ---------------------------------------------
2024-11-09 13:05 - INFO - ---------------------------------------------
2024-11-09 13:05 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-09 13:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71272
2024-11-09 13:05 - INFO - 	 Train Loss: 0.110
2024-11-09 13:05 - INFO - 	 Val. Loss: 0.111
2024-11-09 13:05 - INFO - 	 ROC-AUC: 0.969
2024-11-09 13:05 - INFO - 	 PR-AUC: 0.713
2024-11-09 13:05 - INFO - 	 Best Val. Loss: 0.111
2024-11-09 13:05 - INFO - 	 Best ROC-AUC: 0.969
2024-11-09 13:05 - INFO - 	 Best PR-AUC: 0.713
2024-11-09 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-09 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.719
2024-11-09 13:05 - INFO - ---------------------------------------------
2024-11-09 13:13 - INFO - ---------------------------------------------
2024-11-09 13:13 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-09 13:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75466
2024-11-09 13:13 - INFO - 	 Train Loss: 0.102
2024-11-09 13:13 - INFO - 	 Val. Loss: 0.093
2024-11-09 13:13 - INFO - 	 ROC-AUC: 0.976
2024-11-09 13:13 - INFO - 	 PR-AUC: 0.755
2024-11-09 13:13 - INFO - 	 Best Val. Loss: 0.093
2024-11-09 13:13 - INFO - 	 Best ROC-AUC: 0.976
2024-11-09 13:13 - INFO - 	 Best PR-AUC: 0.755
2024-11-09 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-09 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-11-09 13:13 - INFO - ---------------------------------------------
2024-11-09 13:15 - INFO - Fit the preprocessing pipeline
2024-11-09 13:15 - INFO - Training using device: cuda
2024-11-09 13:15 - INFO - Creating generators
2024-11-09 13:15 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 13:15 - INFO - * Model:
2024-11-09 13:15 - INFO - * -----------
2024-11-09 13:15 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 13:15 - INFO - * -----------
2024-11-09 13:23 - INFO - ---------------------------------------------
2024-11-09 13:23 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 13:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12305
2024-11-09 13:23 - INFO - 	 Train Loss: 0.267
2024-11-09 13:23 - INFO - 	 Val. Loss: 0.252
2024-11-09 13:23 - INFO - 	 ROC-AUC: 0.589
2024-11-09 13:23 - INFO - 	 PR-AUC: 0.123
2024-11-09 13:23 - INFO - 	 Best Val. Loss: 0.252
2024-11-09 13:23 - INFO - 	 Best ROC-AUC: 0.589
2024-11-09 13:23 - INFO - 	 Best PR-AUC: 0.123
2024-11-09 13:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.593
2024-11-09 13:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-09 13:23 - INFO - ---------------------------------------------
2024-11-09 13:31 - INFO - ---------------------------------------------
2024-11-09 13:31 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-09 13:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14481
2024-11-09 13:31 - INFO - 	 Train Loss: 0.250
2024-11-09 13:31 - INFO - 	 Val. Loss: 0.249
2024-11-09 13:31 - INFO - 	 ROC-AUC: 0.619
2024-11-09 13:31 - INFO - 	 PR-AUC: 0.145
2024-11-09 13:31 - INFO - 	 Best Val. Loss: 0.249
2024-11-09 13:31 - INFO - 	 Best ROC-AUC: 0.619
2024-11-09 13:31 - INFO - 	 Best PR-AUC: 0.145
2024-11-09 13:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.607
2024-11-09 13:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.198
2024-11-09 13:31 - INFO - ---------------------------------------------
2024-11-09 13:39 - INFO - ---------------------------------------------
2024-11-09 13:39 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-09 13:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16317
2024-11-09 13:39 - INFO - 	 Train Loss: 0.231
2024-11-09 13:39 - INFO - 	 Val. Loss: 0.490
2024-11-09 13:39 - INFO - 	 ROC-AUC: 0.674
2024-11-09 13:39 - INFO - 	 PR-AUC: 0.163
2024-11-09 13:39 - INFO - 	 Best Val. Loss: 0.249
2024-11-09 13:39 - INFO - 	 Best ROC-AUC: 0.674
2024-11-09 13:39 - INFO - 	 Best PR-AUC: 0.163
2024-11-09 13:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.648
2024-11-09 13:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.184
2024-11-09 13:39 - INFO - ---------------------------------------------
2024-11-09 13:47 - INFO - ---------------------------------------------
2024-11-09 13:47 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 13:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24702
2024-11-09 13:47 - INFO - 	 Train Loss: 0.202
2024-11-09 13:47 - INFO - 	 Val. Loss: 0.443
2024-11-09 13:47 - INFO - 	 ROC-AUC: 0.804
2024-11-09 13:47 - INFO - 	 PR-AUC: 0.247
2024-11-09 13:47 - INFO - 	 Best Val. Loss: 0.249
2024-11-09 13:47 - INFO - 	 Best ROC-AUC: 0.804
2024-11-09 13:47 - INFO - 	 Best PR-AUC: 0.247
2024-11-09 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.794
2024-11-09 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.289
2024-11-09 13:47 - INFO - ---------------------------------------------
2024-11-09 13:55 - INFO - ---------------------------------------------
2024-11-09 13:55 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 13:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32732
2024-11-09 13:55 - INFO - 	 Train Loss: 0.176
2024-11-09 13:55 - INFO - 	 Val. Loss: 0.352
2024-11-09 13:55 - INFO - 	 ROC-AUC: 0.867
2024-11-09 13:55 - INFO - 	 PR-AUC: 0.327
2024-11-09 13:55 - INFO - 	 Best Val. Loss: 0.249
2024-11-09 13:55 - INFO - 	 Best ROC-AUC: 0.867
2024-11-09 13:55 - INFO - 	 Best PR-AUC: 0.327
2024-11-09 13:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.853
2024-11-09 13:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.351
2024-11-09 13:55 - INFO - ---------------------------------------------
2024-11-09 14:03 - INFO - ---------------------------------------------
2024-11-09 14:03 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-09 14:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47982
2024-11-09 14:03 - INFO - 	 Train Loss: 0.157
2024-11-09 14:03 - INFO - 	 Val. Loss: 0.285
2024-11-09 14:03 - INFO - 	 ROC-AUC: 0.923
2024-11-09 14:03 - INFO - 	 PR-AUC: 0.480
2024-11-09 14:03 - INFO - 	 Best Val. Loss: 0.249
2024-11-09 14:03 - INFO - 	 Best ROC-AUC: 0.923
2024-11-09 14:03 - INFO - 	 Best PR-AUC: 0.480
2024-11-09 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-09 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.504
2024-11-09 14:03 - INFO - ---------------------------------------------
2024-11-09 14:11 - INFO - ---------------------------------------------
2024-11-09 14:11 - INFO - Epoch: 07 | Time: 8m 6s
2024-11-09 14:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60977
2024-11-09 14:11 - INFO - 	 Train Loss: 0.137
2024-11-09 14:11 - INFO - 	 Val. Loss: 0.166
2024-11-09 14:11 - INFO - 	 ROC-AUC: 0.956
2024-11-09 14:11 - INFO - 	 PR-AUC: 0.610
2024-11-09 14:11 - INFO - 	 Best Val. Loss: 0.166
2024-11-09 14:11 - INFO - 	 Best ROC-AUC: 0.956
2024-11-09 14:11 - INFO - 	 Best PR-AUC: 0.610
2024-11-09 14:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-09 14:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.611
2024-11-09 14:11 - INFO - ---------------------------------------------
2024-11-09 14:20 - INFO - ---------------------------------------------
2024-11-09 14:20 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-09 14:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64352
2024-11-09 14:20 - INFO - 	 Train Loss: 0.122
2024-11-09 14:20 - INFO - 	 Val. Loss: 0.146
2024-11-09 14:20 - INFO - 	 ROC-AUC: 0.962
2024-11-09 14:20 - INFO - 	 PR-AUC: 0.644
2024-11-09 14:20 - INFO - 	 Best Val. Loss: 0.146
2024-11-09 14:20 - INFO - 	 Best ROC-AUC: 0.962
2024-11-09 14:20 - INFO - 	 Best PR-AUC: 0.644
2024-11-09 14:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-09 14:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.660
2024-11-09 14:20 - INFO - ---------------------------------------------
2024-11-09 14:28 - INFO - ---------------------------------------------
2024-11-09 14:28 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-09 14:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71913
2024-11-09 14:28 - INFO - 	 Train Loss: 0.111
2024-11-09 14:28 - INFO - 	 Val. Loss: 0.101
2024-11-09 14:28 - INFO - 	 ROC-AUC: 0.971
2024-11-09 14:28 - INFO - 	 PR-AUC: 0.719
2024-11-09 14:28 - INFO - 	 Best Val. Loss: 0.101
2024-11-09 14:28 - INFO - 	 Best ROC-AUC: 0.971
2024-11-09 14:28 - INFO - 	 Best PR-AUC: 0.719
2024-11-09 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-09 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.713
2024-11-09 14:28 - INFO - ---------------------------------------------
2024-11-09 14:36 - INFO - ---------------------------------------------
2024-11-09 14:36 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-09 14:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75991
2024-11-09 14:36 - INFO - 	 Train Loss: 0.103
2024-11-09 14:36 - INFO - 	 Val. Loss: 0.104
2024-11-09 14:36 - INFO - 	 ROC-AUC: 0.973
2024-11-09 14:36 - INFO - 	 PR-AUC: 0.760
2024-11-09 14:36 - INFO - 	 Best Val. Loss: 0.101
2024-11-09 14:36 - INFO - 	 Best ROC-AUC: 0.973
2024-11-09 14:36 - INFO - 	 Best PR-AUC: 0.760
2024-11-09 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-09 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-11-09 14:36 - INFO - ---------------------------------------------
2024-11-09 14:38 - INFO - Fit the preprocessing pipeline
2024-11-09 14:38 - INFO - Training using device: cuda
2024-11-09 14:38 - INFO - Creating generators
2024-11-09 14:38 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 14:38 - INFO - * Model:
2024-11-09 14:38 - INFO - * -----------
2024-11-09 14:38 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 14:38 - INFO - * -----------
2024-11-09 14:46 - INFO - ---------------------------------------------
2024-11-09 14:46 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-09 14:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11007
2024-11-09 14:46 - INFO - 	 Train Loss: 0.267
2024-11-09 14:46 - INFO - 	 Val. Loss: 0.283
2024-11-09 14:46 - INFO - 	 ROC-AUC: 0.598
2024-11-09 14:46 - INFO - 	 PR-AUC: 0.110
2024-11-09 14:46 - INFO - 	 Best Val. Loss: 0.283
2024-11-09 14:46 - INFO - 	 Best ROC-AUC: 0.598
2024-11-09 14:46 - INFO - 	 Best PR-AUC: 0.110
2024-11-09 14:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.555
2024-11-09 14:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.131
2024-11-09 14:46 - INFO - ---------------------------------------------
2024-11-09 14:54 - INFO - ---------------------------------------------
2024-11-09 14:54 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-09 14:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13269
2024-11-09 14:54 - INFO - 	 Train Loss: 0.250
2024-11-09 14:54 - INFO - 	 Val. Loss: 0.303
2024-11-09 14:54 - INFO - 	 ROC-AUC: 0.608
2024-11-09 14:54 - INFO - 	 PR-AUC: 0.133
2024-11-09 14:54 - INFO - 	 Best Val. Loss: 0.283
2024-11-09 14:54 - INFO - 	 Best ROC-AUC: 0.608
2024-11-09 14:54 - INFO - 	 Best PR-AUC: 0.133
2024-11-09 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.598
2024-11-09 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.173
2024-11-09 14:54 - INFO - ---------------------------------------------
2024-11-09 15:02 - INFO - ---------------------------------------------
2024-11-09 15:02 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-09 15:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17852
2024-11-09 15:02 - INFO - 	 Train Loss: 0.234
2024-11-09 15:02 - INFO - 	 Val. Loss: 0.314
2024-11-09 15:02 - INFO - 	 ROC-AUC: 0.707
2024-11-09 15:02 - INFO - 	 PR-AUC: 0.179
2024-11-09 15:02 - INFO - 	 Best Val. Loss: 0.283
2024-11-09 15:02 - INFO - 	 Best ROC-AUC: 0.707
2024-11-09 15:02 - INFO - 	 Best PR-AUC: 0.179
2024-11-09 15:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.683
2024-11-09 15:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.210
2024-11-09 15:02 - INFO - ---------------------------------------------
2024-11-09 15:10 - INFO - ---------------------------------------------
2024-11-09 15:10 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27398
2024-11-09 15:10 - INFO - 	 Train Loss: 0.202
2024-11-09 15:10 - INFO - 	 Val. Loss: 0.525
2024-11-09 15:10 - INFO - 	 ROC-AUC: 0.818
2024-11-09 15:10 - INFO - 	 PR-AUC: 0.274
2024-11-09 15:10 - INFO - 	 Best Val. Loss: 0.283
2024-11-09 15:10 - INFO - 	 Best ROC-AUC: 0.818
2024-11-09 15:10 - INFO - 	 Best PR-AUC: 0.274
2024-11-09 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.818
2024-11-09 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-09 15:10 - INFO - ---------------------------------------------
2024-11-09 15:18 - INFO - ---------------------------------------------
2024-11-09 15:18 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29248
2024-11-09 15:18 - INFO - 	 Train Loss: 0.167
2024-11-09 15:18 - INFO - 	 Val. Loss: 0.577
2024-11-09 15:18 - INFO - 	 ROC-AUC: 0.859
2024-11-09 15:18 - INFO - 	 PR-AUC: 0.292
2024-11-09 15:18 - INFO - 	 Best Val. Loss: 0.283
2024-11-09 15:18 - INFO - 	 Best ROC-AUC: 0.859
2024-11-09 15:18 - INFO - 	 Best PR-AUC: 0.292
2024-11-09 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.850
2024-11-09 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-09 15:18 - INFO - ---------------------------------------------
2024-11-09 15:26 - INFO - ---------------------------------------------
2024-11-09 15:26 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-09 15:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4484
2024-11-09 15:26 - INFO - 	 Train Loss: 0.146
2024-11-09 15:26 - INFO - 	 Val. Loss: 0.258
2024-11-09 15:26 - INFO - 	 ROC-AUC: 0.920
2024-11-09 15:26 - INFO - 	 PR-AUC: 0.448
2024-11-09 15:26 - INFO - 	 Best Val. Loss: 0.258
2024-11-09 15:26 - INFO - 	 Best ROC-AUC: 0.920
2024-11-09 15:26 - INFO - 	 Best PR-AUC: 0.448
2024-11-09 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-09 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.467
2024-11-09 15:26 - INFO - ---------------------------------------------
2024-11-09 15:34 - INFO - ---------------------------------------------
2024-11-09 15:34 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-09 15:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58482
2024-11-09 15:34 - INFO - 	 Train Loss: 0.132
2024-11-09 15:34 - INFO - 	 Val. Loss: 0.157
2024-11-09 15:34 - INFO - 	 ROC-AUC: 0.948
2024-11-09 15:34 - INFO - 	 PR-AUC: 0.585
2024-11-09 15:34 - INFO - 	 Best Val. Loss: 0.157
2024-11-09 15:34 - INFO - 	 Best ROC-AUC: 0.948
2024-11-09 15:34 - INFO - 	 Best PR-AUC: 0.585
2024-11-09 15:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-09 15:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.616
2024-11-09 15:34 - INFO - ---------------------------------------------
2024-11-09 15:42 - INFO - ---------------------------------------------
2024-11-09 15:42 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-09 15:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66441
2024-11-09 15:42 - INFO - 	 Train Loss: 0.122
2024-11-09 15:42 - INFO - 	 Val. Loss: 0.138
2024-11-09 15:42 - INFO - 	 ROC-AUC: 0.961
2024-11-09 15:42 - INFO - 	 PR-AUC: 0.664
2024-11-09 15:42 - INFO - 	 Best Val. Loss: 0.138
2024-11-09 15:42 - INFO - 	 Best ROC-AUC: 0.961
2024-11-09 15:42 - INFO - 	 Best PR-AUC: 0.664
2024-11-09 15:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-09 15:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.668
2024-11-09 15:42 - INFO - ---------------------------------------------
2024-11-09 15:50 - INFO - ---------------------------------------------
2024-11-09 15:50 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-09 15:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71873
2024-11-09 15:50 - INFO - 	 Train Loss: 0.111
2024-11-09 15:50 - INFO - 	 Val. Loss: 0.103
2024-11-09 15:50 - INFO - 	 ROC-AUC: 0.969
2024-11-09 15:50 - INFO - 	 PR-AUC: 0.719
2024-11-09 15:50 - INFO - 	 Best Val. Loss: 0.103
2024-11-09 15:50 - INFO - 	 Best ROC-AUC: 0.969
2024-11-09 15:50 - INFO - 	 Best PR-AUC: 0.719
2024-11-09 15:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-09 15:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.720
2024-11-09 15:50 - INFO - ---------------------------------------------
2024-11-09 15:58 - INFO - ---------------------------------------------
2024-11-09 15:58 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-09 15:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72997
2024-11-09 15:58 - INFO - 	 Train Loss: 0.104
2024-11-09 15:58 - INFO - 	 Val. Loss: 0.113
2024-11-09 15:58 - INFO - 	 ROC-AUC: 0.970
2024-11-09 15:58 - INFO - 	 PR-AUC: 0.730
2024-11-09 15:58 - INFO - 	 Best Val. Loss: 0.103
2024-11-09 15:58 - INFO - 	 Best ROC-AUC: 0.970
2024-11-09 15:58 - INFO - 	 Best PR-AUC: 0.730
2024-11-09 15:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-09 15:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-11-09 15:58 - INFO - ---------------------------------------------
2024-11-09 16:01 - INFO - Fit the preprocessing pipeline
2024-11-09 16:01 - INFO - Training using device: cuda
2024-11-09 16:01 - INFO - Creating generators
2024-11-09 16:01 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 16:01 - INFO - * Model:
2024-11-09 16:01 - INFO - * -----------
2024-11-09 16:01 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 16:01 - INFO - * -----------
2024-11-09 16:09 - INFO - ---------------------------------------------
2024-11-09 16:09 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-09 16:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11761
2024-11-09 16:09 - INFO - 	 Train Loss: 0.264
2024-11-09 16:09 - INFO - 	 Val. Loss: 0.267
2024-11-09 16:09 - INFO - 	 ROC-AUC: 0.593
2024-11-09 16:09 - INFO - 	 PR-AUC: 0.118
2024-11-09 16:09 - INFO - 	 Best Val. Loss: 0.267
2024-11-09 16:09 - INFO - 	 Best ROC-AUC: 0.593
2024-11-09 16:09 - INFO - 	 Best PR-AUC: 0.118
2024-11-09 16:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.565
2024-11-09 16:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.133
2024-11-09 16:09 - INFO - ---------------------------------------------
2024-11-09 16:17 - INFO - ---------------------------------------------
2024-11-09 16:17 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-09 16:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15382
2024-11-09 16:17 - INFO - 	 Train Loss: 0.249
2024-11-09 16:17 - INFO - 	 Val. Loss: 0.302
2024-11-09 16:17 - INFO - 	 ROC-AUC: 0.644
2024-11-09 16:17 - INFO - 	 PR-AUC: 0.154
2024-11-09 16:17 - INFO - 	 Best Val. Loss: 0.267
2024-11-09 16:17 - INFO - 	 Best ROC-AUC: 0.644
2024-11-09 16:17 - INFO - 	 Best PR-AUC: 0.154
2024-11-09 16:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.619
2024-11-09 16:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.170
2024-11-09 16:17 - INFO - ---------------------------------------------
2024-11-09 16:25 - INFO - ---------------------------------------------
2024-11-09 16:25 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-09 16:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17314
2024-11-09 16:25 - INFO - 	 Train Loss: 0.234
2024-11-09 16:25 - INFO - 	 Val. Loss: 0.287
2024-11-09 16:25 - INFO - 	 ROC-AUC: 0.704
2024-11-09 16:25 - INFO - 	 PR-AUC: 0.173
2024-11-09 16:25 - INFO - 	 Best Val. Loss: 0.267
2024-11-09 16:25 - INFO - 	 Best ROC-AUC: 0.704
2024-11-09 16:25 - INFO - 	 Best PR-AUC: 0.173
2024-11-09 16:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.705
2024-11-09 16:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.217
2024-11-09 16:25 - INFO - ---------------------------------------------
2024-11-09 16:33 - INFO - ---------------------------------------------
2024-11-09 16:33 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 16:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1876
2024-11-09 16:33 - INFO - 	 Train Loss: 0.201
2024-11-09 16:33 - INFO - 	 Val. Loss: 0.654
2024-11-09 16:33 - INFO - 	 ROC-AUC: 0.761
2024-11-09 16:33 - INFO - 	 PR-AUC: 0.188
2024-11-09 16:33 - INFO - 	 Best Val. Loss: 0.267
2024-11-09 16:33 - INFO - 	 Best ROC-AUC: 0.761
2024-11-09 16:33 - INFO - 	 Best PR-AUC: 0.188
2024-11-09 16:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-09 16:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.194
2024-11-09 16:33 - INFO - ---------------------------------------------
2024-11-09 16:41 - INFO - ---------------------------------------------
2024-11-09 16:41 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 16:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44072
2024-11-09 16:41 - INFO - 	 Train Loss: 0.167
2024-11-09 16:41 - INFO - 	 Val. Loss: 0.302
2024-11-09 16:41 - INFO - 	 ROC-AUC: 0.919
2024-11-09 16:41 - INFO - 	 PR-AUC: 0.441
2024-11-09 16:41 - INFO - 	 Best Val. Loss: 0.267
2024-11-09 16:41 - INFO - 	 Best ROC-AUC: 0.919
2024-11-09 16:41 - INFO - 	 Best PR-AUC: 0.441
2024-11-09 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-09 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.484
2024-11-09 16:41 - INFO - ---------------------------------------------
2024-11-09 16:49 - INFO - ---------------------------------------------
2024-11-09 16:49 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 16:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56906
2024-11-09 16:49 - INFO - 	 Train Loss: 0.145
2024-11-09 16:49 - INFO - 	 Val. Loss: 0.172
2024-11-09 16:49 - INFO - 	 ROC-AUC: 0.948
2024-11-09 16:49 - INFO - 	 PR-AUC: 0.569
2024-11-09 16:49 - INFO - 	 Best Val. Loss: 0.172
2024-11-09 16:49 - INFO - 	 Best ROC-AUC: 0.948
2024-11-09 16:49 - INFO - 	 Best PR-AUC: 0.569
2024-11-09 16:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-09 16:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.573
2024-11-09 16:49 - INFO - ---------------------------------------------
2024-11-09 16:57 - INFO - ---------------------------------------------
2024-11-09 16:57 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65971
2024-11-09 16:57 - INFO - 	 Train Loss: 0.130
2024-11-09 16:57 - INFO - 	 Val. Loss: 0.129
2024-11-09 16:57 - INFO - 	 ROC-AUC: 0.960
2024-11-09 16:57 - INFO - 	 PR-AUC: 0.660
2024-11-09 16:57 - INFO - 	 Best Val. Loss: 0.129
2024-11-09 16:57 - INFO - 	 Best ROC-AUC: 0.960
2024-11-09 16:57 - INFO - 	 Best PR-AUC: 0.660
2024-11-09 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-09 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.653
2024-11-09 16:57 - INFO - ---------------------------------------------
2024-11-09 17:05 - INFO - ---------------------------------------------
2024-11-09 17:05 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-09 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68898
2024-11-09 17:05 - INFO - 	 Train Loss: 0.120
2024-11-09 17:05 - INFO - 	 Val. Loss: 0.110
2024-11-09 17:05 - INFO - 	 ROC-AUC: 0.966
2024-11-09 17:05 - INFO - 	 PR-AUC: 0.689
2024-11-09 17:05 - INFO - 	 Best Val. Loss: 0.110
2024-11-09 17:05 - INFO - 	 Best ROC-AUC: 0.966
2024-11-09 17:05 - INFO - 	 Best PR-AUC: 0.689
2024-11-09 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-09 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.681
2024-11-09 17:05 - INFO - ---------------------------------------------
2024-11-09 17:13 - INFO - ---------------------------------------------
2024-11-09 17:13 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-09 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72827
2024-11-09 17:13 - INFO - 	 Train Loss: 0.112
2024-11-09 17:13 - INFO - 	 Val. Loss: 0.113
2024-11-09 17:13 - INFO - 	 ROC-AUC: 0.970
2024-11-09 17:13 - INFO - 	 PR-AUC: 0.728
2024-11-09 17:13 - INFO - 	 Best Val. Loss: 0.110
2024-11-09 17:13 - INFO - 	 Best ROC-AUC: 0.970
2024-11-09 17:13 - INFO - 	 Best PR-AUC: 0.728
2024-11-09 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-09 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.711
2024-11-09 17:13 - INFO - ---------------------------------------------
2024-11-09 17:21 - INFO - ---------------------------------------------
2024-11-09 17:21 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-09 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77101
2024-11-09 17:21 - INFO - 	 Train Loss: 0.104
2024-11-09 17:21 - INFO - 	 Val. Loss: 0.093
2024-11-09 17:21 - INFO - 	 ROC-AUC: 0.976
2024-11-09 17:21 - INFO - 	 PR-AUC: 0.771
2024-11-09 17:21 - INFO - 	 Best Val. Loss: 0.093
2024-11-09 17:21 - INFO - 	 Best ROC-AUC: 0.976
2024-11-09 17:21 - INFO - 	 Best PR-AUC: 0.771
2024-11-09 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-09 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.742
2024-11-09 17:21 - INFO - ---------------------------------------------
2024-11-09 17:23 - INFO - Fit the preprocessing pipeline
2024-11-09 17:23 - INFO - Training using device: cuda
2024-11-09 17:23 - INFO - Creating generators
2024-11-09 17:23 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 17:23 - INFO - * Model:
2024-11-09 17:23 - INFO - * -----------
2024-11-09 17:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 17:23 - INFO - * -----------
2024-11-09 17:31 - INFO - ---------------------------------------------
2024-11-09 17:31 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-09 17:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11123
2024-11-09 17:31 - INFO - 	 Train Loss: 0.265
2024-11-09 17:31 - INFO - 	 Val. Loss: 0.287
2024-11-09 17:31 - INFO - 	 ROC-AUC: 0.573
2024-11-09 17:31 - INFO - 	 PR-AUC: 0.111
2024-11-09 17:31 - INFO - 	 Best Val. Loss: 0.287
2024-11-09 17:31 - INFO - 	 Best ROC-AUC: 0.573
2024-11-09 17:31 - INFO - 	 Best PR-AUC: 0.111
2024-11-09 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.570
2024-11-09 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.141
2024-11-09 17:31 - INFO - ---------------------------------------------
2024-11-09 17:40 - INFO - ---------------------------------------------
2024-11-09 17:40 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-09 17:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15918
2024-11-09 17:40 - INFO - 	 Train Loss: 0.239
2024-11-09 17:40 - INFO - 	 Val. Loss: 0.354
2024-11-09 17:40 - INFO - 	 ROC-AUC: 0.635
2024-11-09 17:40 - INFO - 	 PR-AUC: 0.159
2024-11-09 17:40 - INFO - 	 Best Val. Loss: 0.287
2024-11-09 17:40 - INFO - 	 Best ROC-AUC: 0.635
2024-11-09 17:40 - INFO - 	 Best PR-AUC: 0.159
2024-11-09 17:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.609
2024-11-09 17:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.177
2024-11-09 17:40 - INFO - ---------------------------------------------
2024-11-09 17:48 - INFO - ---------------------------------------------
2024-11-09 17:48 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-09 17:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20953
2024-11-09 17:48 - INFO - 	 Train Loss: 0.211
2024-11-09 17:48 - INFO - 	 Val. Loss: 0.498
2024-11-09 17:48 - INFO - 	 ROC-AUC: 0.736
2024-11-09 17:48 - INFO - 	 PR-AUC: 0.210
2024-11-09 17:48 - INFO - 	 Best Val. Loss: 0.287
2024-11-09 17:48 - INFO - 	 Best ROC-AUC: 0.736
2024-11-09 17:48 - INFO - 	 Best PR-AUC: 0.210
2024-11-09 17:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.728
2024-11-09 17:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.245
2024-11-09 17:48 - INFO - ---------------------------------------------
2024-11-09 17:56 - INFO - ---------------------------------------------
2024-11-09 17:56 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 17:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35463
2024-11-09 17:56 - INFO - 	 Train Loss: 0.178
2024-11-09 17:56 - INFO - 	 Val. Loss: 0.351
2024-11-09 17:56 - INFO - 	 ROC-AUC: 0.876
2024-11-09 17:56 - INFO - 	 PR-AUC: 0.355
2024-11-09 17:56 - INFO - 	 Best Val. Loss: 0.287
2024-11-09 17:56 - INFO - 	 Best ROC-AUC: 0.876
2024-11-09 17:56 - INFO - 	 Best PR-AUC: 0.355
2024-11-09 17:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.877
2024-11-09 17:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-09 17:56 - INFO - ---------------------------------------------
2024-11-09 18:04 - INFO - ---------------------------------------------
2024-11-09 18:04 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 18:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55196
2024-11-09 18:04 - INFO - 	 Train Loss: 0.150
2024-11-09 18:04 - INFO - 	 Val. Loss: 0.215
2024-11-09 18:04 - INFO - 	 ROC-AUC: 0.937
2024-11-09 18:04 - INFO - 	 PR-AUC: 0.552
2024-11-09 18:04 - INFO - 	 Best Val. Loss: 0.215
2024-11-09 18:04 - INFO - 	 Best ROC-AUC: 0.937
2024-11-09 18:04 - INFO - 	 Best PR-AUC: 0.552
2024-11-09 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-09 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.589
2024-11-09 18:04 - INFO - ---------------------------------------------
2024-11-09 18:12 - INFO - ---------------------------------------------
2024-11-09 18:12 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 18:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6222
2024-11-09 18:12 - INFO - 	 Train Loss: 0.132
2024-11-09 18:12 - INFO - 	 Val. Loss: 0.144
2024-11-09 18:12 - INFO - 	 ROC-AUC: 0.961
2024-11-09 18:12 - INFO - 	 PR-AUC: 0.622
2024-11-09 18:12 - INFO - 	 Best Val. Loss: 0.144
2024-11-09 18:12 - INFO - 	 Best ROC-AUC: 0.961
2024-11-09 18:12 - INFO - 	 Best PR-AUC: 0.622
2024-11-09 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-09 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.654
2024-11-09 18:12 - INFO - ---------------------------------------------
2024-11-09 18:20 - INFO - ---------------------------------------------
2024-11-09 18:20 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-09 18:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65813
2024-11-09 18:20 - INFO - 	 Train Loss: 0.120
2024-11-09 18:20 - INFO - 	 Val. Loss: 0.139
2024-11-09 18:20 - INFO - 	 ROC-AUC: 0.964
2024-11-09 18:20 - INFO - 	 PR-AUC: 0.658
2024-11-09 18:20 - INFO - 	 Best Val. Loss: 0.139
2024-11-09 18:20 - INFO - 	 Best ROC-AUC: 0.964
2024-11-09 18:20 - INFO - 	 Best PR-AUC: 0.658
2024-11-09 18:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-09 18:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.676
2024-11-09 18:20 - INFO - ---------------------------------------------
2024-11-09 18:28 - INFO - ---------------------------------------------
2024-11-09 18:28 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-09 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69006
2024-11-09 18:28 - INFO - 	 Train Loss: 0.111
2024-11-09 18:28 - INFO - 	 Val. Loss: 0.111
2024-11-09 18:28 - INFO - 	 ROC-AUC: 0.968
2024-11-09 18:28 - INFO - 	 PR-AUC: 0.690
2024-11-09 18:28 - INFO - 	 Best Val. Loss: 0.111
2024-11-09 18:28 - INFO - 	 Best ROC-AUC: 0.968
2024-11-09 18:28 - INFO - 	 Best PR-AUC: 0.690
2024-11-09 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-09 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.695
2024-11-09 18:28 - INFO - ---------------------------------------------
2024-11-09 18:36 - INFO - ---------------------------------------------
2024-11-09 18:36 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-09 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70326
2024-11-09 18:36 - INFO - 	 Train Loss: 0.105
2024-11-09 18:36 - INFO - 	 Val. Loss: 0.099
2024-11-09 18:36 - INFO - 	 ROC-AUC: 0.970
2024-11-09 18:36 - INFO - 	 PR-AUC: 0.703
2024-11-09 18:36 - INFO - 	 Best Val. Loss: 0.099
2024-11-09 18:36 - INFO - 	 Best ROC-AUC: 0.970
2024-11-09 18:36 - INFO - 	 Best PR-AUC: 0.703
2024-11-09 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-09 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.723
2024-11-09 18:36 - INFO - ---------------------------------------------
2024-11-09 18:44 - INFO - ---------------------------------------------
2024-11-09 18:44 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-09 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76973
2024-11-09 18:44 - INFO - 	 Train Loss: 0.101
2024-11-09 18:44 - INFO - 	 Val. Loss: 0.094
2024-11-09 18:44 - INFO - 	 ROC-AUC: 0.976
2024-11-09 18:44 - INFO - 	 PR-AUC: 0.770
2024-11-09 18:44 - INFO - 	 Best Val. Loss: 0.094
2024-11-09 18:44 - INFO - 	 Best ROC-AUC: 0.976
2024-11-09 18:44 - INFO - 	 Best PR-AUC: 0.770
2024-11-09 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-09 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-11-09 18:44 - INFO - ---------------------------------------------
2024-11-09 18:46 - INFO - Fit the preprocessing pipeline
2024-11-09 18:46 - INFO - Training using device: cuda
2024-11-09 18:46 - INFO - Creating generators
2024-11-09 18:46 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 18:46 - INFO - * Model:
2024-11-09 18:46 - INFO - * -----------
2024-11-09 18:46 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 18:46 - INFO - * -----------
2024-11-09 18:54 - INFO - ---------------------------------------------
2024-11-09 18:54 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 18:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.10266
2024-11-09 18:54 - INFO - 	 Train Loss: 0.268
2024-11-09 18:54 - INFO - 	 Val. Loss: 0.259
2024-11-09 18:54 - INFO - 	 ROC-AUC: 0.569
2024-11-09 18:54 - INFO - 	 PR-AUC: 0.103
2024-11-09 18:54 - INFO - 	 Best Val. Loss: 0.259
2024-11-09 18:54 - INFO - 	 Best ROC-AUC: 0.569
2024-11-09 18:54 - INFO - 	 Best PR-AUC: 0.103
2024-11-09 18:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.556
2024-11-09 18:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.129
2024-11-09 18:54 - INFO - ---------------------------------------------
2024-11-09 19:02 - INFO - ---------------------------------------------
2024-11-09 19:02 - INFO - Epoch: 02 | Time: 8m 3s
2024-11-09 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14596
2024-11-09 19:02 - INFO - 	 Train Loss: 0.246
2024-11-09 19:02 - INFO - 	 Val. Loss: 0.275
2024-11-09 19:02 - INFO - 	 ROC-AUC: 0.623
2024-11-09 19:02 - INFO - 	 PR-AUC: 0.146
2024-11-09 19:02 - INFO - 	 Best Val. Loss: 0.259
2024-11-09 19:02 - INFO - 	 Best ROC-AUC: 0.623
2024-11-09 19:02 - INFO - 	 Best PR-AUC: 0.146
2024-11-09 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.604
2024-11-09 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.179
2024-11-09 19:02 - INFO - ---------------------------------------------
2024-11-09 19:10 - INFO - ---------------------------------------------
2024-11-09 19:10 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-09 19:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17719
2024-11-09 19:10 - INFO - 	 Train Loss: 0.227
2024-11-09 19:10 - INFO - 	 Val. Loss: 0.313
2024-11-09 19:10 - INFO - 	 ROC-AUC: 0.733
2024-11-09 19:10 - INFO - 	 PR-AUC: 0.177
2024-11-09 19:10 - INFO - 	 Best Val. Loss: 0.259
2024-11-09 19:10 - INFO - 	 Best ROC-AUC: 0.733
2024-11-09 19:10 - INFO - 	 Best PR-AUC: 0.177
2024-11-09 19:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.696
2024-11-09 19:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.197
2024-11-09 19:10 - INFO - ---------------------------------------------
2024-11-09 19:19 - INFO - ---------------------------------------------
2024-11-09 19:19 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 19:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25843
2024-11-09 19:19 - INFO - 	 Train Loss: 0.192
2024-11-09 19:19 - INFO - 	 Val. Loss: 0.368
2024-11-09 19:19 - INFO - 	 ROC-AUC: 0.830
2024-11-09 19:19 - INFO - 	 PR-AUC: 0.258
2024-11-09 19:19 - INFO - 	 Best Val. Loss: 0.259
2024-11-09 19:19 - INFO - 	 Best ROC-AUC: 0.830
2024-11-09 19:19 - INFO - 	 Best PR-AUC: 0.258
2024-11-09 19:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.824
2024-11-09 19:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.277
2024-11-09 19:19 - INFO - ---------------------------------------------
2024-11-09 19:27 - INFO - ---------------------------------------------
2024-11-09 19:27 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 19:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48848
2024-11-09 19:27 - INFO - 	 Train Loss: 0.159
2024-11-09 19:27 - INFO - 	 Val. Loss: 0.196
2024-11-09 19:27 - INFO - 	 ROC-AUC: 0.924
2024-11-09 19:27 - INFO - 	 PR-AUC: 0.488
2024-11-09 19:27 - INFO - 	 Best Val. Loss: 0.196
2024-11-09 19:27 - INFO - 	 Best ROC-AUC: 0.924
2024-11-09 19:27 - INFO - 	 Best PR-AUC: 0.488
2024-11-09 19:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.914
2024-11-09 19:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.497
2024-11-09 19:27 - INFO - ---------------------------------------------
2024-11-09 19:35 - INFO - ---------------------------------------------
2024-11-09 19:35 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-09 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54475
2024-11-09 19:35 - INFO - 	 Train Loss: 0.142
2024-11-09 19:35 - INFO - 	 Val. Loss: 0.194
2024-11-09 19:35 - INFO - 	 ROC-AUC: 0.940
2024-11-09 19:35 - INFO - 	 PR-AUC: 0.545
2024-11-09 19:35 - INFO - 	 Best Val. Loss: 0.194
2024-11-09 19:35 - INFO - 	 Best ROC-AUC: 0.940
2024-11-09 19:35 - INFO - 	 Best PR-AUC: 0.545
2024-11-09 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-09 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.559
2024-11-09 19:35 - INFO - ---------------------------------------------
2024-11-09 19:43 - INFO - ---------------------------------------------
2024-11-09 19:43 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-09 19:43 - INFO - 	 Train Loss: 0.131
2024-11-09 19:43 - INFO - 	 Val. Loss: 0.228
2024-11-09 19:43 - INFO - 	 ROC-AUC: 0.941
2024-11-09 19:43 - INFO - 	 PR-AUC: 0.537
2024-11-09 19:43 - INFO - 	 Best Val. Loss: 0.194
2024-11-09 19:43 - INFO - 	 Best ROC-AUC: 0.941
2024-11-09 19:43 - INFO - 	 Best PR-AUC: 0.545
2024-11-09 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-09 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.559
2024-11-09 19:43 - INFO - ---------------------------------------------
2024-11-09 19:51 - INFO - ---------------------------------------------
2024-11-09 19:51 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-09 19:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65831
2024-11-09 19:51 - INFO - 	 Train Loss: 0.122
2024-11-09 19:51 - INFO - 	 Val. Loss: 0.140
2024-11-09 19:51 - INFO - 	 ROC-AUC: 0.962
2024-11-09 19:51 - INFO - 	 PR-AUC: 0.658
2024-11-09 19:51 - INFO - 	 Best Val. Loss: 0.140
2024-11-09 19:51 - INFO - 	 Best ROC-AUC: 0.962
2024-11-09 19:51 - INFO - 	 Best PR-AUC: 0.658
2024-11-09 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-09 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.669
2024-11-09 19:51 - INFO - ---------------------------------------------
2024-11-09 19:59 - INFO - ---------------------------------------------
2024-11-09 19:59 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-09 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66986
2024-11-09 19:59 - INFO - 	 Train Loss: 0.117
2024-11-09 19:59 - INFO - 	 Val. Loss: 0.138
2024-11-09 19:59 - INFO - 	 ROC-AUC: 0.962
2024-11-09 19:59 - INFO - 	 PR-AUC: 0.670
2024-11-09 19:59 - INFO - 	 Best Val. Loss: 0.138
2024-11-09 19:59 - INFO - 	 Best ROC-AUC: 0.962
2024-11-09 19:59 - INFO - 	 Best PR-AUC: 0.670
2024-11-09 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-09 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.667
2024-11-09 19:59 - INFO - ---------------------------------------------
2024-11-09 20:07 - INFO - ---------------------------------------------
2024-11-09 20:07 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-09 20:07 - INFO - 	 Train Loss: 0.110
2024-11-09 20:07 - INFO - 	 Val. Loss: 0.128
2024-11-09 20:07 - INFO - 	 ROC-AUC: 0.962
2024-11-09 20:07 - INFO - 	 PR-AUC: 0.666
2024-11-09 20:07 - INFO - 	 Best Val. Loss: 0.128
2024-11-09 20:07 - INFO - 	 Best ROC-AUC: 0.962
2024-11-09 20:07 - INFO - 	 Best PR-AUC: 0.670
2024-11-09 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-11-09 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.667
2024-11-09 20:07 - INFO - ---------------------------------------------
2024-11-09 20:09 - INFO - Fit the preprocessing pipeline
2024-11-09 20:09 - INFO - Training using device: cuda
2024-11-09 20:09 - INFO - Creating generators
2024-11-09 20:09 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 20:09 - INFO - * Model:
2024-11-09 20:09 - INFO - * -----------
2024-11-09 20:09 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 20:09 - INFO - * -----------
2024-11-09 20:17 - INFO - ---------------------------------------------
2024-11-09 20:17 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.11011
2024-11-09 20:17 - INFO - 	 Train Loss: 0.268
2024-11-09 20:17 - INFO - 	 Val. Loss: 0.256
2024-11-09 20:17 - INFO - 	 ROC-AUC: 0.576
2024-11-09 20:17 - INFO - 	 PR-AUC: 0.110
2024-11-09 20:17 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 20:17 - INFO - 	 Best ROC-AUC: 0.576
2024-11-09 20:17 - INFO - 	 Best PR-AUC: 0.110
2024-11-09 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.551
2024-11-09 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.130
2024-11-09 20:17 - INFO - ---------------------------------------------
2024-11-09 20:25 - INFO - ---------------------------------------------
2024-11-09 20:25 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-09 20:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13093
2024-11-09 20:25 - INFO - 	 Train Loss: 0.251
2024-11-09 20:25 - INFO - 	 Val. Loss: 0.280
2024-11-09 20:25 - INFO - 	 ROC-AUC: 0.603
2024-11-09 20:25 - INFO - 	 PR-AUC: 0.131
2024-11-09 20:25 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 20:25 - INFO - 	 Best ROC-AUC: 0.603
2024-11-09 20:25 - INFO - 	 Best PR-AUC: 0.131
2024-11-09 20:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.585
2024-11-09 20:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-09 20:25 - INFO - ---------------------------------------------
2024-11-09 20:33 - INFO - ---------------------------------------------
2024-11-09 20:33 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-09 20:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16547
2024-11-09 20:33 - INFO - 	 Train Loss: 0.237
2024-11-09 20:33 - INFO - 	 Val. Loss: 0.315
2024-11-09 20:33 - INFO - 	 ROC-AUC: 0.669
2024-11-09 20:33 - INFO - 	 PR-AUC: 0.165
2024-11-09 20:33 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 20:33 - INFO - 	 Best ROC-AUC: 0.669
2024-11-09 20:33 - INFO - 	 Best PR-AUC: 0.165
2024-11-09 20:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.657
2024-11-09 20:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.210
2024-11-09 20:33 - INFO - ---------------------------------------------
2024-11-09 20:41 - INFO - ---------------------------------------------
2024-11-09 20:41 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 20:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27054
2024-11-09 20:41 - INFO - 	 Train Loss: 0.208
2024-11-09 20:41 - INFO - 	 Val. Loss: 0.294
2024-11-09 20:41 - INFO - 	 ROC-AUC: 0.824
2024-11-09 20:41 - INFO - 	 PR-AUC: 0.271
2024-11-09 20:41 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 20:41 - INFO - 	 Best ROC-AUC: 0.824
2024-11-09 20:41 - INFO - 	 Best PR-AUC: 0.271
2024-11-09 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.804
2024-11-09 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.307
2024-11-09 20:41 - INFO - ---------------------------------------------
2024-11-09 20:49 - INFO - ---------------------------------------------
2024-11-09 20:49 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3664
2024-11-09 20:49 - INFO - 	 Train Loss: 0.170
2024-11-09 20:49 - INFO - 	 Val. Loss: 0.331
2024-11-09 20:49 - INFO - 	 ROC-AUC: 0.891
2024-11-09 20:49 - INFO - 	 PR-AUC: 0.366
2024-11-09 20:49 - INFO - 	 Best Val. Loss: 0.256
2024-11-09 20:49 - INFO - 	 Best ROC-AUC: 0.891
2024-11-09 20:49 - INFO - 	 Best PR-AUC: 0.366
2024-11-09 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.889
2024-11-09 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-11-09 20:49 - INFO - ---------------------------------------------
