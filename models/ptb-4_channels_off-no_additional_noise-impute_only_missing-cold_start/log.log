2024-11-04 20:09 - INFO - Fit the preprocessing pipeline
2024-11-04 20:09 - INFO - Training using device: cuda
2024-11-04 20:09 - INFO - Creating generators
2024-11-04 20:09 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 20:09 - INFO - * Model:
2024-11-04 20:09 - INFO - * -----------
2024-11-04 20:09 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 20:09 - INFO - * -----------
2024-11-04 20:17 - INFO - ---------------------------------------------
2024-11-04 20:17 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-04 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24617
2024-11-04 20:17 - INFO - 	 Train Loss: 0.247
2024-11-04 20:17 - INFO - 	 Val. Loss: 0.341
2024-11-04 20:17 - INFO - 	 ROC-AUC: 0.800
2024-11-04 20:17 - INFO - 	 PR-AUC: 0.246
2024-11-04 20:17 - INFO - 	 Best Val. Loss: 0.341
2024-11-04 20:17 - INFO - 	 Best ROC-AUC: 0.800
2024-11-04 20:17 - INFO - 	 Best PR-AUC: 0.246
2024-11-04 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.787
2024-11-04 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.301
2024-11-04 20:17 - INFO - ---------------------------------------------
2024-11-04 20:25 - INFO - ---------------------------------------------
2024-11-04 20:25 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 20:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54185
2024-11-04 20:25 - INFO - 	 Train Loss: 0.171
2024-11-04 20:25 - INFO - 	 Val. Loss: 0.256
2024-11-04 20:25 - INFO - 	 ROC-AUC: 0.945
2024-11-04 20:25 - INFO - 	 PR-AUC: 0.542
2024-11-04 20:25 - INFO - 	 Best Val. Loss: 0.256
2024-11-04 20:25 - INFO - 	 Best ROC-AUC: 0.945
2024-11-04 20:25 - INFO - 	 Best PR-AUC: 0.542
2024-11-04 20:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-04 20:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.570
2024-11-04 20:25 - INFO - ---------------------------------------------
2024-11-04 20:33 - INFO - ---------------------------------------------
2024-11-04 20:33 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 20:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80246
2024-11-04 20:33 - INFO - 	 Train Loss: 0.105
2024-11-04 20:33 - INFO - 	 Val. Loss: 0.082
2024-11-04 20:33 - INFO - 	 ROC-AUC: 0.980
2024-11-04 20:33 - INFO - 	 PR-AUC: 0.802
2024-11-04 20:33 - INFO - 	 Best Val. Loss: 0.082
2024-11-04 20:33 - INFO - 	 Best ROC-AUC: 0.980
2024-11-04 20:33 - INFO - 	 Best PR-AUC: 0.802
2024-11-04 20:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-04 20:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-11-04 20:33 - INFO - ---------------------------------------------
2024-11-04 20:41 - INFO - ---------------------------------------------
2024-11-04 20:41 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 20:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81588
2024-11-04 20:41 - INFO - 	 Train Loss: 0.088
2024-11-04 20:41 - INFO - 	 Val. Loss: 0.078
2024-11-04 20:41 - INFO - 	 ROC-AUC: 0.981
2024-11-04 20:41 - INFO - 	 PR-AUC: 0.816
2024-11-04 20:41 - INFO - 	 Best Val. Loss: 0.078
2024-11-04 20:41 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 20:41 - INFO - 	 Best PR-AUC: 0.816
2024-11-04 20:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 20:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-04 20:41 - INFO - ---------------------------------------------
2024-11-04 20:49 - INFO - ---------------------------------------------
2024-11-04 20:49 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 20:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84034
2024-11-04 20:49 - INFO - 	 Train Loss: 0.080
2024-11-04 20:49 - INFO - 	 Val. Loss: 0.073
2024-11-04 20:49 - INFO - 	 ROC-AUC: 0.983
2024-11-04 20:49 - INFO - 	 PR-AUC: 0.840
2024-11-04 20:49 - INFO - 	 Best Val. Loss: 0.073
2024-11-04 20:49 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 20:49 - INFO - 	 Best PR-AUC: 0.840
2024-11-04 20:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 20:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-04 20:49 - INFO - ---------------------------------------------
2024-11-04 20:57 - INFO - ---------------------------------------------
2024-11-04 20:57 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-04 20:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85461
2024-11-04 20:57 - INFO - 	 Train Loss: 0.077
2024-11-04 20:57 - INFO - 	 Val. Loss: 0.069
2024-11-04 20:57 - INFO - 	 ROC-AUC: 0.984
2024-11-04 20:57 - INFO - 	 PR-AUC: 0.855
2024-11-04 20:57 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 20:57 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 20:57 - INFO - 	 Best PR-AUC: 0.855
2024-11-04 20:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 20:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-04 20:57 - INFO - ---------------------------------------------
2024-11-04 21:05 - INFO - ---------------------------------------------
2024-11-04 21:05 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 21:05 - INFO - 	 Train Loss: 0.074
2024-11-04 21:05 - INFO - 	 Val. Loss: 0.069
2024-11-04 21:05 - INFO - 	 ROC-AUC: 0.984
2024-11-04 21:05 - INFO - 	 PR-AUC: 0.847
2024-11-04 21:05 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 21:05 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 21:05 - INFO - 	 Best PR-AUC: 0.855
2024-11-04 21:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 21:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-04 21:05 - INFO - ---------------------------------------------
2024-11-04 21:13 - INFO - ---------------------------------------------
2024-11-04 21:13 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 21:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87077
2024-11-04 21:13 - INFO - 	 Train Loss: 0.071
2024-11-04 21:13 - INFO - 	 Val. Loss: 0.066
2024-11-04 21:13 - INFO - 	 ROC-AUC: 0.987
2024-11-04 21:13 - INFO - 	 PR-AUC: 0.871
2024-11-04 21:13 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 21:13 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 21:13 - INFO - 	 Best PR-AUC: 0.871
2024-11-04 21:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 21:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-04 21:13 - INFO - ---------------------------------------------
2024-11-04 21:21 - INFO - ---------------------------------------------
2024-11-04 21:21 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-04 21:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87982
2024-11-04 21:21 - INFO - 	 Train Loss: 0.068
2024-11-04 21:21 - INFO - 	 Val. Loss: 0.061
2024-11-04 21:21 - INFO - 	 ROC-AUC: 0.987
2024-11-04 21:21 - INFO - 	 PR-AUC: 0.880
2024-11-04 21:21 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 21:21 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 21:21 - INFO - 	 Best PR-AUC: 0.880
2024-11-04 21:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 21:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-04 21:21 - INFO - ---------------------------------------------
2024-11-04 21:29 - INFO - ---------------------------------------------
2024-11-04 21:29 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-04 21:29 - INFO - 	 Train Loss: 0.066
2024-11-04 21:29 - INFO - 	 Val. Loss: 0.062
2024-11-04 21:29 - INFO - 	 ROC-AUC: 0.987
2024-11-04 21:29 - INFO - 	 PR-AUC: 0.876
2024-11-04 21:29 - INFO - 	 Best Val. Loss: 0.061
2024-11-04 21:29 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 21:29 - INFO - 	 Best PR-AUC: 0.880
2024-11-04 21:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-04 21:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-04 21:29 - INFO - ---------------------------------------------
2024-11-04 21:31 - INFO - Fit the preprocessing pipeline
2024-11-04 21:31 - INFO - Training using device: cuda
2024-11-04 21:31 - INFO - Creating generators
2024-11-04 21:31 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 21:31 - INFO - * Model:
2024-11-04 21:31 - INFO - * -----------
2024-11-04 21:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 21:31 - INFO - * -----------
2024-11-04 21:39 - INFO - ---------------------------------------------
2024-11-04 21:39 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-04 21:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19168
2024-11-04 21:39 - INFO - 	 Train Loss: 0.245
2024-11-04 21:39 - INFO - 	 Val. Loss: 0.519
2024-11-04 21:39 - INFO - 	 ROC-AUC: 0.764
2024-11-04 21:39 - INFO - 	 PR-AUC: 0.192
2024-11-04 21:39 - INFO - 	 Best Val. Loss: 0.519
2024-11-04 21:39 - INFO - 	 Best ROC-AUC: 0.764
2024-11-04 21:39 - INFO - 	 Best PR-AUC: 0.192
2024-11-04 21:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.742
2024-11-04 21:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.239
2024-11-04 21:39 - INFO - ---------------------------------------------
2024-11-04 21:47 - INFO - ---------------------------------------------
2024-11-04 21:47 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-04 21:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56454
2024-11-04 21:47 - INFO - 	 Train Loss: 0.164
2024-11-04 21:47 - INFO - 	 Val. Loss: 0.273
2024-11-04 21:47 - INFO - 	 ROC-AUC: 0.950
2024-11-04 21:47 - INFO - 	 PR-AUC: 0.565
2024-11-04 21:47 - INFO - 	 Best Val. Loss: 0.273
2024-11-04 21:47 - INFO - 	 Best ROC-AUC: 0.950
2024-11-04 21:47 - INFO - 	 Best PR-AUC: 0.565
2024-11-04 21:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-04 21:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.603
2024-11-04 21:47 - INFO - ---------------------------------------------
2024-11-04 21:55 - INFO - ---------------------------------------------
2024-11-04 21:55 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-04 21:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76649
2024-11-04 21:55 - INFO - 	 Train Loss: 0.107
2024-11-04 21:55 - INFO - 	 Val. Loss: 0.105
2024-11-04 21:55 - INFO - 	 ROC-AUC: 0.975
2024-11-04 21:55 - INFO - 	 PR-AUC: 0.766
2024-11-04 21:55 - INFO - 	 Best Val. Loss: 0.105
2024-11-04 21:55 - INFO - 	 Best ROC-AUC: 0.975
2024-11-04 21:55 - INFO - 	 Best PR-AUC: 0.766
2024-11-04 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-04 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.760
2024-11-04 21:55 - INFO - ---------------------------------------------
2024-11-04 22:03 - INFO - ---------------------------------------------
2024-11-04 22:03 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-04 22:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82411
2024-11-04 22:03 - INFO - 	 Train Loss: 0.090
2024-11-04 22:03 - INFO - 	 Val. Loss: 0.079
2024-11-04 22:03 - INFO - 	 ROC-AUC: 0.981
2024-11-04 22:03 - INFO - 	 PR-AUC: 0.824
2024-11-04 22:03 - INFO - 	 Best Val. Loss: 0.079
2024-11-04 22:03 - INFO - 	 Best ROC-AUC: 0.981
2024-11-04 22:03 - INFO - 	 Best PR-AUC: 0.824
2024-11-04 22:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-04 22:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-11-04 22:03 - INFO - ---------------------------------------------
2024-11-04 22:11 - INFO - ---------------------------------------------
2024-11-04 22:11 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-04 22:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83164
2024-11-04 22:11 - INFO - 	 Train Loss: 0.081
2024-11-04 22:11 - INFO - 	 Val. Loss: 0.074
2024-11-04 22:11 - INFO - 	 ROC-AUC: 0.983
2024-11-04 22:11 - INFO - 	 PR-AUC: 0.832
2024-11-04 22:11 - INFO - 	 Best Val. Loss: 0.074
2024-11-04 22:11 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 22:11 - INFO - 	 Best PR-AUC: 0.832
2024-11-04 22:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 22:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-04 22:11 - INFO - ---------------------------------------------
2024-11-04 22:20 - INFO - ---------------------------------------------
2024-11-04 22:20 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-04 22:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85295
2024-11-04 22:20 - INFO - 	 Train Loss: 0.077
2024-11-04 22:20 - INFO - 	 Val. Loss: 0.069
2024-11-04 22:20 - INFO - 	 ROC-AUC: 0.985
2024-11-04 22:20 - INFO - 	 PR-AUC: 0.853
2024-11-04 22:20 - INFO - 	 Best Val. Loss: 0.069
2024-11-04 22:20 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 22:20 - INFO - 	 Best PR-AUC: 0.853
2024-11-04 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-04 22:20 - INFO - ---------------------------------------------
2024-11-04 22:28 - INFO - ---------------------------------------------
2024-11-04 22:28 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-04 22:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86312
2024-11-04 22:28 - INFO - 	 Train Loss: 0.075
2024-11-04 22:28 - INFO - 	 Val. Loss: 0.066
2024-11-04 22:28 - INFO - 	 ROC-AUC: 0.985
2024-11-04 22:28 - INFO - 	 PR-AUC: 0.863
2024-11-04 22:28 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 22:28 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 22:28 - INFO - 	 Best PR-AUC: 0.863
2024-11-04 22:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 22:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-04 22:28 - INFO - ---------------------------------------------
2024-11-04 22:36 - INFO - ---------------------------------------------
2024-11-04 22:36 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 22:36 - INFO - 	 Train Loss: 0.072
2024-11-04 22:36 - INFO - 	 Val. Loss: 0.071
2024-11-04 22:36 - INFO - 	 ROC-AUC: 0.984
2024-11-04 22:36 - INFO - 	 PR-AUC: 0.861
2024-11-04 22:36 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 22:36 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 22:36 - INFO - 	 Best PR-AUC: 0.863
2024-11-04 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-04 22:36 - INFO - ---------------------------------------------
2024-11-04 22:44 - INFO - ---------------------------------------------
2024-11-04 22:44 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-04 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86333
2024-11-04 22:44 - INFO - 	 Train Loss: 0.069
2024-11-04 22:44 - INFO - 	 Val. Loss: 0.069
2024-11-04 22:44 - INFO - 	 ROC-AUC: 0.984
2024-11-04 22:44 - INFO - 	 PR-AUC: 0.863
2024-11-04 22:44 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 22:44 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 22:44 - INFO - 	 Best PR-AUC: 0.863
2024-11-04 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-04 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-04 22:44 - INFO - ---------------------------------------------
2024-11-04 22:52 - INFO - ---------------------------------------------
2024-11-04 22:52 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-04 22:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88745
2024-11-04 22:52 - INFO - 	 Train Loss: 0.067
2024-11-04 22:52 - INFO - 	 Val. Loss: 0.062
2024-11-04 22:52 - INFO - 	 ROC-AUC: 0.987
2024-11-04 22:52 - INFO - 	 PR-AUC: 0.887
2024-11-04 22:52 - INFO - 	 Best Val. Loss: 0.062
2024-11-04 22:52 - INFO - 	 Best ROC-AUC: 0.987
2024-11-04 22:52 - INFO - 	 Best PR-AUC: 0.887
2024-11-04 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-04 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-04 22:52 - INFO - ---------------------------------------------
2024-11-04 22:54 - INFO - Fit the preprocessing pipeline
2024-11-04 22:54 - INFO - Training using device: cuda
2024-11-04 22:54 - INFO - Creating generators
2024-11-04 22:54 - INFO - The model has 2,246,929 trainable parameters
2024-11-04 22:54 - INFO - * Model:
2024-11-04 22:54 - INFO - * -----------
2024-11-04 22:54 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-04 22:54 - INFO - * -----------
2024-11-04 23:02 - INFO - ---------------------------------------------
2024-11-04 23:02 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-04 23:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19496
2024-11-04 23:02 - INFO - 	 Train Loss: 0.241
2024-11-04 23:02 - INFO - 	 Val. Loss: 0.785
2024-11-04 23:02 - INFO - 	 ROC-AUC: 0.753
2024-11-04 23:02 - INFO - 	 PR-AUC: 0.195
2024-11-04 23:02 - INFO - 	 Best Val. Loss: 0.785
2024-11-04 23:02 - INFO - 	 Best ROC-AUC: 0.753
2024-11-04 23:02 - INFO - 	 Best PR-AUC: 0.195
2024-11-04 23:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.724
2024-11-04 23:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.238
2024-11-04 23:02 - INFO - ---------------------------------------------
2024-11-04 23:10 - INFO - ---------------------------------------------
2024-11-04 23:10 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-04 23:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59775
2024-11-04 23:10 - INFO - 	 Train Loss: 0.158
2024-11-04 23:10 - INFO - 	 Val. Loss: 0.238
2024-11-04 23:10 - INFO - 	 ROC-AUC: 0.950
2024-11-04 23:10 - INFO - 	 PR-AUC: 0.598
2024-11-04 23:10 - INFO - 	 Best Val. Loss: 0.238
2024-11-04 23:10 - INFO - 	 Best ROC-AUC: 0.950
2024-11-04 23:10 - INFO - 	 Best PR-AUC: 0.598
2024-11-04 23:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-04 23:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.631
2024-11-04 23:10 - INFO - ---------------------------------------------
2024-11-04 23:18 - INFO - ---------------------------------------------
2024-11-04 23:18 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-04 23:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73269
2024-11-04 23:18 - INFO - 	 Train Loss: 0.104
2024-11-04 23:18 - INFO - 	 Val. Loss: 0.113
2024-11-04 23:18 - INFO - 	 ROC-AUC: 0.970
2024-11-04 23:18 - INFO - 	 PR-AUC: 0.733
2024-11-04 23:18 - INFO - 	 Best Val. Loss: 0.113
2024-11-04 23:18 - INFO - 	 Best ROC-AUC: 0.970
2024-11-04 23:18 - INFO - 	 Best PR-AUC: 0.733
2024-11-04 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-04 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-11-04 23:18 - INFO - ---------------------------------------------
2024-11-04 23:26 - INFO - ---------------------------------------------
2024-11-04 23:26 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-04 23:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80037
2024-11-04 23:26 - INFO - 	 Train Loss: 0.092
2024-11-04 23:26 - INFO - 	 Val. Loss: 0.109
2024-11-04 23:26 - INFO - 	 ROC-AUC: 0.980
2024-11-04 23:26 - INFO - 	 PR-AUC: 0.800
2024-11-04 23:26 - INFO - 	 Best Val. Loss: 0.109
2024-11-04 23:26 - INFO - 	 Best ROC-AUC: 0.980
2024-11-04 23:26 - INFO - 	 Best PR-AUC: 0.800
2024-11-04 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-04 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-04 23:26 - INFO - ---------------------------------------------
2024-11-04 23:34 - INFO - ---------------------------------------------
2024-11-04 23:34 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-04 23:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82991
2024-11-04 23:34 - INFO - 	 Train Loss: 0.083
2024-11-04 23:34 - INFO - 	 Val. Loss: 0.073
2024-11-04 23:34 - INFO - 	 ROC-AUC: 0.982
2024-11-04 23:34 - INFO - 	 PR-AUC: 0.830
2024-11-04 23:34 - INFO - 	 Best Val. Loss: 0.073
2024-11-04 23:34 - INFO - 	 Best ROC-AUC: 0.982
2024-11-04 23:34 - INFO - 	 Best PR-AUC: 0.830
2024-11-04 23:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 23:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-04 23:34 - INFO - ---------------------------------------------
2024-11-04 23:42 - INFO - ---------------------------------------------
2024-11-04 23:42 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-04 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84503
2024-11-04 23:42 - INFO - 	 Train Loss: 0.078
2024-11-04 23:42 - INFO - 	 Val. Loss: 0.071
2024-11-04 23:42 - INFO - 	 ROC-AUC: 0.983
2024-11-04 23:42 - INFO - 	 PR-AUC: 0.845
2024-11-04 23:42 - INFO - 	 Best Val. Loss: 0.071
2024-11-04 23:42 - INFO - 	 Best ROC-AUC: 0.983
2024-11-04 23:42 - INFO - 	 Best PR-AUC: 0.845
2024-11-04 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-04 23:42 - INFO - ---------------------------------------------
2024-11-04 23:50 - INFO - ---------------------------------------------
2024-11-04 23:50 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-04 23:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85253
2024-11-04 23:50 - INFO - 	 Train Loss: 0.075
2024-11-04 23:50 - INFO - 	 Val. Loss: 0.068
2024-11-04 23:50 - INFO - 	 ROC-AUC: 0.984
2024-11-04 23:50 - INFO - 	 PR-AUC: 0.853
2024-11-04 23:50 - INFO - 	 Best Val. Loss: 0.068
2024-11-04 23:50 - INFO - 	 Best ROC-AUC: 0.984
2024-11-04 23:50 - INFO - 	 Best PR-AUC: 0.853
2024-11-04 23:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-04 23:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-04 23:50 - INFO - ---------------------------------------------
2024-11-04 23:58 - INFO - ---------------------------------------------
2024-11-04 23:58 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-04 23:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86057
2024-11-04 23:58 - INFO - 	 Train Loss: 0.070
2024-11-04 23:58 - INFO - 	 Val. Loss: 0.066
2024-11-04 23:58 - INFO - 	 ROC-AUC: 0.985
2024-11-04 23:58 - INFO - 	 PR-AUC: 0.861
2024-11-04 23:58 - INFO - 	 Best Val. Loss: 0.066
2024-11-04 23:58 - INFO - 	 Best ROC-AUC: 0.985
2024-11-04 23:58 - INFO - 	 Best PR-AUC: 0.861
2024-11-04 23:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-04 23:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-04 23:58 - INFO - ---------------------------------------------
2024-11-05 00:06 - INFO - ---------------------------------------------
2024-11-05 00:06 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 00:06 - INFO - 	 Train Loss: 0.069
2024-11-05 00:06 - INFO - 	 Val. Loss: 0.069
2024-11-05 00:06 - INFO - 	 ROC-AUC: 0.984
2024-11-05 00:06 - INFO - 	 PR-AUC: 0.849
2024-11-05 00:06 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 00:06 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 00:06 - INFO - 	 Best PR-AUC: 0.861
2024-11-05 00:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 00:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-05 00:06 - INFO - ---------------------------------------------
2024-11-05 00:14 - INFO - ---------------------------------------------
2024-11-05 00:14 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 00:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86176
2024-11-05 00:14 - INFO - 	 Train Loss: 0.066
2024-11-05 00:14 - INFO - 	 Val. Loss: 0.067
2024-11-05 00:14 - INFO - 	 ROC-AUC: 0.985
2024-11-05 00:14 - INFO - 	 PR-AUC: 0.862
2024-11-05 00:14 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 00:14 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 00:14 - INFO - 	 Best PR-AUC: 0.862
2024-11-05 00:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 00:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-05 00:14 - INFO - ---------------------------------------------
2024-11-05 00:17 - INFO - Fit the preprocessing pipeline
2024-11-05 00:17 - INFO - Training using device: cuda
2024-11-05 00:17 - INFO - Creating generators
2024-11-05 00:17 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 00:17 - INFO - * Model:
2024-11-05 00:17 - INFO - * -----------
2024-11-05 00:17 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 00:17 - INFO - * -----------
2024-11-05 00:25 - INFO - ---------------------------------------------
2024-11-05 00:25 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 00:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23411
2024-11-05 00:25 - INFO - 	 Train Loss: 0.239
2024-11-05 00:25 - INFO - 	 Val. Loss: 0.525
2024-11-05 00:25 - INFO - 	 ROC-AUC: 0.799
2024-11-05 00:25 - INFO - 	 PR-AUC: 0.234
2024-11-05 00:25 - INFO - 	 Best Val. Loss: 0.525
2024-11-05 00:25 - INFO - 	 Best ROC-AUC: 0.799
2024-11-05 00:25 - INFO - 	 Best PR-AUC: 0.234
2024-11-05 00:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-05 00:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.281
2024-11-05 00:25 - INFO - ---------------------------------------------
2024-11-05 00:33 - INFO - ---------------------------------------------
2024-11-05 00:33 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-05 00:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62488
2024-11-05 00:33 - INFO - 	 Train Loss: 0.149
2024-11-05 00:33 - INFO - 	 Val. Loss: 0.232
2024-11-05 00:33 - INFO - 	 ROC-AUC: 0.954
2024-11-05 00:33 - INFO - 	 PR-AUC: 0.625
2024-11-05 00:33 - INFO - 	 Best Val. Loss: 0.232
2024-11-05 00:33 - INFO - 	 Best ROC-AUC: 0.954
2024-11-05 00:33 - INFO - 	 Best PR-AUC: 0.625
2024-11-05 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-05 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.633
2024-11-05 00:33 - INFO - ---------------------------------------------
2024-11-05 00:41 - INFO - ---------------------------------------------
2024-11-05 00:41 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-05 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78142
2024-11-05 00:41 - INFO - 	 Train Loss: 0.105
2024-11-05 00:41 - INFO - 	 Val. Loss: 0.102
2024-11-05 00:41 - INFO - 	 ROC-AUC: 0.976
2024-11-05 00:41 - INFO - 	 PR-AUC: 0.781
2024-11-05 00:41 - INFO - 	 Best Val. Loss: 0.102
2024-11-05 00:41 - INFO - 	 Best ROC-AUC: 0.976
2024-11-05 00:41 - INFO - 	 Best PR-AUC: 0.781
2024-11-05 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-05 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-11-05 00:41 - INFO - ---------------------------------------------
2024-11-05 00:49 - INFO - ---------------------------------------------
2024-11-05 00:49 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 00:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82425
2024-11-05 00:49 - INFO - 	 Train Loss: 0.090
2024-11-05 00:49 - INFO - 	 Val. Loss: 0.080
2024-11-05 00:49 - INFO - 	 ROC-AUC: 0.981
2024-11-05 00:49 - INFO - 	 PR-AUC: 0.824
2024-11-05 00:49 - INFO - 	 Best Val. Loss: 0.080
2024-11-05 00:49 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 00:49 - INFO - 	 Best PR-AUC: 0.824
2024-11-05 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-05 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-05 00:49 - INFO - ---------------------------------------------
2024-11-05 00:57 - INFO - ---------------------------------------------
2024-11-05 00:57 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 00:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83482
2024-11-05 00:57 - INFO - 	 Train Loss: 0.082
2024-11-05 00:57 - INFO - 	 Val. Loss: 0.083
2024-11-05 00:57 - INFO - 	 ROC-AUC: 0.982
2024-11-05 00:57 - INFO - 	 PR-AUC: 0.835
2024-11-05 00:57 - INFO - 	 Best Val. Loss: 0.080
2024-11-05 00:57 - INFO - 	 Best ROC-AUC: 0.982
2024-11-05 00:57 - INFO - 	 Best PR-AUC: 0.835
2024-11-05 00:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-05 00:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-05 00:57 - INFO - ---------------------------------------------
2024-11-05 01:05 - INFO - ---------------------------------------------
2024-11-05 01:05 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 01:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85493
2024-11-05 01:05 - INFO - 	 Train Loss: 0.078
2024-11-05 01:05 - INFO - 	 Val. Loss: 0.075
2024-11-05 01:05 - INFO - 	 ROC-AUC: 0.983
2024-11-05 01:05 - INFO - 	 PR-AUC: 0.855
2024-11-05 01:05 - INFO - 	 Best Val. Loss: 0.075
2024-11-05 01:05 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 01:05 - INFO - 	 Best PR-AUC: 0.855
2024-11-05 01:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 01:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-05 01:05 - INFO - ---------------------------------------------
2024-11-05 01:13 - INFO - ---------------------------------------------
2024-11-05 01:13 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 01:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86555
2024-11-05 01:13 - INFO - 	 Train Loss: 0.074
2024-11-05 01:13 - INFO - 	 Val. Loss: 0.067
2024-11-05 01:13 - INFO - 	 ROC-AUC: 0.984
2024-11-05 01:13 - INFO - 	 PR-AUC: 0.866
2024-11-05 01:13 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 01:13 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 01:13 - INFO - 	 Best PR-AUC: 0.866
2024-11-05 01:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 01:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-11-05 01:13 - INFO - ---------------------------------------------
2024-11-05 01:21 - INFO - ---------------------------------------------
2024-11-05 01:21 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 01:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87537
2024-11-05 01:21 - INFO - 	 Train Loss: 0.070
2024-11-05 01:21 - INFO - 	 Val. Loss: 0.064
2024-11-05 01:21 - INFO - 	 ROC-AUC: 0.986
2024-11-05 01:21 - INFO - 	 PR-AUC: 0.875
2024-11-05 01:21 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 01:21 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 01:21 - INFO - 	 Best PR-AUC: 0.875
2024-11-05 01:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 01:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-05 01:21 - INFO - ---------------------------------------------
2024-11-05 01:29 - INFO - ---------------------------------------------
2024-11-05 01:29 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 01:29 - INFO - 	 Train Loss: 0.068
2024-11-05 01:29 - INFO - 	 Val. Loss: 0.065
2024-11-05 01:29 - INFO - 	 ROC-AUC: 0.985
2024-11-05 01:29 - INFO - 	 PR-AUC: 0.875
2024-11-05 01:29 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 01:29 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 01:29 - INFO - 	 Best PR-AUC: 0.875
2024-11-05 01:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 01:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-05 01:29 - INFO - ---------------------------------------------
2024-11-05 01:37 - INFO - ---------------------------------------------
2024-11-05 01:37 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 01:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88021
2024-11-05 01:37 - INFO - 	 Train Loss: 0.066
2024-11-05 01:37 - INFO - 	 Val. Loss: 0.061
2024-11-05 01:37 - INFO - 	 ROC-AUC: 0.987
2024-11-05 01:37 - INFO - 	 PR-AUC: 0.880
2024-11-05 01:37 - INFO - 	 Best Val. Loss: 0.061
2024-11-05 01:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 01:37 - INFO - 	 Best PR-AUC: 0.880
2024-11-05 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-05 01:37 - INFO - ---------------------------------------------
2024-11-05 01:39 - INFO - Fit the preprocessing pipeline
2024-11-05 01:39 - INFO - Training using device: cuda
2024-11-05 01:39 - INFO - Creating generators
2024-11-05 01:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 01:39 - INFO - * Model:
2024-11-05 01:39 - INFO - * -----------
2024-11-05 01:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 01:39 - INFO - * -----------
2024-11-05 01:47 - INFO - ---------------------------------------------
2024-11-05 01:47 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 01:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22688
2024-11-05 01:47 - INFO - 	 Train Loss: 0.240
2024-11-05 01:47 - INFO - 	 Val. Loss: 0.414
2024-11-05 01:47 - INFO - 	 ROC-AUC: 0.787
2024-11-05 01:47 - INFO - 	 PR-AUC: 0.227
2024-11-05 01:47 - INFO - 	 Best Val. Loss: 0.414
2024-11-05 01:47 - INFO - 	 Best ROC-AUC: 0.787
2024-11-05 01:47 - INFO - 	 Best PR-AUC: 0.227
2024-11-05 01:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-05 01:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.277
2024-11-05 01:47 - INFO - ---------------------------------------------
2024-11-05 01:55 - INFO - ---------------------------------------------
2024-11-05 01:55 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-05 01:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59128
2024-11-05 01:55 - INFO - 	 Train Loss: 0.148
2024-11-05 01:55 - INFO - 	 Val. Loss: 0.177
2024-11-05 01:55 - INFO - 	 ROC-AUC: 0.950
2024-11-05 01:55 - INFO - 	 PR-AUC: 0.591
2024-11-05 01:55 - INFO - 	 Best Val. Loss: 0.177
2024-11-05 01:55 - INFO - 	 Best ROC-AUC: 0.950
2024-11-05 01:55 - INFO - 	 Best PR-AUC: 0.591
2024-11-05 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-05 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.621
2024-11-05 01:55 - INFO - ---------------------------------------------
2024-11-05 02:04 - INFO - ---------------------------------------------
2024-11-05 02:04 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 02:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77813
2024-11-05 02:04 - INFO - 	 Train Loss: 0.104
2024-11-05 02:04 - INFO - 	 Val. Loss: 0.100
2024-11-05 02:04 - INFO - 	 ROC-AUC: 0.976
2024-11-05 02:04 - INFO - 	 PR-AUC: 0.778
2024-11-05 02:04 - INFO - 	 Best Val. Loss: 0.100
2024-11-05 02:04 - INFO - 	 Best ROC-AUC: 0.976
2024-11-05 02:04 - INFO - 	 Best PR-AUC: 0.778
2024-11-05 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-05 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.780
2024-11-05 02:04 - INFO - ---------------------------------------------
2024-11-05 02:12 - INFO - ---------------------------------------------
2024-11-05 02:12 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 02:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83141
2024-11-05 02:12 - INFO - 	 Train Loss: 0.091
2024-11-05 02:12 - INFO - 	 Val. Loss: 0.080
2024-11-05 02:12 - INFO - 	 ROC-AUC: 0.979
2024-11-05 02:12 - INFO - 	 PR-AUC: 0.831
2024-11-05 02:12 - INFO - 	 Best Val. Loss: 0.080
2024-11-05 02:12 - INFO - 	 Best ROC-AUC: 0.979
2024-11-05 02:12 - INFO - 	 Best PR-AUC: 0.831
2024-11-05 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-11-05 02:12 - INFO - ---------------------------------------------
2024-11-05 02:20 - INFO - ---------------------------------------------
2024-11-05 02:20 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 02:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84207
2024-11-05 02:20 - INFO - 	 Train Loss: 0.082
2024-11-05 02:20 - INFO - 	 Val. Loss: 0.073
2024-11-05 02:20 - INFO - 	 ROC-AUC: 0.983
2024-11-05 02:20 - INFO - 	 PR-AUC: 0.842
2024-11-05 02:20 - INFO - 	 Best Val. Loss: 0.073
2024-11-05 02:20 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 02:20 - INFO - 	 Best PR-AUC: 0.842
2024-11-05 02:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 02:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-05 02:20 - INFO - ---------------------------------------------
2024-11-05 02:28 - INFO - ---------------------------------------------
2024-11-05 02:28 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 02:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86116
2024-11-05 02:28 - INFO - 	 Train Loss: 0.076
2024-11-05 02:28 - INFO - 	 Val. Loss: 0.067
2024-11-05 02:28 - INFO - 	 ROC-AUC: 0.985
2024-11-05 02:28 - INFO - 	 PR-AUC: 0.861
2024-11-05 02:28 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 02:28 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 02:28 - INFO - 	 Best PR-AUC: 0.861
2024-11-05 02:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 02:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-05 02:28 - INFO - ---------------------------------------------
2024-11-05 02:36 - INFO - ---------------------------------------------
2024-11-05 02:36 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 02:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87603
2024-11-05 02:36 - INFO - 	 Train Loss: 0.072
2024-11-05 02:36 - INFO - 	 Val. Loss: 0.065
2024-11-05 02:36 - INFO - 	 ROC-AUC: 0.986
2024-11-05 02:36 - INFO - 	 PR-AUC: 0.876
2024-11-05 02:36 - INFO - 	 Best Val. Loss: 0.065
2024-11-05 02:36 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 02:36 - INFO - 	 Best PR-AUC: 0.876
2024-11-05 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-05 02:36 - INFO - ---------------------------------------------
2024-11-05 02:44 - INFO - ---------------------------------------------
2024-11-05 02:44 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 02:44 - INFO - 	 Train Loss: 0.070
2024-11-05 02:44 - INFO - 	 Val. Loss: 0.063
2024-11-05 02:44 - INFO - 	 ROC-AUC: 0.987
2024-11-05 02:44 - INFO - 	 PR-AUC: 0.874
2024-11-05 02:44 - INFO - 	 Best Val. Loss: 0.063
2024-11-05 02:44 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 02:44 - INFO - 	 Best PR-AUC: 0.876
2024-11-05 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-05 02:44 - INFO - ---------------------------------------------
2024-11-05 02:52 - INFO - ---------------------------------------------
2024-11-05 02:52 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 02:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87791
2024-11-05 02:52 - INFO - 	 Train Loss: 0.067
2024-11-05 02:52 - INFO - 	 Val. Loss: 0.062
2024-11-05 02:52 - INFO - 	 ROC-AUC: 0.987
2024-11-05 02:52 - INFO - 	 PR-AUC: 0.878
2024-11-05 02:52 - INFO - 	 Best Val. Loss: 0.062
2024-11-05 02:52 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 02:52 - INFO - 	 Best PR-AUC: 0.878
2024-11-05 02:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 02:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-05 02:52 - INFO - ---------------------------------------------
2024-11-05 03:00 - INFO - ---------------------------------------------
2024-11-05 03:00 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-05 03:00 - INFO - 	 Train Loss: 0.064
2024-11-05 03:00 - INFO - 	 Val. Loss: 0.063
2024-11-05 03:00 - INFO - 	 ROC-AUC: 0.986
2024-11-05 03:00 - INFO - 	 PR-AUC: 0.874
2024-11-05 03:00 - INFO - 	 Best Val. Loss: 0.062
2024-11-05 03:00 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 03:00 - INFO - 	 Best PR-AUC: 0.878
2024-11-05 03:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 03:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-05 03:00 - INFO - ---------------------------------------------
2024-11-05 03:02 - INFO - Fit the preprocessing pipeline
2024-11-05 03:02 - INFO - Training using device: cuda
2024-11-05 03:02 - INFO - Creating generators
2024-11-05 03:02 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 03:02 - INFO - * Model:
2024-11-05 03:02 - INFO - * -----------
2024-11-05 03:02 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 03:02 - INFO - * -----------
2024-11-05 03:10 - INFO - ---------------------------------------------
2024-11-05 03:10 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 03:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26895
2024-11-05 03:10 - INFO - 	 Train Loss: 0.235
2024-11-05 03:10 - INFO - 	 Val. Loss: 0.812
2024-11-05 03:10 - INFO - 	 ROC-AUC: 0.829
2024-11-05 03:10 - INFO - 	 PR-AUC: 0.269
2024-11-05 03:10 - INFO - 	 Best Val. Loss: 0.812
2024-11-05 03:10 - INFO - 	 Best ROC-AUC: 0.829
2024-11-05 03:10 - INFO - 	 Best PR-AUC: 0.269
2024-11-05 03:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.807
2024-11-05 03:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.337
2024-11-05 03:10 - INFO - ---------------------------------------------
2024-11-05 03:18 - INFO - ---------------------------------------------
2024-11-05 03:18 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-05 03:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5991
2024-11-05 03:18 - INFO - 	 Train Loss: 0.151
2024-11-05 03:18 - INFO - 	 Val. Loss: 0.211
2024-11-05 03:18 - INFO - 	 ROC-AUC: 0.957
2024-11-05 03:18 - INFO - 	 PR-AUC: 0.599
2024-11-05 03:18 - INFO - 	 Best Val. Loss: 0.211
2024-11-05 03:18 - INFO - 	 Best ROC-AUC: 0.957
2024-11-05 03:18 - INFO - 	 Best PR-AUC: 0.599
2024-11-05 03:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-05 03:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.633
2024-11-05 03:18 - INFO - ---------------------------------------------
2024-11-05 03:26 - INFO - ---------------------------------------------
2024-11-05 03:26 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-05 03:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74458
2024-11-05 03:26 - INFO - 	 Train Loss: 0.114
2024-11-05 03:26 - INFO - 	 Val. Loss: 0.132
2024-11-05 03:26 - INFO - 	 ROC-AUC: 0.973
2024-11-05 03:26 - INFO - 	 PR-AUC: 0.745
2024-11-05 03:26 - INFO - 	 Best Val. Loss: 0.132
2024-11-05 03:26 - INFO - 	 Best ROC-AUC: 0.973
2024-11-05 03:26 - INFO - 	 Best PR-AUC: 0.745
2024-11-05 03:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-05 03:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-11-05 03:26 - INFO - ---------------------------------------------
2024-11-05 03:34 - INFO - ---------------------------------------------
2024-11-05 03:34 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 03:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80239
2024-11-05 03:34 - INFO - 	 Train Loss: 0.098
2024-11-05 03:34 - INFO - 	 Val. Loss: 0.091
2024-11-05 03:34 - INFO - 	 ROC-AUC: 0.980
2024-11-05 03:34 - INFO - 	 PR-AUC: 0.802
2024-11-05 03:34 - INFO - 	 Best Val. Loss: 0.091
2024-11-05 03:34 - INFO - 	 Best ROC-AUC: 0.980
2024-11-05 03:34 - INFO - 	 Best PR-AUC: 0.802
2024-11-05 03:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-05 03:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-11-05 03:34 - INFO - ---------------------------------------------
2024-11-05 03:42 - INFO - ---------------------------------------------
2024-11-05 03:42 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 03:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84646
2024-11-05 03:42 - INFO - 	 Train Loss: 0.089
2024-11-05 03:42 - INFO - 	 Val. Loss: 0.080
2024-11-05 03:42 - INFO - 	 ROC-AUC: 0.984
2024-11-05 03:42 - INFO - 	 PR-AUC: 0.846
2024-11-05 03:42 - INFO - 	 Best Val. Loss: 0.080
2024-11-05 03:42 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 03:42 - INFO - 	 Best PR-AUC: 0.846
2024-11-05 03:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 03:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-05 03:42 - INFO - ---------------------------------------------
2024-11-05 03:50 - INFO - ---------------------------------------------
2024-11-05 03:50 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 03:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85216
2024-11-05 03:50 - INFO - 	 Train Loss: 0.081
2024-11-05 03:50 - INFO - 	 Val. Loss: 0.068
2024-11-05 03:50 - INFO - 	 ROC-AUC: 0.985
2024-11-05 03:50 - INFO - 	 PR-AUC: 0.852
2024-11-05 03:50 - INFO - 	 Best Val. Loss: 0.068
2024-11-05 03:50 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 03:50 - INFO - 	 Best PR-AUC: 0.852
2024-11-05 03:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 03:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-05 03:50 - INFO - ---------------------------------------------
2024-11-05 03:58 - INFO - ---------------------------------------------
2024-11-05 03:58 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 03:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86369
2024-11-05 03:58 - INFO - 	 Train Loss: 0.077
2024-11-05 03:58 - INFO - 	 Val. Loss: 0.066
2024-11-05 03:58 - INFO - 	 ROC-AUC: 0.986
2024-11-05 03:58 - INFO - 	 PR-AUC: 0.864
2024-11-05 03:58 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 03:58 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 03:58 - INFO - 	 Best PR-AUC: 0.864
2024-11-05 03:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 03:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-05 03:58 - INFO - ---------------------------------------------
2024-11-05 04:06 - INFO - ---------------------------------------------
2024-11-05 04:06 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 04:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88026
2024-11-05 04:06 - INFO - 	 Train Loss: 0.073
2024-11-05 04:06 - INFO - 	 Val. Loss: 0.062
2024-11-05 04:06 - INFO - 	 ROC-AUC: 0.987
2024-11-05 04:06 - INFO - 	 PR-AUC: 0.880
2024-11-05 04:06 - INFO - 	 Best Val. Loss: 0.062
2024-11-05 04:06 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 04:06 - INFO - 	 Best PR-AUC: 0.880
2024-11-05 04:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 04:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-05 04:06 - INFO - ---------------------------------------------
2024-11-05 04:14 - INFO - ---------------------------------------------
2024-11-05 04:14 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 04:14 - INFO - 	 Train Loss: 0.070
2024-11-05 04:14 - INFO - 	 Val. Loss: 0.064
2024-11-05 04:14 - INFO - 	 ROC-AUC: 0.985
2024-11-05 04:14 - INFO - 	 PR-AUC: 0.872
2024-11-05 04:14 - INFO - 	 Best Val. Loss: 0.062
2024-11-05 04:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 04:14 - INFO - 	 Best PR-AUC: 0.880
2024-11-05 04:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 04:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-05 04:14 - INFO - ---------------------------------------------
2024-11-05 04:22 - INFO - ---------------------------------------------
2024-11-05 04:22 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 04:22 - INFO - 	 Train Loss: 0.068
2024-11-05 04:22 - INFO - 	 Val. Loss: 0.061
2024-11-05 04:22 - INFO - 	 ROC-AUC: 0.988
2024-11-05 04:22 - INFO - 	 PR-AUC: 0.880
2024-11-05 04:22 - INFO - 	 Best Val. Loss: 0.061
2024-11-05 04:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-05 04:22 - INFO - 	 Best PR-AUC: 0.880
2024-11-05 04:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 04:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-05 04:22 - INFO - ---------------------------------------------
2024-11-05 04:25 - INFO - Fit the preprocessing pipeline
2024-11-05 04:25 - INFO - Training using device: cuda
2024-11-05 04:25 - INFO - Creating generators
2024-11-05 04:25 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 04:25 - INFO - * Model:
2024-11-05 04:25 - INFO - * -----------
2024-11-05 04:25 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 04:25 - INFO - * -----------
2024-11-05 04:33 - INFO - ---------------------------------------------
2024-11-05 04:33 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 04:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28436
2024-11-05 04:33 - INFO - 	 Train Loss: 0.239
2024-11-05 04:33 - INFO - 	 Val. Loss: 0.283
2024-11-05 04:33 - INFO - 	 ROC-AUC: 0.825
2024-11-05 04:33 - INFO - 	 PR-AUC: 0.284
2024-11-05 04:33 - INFO - 	 Best Val. Loss: 0.283
2024-11-05 04:33 - INFO - 	 Best ROC-AUC: 0.825
2024-11-05 04:33 - INFO - 	 Best PR-AUC: 0.284
2024-11-05 04:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.830
2024-11-05 04:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.360
2024-11-05 04:33 - INFO - ---------------------------------------------
2024-11-05 04:41 - INFO - ---------------------------------------------
2024-11-05 04:41 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-05 04:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59564
2024-11-05 04:41 - INFO - 	 Train Loss: 0.151
2024-11-05 04:41 - INFO - 	 Val. Loss: 0.163
2024-11-05 04:41 - INFO - 	 ROC-AUC: 0.951
2024-11-05 04:41 - INFO - 	 PR-AUC: 0.596
2024-11-05 04:41 - INFO - 	 Best Val. Loss: 0.163
2024-11-05 04:41 - INFO - 	 Best ROC-AUC: 0.951
2024-11-05 04:41 - INFO - 	 Best PR-AUC: 0.596
2024-11-05 04:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-05 04:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.637
2024-11-05 04:41 - INFO - ---------------------------------------------
2024-11-05 04:49 - INFO - ---------------------------------------------
2024-11-05 04:49 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-05 04:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77354
2024-11-05 04:49 - INFO - 	 Train Loss: 0.104
2024-11-05 04:49 - INFO - 	 Val. Loss: 0.112
2024-11-05 04:49 - INFO - 	 ROC-AUC: 0.975
2024-11-05 04:49 - INFO - 	 PR-AUC: 0.774
2024-11-05 04:49 - INFO - 	 Best Val. Loss: 0.112
2024-11-05 04:49 - INFO - 	 Best ROC-AUC: 0.975
2024-11-05 04:49 - INFO - 	 Best PR-AUC: 0.774
2024-11-05 04:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-05 04:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-11-05 04:49 - INFO - ---------------------------------------------
2024-11-05 04:57 - INFO - ---------------------------------------------
2024-11-05 04:57 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 04:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81351
2024-11-05 04:57 - INFO - 	 Train Loss: 0.092
2024-11-05 04:57 - INFO - 	 Val. Loss: 0.085
2024-11-05 04:57 - INFO - 	 ROC-AUC: 0.980
2024-11-05 04:57 - INFO - 	 PR-AUC: 0.814
2024-11-05 04:57 - INFO - 	 Best Val. Loss: 0.085
2024-11-05 04:57 - INFO - 	 Best ROC-AUC: 0.980
2024-11-05 04:57 - INFO - 	 Best PR-AUC: 0.814
2024-11-05 04:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-05 04:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-11-05 04:57 - INFO - ---------------------------------------------
2024-11-05 05:05 - INFO - ---------------------------------------------
2024-11-05 05:05 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 05:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83913
2024-11-05 05:05 - INFO - 	 Train Loss: 0.084
2024-11-05 05:05 - INFO - 	 Val. Loss: 0.084
2024-11-05 05:05 - INFO - 	 ROC-AUC: 0.981
2024-11-05 05:05 - INFO - 	 PR-AUC: 0.839
2024-11-05 05:05 - INFO - 	 Best Val. Loss: 0.084
2024-11-05 05:05 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 05:05 - INFO - 	 Best PR-AUC: 0.839
2024-11-05 05:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 05:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-11-05 05:05 - INFO - ---------------------------------------------
2024-11-05 05:13 - INFO - ---------------------------------------------
2024-11-05 05:13 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 05:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85621
2024-11-05 05:13 - INFO - 	 Train Loss: 0.079
2024-11-05 05:13 - INFO - 	 Val. Loss: 0.068
2024-11-05 05:13 - INFO - 	 ROC-AUC: 0.984
2024-11-05 05:13 - INFO - 	 PR-AUC: 0.856
2024-11-05 05:13 - INFO - 	 Best Val. Loss: 0.068
2024-11-05 05:13 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 05:13 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 05:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 05:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-05 05:13 - INFO - ---------------------------------------------
2024-11-05 05:21 - INFO - ---------------------------------------------
2024-11-05 05:21 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 05:21 - INFO - 	 Train Loss: 0.076
2024-11-05 05:21 - INFO - 	 Val. Loss: 0.069
2024-11-05 05:21 - INFO - 	 ROC-AUC: 0.984
2024-11-05 05:21 - INFO - 	 PR-AUC: 0.848
2024-11-05 05:21 - INFO - 	 Best Val. Loss: 0.068
2024-11-05 05:21 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 05:21 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 05:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 05:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-05 05:21 - INFO - ---------------------------------------------
2024-11-05 05:29 - INFO - ---------------------------------------------
2024-11-05 05:29 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 05:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85803
2024-11-05 05:29 - INFO - 	 Train Loss: 0.074
2024-11-05 05:29 - INFO - 	 Val. Loss: 0.069
2024-11-05 05:29 - INFO - 	 ROC-AUC: 0.984
2024-11-05 05:29 - INFO - 	 PR-AUC: 0.858
2024-11-05 05:29 - INFO - 	 Best Val. Loss: 0.068
2024-11-05 05:29 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 05:29 - INFO - 	 Best PR-AUC: 0.858
2024-11-05 05:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 05:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-05 05:29 - INFO - ---------------------------------------------
2024-11-05 05:37 - INFO - ---------------------------------------------
2024-11-05 05:37 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 05:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86354
2024-11-05 05:37 - INFO - 	 Train Loss: 0.070
2024-11-05 05:37 - INFO - 	 Val. Loss: 0.063
2024-11-05 05:37 - INFO - 	 ROC-AUC: 0.987
2024-11-05 05:37 - INFO - 	 PR-AUC: 0.864
2024-11-05 05:37 - INFO - 	 Best Val. Loss: 0.063
2024-11-05 05:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 05:37 - INFO - 	 Best PR-AUC: 0.864
2024-11-05 05:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 05:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-05 05:37 - INFO - ---------------------------------------------
2024-11-05 05:45 - INFO - ---------------------------------------------
2024-11-05 05:45 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-05 05:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86857
2024-11-05 05:45 - INFO - 	 Train Loss: 0.066
2024-11-05 05:45 - INFO - 	 Val. Loss: 0.063
2024-11-05 05:45 - INFO - 	 ROC-AUC: 0.986
2024-11-05 05:45 - INFO - 	 PR-AUC: 0.869
2024-11-05 05:45 - INFO - 	 Best Val. Loss: 0.063
2024-11-05 05:45 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 05:45 - INFO - 	 Best PR-AUC: 0.869
2024-11-05 05:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 05:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-05 05:45 - INFO - ---------------------------------------------
2024-11-05 05:47 - INFO - Fit the preprocessing pipeline
2024-11-05 05:47 - INFO - Training using device: cuda
2024-11-05 05:47 - INFO - Creating generators
2024-11-05 05:47 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 05:47 - INFO - * Model:
2024-11-05 05:47 - INFO - * -----------
2024-11-05 05:47 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 05:47 - INFO - * -----------
2024-11-05 05:55 - INFO - ---------------------------------------------
2024-11-05 05:55 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 05:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23139
2024-11-05 05:55 - INFO - 	 Train Loss: 0.236
2024-11-05 05:55 - INFO - 	 Val. Loss: 0.486
2024-11-05 05:55 - INFO - 	 ROC-AUC: 0.802
2024-11-05 05:55 - INFO - 	 PR-AUC: 0.231
2024-11-05 05:55 - INFO - 	 Best Val. Loss: 0.486
2024-11-05 05:55 - INFO - 	 Best ROC-AUC: 0.802
2024-11-05 05:55 - INFO - 	 Best PR-AUC: 0.231
2024-11-05 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.785
2024-11-05 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.279
2024-11-05 05:55 - INFO - ---------------------------------------------
2024-11-05 06:04 - INFO - ---------------------------------------------
2024-11-05 06:04 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-05 06:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64167
2024-11-05 06:04 - INFO - 	 Train Loss: 0.149
2024-11-05 06:04 - INFO - 	 Val. Loss: 0.186
2024-11-05 06:04 - INFO - 	 ROC-AUC: 0.952
2024-11-05 06:04 - INFO - 	 PR-AUC: 0.642
2024-11-05 06:04 - INFO - 	 Best Val. Loss: 0.186
2024-11-05 06:04 - INFO - 	 Best ROC-AUC: 0.952
2024-11-05 06:04 - INFO - 	 Best PR-AUC: 0.642
2024-11-05 06:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-05 06:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-11-05 06:04 - INFO - ---------------------------------------------
2024-11-05 06:12 - INFO - ---------------------------------------------
2024-11-05 06:12 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 06:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74753
2024-11-05 06:12 - INFO - 	 Train Loss: 0.110
2024-11-05 06:12 - INFO - 	 Val. Loss: 0.124
2024-11-05 06:12 - INFO - 	 ROC-AUC: 0.970
2024-11-05 06:12 - INFO - 	 PR-AUC: 0.748
2024-11-05 06:12 - INFO - 	 Best Val. Loss: 0.124
2024-11-05 06:12 - INFO - 	 Best ROC-AUC: 0.970
2024-11-05 06:12 - INFO - 	 Best PR-AUC: 0.748
2024-11-05 06:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-05 06:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-11-05 06:12 - INFO - ---------------------------------------------
2024-11-05 06:20 - INFO - ---------------------------------------------
2024-11-05 06:20 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 06:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80714
2024-11-05 06:20 - INFO - 	 Train Loss: 0.098
2024-11-05 06:20 - INFO - 	 Val. Loss: 0.084
2024-11-05 06:20 - INFO - 	 ROC-AUC: 0.979
2024-11-05 06:20 - INFO - 	 PR-AUC: 0.807
2024-11-05 06:20 - INFO - 	 Best Val. Loss: 0.084
2024-11-05 06:20 - INFO - 	 Best ROC-AUC: 0.979
2024-11-05 06:20 - INFO - 	 Best PR-AUC: 0.807
2024-11-05 06:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-05 06:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.776
2024-11-05 06:20 - INFO - ---------------------------------------------
2024-11-05 06:28 - INFO - ---------------------------------------------
2024-11-05 06:28 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 06:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81146
2024-11-05 06:28 - INFO - 	 Train Loss: 0.089
2024-11-05 06:28 - INFO - 	 Val. Loss: 0.085
2024-11-05 06:28 - INFO - 	 ROC-AUC: 0.979
2024-11-05 06:28 - INFO - 	 PR-AUC: 0.811
2024-11-05 06:28 - INFO - 	 Best Val. Loss: 0.084
2024-11-05 06:28 - INFO - 	 Best ROC-AUC: 0.979
2024-11-05 06:28 - INFO - 	 Best PR-AUC: 0.811
2024-11-05 06:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-05 06:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.790
2024-11-05 06:28 - INFO - ---------------------------------------------
2024-11-05 06:36 - INFO - ---------------------------------------------
2024-11-05 06:36 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 06:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84814
2024-11-05 06:36 - INFO - 	 Train Loss: 0.081
2024-11-05 06:36 - INFO - 	 Val. Loss: 0.073
2024-11-05 06:36 - INFO - 	 ROC-AUC: 0.983
2024-11-05 06:36 - INFO - 	 PR-AUC: 0.848
2024-11-05 06:36 - INFO - 	 Best Val. Loss: 0.073
2024-11-05 06:36 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 06:36 - INFO - 	 Best PR-AUC: 0.848
2024-11-05 06:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-05 06:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-11-05 06:36 - INFO - ---------------------------------------------
2024-11-05 06:44 - INFO - ---------------------------------------------
2024-11-05 06:44 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 06:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85837
2024-11-05 06:44 - INFO - 	 Train Loss: 0.074
2024-11-05 06:44 - INFO - 	 Val. Loss: 0.070
2024-11-05 06:44 - INFO - 	 ROC-AUC: 0.984
2024-11-05 06:44 - INFO - 	 PR-AUC: 0.858
2024-11-05 06:44 - INFO - 	 Best Val. Loss: 0.070
2024-11-05 06:44 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 06:44 - INFO - 	 Best PR-AUC: 0.858
2024-11-05 06:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 06:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-05 06:44 - INFO - ---------------------------------------------
2024-11-05 06:52 - INFO - ---------------------------------------------
2024-11-05 06:52 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 06:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8656
2024-11-05 06:52 - INFO - 	 Train Loss: 0.070
2024-11-05 06:52 - INFO - 	 Val. Loss: 0.067
2024-11-05 06:52 - INFO - 	 ROC-AUC: 0.985
2024-11-05 06:52 - INFO - 	 PR-AUC: 0.866
2024-11-05 06:52 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 06:52 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 06:52 - INFO - 	 Best PR-AUC: 0.866
2024-11-05 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-05 06:52 - INFO - ---------------------------------------------
2024-11-05 07:00 - INFO - ---------------------------------------------
2024-11-05 07:00 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 07:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88559
2024-11-05 07:00 - INFO - 	 Train Loss: 0.068
2024-11-05 07:00 - INFO - 	 Val. Loss: 0.061
2024-11-05 07:00 - INFO - 	 ROC-AUC: 0.987
2024-11-05 07:00 - INFO - 	 PR-AUC: 0.886
2024-11-05 07:00 - INFO - 	 Best Val. Loss: 0.061
2024-11-05 07:00 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 07:00 - INFO - 	 Best PR-AUC: 0.886
2024-11-05 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-05 07:00 - INFO - ---------------------------------------------
2024-11-05 07:08 - INFO - ---------------------------------------------
2024-11-05 07:08 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 07:08 - INFO - 	 Train Loss: 0.063
2024-11-05 07:08 - INFO - 	 Val. Loss: 0.062
2024-11-05 07:08 - INFO - 	 ROC-AUC: 0.987
2024-11-05 07:08 - INFO - 	 PR-AUC: 0.881
2024-11-05 07:08 - INFO - 	 Best Val. Loss: 0.061
2024-11-05 07:08 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 07:08 - INFO - 	 Best PR-AUC: 0.886
2024-11-05 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-05 07:08 - INFO - ---------------------------------------------
2024-11-05 07:10 - INFO - Fit the preprocessing pipeline
2024-11-05 07:10 - INFO - Training using device: cuda
2024-11-05 07:10 - INFO - Creating generators
2024-11-05 07:10 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 07:10 - INFO - * Model:
2024-11-05 07:10 - INFO - * -----------
2024-11-05 07:10 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 07:10 - INFO - * -----------
2024-11-05 07:18 - INFO - ---------------------------------------------
2024-11-05 07:18 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 07:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24614
2024-11-05 07:18 - INFO - 	 Train Loss: 0.236
2024-11-05 07:18 - INFO - 	 Val. Loss: 0.586
2024-11-05 07:18 - INFO - 	 ROC-AUC: 0.821
2024-11-05 07:18 - INFO - 	 PR-AUC: 0.246
2024-11-05 07:18 - INFO - 	 Best Val. Loss: 0.586
2024-11-05 07:18 - INFO - 	 Best ROC-AUC: 0.821
2024-11-05 07:18 - INFO - 	 Best PR-AUC: 0.246
2024-11-05 07:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.801
2024-11-05 07:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.292
2024-11-05 07:18 - INFO - ---------------------------------------------
2024-11-05 07:26 - INFO - ---------------------------------------------
2024-11-05 07:26 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 07:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56547
2024-11-05 07:26 - INFO - 	 Train Loss: 0.140
2024-11-05 07:26 - INFO - 	 Val. Loss: 0.306
2024-11-05 07:26 - INFO - 	 ROC-AUC: 0.940
2024-11-05 07:26 - INFO - 	 PR-AUC: 0.565
2024-11-05 07:26 - INFO - 	 Best Val. Loss: 0.306
2024-11-05 07:26 - INFO - 	 Best ROC-AUC: 0.940
2024-11-05 07:26 - INFO - 	 Best PR-AUC: 0.565
2024-11-05 07:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-05 07:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.574
2024-11-05 07:26 - INFO - ---------------------------------------------
2024-11-05 07:34 - INFO - ---------------------------------------------
2024-11-05 07:34 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-05 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75216
2024-11-05 07:34 - INFO - 	 Train Loss: 0.102
2024-11-05 07:34 - INFO - 	 Val. Loss: 0.139
2024-11-05 07:34 - INFO - 	 ROC-AUC: 0.971
2024-11-05 07:34 - INFO - 	 PR-AUC: 0.752
2024-11-05 07:34 - INFO - 	 Best Val. Loss: 0.139
2024-11-05 07:34 - INFO - 	 Best ROC-AUC: 0.971
2024-11-05 07:34 - INFO - 	 Best PR-AUC: 0.752
2024-11-05 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-05 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.732
2024-11-05 07:34 - INFO - ---------------------------------------------
2024-11-05 07:42 - INFO - ---------------------------------------------
2024-11-05 07:42 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 07:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78217
2024-11-05 07:42 - INFO - 	 Train Loss: 0.093
2024-11-05 07:42 - INFO - 	 Val. Loss: 0.099
2024-11-05 07:42 - INFO - 	 ROC-AUC: 0.976
2024-11-05 07:42 - INFO - 	 PR-AUC: 0.782
2024-11-05 07:42 - INFO - 	 Best Val. Loss: 0.099
2024-11-05 07:42 - INFO - 	 Best ROC-AUC: 0.976
2024-11-05 07:42 - INFO - 	 Best PR-AUC: 0.782
2024-11-05 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-05 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-11-05 07:42 - INFO - ---------------------------------------------
2024-11-05 07:50 - INFO - ---------------------------------------------
2024-11-05 07:50 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 07:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8389
2024-11-05 07:50 - INFO - 	 Train Loss: 0.084
2024-11-05 07:50 - INFO - 	 Val. Loss: 0.082
2024-11-05 07:50 - INFO - 	 ROC-AUC: 0.982
2024-11-05 07:50 - INFO - 	 PR-AUC: 0.839
2024-11-05 07:50 - INFO - 	 Best Val. Loss: 0.082
2024-11-05 07:50 - INFO - 	 Best ROC-AUC: 0.982
2024-11-05 07:50 - INFO - 	 Best PR-AUC: 0.839
2024-11-05 07:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 07:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-11-05 07:50 - INFO - ---------------------------------------------
2024-11-05 07:58 - INFO - ---------------------------------------------
2024-11-05 07:58 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 07:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8488
2024-11-05 07:58 - INFO - 	 Train Loss: 0.079
2024-11-05 07:58 - INFO - 	 Val. Loss: 0.072
2024-11-05 07:58 - INFO - 	 ROC-AUC: 0.984
2024-11-05 07:58 - INFO - 	 PR-AUC: 0.849
2024-11-05 07:58 - INFO - 	 Best Val. Loss: 0.072
2024-11-05 07:58 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 07:58 - INFO - 	 Best PR-AUC: 0.849
2024-11-05 07:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 07:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-05 07:58 - INFO - ---------------------------------------------
2024-11-05 08:06 - INFO - ---------------------------------------------
2024-11-05 08:06 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 08:06 - INFO - 	 Train Loss: 0.077
2024-11-05 08:06 - INFO - 	 Val. Loss: 0.073
2024-11-05 08:06 - INFO - 	 ROC-AUC: 0.983
2024-11-05 08:06 - INFO - 	 PR-AUC: 0.848
2024-11-05 08:06 - INFO - 	 Best Val. Loss: 0.072
2024-11-05 08:06 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 08:06 - INFO - 	 Best PR-AUC: 0.849
2024-11-05 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-05 08:06 - INFO - ---------------------------------------------
2024-11-05 08:14 - INFO - ---------------------------------------------
2024-11-05 08:14 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 08:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85402
2024-11-05 08:14 - INFO - 	 Train Loss: 0.071
2024-11-05 08:14 - INFO - 	 Val. Loss: 0.071
2024-11-05 08:14 - INFO - 	 ROC-AUC: 0.984
2024-11-05 08:14 - INFO - 	 PR-AUC: 0.854
2024-11-05 08:14 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 08:14 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 08:14 - INFO - 	 Best PR-AUC: 0.854
2024-11-05 08:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 08:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-05 08:14 - INFO - ---------------------------------------------
2024-11-05 08:23 - INFO - ---------------------------------------------
2024-11-05 08:23 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 08:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85931
2024-11-05 08:23 - INFO - 	 Train Loss: 0.069
2024-11-05 08:23 - INFO - 	 Val. Loss: 0.069
2024-11-05 08:23 - INFO - 	 ROC-AUC: 0.985
2024-11-05 08:23 - INFO - 	 PR-AUC: 0.859
2024-11-05 08:23 - INFO - 	 Best Val. Loss: 0.069
2024-11-05 08:23 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 08:23 - INFO - 	 Best PR-AUC: 0.859
2024-11-05 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-05 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-05 08:23 - INFO - ---------------------------------------------
2024-11-05 08:31 - INFO - ---------------------------------------------
2024-11-05 08:31 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-05 08:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87603
2024-11-05 08:31 - INFO - 	 Train Loss: 0.066
2024-11-05 08:31 - INFO - 	 Val. Loss: 0.063
2024-11-05 08:31 - INFO - 	 ROC-AUC: 0.986
2024-11-05 08:31 - INFO - 	 PR-AUC: 0.876
2024-11-05 08:31 - INFO - 	 Best Val. Loss: 0.063
2024-11-05 08:31 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 08:31 - INFO - 	 Best PR-AUC: 0.876
2024-11-05 08:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 08:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-05 08:31 - INFO - ---------------------------------------------
2024-11-05 08:33 - INFO - Fit the preprocessing pipeline
2024-11-05 08:33 - INFO - Training using device: cuda
2024-11-05 08:33 - INFO - Creating generators
2024-11-05 08:33 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 08:33 - INFO - * Model:
2024-11-05 08:33 - INFO - * -----------
2024-11-05 08:33 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 08:33 - INFO - * -----------
2024-11-05 08:41 - INFO - ---------------------------------------------
2024-11-05 08:41 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23568
2024-11-05 08:41 - INFO - 	 Train Loss: 0.243
2024-11-05 08:41 - INFO - 	 Val. Loss: 0.349
2024-11-05 08:41 - INFO - 	 ROC-AUC: 0.790
2024-11-05 08:41 - INFO - 	 PR-AUC: 0.236
2024-11-05 08:41 - INFO - 	 Best Val. Loss: 0.349
2024-11-05 08:41 - INFO - 	 Best ROC-AUC: 0.790
2024-11-05 08:41 - INFO - 	 Best PR-AUC: 0.236
2024-11-05 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-05 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.279
2024-11-05 08:41 - INFO - ---------------------------------------------
2024-11-05 08:49 - INFO - ---------------------------------------------
2024-11-05 08:49 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 08:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60314
2024-11-05 08:49 - INFO - 	 Train Loss: 0.164
2024-11-05 08:49 - INFO - 	 Val. Loss: 0.189
2024-11-05 08:49 - INFO - 	 ROC-AUC: 0.952
2024-11-05 08:49 - INFO - 	 PR-AUC: 0.603
2024-11-05 08:49 - INFO - 	 Best Val. Loss: 0.189
2024-11-05 08:49 - INFO - 	 Best ROC-AUC: 0.952
2024-11-05 08:49 - INFO - 	 Best PR-AUC: 0.603
2024-11-05 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-05 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.608
2024-11-05 08:49 - INFO - ---------------------------------------------
2024-11-05 08:57 - INFO - ---------------------------------------------
2024-11-05 08:57 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 08:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78657
2024-11-05 08:57 - INFO - 	 Train Loss: 0.110
2024-11-05 08:57 - INFO - 	 Val. Loss: 0.098
2024-11-05 08:57 - INFO - 	 ROC-AUC: 0.976
2024-11-05 08:57 - INFO - 	 PR-AUC: 0.787
2024-11-05 08:57 - INFO - 	 Best Val. Loss: 0.098
2024-11-05 08:57 - INFO - 	 Best ROC-AUC: 0.976
2024-11-05 08:57 - INFO - 	 Best PR-AUC: 0.787
2024-11-05 08:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-05 08:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-11-05 08:57 - INFO - ---------------------------------------------
2024-11-05 09:05 - INFO - ---------------------------------------------
2024-11-05 09:05 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 09:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84017
2024-11-05 09:05 - INFO - 	 Train Loss: 0.094
2024-11-05 09:05 - INFO - 	 Val. Loss: 0.078
2024-11-05 09:05 - INFO - 	 ROC-AUC: 0.983
2024-11-05 09:05 - INFO - 	 PR-AUC: 0.840
2024-11-05 09:05 - INFO - 	 Best Val. Loss: 0.078
2024-11-05 09:05 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 09:05 - INFO - 	 Best PR-AUC: 0.840
2024-11-05 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-05 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-11-05 09:05 - INFO - ---------------------------------------------
2024-11-05 09:13 - INFO - ---------------------------------------------
2024-11-05 09:13 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 09:13 - INFO - 	 Train Loss: 0.083
2024-11-05 09:13 - INFO - 	 Val. Loss: 0.080
2024-11-05 09:13 - INFO - 	 ROC-AUC: 0.983
2024-11-05 09:13 - INFO - 	 PR-AUC: 0.833
2024-11-05 09:13 - INFO - 	 Best Val. Loss: 0.078
2024-11-05 09:13 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 09:13 - INFO - 	 Best PR-AUC: 0.840
2024-11-05 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-11-05 09:13 - INFO - ---------------------------------------------
2024-11-05 09:21 - INFO - ---------------------------------------------
2024-11-05 09:21 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 09:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85185
2024-11-05 09:21 - INFO - 	 Train Loss: 0.079
2024-11-05 09:21 - INFO - 	 Val. Loss: 0.069
2024-11-05 09:21 - INFO - 	 ROC-AUC: 0.985
2024-11-05 09:21 - INFO - 	 PR-AUC: 0.852
2024-11-05 09:21 - INFO - 	 Best Val. Loss: 0.069
2024-11-05 09:21 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 09:21 - INFO - 	 Best PR-AUC: 0.852
2024-11-05 09:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 09:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-05 09:21 - INFO - ---------------------------------------------
2024-11-05 09:29 - INFO - ---------------------------------------------
2024-11-05 09:29 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 09:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87099
2024-11-05 09:29 - INFO - 	 Train Loss: 0.074
2024-11-05 09:29 - INFO - 	 Val. Loss: 0.065
2024-11-05 09:29 - INFO - 	 ROC-AUC: 0.986
2024-11-05 09:29 - INFO - 	 PR-AUC: 0.871
2024-11-05 09:29 - INFO - 	 Best Val. Loss: 0.065
2024-11-05 09:29 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 09:29 - INFO - 	 Best PR-AUC: 0.871
2024-11-05 09:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 09:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-05 09:29 - INFO - ---------------------------------------------
2024-11-05 09:37 - INFO - ---------------------------------------------
2024-11-05 09:37 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 09:37 - INFO - 	 Train Loss: 0.072
2024-11-05 09:37 - INFO - 	 Val. Loss: 0.068
2024-11-05 09:37 - INFO - 	 ROC-AUC: 0.983
2024-11-05 09:37 - INFO - 	 PR-AUC: 0.859
2024-11-05 09:37 - INFO - 	 Best Val. Loss: 0.065
2024-11-05 09:37 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 09:37 - INFO - 	 Best PR-AUC: 0.871
2024-11-05 09:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 09:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-05 09:37 - INFO - ---------------------------------------------
2024-11-05 09:45 - INFO - ---------------------------------------------
2024-11-05 09:45 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 09:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87496
2024-11-05 09:45 - INFO - 	 Train Loss: 0.069
2024-11-05 09:45 - INFO - 	 Val. Loss: 0.063
2024-11-05 09:45 - INFO - 	 ROC-AUC: 0.986
2024-11-05 09:45 - INFO - 	 PR-AUC: 0.875
2024-11-05 09:45 - INFO - 	 Best Val. Loss: 0.063
2024-11-05 09:45 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 09:45 - INFO - 	 Best PR-AUC: 0.875
2024-11-05 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-05 09:45 - INFO - ---------------------------------------------
2024-11-05 09:53 - INFO - ---------------------------------------------
2024-11-05 09:53 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 09:53 - INFO - 	 Train Loss: 0.066
2024-11-05 09:53 - INFO - 	 Val. Loss: 0.063
2024-11-05 09:53 - INFO - 	 ROC-AUC: 0.986
2024-11-05 09:53 - INFO - 	 PR-AUC: 0.869
2024-11-05 09:53 - INFO - 	 Best Val. Loss: 0.063
2024-11-05 09:53 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 09:53 - INFO - 	 Best PR-AUC: 0.875
2024-11-05 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-05 09:53 - INFO - ---------------------------------------------
2024-11-05 09:56 - INFO - Fit the preprocessing pipeline
2024-11-05 09:56 - INFO - Training using device: cuda
2024-11-05 09:56 - INFO - Creating generators
2024-11-05 09:56 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 09:56 - INFO - * Model:
2024-11-05 09:56 - INFO - * -----------
2024-11-05 09:56 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 09:56 - INFO - * -----------
2024-11-05 10:04 - INFO - ---------------------------------------------
2024-11-05 10:04 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 10:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26157
2024-11-05 10:04 - INFO - 	 Train Loss: 0.240
2024-11-05 10:04 - INFO - 	 Val. Loss: 0.373
2024-11-05 10:04 - INFO - 	 ROC-AUC: 0.819
2024-11-05 10:04 - INFO - 	 PR-AUC: 0.262
2024-11-05 10:04 - INFO - 	 Best Val. Loss: 0.373
2024-11-05 10:04 - INFO - 	 Best ROC-AUC: 0.819
2024-11-05 10:04 - INFO - 	 Best PR-AUC: 0.262
2024-11-05 10:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.810
2024-11-05 10:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-05 10:04 - INFO - ---------------------------------------------
2024-11-05 10:12 - INFO - ---------------------------------------------
2024-11-05 10:12 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 10:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63174
2024-11-05 10:12 - INFO - 	 Train Loss: 0.151
2024-11-05 10:12 - INFO - 	 Val. Loss: 0.161
2024-11-05 10:12 - INFO - 	 ROC-AUC: 0.957
2024-11-05 10:12 - INFO - 	 PR-AUC: 0.632
2024-11-05 10:12 - INFO - 	 Best Val. Loss: 0.161
2024-11-05 10:12 - INFO - 	 Best ROC-AUC: 0.957
2024-11-05 10:12 - INFO - 	 Best PR-AUC: 0.632
2024-11-05 10:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-05 10:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-11-05 10:12 - INFO - ---------------------------------------------
2024-11-05 10:20 - INFO - ---------------------------------------------
2024-11-05 10:20 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-05 10:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7389
2024-11-05 10:20 - INFO - 	 Train Loss: 0.107
2024-11-05 10:20 - INFO - 	 Val. Loss: 0.101
2024-11-05 10:20 - INFO - 	 ROC-AUC: 0.975
2024-11-05 10:20 - INFO - 	 PR-AUC: 0.739
2024-11-05 10:20 - INFO - 	 Best Val. Loss: 0.101
2024-11-05 10:20 - INFO - 	 Best ROC-AUC: 0.975
2024-11-05 10:20 - INFO - 	 Best PR-AUC: 0.739
2024-11-05 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-05 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-11-05 10:20 - INFO - ---------------------------------------------
2024-11-05 10:28 - INFO - ---------------------------------------------
2024-11-05 10:28 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-05 10:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80607
2024-11-05 10:28 - INFO - 	 Train Loss: 0.093
2024-11-05 10:28 - INFO - 	 Val. Loss: 0.084
2024-11-05 10:28 - INFO - 	 ROC-AUC: 0.980
2024-11-05 10:28 - INFO - 	 PR-AUC: 0.806
2024-11-05 10:28 - INFO - 	 Best Val. Loss: 0.084
2024-11-05 10:28 - INFO - 	 Best ROC-AUC: 0.980
2024-11-05 10:28 - INFO - 	 Best PR-AUC: 0.806
2024-11-05 10:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 10:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-05 10:28 - INFO - ---------------------------------------------
2024-11-05 10:36 - INFO - ---------------------------------------------
2024-11-05 10:36 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 10:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84212
2024-11-05 10:36 - INFO - 	 Train Loss: 0.085
2024-11-05 10:36 - INFO - 	 Val. Loss: 0.072
2024-11-05 10:36 - INFO - 	 ROC-AUC: 0.983
2024-11-05 10:36 - INFO - 	 PR-AUC: 0.842
2024-11-05 10:36 - INFO - 	 Best Val. Loss: 0.072
2024-11-05 10:36 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 10:36 - INFO - 	 Best PR-AUC: 0.842
2024-11-05 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-05 10:36 - INFO - ---------------------------------------------
2024-11-05 10:44 - INFO - ---------------------------------------------
2024-11-05 10:44 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 10:44 - INFO - 	 Train Loss: 0.079
2024-11-05 10:44 - INFO - 	 Val. Loss: 0.071
2024-11-05 10:44 - INFO - 	 ROC-AUC: 0.983
2024-11-05 10:44 - INFO - 	 PR-AUC: 0.841
2024-11-05 10:44 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 10:44 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 10:44 - INFO - 	 Best PR-AUC: 0.842
2024-11-05 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-05 10:44 - INFO - ---------------------------------------------
2024-11-05 10:52 - INFO - ---------------------------------------------
2024-11-05 10:52 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 10:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86177
2024-11-05 10:52 - INFO - 	 Train Loss: 0.074
2024-11-05 10:52 - INFO - 	 Val. Loss: 0.066
2024-11-05 10:52 - INFO - 	 ROC-AUC: 0.985
2024-11-05 10:52 - INFO - 	 PR-AUC: 0.862
2024-11-05 10:52 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 10:52 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 10:52 - INFO - 	 Best PR-AUC: 0.862
2024-11-05 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-05 10:52 - INFO - ---------------------------------------------
2024-11-05 11:00 - INFO - ---------------------------------------------
2024-11-05 11:00 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 11:00 - INFO - 	 Train Loss: 0.071
2024-11-05 11:00 - INFO - 	 Val. Loss: 0.066
2024-11-05 11:00 - INFO - 	 ROC-AUC: 0.986
2024-11-05 11:00 - INFO - 	 PR-AUC: 0.862
2024-11-05 11:00 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 11:00 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 11:00 - INFO - 	 Best PR-AUC: 0.862
2024-11-05 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-05 11:00 - INFO - ---------------------------------------------
2024-11-05 11:08 - INFO - ---------------------------------------------
2024-11-05 11:08 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 11:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86872
2024-11-05 11:08 - INFO - 	 Train Loss: 0.068
2024-11-05 11:08 - INFO - 	 Val. Loss: 0.066
2024-11-05 11:08 - INFO - 	 ROC-AUC: 0.985
2024-11-05 11:08 - INFO - 	 PR-AUC: 0.869
2024-11-05 11:08 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 11:08 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 11:08 - INFO - 	 Best PR-AUC: 0.869
2024-11-05 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-05 11:08 - INFO - ---------------------------------------------
2024-11-05 11:16 - INFO - ---------------------------------------------
2024-11-05 11:16 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 11:16 - INFO - 	 Train Loss: 0.066
2024-11-05 11:16 - INFO - 	 Val. Loss: 0.064
2024-11-05 11:16 - INFO - 	 ROC-AUC: 0.986
2024-11-05 11:16 - INFO - 	 PR-AUC: 0.864
2024-11-05 11:16 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 11:16 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 11:16 - INFO - 	 Best PR-AUC: 0.869
2024-11-05 11:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 11:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-05 11:16 - INFO - ---------------------------------------------
2024-11-05 11:18 - INFO - Fit the preprocessing pipeline
2024-11-05 11:18 - INFO - Training using device: cuda
2024-11-05 11:18 - INFO - Creating generators
2024-11-05 11:18 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 11:18 - INFO - * Model:
2024-11-05 11:18 - INFO - * -----------
2024-11-05 11:18 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 11:18 - INFO - * -----------
2024-11-05 11:26 - INFO - ---------------------------------------------
2024-11-05 11:26 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23389
2024-11-05 11:26 - INFO - 	 Train Loss: 0.243
2024-11-05 11:26 - INFO - 	 Val. Loss: 0.266
2024-11-05 11:26 - INFO - 	 ROC-AUC: 0.803
2024-11-05 11:26 - INFO - 	 PR-AUC: 0.234
2024-11-05 11:26 - INFO - 	 Best Val. Loss: 0.266
2024-11-05 11:26 - INFO - 	 Best ROC-AUC: 0.803
2024-11-05 11:26 - INFO - 	 Best PR-AUC: 0.234
2024-11-05 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.785
2024-11-05 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.287
2024-11-05 11:26 - INFO - ---------------------------------------------
2024-11-05 11:34 - INFO - ---------------------------------------------
2024-11-05 11:34 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-05 11:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64685
2024-11-05 11:34 - INFO - 	 Train Loss: 0.170
2024-11-05 11:34 - INFO - 	 Val. Loss: 0.144
2024-11-05 11:34 - INFO - 	 ROC-AUC: 0.961
2024-11-05 11:34 - INFO - 	 PR-AUC: 0.647
2024-11-05 11:34 - INFO - 	 Best Val. Loss: 0.144
2024-11-05 11:34 - INFO - 	 Best ROC-AUC: 0.961
2024-11-05 11:34 - INFO - 	 Best PR-AUC: 0.647
2024-11-05 11:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-05 11:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.664
2024-11-05 11:34 - INFO - ---------------------------------------------
2024-11-05 11:42 - INFO - ---------------------------------------------
2024-11-05 11:42 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-05 11:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78605
2024-11-05 11:42 - INFO - 	 Train Loss: 0.103
2024-11-05 11:42 - INFO - 	 Val. Loss: 0.095
2024-11-05 11:42 - INFO - 	 ROC-AUC: 0.979
2024-11-05 11:42 - INFO - 	 PR-AUC: 0.786
2024-11-05 11:42 - INFO - 	 Best Val. Loss: 0.095
2024-11-05 11:42 - INFO - 	 Best ROC-AUC: 0.979
2024-11-05 11:42 - INFO - 	 Best PR-AUC: 0.786
2024-11-05 11:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-05 11:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-11-05 11:42 - INFO - ---------------------------------------------
2024-11-05 11:50 - INFO - ---------------------------------------------
2024-11-05 11:50 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 11:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8243
2024-11-05 11:50 - INFO - 	 Train Loss: 0.089
2024-11-05 11:50 - INFO - 	 Val. Loss: 0.097
2024-11-05 11:50 - INFO - 	 ROC-AUC: 0.980
2024-11-05 11:50 - INFO - 	 PR-AUC: 0.824
2024-11-05 11:50 - INFO - 	 Best Val. Loss: 0.095
2024-11-05 11:50 - INFO - 	 Best ROC-AUC: 0.980
2024-11-05 11:50 - INFO - 	 Best PR-AUC: 0.824
2024-11-05 11:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-05 11:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-11-05 11:50 - INFO - ---------------------------------------------
2024-11-05 11:58 - INFO - ---------------------------------------------
2024-11-05 11:58 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 11:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83203
2024-11-05 11:58 - INFO - 	 Train Loss: 0.082
2024-11-05 11:58 - INFO - 	 Val. Loss: 0.074
2024-11-05 11:58 - INFO - 	 ROC-AUC: 0.983
2024-11-05 11:58 - INFO - 	 PR-AUC: 0.832
2024-11-05 11:58 - INFO - 	 Best Val. Loss: 0.074
2024-11-05 11:58 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 11:58 - INFO - 	 Best PR-AUC: 0.832
2024-11-05 11:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 11:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-11-05 11:58 - INFO - ---------------------------------------------
2024-11-05 12:06 - INFO - ---------------------------------------------
2024-11-05 12:06 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 12:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85337
2024-11-05 12:06 - INFO - 	 Train Loss: 0.078
2024-11-05 12:06 - INFO - 	 Val. Loss: 0.071
2024-11-05 12:06 - INFO - 	 ROC-AUC: 0.985
2024-11-05 12:06 - INFO - 	 PR-AUC: 0.853
2024-11-05 12:06 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 12:06 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 12:06 - INFO - 	 Best PR-AUC: 0.853
2024-11-05 12:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 12:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-05 12:06 - INFO - ---------------------------------------------
2024-11-05 12:15 - INFO - ---------------------------------------------
2024-11-05 12:15 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 12:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85551
2024-11-05 12:15 - INFO - 	 Train Loss: 0.074
2024-11-05 12:15 - INFO - 	 Val. Loss: 0.066
2024-11-05 12:15 - INFO - 	 ROC-AUC: 0.985
2024-11-05 12:15 - INFO - 	 PR-AUC: 0.856
2024-11-05 12:15 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 12:15 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 12:15 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 12:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 12:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-05 12:15 - INFO - ---------------------------------------------
2024-11-05 12:23 - INFO - ---------------------------------------------
2024-11-05 12:23 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 12:23 - INFO - 	 Train Loss: 0.072
2024-11-05 12:23 - INFO - 	 Val. Loss: 0.068
2024-11-05 12:23 - INFO - 	 ROC-AUC: 0.985
2024-11-05 12:23 - INFO - 	 PR-AUC: 0.844
2024-11-05 12:23 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 12:23 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 12:23 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 12:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 12:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-05 12:23 - INFO - ---------------------------------------------
2024-11-05 12:31 - INFO - ---------------------------------------------
2024-11-05 12:31 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 12:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86827
2024-11-05 12:31 - INFO - 	 Train Loss: 0.070
2024-11-05 12:31 - INFO - 	 Val. Loss: 0.064
2024-11-05 12:31 - INFO - 	 ROC-AUC: 0.986
2024-11-05 12:31 - INFO - 	 PR-AUC: 0.868
2024-11-05 12:31 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 12:31 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 12:31 - INFO - 	 Best PR-AUC: 0.868
2024-11-05 12:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 12:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-05 12:31 - INFO - ---------------------------------------------
2024-11-05 12:39 - INFO - ---------------------------------------------
2024-11-05 12:39 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-05 12:39 - INFO - 	 Train Loss: 0.067
2024-11-05 12:39 - INFO - 	 Val. Loss: 0.067
2024-11-05 12:39 - INFO - 	 ROC-AUC: 0.985
2024-11-05 12:39 - INFO - 	 PR-AUC: 0.857
2024-11-05 12:39 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 12:39 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 12:39 - INFO - 	 Best PR-AUC: 0.868
2024-11-05 12:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 12:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-05 12:39 - INFO - ---------------------------------------------
2024-11-05 12:41 - INFO - Fit the preprocessing pipeline
2024-11-05 12:41 - INFO - Training using device: cuda
2024-11-05 12:41 - INFO - Creating generators
2024-11-05 12:41 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 12:41 - INFO - * Model:
2024-11-05 12:41 - INFO - * -----------
2024-11-05 12:41 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 12:41 - INFO - * -----------
2024-11-05 12:49 - INFO - ---------------------------------------------
2024-11-05 12:49 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-05 12:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24197
2024-11-05 12:49 - INFO - 	 Train Loss: 0.238
2024-11-05 12:49 - INFO - 	 Val. Loss: 0.675
2024-11-05 12:49 - INFO - 	 ROC-AUC: 0.814
2024-11-05 12:49 - INFO - 	 PR-AUC: 0.242
2024-11-05 12:49 - INFO - 	 Best Val. Loss: 0.675
2024-11-05 12:49 - INFO - 	 Best ROC-AUC: 0.814
2024-11-05 12:49 - INFO - 	 Best PR-AUC: 0.242
2024-11-05 12:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.806
2024-11-05 12:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.294
2024-11-05 12:49 - INFO - ---------------------------------------------
2024-11-05 12:57 - INFO - ---------------------------------------------
2024-11-05 12:57 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56932
2024-11-05 12:57 - INFO - 	 Train Loss: 0.158
2024-11-05 12:57 - INFO - 	 Val. Loss: 0.203
2024-11-05 12:57 - INFO - 	 ROC-AUC: 0.945
2024-11-05 12:57 - INFO - 	 PR-AUC: 0.569
2024-11-05 12:57 - INFO - 	 Best Val. Loss: 0.203
2024-11-05 12:57 - INFO - 	 Best ROC-AUC: 0.945
2024-11-05 12:57 - INFO - 	 Best PR-AUC: 0.569
2024-11-05 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-05 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.610
2024-11-05 12:57 - INFO - ---------------------------------------------
2024-11-05 13:05 - INFO - ---------------------------------------------
2024-11-05 13:05 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 13:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77802
2024-11-05 13:05 - INFO - 	 Train Loss: 0.111
2024-11-05 13:05 - INFO - 	 Val. Loss: 0.134
2024-11-05 13:05 - INFO - 	 ROC-AUC: 0.971
2024-11-05 13:05 - INFO - 	 PR-AUC: 0.778
2024-11-05 13:05 - INFO - 	 Best Val. Loss: 0.134
2024-11-05 13:05 - INFO - 	 Best ROC-AUC: 0.971
2024-11-05 13:05 - INFO - 	 Best PR-AUC: 0.778
2024-11-05 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-05 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-11-05 13:05 - INFO - ---------------------------------------------
2024-11-05 13:13 - INFO - ---------------------------------------------
2024-11-05 13:13 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-05 13:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82568
2024-11-05 13:13 - INFO - 	 Train Loss: 0.095
2024-11-05 13:13 - INFO - 	 Val. Loss: 0.089
2024-11-05 13:13 - INFO - 	 ROC-AUC: 0.980
2024-11-05 13:13 - INFO - 	 PR-AUC: 0.826
2024-11-05 13:13 - INFO - 	 Best Val. Loss: 0.089
2024-11-05 13:13 - INFO - 	 Best ROC-AUC: 0.980
2024-11-05 13:13 - INFO - 	 Best PR-AUC: 0.826
2024-11-05 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-05 13:13 - INFO - ---------------------------------------------
2024-11-05 13:21 - INFO - ---------------------------------------------
2024-11-05 13:21 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 13:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83701
2024-11-05 13:21 - INFO - 	 Train Loss: 0.084
2024-11-05 13:21 - INFO - 	 Val. Loss: 0.086
2024-11-05 13:21 - INFO - 	 ROC-AUC: 0.982
2024-11-05 13:21 - INFO - 	 PR-AUC: 0.837
2024-11-05 13:21 - INFO - 	 Best Val. Loss: 0.086
2024-11-05 13:21 - INFO - 	 Best ROC-AUC: 0.982
2024-11-05 13:21 - INFO - 	 Best PR-AUC: 0.837
2024-11-05 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-11-05 13:21 - INFO - ---------------------------------------------
2024-11-05 13:29 - INFO - ---------------------------------------------
2024-11-05 13:29 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 13:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86473
2024-11-05 13:29 - INFO - 	 Train Loss: 0.077
2024-11-05 13:29 - INFO - 	 Val. Loss: 0.067
2024-11-05 13:29 - INFO - 	 ROC-AUC: 0.985
2024-11-05 13:29 - INFO - 	 PR-AUC: 0.865
2024-11-05 13:29 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 13:29 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 13:29 - INFO - 	 Best PR-AUC: 0.865
2024-11-05 13:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 13:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-05 13:29 - INFO - ---------------------------------------------
2024-11-05 13:37 - INFO - ---------------------------------------------
2024-11-05 13:37 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 13:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87324
2024-11-05 13:37 - INFO - 	 Train Loss: 0.072
2024-11-05 13:37 - INFO - 	 Val. Loss: 0.066
2024-11-05 13:37 - INFO - 	 ROC-AUC: 0.985
2024-11-05 13:37 - INFO - 	 PR-AUC: 0.873
2024-11-05 13:37 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 13:37 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 13:37 - INFO - 	 Best PR-AUC: 0.873
2024-11-05 13:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 13:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-05 13:37 - INFO - ---------------------------------------------
2024-11-05 13:45 - INFO - ---------------------------------------------
2024-11-05 13:45 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87624
2024-11-05 13:45 - INFO - 	 Train Loss: 0.069
2024-11-05 13:45 - INFO - 	 Val. Loss: 0.064
2024-11-05 13:45 - INFO - 	 ROC-AUC: 0.986
2024-11-05 13:45 - INFO - 	 PR-AUC: 0.876
2024-11-05 13:45 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 13:45 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 13:45 - INFO - 	 Best PR-AUC: 0.876
2024-11-05 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-05 13:45 - INFO - ---------------------------------------------
2024-11-05 13:53 - INFO - ---------------------------------------------
2024-11-05 13:53 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-05 13:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87749
2024-11-05 13:53 - INFO - 	 Train Loss: 0.066
2024-11-05 13:53 - INFO - 	 Val. Loss: 0.061
2024-11-05 13:53 - INFO - 	 ROC-AUC: 0.987
2024-11-05 13:53 - INFO - 	 PR-AUC: 0.877
2024-11-05 13:53 - INFO - 	 Best Val. Loss: 0.061
2024-11-05 13:53 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 13:53 - INFO - 	 Best PR-AUC: 0.877
2024-11-05 13:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 13:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-05 13:53 - INFO - ---------------------------------------------
2024-11-05 14:01 - INFO - ---------------------------------------------
2024-11-05 14:01 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 14:01 - INFO - 	 Train Loss: 0.064
2024-11-05 14:01 - INFO - 	 Val. Loss: 0.064
2024-11-05 14:01 - INFO - 	 ROC-AUC: 0.986
2024-11-05 14:01 - INFO - 	 PR-AUC: 0.873
2024-11-05 14:01 - INFO - 	 Best Val. Loss: 0.061
2024-11-05 14:01 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 14:01 - INFO - 	 Best PR-AUC: 0.877
2024-11-05 14:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 14:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-05 14:01 - INFO - ---------------------------------------------
2024-11-05 14:04 - INFO - Fit the preprocessing pipeline
2024-11-05 14:04 - INFO - Training using device: cuda
2024-11-05 14:04 - INFO - Creating generators
2024-11-05 14:04 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 14:04 - INFO - * Model:
2024-11-05 14:04 - INFO - * -----------
2024-11-05 14:04 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 14:04 - INFO - * -----------
2024-11-05 14:12 - INFO - ---------------------------------------------
2024-11-05 14:12 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-05 14:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25558
2024-11-05 14:12 - INFO - 	 Train Loss: 0.242
2024-11-05 14:12 - INFO - 	 Val. Loss: 0.258
2024-11-05 14:12 - INFO - 	 ROC-AUC: 0.817
2024-11-05 14:12 - INFO - 	 PR-AUC: 0.256
2024-11-05 14:12 - INFO - 	 Best Val. Loss: 0.258
2024-11-05 14:12 - INFO - 	 Best ROC-AUC: 0.817
2024-11-05 14:12 - INFO - 	 Best PR-AUC: 0.256
2024-11-05 14:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.809
2024-11-05 14:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.313
2024-11-05 14:12 - INFO - ---------------------------------------------
2024-11-05 14:20 - INFO - ---------------------------------------------
2024-11-05 14:20 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 14:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47096
2024-11-05 14:20 - INFO - 	 Train Loss: 0.163
2024-11-05 14:20 - INFO - 	 Val. Loss: 0.263
2024-11-05 14:20 - INFO - 	 ROC-AUC: 0.937
2024-11-05 14:20 - INFO - 	 PR-AUC: 0.471
2024-11-05 14:20 - INFO - 	 Best Val. Loss: 0.258
2024-11-05 14:20 - INFO - 	 Best ROC-AUC: 0.937
2024-11-05 14:20 - INFO - 	 Best PR-AUC: 0.471
2024-11-05 14:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-05 14:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.523
2024-11-05 14:20 - INFO - ---------------------------------------------
2024-11-05 14:28 - INFO - ---------------------------------------------
2024-11-05 14:28 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 14:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70453
2024-11-05 14:28 - INFO - 	 Train Loss: 0.118
2024-11-05 14:28 - INFO - 	 Val. Loss: 0.143
2024-11-05 14:28 - INFO - 	 ROC-AUC: 0.966
2024-11-05 14:28 - INFO - 	 PR-AUC: 0.705
2024-11-05 14:28 - INFO - 	 Best Val. Loss: 0.143
2024-11-05 14:28 - INFO - 	 Best ROC-AUC: 0.966
2024-11-05 14:28 - INFO - 	 Best PR-AUC: 0.705
2024-11-05 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-05 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.714
2024-11-05 14:28 - INFO - ---------------------------------------------
2024-11-05 14:36 - INFO - ---------------------------------------------
2024-11-05 14:36 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-05 14:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76256
2024-11-05 14:36 - INFO - 	 Train Loss: 0.101
2024-11-05 14:36 - INFO - 	 Val. Loss: 0.104
2024-11-05 14:36 - INFO - 	 ROC-AUC: 0.975
2024-11-05 14:36 - INFO - 	 PR-AUC: 0.763
2024-11-05 14:36 - INFO - 	 Best Val. Loss: 0.104
2024-11-05 14:36 - INFO - 	 Best ROC-AUC: 0.975
2024-11-05 14:36 - INFO - 	 Best PR-AUC: 0.763
2024-11-05 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-05 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-11-05 14:36 - INFO - ---------------------------------------------
2024-11-05 14:44 - INFO - ---------------------------------------------
2024-11-05 14:44 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 14:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77333
2024-11-05 14:44 - INFO - 	 Train Loss: 0.090
2024-11-05 14:44 - INFO - 	 Val. Loss: 0.100
2024-11-05 14:44 - INFO - 	 ROC-AUC: 0.975
2024-11-05 14:44 - INFO - 	 PR-AUC: 0.773
2024-11-05 14:44 - INFO - 	 Best Val. Loss: 0.100
2024-11-05 14:44 - INFO - 	 Best ROC-AUC: 0.975
2024-11-05 14:44 - INFO - 	 Best PR-AUC: 0.773
2024-11-05 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-05 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.759
2024-11-05 14:44 - INFO - ---------------------------------------------
2024-11-05 14:52 - INFO - ---------------------------------------------
2024-11-05 14:52 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 14:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84399
2024-11-05 14:52 - INFO - 	 Train Loss: 0.084
2024-11-05 14:52 - INFO - 	 Val. Loss: 0.071
2024-11-05 14:52 - INFO - 	 ROC-AUC: 0.984
2024-11-05 14:52 - INFO - 	 PR-AUC: 0.844
2024-11-05 14:52 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 14:52 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 14:52 - INFO - 	 Best PR-AUC: 0.844
2024-11-05 14:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 14:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-05 14:52 - INFO - ---------------------------------------------
2024-11-05 15:00 - INFO - ---------------------------------------------
2024-11-05 15:00 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 15:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85417
2024-11-05 15:00 - INFO - 	 Train Loss: 0.078
2024-11-05 15:00 - INFO - 	 Val. Loss: 0.070
2024-11-05 15:00 - INFO - 	 ROC-AUC: 0.985
2024-11-05 15:00 - INFO - 	 PR-AUC: 0.854
2024-11-05 15:00 - INFO - 	 Best Val. Loss: 0.070
2024-11-05 15:00 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 15:00 - INFO - 	 Best PR-AUC: 0.854
2024-11-05 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-05 15:00 - INFO - ---------------------------------------------
2024-11-05 15:08 - INFO - ---------------------------------------------
2024-11-05 15:08 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 15:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8681
2024-11-05 15:08 - INFO - 	 Train Loss: 0.072
2024-11-05 15:08 - INFO - 	 Val. Loss: 0.066
2024-11-05 15:08 - INFO - 	 ROC-AUC: 0.985
2024-11-05 15:08 - INFO - 	 PR-AUC: 0.868
2024-11-05 15:08 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 15:08 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 15:08 - INFO - 	 Best PR-AUC: 0.868
2024-11-05 15:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 15:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-05 15:08 - INFO - ---------------------------------------------
2024-11-05 15:16 - INFO - ---------------------------------------------
2024-11-05 15:16 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 15:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87017
2024-11-05 15:16 - INFO - 	 Train Loss: 0.068
2024-11-05 15:16 - INFO - 	 Val. Loss: 0.064
2024-11-05 15:16 - INFO - 	 ROC-AUC: 0.987
2024-11-05 15:16 - INFO - 	 PR-AUC: 0.870
2024-11-05 15:16 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 15:16 - INFO - 	 Best ROC-AUC: 0.987
2024-11-05 15:16 - INFO - 	 Best PR-AUC: 0.870
2024-11-05 15:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-05 15:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-05 15:16 - INFO - ---------------------------------------------
2024-11-05 15:24 - INFO - ---------------------------------------------
2024-11-05 15:24 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88259
2024-11-05 15:24 - INFO - 	 Train Loss: 0.064
2024-11-05 15:24 - INFO - 	 Val. Loss: 0.061
2024-11-05 15:24 - INFO - 	 ROC-AUC: 0.988
2024-11-05 15:24 - INFO - 	 PR-AUC: 0.883
2024-11-05 15:24 - INFO - 	 Best Val. Loss: 0.061
2024-11-05 15:24 - INFO - 	 Best ROC-AUC: 0.988
2024-11-05 15:24 - INFO - 	 Best PR-AUC: 0.883
2024-11-05 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-05 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-11-05 15:24 - INFO - ---------------------------------------------
2024-11-05 15:27 - INFO - Fit the preprocessing pipeline
2024-11-05 15:27 - INFO - Training using device: cuda
2024-11-05 15:27 - INFO - Creating generators
2024-11-05 15:27 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 15:27 - INFO - * Model:
2024-11-05 15:27 - INFO - * -----------
2024-11-05 15:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 15:27 - INFO - * -----------
2024-11-05 15:35 - INFO - ---------------------------------------------
2024-11-05 15:35 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 15:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25206
2024-11-05 15:35 - INFO - 	 Train Loss: 0.241
2024-11-05 15:35 - INFO - 	 Val. Loss: 0.382
2024-11-05 15:35 - INFO - 	 ROC-AUC: 0.806
2024-11-05 15:35 - INFO - 	 PR-AUC: 0.252
2024-11-05 15:35 - INFO - 	 Best Val. Loss: 0.382
2024-11-05 15:35 - INFO - 	 Best ROC-AUC: 0.806
2024-11-05 15:35 - INFO - 	 Best PR-AUC: 0.252
2024-11-05 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-05 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-05 15:35 - INFO - ---------------------------------------------
2024-11-05 15:43 - INFO - ---------------------------------------------
2024-11-05 15:43 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 15:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58866
2024-11-05 15:43 - INFO - 	 Train Loss: 0.154
2024-11-05 15:43 - INFO - 	 Val. Loss: 0.183
2024-11-05 15:43 - INFO - 	 ROC-AUC: 0.948
2024-11-05 15:43 - INFO - 	 PR-AUC: 0.589
2024-11-05 15:43 - INFO - 	 Best Val. Loss: 0.183
2024-11-05 15:43 - INFO - 	 Best ROC-AUC: 0.948
2024-11-05 15:43 - INFO - 	 Best PR-AUC: 0.589
2024-11-05 15:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-05 15:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.595
2024-11-05 15:43 - INFO - ---------------------------------------------
2024-11-05 15:51 - INFO - ---------------------------------------------
2024-11-05 15:51 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 15:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77012
2024-11-05 15:51 - INFO - 	 Train Loss: 0.101
2024-11-05 15:51 - INFO - 	 Val. Loss: 0.098
2024-11-05 15:51 - INFO - 	 ROC-AUC: 0.977
2024-11-05 15:51 - INFO - 	 PR-AUC: 0.770
2024-11-05 15:51 - INFO - 	 Best Val. Loss: 0.098
2024-11-05 15:51 - INFO - 	 Best ROC-AUC: 0.977
2024-11-05 15:51 - INFO - 	 Best PR-AUC: 0.770
2024-11-05 15:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-05 15:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-11-05 15:51 - INFO - ---------------------------------------------
2024-11-05 15:59 - INFO - ---------------------------------------------
2024-11-05 15:59 - INFO - Epoch: 04 | Time: 8m 3s
2024-11-05 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79292
2024-11-05 15:59 - INFO - 	 Train Loss: 0.089
2024-11-05 15:59 - INFO - 	 Val. Loss: 0.079
2024-11-05 15:59 - INFO - 	 ROC-AUC: 0.981
2024-11-05 15:59 - INFO - 	 PR-AUC: 0.793
2024-11-05 15:59 - INFO - 	 Best Val. Loss: 0.079
2024-11-05 15:59 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 15:59 - INFO - 	 Best PR-AUC: 0.793
2024-11-05 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-11-05 15:59 - INFO - ---------------------------------------------
2024-11-05 16:07 - INFO - ---------------------------------------------
2024-11-05 16:07 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 16:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83336
2024-11-05 16:07 - INFO - 	 Train Loss: 0.081
2024-11-05 16:07 - INFO - 	 Val. Loss: 0.075
2024-11-05 16:07 - INFO - 	 ROC-AUC: 0.984
2024-11-05 16:07 - INFO - 	 PR-AUC: 0.833
2024-11-05 16:07 - INFO - 	 Best Val. Loss: 0.075
2024-11-05 16:07 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 16:07 - INFO - 	 Best PR-AUC: 0.833
2024-11-05 16:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 16:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-05 16:07 - INFO - ---------------------------------------------
2024-11-05 16:15 - INFO - ---------------------------------------------
2024-11-05 16:15 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 16:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86265
2024-11-05 16:15 - INFO - 	 Train Loss: 0.078
2024-11-05 16:15 - INFO - 	 Val. Loss: 0.067
2024-11-05 16:15 - INFO - 	 ROC-AUC: 0.985
2024-11-05 16:15 - INFO - 	 PR-AUC: 0.863
2024-11-05 16:15 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 16:15 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 16:15 - INFO - 	 Best PR-AUC: 0.863
2024-11-05 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-05 16:15 - INFO - ---------------------------------------------
2024-11-05 16:23 - INFO - ---------------------------------------------
2024-11-05 16:23 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 16:23 - INFO - 	 Train Loss: 0.074
2024-11-05 16:23 - INFO - 	 Val. Loss: 0.068
2024-11-05 16:23 - INFO - 	 ROC-AUC: 0.985
2024-11-05 16:23 - INFO - 	 PR-AUC: 0.852
2024-11-05 16:23 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 16:23 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 16:23 - INFO - 	 Best PR-AUC: 0.863
2024-11-05 16:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 16:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-05 16:23 - INFO - ---------------------------------------------
2024-11-05 16:31 - INFO - ---------------------------------------------
2024-11-05 16:31 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 16:31 - INFO - 	 Train Loss: 0.072
2024-11-05 16:31 - INFO - 	 Val. Loss: 0.067
2024-11-05 16:31 - INFO - 	 ROC-AUC: 0.986
2024-11-05 16:31 - INFO - 	 PR-AUC: 0.854
2024-11-05 16:31 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 16:31 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 16:31 - INFO - 	 Best PR-AUC: 0.863
2024-11-05 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-05 16:31 - INFO - ---------------------------------------------
2024-11-05 16:39 - INFO - ---------------------------------------------
2024-11-05 16:39 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 16:39 - INFO - 	 Train Loss: 0.069
2024-11-05 16:39 - INFO - 	 Val. Loss: 0.067
2024-11-05 16:39 - INFO - 	 ROC-AUC: 0.986
2024-11-05 16:39 - INFO - 	 PR-AUC: 0.863
2024-11-05 16:39 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 16:39 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 16:39 - INFO - 	 Best PR-AUC: 0.863
2024-11-05 16:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 16:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-05 16:39 - INFO - ---------------------------------------------
2024-11-05 16:47 - INFO - ---------------------------------------------
2024-11-05 16:47 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 16:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87012
2024-11-05 16:47 - INFO - 	 Train Loss: 0.066
2024-11-05 16:47 - INFO - 	 Val. Loss: 0.064
2024-11-05 16:47 - INFO - 	 ROC-AUC: 0.986
2024-11-05 16:47 - INFO - 	 PR-AUC: 0.870
2024-11-05 16:47 - INFO - 	 Best Val. Loss: 0.064
2024-11-05 16:47 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 16:47 - INFO - 	 Best PR-AUC: 0.870
2024-11-05 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-05 16:47 - INFO - ---------------------------------------------
