2024-10-20 13:37 - INFO - Fit the preprocessing pipeline
2024-10-20 13:37 - INFO - Training using device: cuda
2024-10-20 13:37 - INFO - Creating generators
2024-10-20 13:37 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 13:37 - INFO - * Model:
2024-10-20 13:37 - INFO - * -----------
2024-10-20 13:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 13:37 - INFO - * -----------
2024-10-20 13:45 - INFO - ---------------------------------------------
2024-10-20 13:45 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7129
2024-10-20 13:45 - INFO - 	 Train Loss: 0.125
2024-10-20 13:45 - INFO - 	 Val. Loss: 0.101
2024-10-20 13:45 - INFO - 	 ROC-AUC: 0.972
2024-10-20 13:45 - INFO - 	 PR-AUC: 0.713
2024-10-20 13:45 - INFO - 	 Best Val. Loss: 0.101
2024-10-20 13:45 - INFO - 	 Best ROC-AUC: 0.972
2024-10-20 13:45 - INFO - 	 Best PR-AUC: 0.713
2024-10-20 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-10-20 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-20 13:45 - INFO - ---------------------------------------------
2024-10-20 13:53 - INFO - ---------------------------------------------
2024-10-20 13:53 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 13:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7508
2024-10-20 13:53 - INFO - 	 Train Loss: 0.101
2024-10-20 13:53 - INFO - 	 Val. Loss: 0.091
2024-10-20 13:53 - INFO - 	 ROC-AUC: 0.976
2024-10-20 13:53 - INFO - 	 PR-AUC: 0.751
2024-10-20 13:53 - INFO - 	 Best Val. Loss: 0.091
2024-10-20 13:53 - INFO - 	 Best ROC-AUC: 0.976
2024-10-20 13:53 - INFO - 	 Best PR-AUC: 0.751
2024-10-20 13:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-20 13:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-10-20 13:53 - INFO - ---------------------------------------------
2024-10-20 14:01 - INFO - ---------------------------------------------
2024-10-20 14:01 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 14:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77013
2024-10-20 14:01 - INFO - 	 Train Loss: 0.094
2024-10-20 14:01 - INFO - 	 Val. Loss: 0.084
2024-10-20 14:01 - INFO - 	 ROC-AUC: 0.977
2024-10-20 14:01 - INFO - 	 PR-AUC: 0.770
2024-10-20 14:01 - INFO - 	 Best Val. Loss: 0.084
2024-10-20 14:01 - INFO - 	 Best ROC-AUC: 0.977
2024-10-20 14:01 - INFO - 	 Best PR-AUC: 0.770
2024-10-20 14:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 14:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-10-20 14:01 - INFO - ---------------------------------------------
2024-10-20 14:09 - INFO - ---------------------------------------------
2024-10-20 14:09 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-20 14:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7872
2024-10-20 14:09 - INFO - 	 Train Loss: 0.092
2024-10-20 14:09 - INFO - 	 Val. Loss: 0.081
2024-10-20 14:09 - INFO - 	 ROC-AUC: 0.978
2024-10-20 14:09 - INFO - 	 PR-AUC: 0.787
2024-10-20 14:09 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 14:09 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 14:09 - INFO - 	 Best PR-AUC: 0.787
2024-10-20 14:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 14:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-20 14:09 - INFO - ---------------------------------------------
2024-10-20 14:17 - INFO - ---------------------------------------------
2024-10-20 14:17 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 14:17 - INFO - 	 Train Loss: 0.089
2024-10-20 14:17 - INFO - 	 Val. Loss: 0.097
2024-10-20 14:17 - INFO - 	 ROC-AUC: 0.978
2024-10-20 14:17 - INFO - 	 PR-AUC: 0.778
2024-10-20 14:17 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 14:17 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 14:17 - INFO - 	 Best PR-AUC: 0.787
2024-10-20 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-10-20 14:17 - INFO - ---------------------------------------------
2024-10-20 14:25 - INFO - ---------------------------------------------
2024-10-20 14:25 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 14:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7977
2024-10-20 14:25 - INFO - 	 Train Loss: 0.088
2024-10-20 14:25 - INFO - 	 Val. Loss: 0.085
2024-10-20 14:25 - INFO - 	 ROC-AUC: 0.979
2024-10-20 14:25 - INFO - 	 PR-AUC: 0.798
2024-10-20 14:25 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 14:25 - INFO - 	 Best ROC-AUC: 0.979
2024-10-20 14:25 - INFO - 	 Best PR-AUC: 0.798
2024-10-20 14:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 14:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-20 14:25 - INFO - ---------------------------------------------
2024-10-20 14:33 - INFO - ---------------------------------------------
2024-10-20 14:33 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 14:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80008
2024-10-20 14:33 - INFO - 	 Train Loss: 0.087
2024-10-20 14:33 - INFO - 	 Val. Loss: 0.080
2024-10-20 14:33 - INFO - 	 ROC-AUC: 0.980
2024-10-20 14:33 - INFO - 	 PR-AUC: 0.800
2024-10-20 14:33 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 14:33 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 14:33 - INFO - 	 Best PR-AUC: 0.800
2024-10-20 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-20 14:33 - INFO - ---------------------------------------------
2024-10-20 14:41 - INFO - ---------------------------------------------
2024-10-20 14:41 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 14:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8116
2024-10-20 14:41 - INFO - 	 Train Loss: 0.085
2024-10-20 14:41 - INFO - 	 Val. Loss: 0.084
2024-10-20 14:41 - INFO - 	 ROC-AUC: 0.981
2024-10-20 14:41 - INFO - 	 PR-AUC: 0.812
2024-10-20 14:41 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 14:41 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 14:41 - INFO - 	 Best PR-AUC: 0.812
2024-10-20 14:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 14:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-20 14:41 - INFO - ---------------------------------------------
2024-10-20 14:49 - INFO - ---------------------------------------------
2024-10-20 14:49 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 14:49 - INFO - 	 Train Loss: 0.087
2024-10-20 14:49 - INFO - 	 Val. Loss: 0.082
2024-10-20 14:49 - INFO - 	 ROC-AUC: 0.978
2024-10-20 14:49 - INFO - 	 PR-AUC: 0.788
2024-10-20 14:49 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 14:49 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 14:49 - INFO - 	 Best PR-AUC: 0.812
2024-10-20 14:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 14:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-20 14:49 - INFO - ---------------------------------------------
2024-10-20 14:57 - INFO - ---------------------------------------------
2024-10-20 14:57 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 14:57 - INFO - 	 Train Loss: 0.085
2024-10-20 14:57 - INFO - 	 Val. Loss: 0.076
2024-10-20 14:57 - INFO - 	 ROC-AUC: 0.983
2024-10-20 14:57 - INFO - 	 PR-AUC: 0.810
2024-10-20 14:57 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 14:57 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 14:57 - INFO - 	 Best PR-AUC: 0.812
2024-10-20 14:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 14:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-20 14:57 - INFO - ---------------------------------------------
2024-10-20 15:00 - INFO - Fit the preprocessing pipeline
2024-10-20 15:00 - INFO - Training using device: cuda
2024-10-20 15:00 - INFO - Creating generators
2024-10-20 15:00 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 15:00 - INFO - * Model:
2024-10-20 15:00 - INFO - * -----------
2024-10-20 15:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 15:00 - INFO - * -----------
2024-10-20 15:08 - INFO - ---------------------------------------------
2024-10-20 15:08 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 15:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75357
2024-10-20 15:08 - INFO - 	 Train Loss: 0.125
2024-10-20 15:08 - INFO - 	 Val. Loss: 0.091
2024-10-20 15:08 - INFO - 	 ROC-AUC: 0.974
2024-10-20 15:08 - INFO - 	 PR-AUC: 0.754
2024-10-20 15:08 - INFO - 	 Best Val. Loss: 0.091
2024-10-20 15:08 - INFO - 	 Best ROC-AUC: 0.974
2024-10-20 15:08 - INFO - 	 Best PR-AUC: 0.754
2024-10-20 15:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-20 15:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-20 15:08 - INFO - ---------------------------------------------
2024-10-20 15:16 - INFO - ---------------------------------------------
2024-10-20 15:16 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 15:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76624
2024-10-20 15:16 - INFO - 	 Train Loss: 0.101
2024-10-20 15:16 - INFO - 	 Val. Loss: 0.090
2024-10-20 15:16 - INFO - 	 ROC-AUC: 0.975
2024-10-20 15:16 - INFO - 	 PR-AUC: 0.766
2024-10-20 15:16 - INFO - 	 Best Val. Loss: 0.090
2024-10-20 15:16 - INFO - 	 Best ROC-AUC: 0.975
2024-10-20 15:16 - INFO - 	 Best PR-AUC: 0.766
2024-10-20 15:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-20 15:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-10-20 15:16 - INFO - ---------------------------------------------
2024-10-20 15:24 - INFO - ---------------------------------------------
2024-10-20 15:24 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79595
2024-10-20 15:24 - INFO - 	 Train Loss: 0.095
2024-10-20 15:24 - INFO - 	 Val. Loss: 0.086
2024-10-20 15:24 - INFO - 	 ROC-AUC: 0.979
2024-10-20 15:24 - INFO - 	 PR-AUC: 0.796
2024-10-20 15:24 - INFO - 	 Best Val. Loss: 0.086
2024-10-20 15:24 - INFO - 	 Best ROC-AUC: 0.979
2024-10-20 15:24 - INFO - 	 Best PR-AUC: 0.796
2024-10-20 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-20 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-20 15:24 - INFO - ---------------------------------------------
2024-10-20 15:32 - INFO - ---------------------------------------------
2024-10-20 15:32 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-20 15:32 - INFO - 	 Train Loss: 0.090
2024-10-20 15:32 - INFO - 	 Val. Loss: 0.080
2024-10-20 15:32 - INFO - 	 ROC-AUC: 0.979
2024-10-20 15:32 - INFO - 	 PR-AUC: 0.794
2024-10-20 15:32 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 15:32 - INFO - 	 Best ROC-AUC: 0.979
2024-10-20 15:32 - INFO - 	 Best PR-AUC: 0.796
2024-10-20 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-20 15:32 - INFO - ---------------------------------------------
2024-10-20 15:40 - INFO - ---------------------------------------------
2024-10-20 15:40 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 15:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80313
2024-10-20 15:40 - INFO - 	 Train Loss: 0.089
2024-10-20 15:40 - INFO - 	 Val. Loss: 0.083
2024-10-20 15:40 - INFO - 	 ROC-AUC: 0.980
2024-10-20 15:40 - INFO - 	 PR-AUC: 0.803
2024-10-20 15:40 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 15:40 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 15:40 - INFO - 	 Best PR-AUC: 0.803
2024-10-20 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-20 15:40 - INFO - ---------------------------------------------
2024-10-20 15:48 - INFO - ---------------------------------------------
2024-10-20 15:48 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 15:48 - INFO - 	 Train Loss: 0.088
2024-10-20 15:48 - INFO - 	 Val. Loss: 0.079
2024-10-20 15:48 - INFO - 	 ROC-AUC: 0.981
2024-10-20 15:48 - INFO - 	 PR-AUC: 0.797
2024-10-20 15:48 - INFO - 	 Best Val. Loss: 0.079
2024-10-20 15:48 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 15:48 - INFO - 	 Best PR-AUC: 0.803
2024-10-20 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-20 15:48 - INFO - ---------------------------------------------
2024-10-20 15:56 - INFO - ---------------------------------------------
2024-10-20 15:56 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 15:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81898
2024-10-20 15:56 - INFO - 	 Train Loss: 0.086
2024-10-20 15:56 - INFO - 	 Val. Loss: 0.083
2024-10-20 15:56 - INFO - 	 ROC-AUC: 0.979
2024-10-20 15:56 - INFO - 	 PR-AUC: 0.819
2024-10-20 15:56 - INFO - 	 Best Val. Loss: 0.079
2024-10-20 15:56 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 15:56 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-20 15:56 - INFO - ---------------------------------------------
2024-10-20 16:04 - INFO - ---------------------------------------------
2024-10-20 16:04 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 16:04 - INFO - 	 Train Loss: 0.085
2024-10-20 16:04 - INFO - 	 Val. Loss: 0.076
2024-10-20 16:04 - INFO - 	 ROC-AUC: 0.982
2024-10-20 16:04 - INFO - 	 PR-AUC: 0.816
2024-10-20 16:04 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 16:04 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 16:04 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 16:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 16:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-20 16:04 - INFO - ---------------------------------------------
2024-10-20 16:12 - INFO - ---------------------------------------------
2024-10-20 16:12 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 16:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82642
2024-10-20 16:12 - INFO - 	 Train Loss: 0.085
2024-10-20 16:12 - INFO - 	 Val. Loss: 0.074
2024-10-20 16:12 - INFO - 	 ROC-AUC: 0.982
2024-10-20 16:12 - INFO - 	 PR-AUC: 0.826
2024-10-20 16:12 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 16:12 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 16:12 - INFO - 	 Best PR-AUC: 0.826
2024-10-20 16:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 16:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-20 16:12 - INFO - ---------------------------------------------
2024-10-20 16:20 - INFO - ---------------------------------------------
2024-10-20 16:20 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 16:20 - INFO - 	 Train Loss: 0.084
2024-10-20 16:20 - INFO - 	 Val. Loss: 0.078
2024-10-20 16:20 - INFO - 	 ROC-AUC: 0.981
2024-10-20 16:20 - INFO - 	 PR-AUC: 0.794
2024-10-20 16:20 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 16:20 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 16:20 - INFO - 	 Best PR-AUC: 0.826
2024-10-20 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-20 16:20 - INFO - ---------------------------------------------
2024-10-20 16:22 - INFO - Fit the preprocessing pipeline
2024-10-20 16:22 - INFO - Training using device: cuda
2024-10-20 16:22 - INFO - Creating generators
2024-10-20 16:22 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 16:22 - INFO - * Model:
2024-10-20 16:22 - INFO - * -----------
2024-10-20 16:22 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 16:22 - INFO - * -----------
2024-10-20 16:30 - INFO - ---------------------------------------------
2024-10-20 16:30 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 16:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69127
2024-10-20 16:30 - INFO - 	 Train Loss: 0.125
2024-10-20 16:30 - INFO - 	 Val. Loss: 0.101
2024-10-20 16:30 - INFO - 	 ROC-AUC: 0.971
2024-10-20 16:30 - INFO - 	 PR-AUC: 0.691
2024-10-20 16:30 - INFO - 	 Best Val. Loss: 0.101
2024-10-20 16:30 - INFO - 	 Best ROC-AUC: 0.971
2024-10-20 16:30 - INFO - 	 Best PR-AUC: 0.691
2024-10-20 16:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-20 16:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.726
2024-10-20 16:30 - INFO - ---------------------------------------------
2024-10-20 16:38 - INFO - ---------------------------------------------
2024-10-20 16:38 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77576
2024-10-20 16:38 - INFO - 	 Train Loss: 0.101
2024-10-20 16:38 - INFO - 	 Val. Loss: 0.086
2024-10-20 16:38 - INFO - 	 ROC-AUC: 0.978
2024-10-20 16:38 - INFO - 	 PR-AUC: 0.776
2024-10-20 16:38 - INFO - 	 Best Val. Loss: 0.086
2024-10-20 16:38 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 16:38 - INFO - 	 Best PR-AUC: 0.776
2024-10-20 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-20 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-20 16:38 - INFO - ---------------------------------------------
2024-10-20 16:46 - INFO - ---------------------------------------------
2024-10-20 16:46 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 16:46 - INFO - 	 Train Loss: 0.094
2024-10-20 16:46 - INFO - 	 Val. Loss: 0.087
2024-10-20 16:46 - INFO - 	 ROC-AUC: 0.977
2024-10-20 16:46 - INFO - 	 PR-AUC: 0.765
2024-10-20 16:46 - INFO - 	 Best Val. Loss: 0.086
2024-10-20 16:46 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 16:46 - INFO - 	 Best PR-AUC: 0.776
2024-10-20 16:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-20 16:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-20 16:46 - INFO - ---------------------------------------------
2024-10-20 16:54 - INFO - ---------------------------------------------
2024-10-20 16:54 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 16:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79297
2024-10-20 16:54 - INFO - 	 Train Loss: 0.090
2024-10-20 16:54 - INFO - 	 Val. Loss: 0.082
2024-10-20 16:54 - INFO - 	 ROC-AUC: 0.980
2024-10-20 16:54 - INFO - 	 PR-AUC: 0.793
2024-10-20 16:54 - INFO - 	 Best Val. Loss: 0.082
2024-10-20 16:54 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 16:54 - INFO - 	 Best PR-AUC: 0.793
2024-10-20 16:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-20 16:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-20 16:54 - INFO - ---------------------------------------------
2024-10-20 17:02 - INFO - ---------------------------------------------
2024-10-20 17:02 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 17:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79592
2024-10-20 17:02 - INFO - 	 Train Loss: 0.088
2024-10-20 17:02 - INFO - 	 Val. Loss: 0.085
2024-10-20 17:02 - INFO - 	 ROC-AUC: 0.978
2024-10-20 17:02 - INFO - 	 PR-AUC: 0.796
2024-10-20 17:02 - INFO - 	 Best Val. Loss: 0.082
2024-10-20 17:02 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 17:02 - INFO - 	 Best PR-AUC: 0.796
2024-10-20 17:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-20 17:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-20 17:02 - INFO - ---------------------------------------------
2024-10-20 17:10 - INFO - ---------------------------------------------
2024-10-20 17:10 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 17:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81647
2024-10-20 17:10 - INFO - 	 Train Loss: 0.087
2024-10-20 17:10 - INFO - 	 Val. Loss: 0.079
2024-10-20 17:10 - INFO - 	 ROC-AUC: 0.981
2024-10-20 17:10 - INFO - 	 PR-AUC: 0.816
2024-10-20 17:10 - INFO - 	 Best Val. Loss: 0.079
2024-10-20 17:10 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 17:10 - INFO - 	 Best PR-AUC: 0.816
2024-10-20 17:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 17:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-20 17:10 - INFO - ---------------------------------------------
2024-10-20 17:18 - INFO - ---------------------------------------------
2024-10-20 17:18 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 17:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82775
2024-10-20 17:18 - INFO - 	 Train Loss: 0.086
2024-10-20 17:18 - INFO - 	 Val. Loss: 0.077
2024-10-20 17:18 - INFO - 	 ROC-AUC: 0.981
2024-10-20 17:18 - INFO - 	 PR-AUC: 0.828
2024-10-20 17:18 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 17:18 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 17:18 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 17:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 17:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-20 17:18 - INFO - ---------------------------------------------
2024-10-20 17:26 - INFO - ---------------------------------------------
2024-10-20 17:26 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-20 17:26 - INFO - 	 Train Loss: 0.085
2024-10-20 17:26 - INFO - 	 Val. Loss: 0.083
2024-10-20 17:26 - INFO - 	 ROC-AUC: 0.982
2024-10-20 17:26 - INFO - 	 PR-AUC: 0.824
2024-10-20 17:26 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 17:26 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 17:26 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-20 17:26 - INFO - ---------------------------------------------
2024-10-20 17:35 - INFO - ---------------------------------------------
2024-10-20 17:35 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-20 17:35 - INFO - 	 Train Loss: 0.085
2024-10-20 17:35 - INFO - 	 Val. Loss: 0.076
2024-10-20 17:35 - INFO - 	 ROC-AUC: 0.981
2024-10-20 17:35 - INFO - 	 PR-AUC: 0.806
2024-10-20 17:35 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 17:35 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 17:35 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-20 17:35 - INFO - ---------------------------------------------
2024-10-20 17:43 - INFO - ---------------------------------------------
2024-10-20 17:43 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-20 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8304
2024-10-20 17:43 - INFO - 	 Train Loss: 0.085
2024-10-20 17:43 - INFO - 	 Val. Loss: 0.076
2024-10-20 17:43 - INFO - 	 ROC-AUC: 0.982
2024-10-20 17:43 - INFO - 	 PR-AUC: 0.830
2024-10-20 17:43 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 17:43 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 17:43 - INFO - 	 Best PR-AUC: 0.830
2024-10-20 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-20 17:43 - INFO - ---------------------------------------------
2024-10-20 17:45 - INFO - Fit the preprocessing pipeline
2024-10-20 17:45 - INFO - Training using device: cuda
2024-10-20 17:45 - INFO - Creating generators
2024-10-20 17:45 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 17:45 - INFO - * Model:
2024-10-20 17:45 - INFO - * -----------
2024-10-20 17:45 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 17:45 - INFO - * -----------
2024-10-20 17:53 - INFO - ---------------------------------------------
2024-10-20 17:53 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 17:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6742
2024-10-20 17:53 - INFO - 	 Train Loss: 0.126
2024-10-20 17:53 - INFO - 	 Val. Loss: 0.104
2024-10-20 17:53 - INFO - 	 ROC-AUC: 0.968
2024-10-20 17:53 - INFO - 	 PR-AUC: 0.674
2024-10-20 17:53 - INFO - 	 Best Val. Loss: 0.104
2024-10-20 17:53 - INFO - 	 Best ROC-AUC: 0.968
2024-10-20 17:53 - INFO - 	 Best PR-AUC: 0.674
2024-10-20 17:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-10-20 17:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.712
2024-10-20 17:53 - INFO - ---------------------------------------------
2024-10-20 18:01 - INFO - ---------------------------------------------
2024-10-20 18:01 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 18:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75366
2024-10-20 18:01 - INFO - 	 Train Loss: 0.101
2024-10-20 18:01 - INFO - 	 Val. Loss: 0.119
2024-10-20 18:01 - INFO - 	 ROC-AUC: 0.972
2024-10-20 18:01 - INFO - 	 PR-AUC: 0.754
2024-10-20 18:01 - INFO - 	 Best Val. Loss: 0.104
2024-10-20 18:01 - INFO - 	 Best ROC-AUC: 0.972
2024-10-20 18:01 - INFO - 	 Best PR-AUC: 0.754
2024-10-20 18:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-10-20 18:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-10-20 18:01 - INFO - ---------------------------------------------
2024-10-20 18:09 - INFO - ---------------------------------------------
2024-10-20 18:09 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 18:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7903
2024-10-20 18:09 - INFO - 	 Train Loss: 0.095
2024-10-20 18:09 - INFO - 	 Val. Loss: 0.083
2024-10-20 18:09 - INFO - 	 ROC-AUC: 0.978
2024-10-20 18:09 - INFO - 	 PR-AUC: 0.790
2024-10-20 18:09 - INFO - 	 Best Val. Loss: 0.083
2024-10-20 18:09 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 18:09 - INFO - 	 Best PR-AUC: 0.790
2024-10-20 18:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-20 18:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-20 18:09 - INFO - ---------------------------------------------
2024-10-20 18:17 - INFO - ---------------------------------------------
2024-10-20 18:17 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 18:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79935
2024-10-20 18:17 - INFO - 	 Train Loss: 0.092
2024-10-20 18:17 - INFO - 	 Val. Loss: 0.083
2024-10-20 18:17 - INFO - 	 ROC-AUC: 0.980
2024-10-20 18:17 - INFO - 	 PR-AUC: 0.799
2024-10-20 18:17 - INFO - 	 Best Val. Loss: 0.083
2024-10-20 18:17 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 18:17 - INFO - 	 Best PR-AUC: 0.799
2024-10-20 18:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 18:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-20 18:17 - INFO - ---------------------------------------------
2024-10-20 18:25 - INFO - ---------------------------------------------
2024-10-20 18:25 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 18:25 - INFO - 	 Train Loss: 0.088
2024-10-20 18:25 - INFO - 	 Val. Loss: 0.081
2024-10-20 18:25 - INFO - 	 ROC-AUC: 0.981
2024-10-20 18:25 - INFO - 	 PR-AUC: 0.799
2024-10-20 18:25 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 18:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 18:25 - INFO - 	 Best PR-AUC: 0.799
2024-10-20 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-20 18:25 - INFO - ---------------------------------------------
2024-10-20 18:33 - INFO - ---------------------------------------------
2024-10-20 18:33 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 18:33 - INFO - 	 Train Loss: 0.089
2024-10-20 18:33 - INFO - 	 Val. Loss: 0.085
2024-10-20 18:33 - INFO - 	 ROC-AUC: 0.979
2024-10-20 18:33 - INFO - 	 PR-AUC: 0.784
2024-10-20 18:33 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 18:33 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 18:33 - INFO - 	 Best PR-AUC: 0.799
2024-10-20 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-20 18:33 - INFO - ---------------------------------------------
2024-10-20 18:41 - INFO - ---------------------------------------------
2024-10-20 18:41 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 18:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81319
2024-10-20 18:41 - INFO - 	 Train Loss: 0.086
2024-10-20 18:41 - INFO - 	 Val. Loss: 0.077
2024-10-20 18:41 - INFO - 	 ROC-AUC: 0.981
2024-10-20 18:41 - INFO - 	 PR-AUC: 0.813
2024-10-20 18:41 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 18:41 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 18:41 - INFO - 	 Best PR-AUC: 0.813
2024-10-20 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-20 18:41 - INFO - ---------------------------------------------
2024-10-20 18:49 - INFO - ---------------------------------------------
2024-10-20 18:49 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 18:49 - INFO - 	 Train Loss: 0.086
2024-10-20 18:49 - INFO - 	 Val. Loss: 0.079
2024-10-20 18:49 - INFO - 	 ROC-AUC: 0.980
2024-10-20 18:49 - INFO - 	 PR-AUC: 0.807
2024-10-20 18:49 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 18:49 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 18:49 - INFO - 	 Best PR-AUC: 0.813
2024-10-20 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-20 18:49 - INFO - ---------------------------------------------
2024-10-20 18:57 - INFO - ---------------------------------------------
2024-10-20 18:57 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 18:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81915
2024-10-20 18:57 - INFO - 	 Train Loss: 0.086
2024-10-20 18:57 - INFO - 	 Val. Loss: 0.076
2024-10-20 18:57 - INFO - 	 ROC-AUC: 0.981
2024-10-20 18:57 - INFO - 	 PR-AUC: 0.819
2024-10-20 18:57 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 18:57 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 18:57 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-20 18:57 - INFO - ---------------------------------------------
2024-10-20 19:05 - INFO - ---------------------------------------------
2024-10-20 19:05 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 19:05 - INFO - 	 Train Loss: 0.084
2024-10-20 19:05 - INFO - 	 Val. Loss: 0.077
2024-10-20 19:05 - INFO - 	 ROC-AUC: 0.982
2024-10-20 19:05 - INFO - 	 PR-AUC: 0.810
2024-10-20 19:05 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 19:05 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 19:05 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-20 19:05 - INFO - ---------------------------------------------
2024-10-20 19:08 - INFO - Fit the preprocessing pipeline
2024-10-20 19:08 - INFO - Training using device: cuda
2024-10-20 19:08 - INFO - Creating generators
2024-10-20 19:08 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 19:08 - INFO - * Model:
2024-10-20 19:08 - INFO - * -----------
2024-10-20 19:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 19:08 - INFO - * -----------
2024-10-20 19:16 - INFO - ---------------------------------------------
2024-10-20 19:16 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76508
2024-10-20 19:16 - INFO - 	 Train Loss: 0.125
2024-10-20 19:16 - INFO - 	 Val. Loss: 0.094
2024-10-20 19:16 - INFO - 	 ROC-AUC: 0.974
2024-10-20 19:16 - INFO - 	 PR-AUC: 0.765
2024-10-20 19:16 - INFO - 	 Best Val. Loss: 0.094
2024-10-20 19:16 - INFO - 	 Best ROC-AUC: 0.974
2024-10-20 19:16 - INFO - 	 Best PR-AUC: 0.765
2024-10-20 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-20 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.770
2024-10-20 19:16 - INFO - ---------------------------------------------
2024-10-20 19:24 - INFO - ---------------------------------------------
2024-10-20 19:24 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7702
2024-10-20 19:24 - INFO - 	 Train Loss: 0.101
2024-10-20 19:24 - INFO - 	 Val. Loss: 0.089
2024-10-20 19:24 - INFO - 	 ROC-AUC: 0.977
2024-10-20 19:24 - INFO - 	 PR-AUC: 0.770
2024-10-20 19:24 - INFO - 	 Best Val. Loss: 0.089
2024-10-20 19:24 - INFO - 	 Best ROC-AUC: 0.977
2024-10-20 19:24 - INFO - 	 Best PR-AUC: 0.770
2024-10-20 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-20 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-20 19:24 - INFO - ---------------------------------------------
2024-10-20 19:32 - INFO - ---------------------------------------------
2024-10-20 19:32 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78932
2024-10-20 19:32 - INFO - 	 Train Loss: 0.094
2024-10-20 19:32 - INFO - 	 Val. Loss: 0.087
2024-10-20 19:32 - INFO - 	 ROC-AUC: 0.979
2024-10-20 19:32 - INFO - 	 PR-AUC: 0.789
2024-10-20 19:32 - INFO - 	 Best Val. Loss: 0.087
2024-10-20 19:32 - INFO - 	 Best ROC-AUC: 0.979
2024-10-20 19:32 - INFO - 	 Best PR-AUC: 0.789
2024-10-20 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-20 19:32 - INFO - ---------------------------------------------
2024-10-20 19:40 - INFO - ---------------------------------------------
2024-10-20 19:40 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-20 19:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81226
2024-10-20 19:40 - INFO - 	 Train Loss: 0.090
2024-10-20 19:40 - INFO - 	 Val. Loss: 0.084
2024-10-20 19:40 - INFO - 	 ROC-AUC: 0.980
2024-10-20 19:40 - INFO - 	 PR-AUC: 0.812
2024-10-20 19:40 - INFO - 	 Best Val. Loss: 0.084
2024-10-20 19:40 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 19:40 - INFO - 	 Best PR-AUC: 0.812
2024-10-20 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 19:40 - INFO - ---------------------------------------------
2024-10-20 19:48 - INFO - ---------------------------------------------
2024-10-20 19:48 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-20 19:48 - INFO - 	 Train Loss: 0.089
2024-10-20 19:48 - INFO - 	 Val. Loss: 0.081
2024-10-20 19:48 - INFO - 	 ROC-AUC: 0.979
2024-10-20 19:48 - INFO - 	 PR-AUC: 0.794
2024-10-20 19:48 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 19:48 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 19:48 - INFO - 	 Best PR-AUC: 0.812
2024-10-20 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 19:48 - INFO - ---------------------------------------------
2024-10-20 19:56 - INFO - ---------------------------------------------
2024-10-20 19:56 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 19:56 - INFO - 	 Train Loss: 0.089
2024-10-20 19:56 - INFO - 	 Val. Loss: 0.084
2024-10-20 19:56 - INFO - 	 ROC-AUC: 0.979
2024-10-20 19:56 - INFO - 	 PR-AUC: 0.801
2024-10-20 19:56 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 19:56 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 19:56 - INFO - 	 Best PR-AUC: 0.812
2024-10-20 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 19:56 - INFO - ---------------------------------------------
2024-10-20 20:04 - INFO - ---------------------------------------------
2024-10-20 20:04 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 20:04 - INFO - 	 Train Loss: 0.087
2024-10-20 20:04 - INFO - 	 Val. Loss: 0.078
2024-10-20 20:04 - INFO - 	 ROC-AUC: 0.981
2024-10-20 20:04 - INFO - 	 PR-AUC: 0.809
2024-10-20 20:04 - INFO - 	 Best Val. Loss: 0.078
2024-10-20 20:04 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 20:04 - INFO - 	 Best PR-AUC: 0.812
2024-10-20 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 20:04 - INFO - ---------------------------------------------
2024-10-20 20:12 - INFO - ---------------------------------------------
2024-10-20 20:12 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 20:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82512
2024-10-20 20:12 - INFO - 	 Train Loss: 0.087
2024-10-20 20:12 - INFO - 	 Val. Loss: 0.075
2024-10-20 20:12 - INFO - 	 ROC-AUC: 0.981
2024-10-20 20:12 - INFO - 	 PR-AUC: 0.825
2024-10-20 20:12 - INFO - 	 Best Val. Loss: 0.075
2024-10-20 20:12 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 20:12 - INFO - 	 Best PR-AUC: 0.825
2024-10-20 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-20 20:12 - INFO - ---------------------------------------------
2024-10-20 20:20 - INFO - ---------------------------------------------
2024-10-20 20:20 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 20:20 - INFO - 	 Train Loss: 0.085
2024-10-20 20:20 - INFO - 	 Val. Loss: 0.081
2024-10-20 20:20 - INFO - 	 ROC-AUC: 0.979
2024-10-20 20:20 - INFO - 	 PR-AUC: 0.805
2024-10-20 20:20 - INFO - 	 Best Val. Loss: 0.075
2024-10-20 20:20 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 20:20 - INFO - 	 Best PR-AUC: 0.825
2024-10-20 20:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 20:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-20 20:20 - INFO - ---------------------------------------------
2024-10-20 20:28 - INFO - ---------------------------------------------
2024-10-20 20:28 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 20:28 - INFO - 	 Train Loss: 0.085
2024-10-20 20:28 - INFO - 	 Val. Loss: 0.079
2024-10-20 20:28 - INFO - 	 ROC-AUC: 0.981
2024-10-20 20:28 - INFO - 	 PR-AUC: 0.816
2024-10-20 20:28 - INFO - 	 Best Val. Loss: 0.075
2024-10-20 20:28 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 20:28 - INFO - 	 Best PR-AUC: 0.825
2024-10-20 20:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 20:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-20 20:28 - INFO - ---------------------------------------------
2024-10-20 20:30 - INFO - Fit the preprocessing pipeline
2024-10-20 20:30 - INFO - Training using device: cuda
2024-10-20 20:30 - INFO - Creating generators
2024-10-20 20:30 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 20:30 - INFO - * Model:
2024-10-20 20:30 - INFO - * -----------
2024-10-20 20:30 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 20:30 - INFO - * -----------
2024-10-20 20:38 - INFO - ---------------------------------------------
2024-10-20 20:38 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 20:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73115
2024-10-20 20:38 - INFO - 	 Train Loss: 0.126
2024-10-20 20:38 - INFO - 	 Val. Loss: 0.094
2024-10-20 20:38 - INFO - 	 ROC-AUC: 0.973
2024-10-20 20:38 - INFO - 	 PR-AUC: 0.731
2024-10-20 20:38 - INFO - 	 Best Val. Loss: 0.094
2024-10-20 20:38 - INFO - 	 Best ROC-AUC: 0.973
2024-10-20 20:38 - INFO - 	 Best PR-AUC: 0.731
2024-10-20 20:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-20 20:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-10-20 20:38 - INFO - ---------------------------------------------
2024-10-20 20:46 - INFO - ---------------------------------------------
2024-10-20 20:46 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 20:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74401
2024-10-20 20:46 - INFO - 	 Train Loss: 0.101
2024-10-20 20:46 - INFO - 	 Val. Loss: 0.100
2024-10-20 20:46 - INFO - 	 ROC-AUC: 0.973
2024-10-20 20:46 - INFO - 	 PR-AUC: 0.744
2024-10-20 20:46 - INFO - 	 Best Val. Loss: 0.094
2024-10-20 20:46 - INFO - 	 Best ROC-AUC: 0.973
2024-10-20 20:46 - INFO - 	 Best PR-AUC: 0.744
2024-10-20 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-20 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-10-20 20:46 - INFO - ---------------------------------------------
2024-10-20 20:54 - INFO - ---------------------------------------------
2024-10-20 20:54 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 20:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80783
2024-10-20 20:54 - INFO - 	 Train Loss: 0.094
2024-10-20 20:54 - INFO - 	 Val. Loss: 0.079
2024-10-20 20:54 - INFO - 	 ROC-AUC: 0.981
2024-10-20 20:54 - INFO - 	 PR-AUC: 0.808
2024-10-20 20:54 - INFO - 	 Best Val. Loss: 0.079
2024-10-20 20:54 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 20:54 - INFO - 	 Best PR-AUC: 0.808
2024-10-20 20:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 20:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-20 20:54 - INFO - ---------------------------------------------
2024-10-20 21:02 - INFO - ---------------------------------------------
2024-10-20 21:02 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 21:02 - INFO - 	 Train Loss: 0.092
2024-10-20 21:02 - INFO - 	 Val. Loss: 0.078
2024-10-20 21:02 - INFO - 	 ROC-AUC: 0.980
2024-10-20 21:02 - INFO - 	 PR-AUC: 0.802
2024-10-20 21:02 - INFO - 	 Best Val. Loss: 0.078
2024-10-20 21:02 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 21:02 - INFO - 	 Best PR-AUC: 0.808
2024-10-20 21:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 21:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-20 21:02 - INFO - ---------------------------------------------
2024-10-20 21:10 - INFO - ---------------------------------------------
2024-10-20 21:10 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 21:10 - INFO - 	 Train Loss: 0.089
2024-10-20 21:10 - INFO - 	 Val. Loss: 0.080
2024-10-20 21:10 - INFO - 	 ROC-AUC: 0.980
2024-10-20 21:10 - INFO - 	 PR-AUC: 0.793
2024-10-20 21:10 - INFO - 	 Best Val. Loss: 0.078
2024-10-20 21:10 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 21:10 - INFO - 	 Best PR-AUC: 0.808
2024-10-20 21:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 21:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-10-20 21:10 - INFO - ---------------------------------------------
2024-10-20 21:18 - INFO - ---------------------------------------------
2024-10-20 21:18 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 21:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81934
2024-10-20 21:18 - INFO - 	 Train Loss: 0.087
2024-10-20 21:18 - INFO - 	 Val. Loss: 0.077
2024-10-20 21:18 - INFO - 	 ROC-AUC: 0.982
2024-10-20 21:18 - INFO - 	 PR-AUC: 0.819
2024-10-20 21:18 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 21:18 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 21:18 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 21:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 21:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 21:18 - INFO - ---------------------------------------------
2024-10-20 21:26 - INFO - ---------------------------------------------
2024-10-20 21:26 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 21:26 - INFO - 	 Train Loss: 0.088
2024-10-20 21:26 - INFO - 	 Val. Loss: 0.079
2024-10-20 21:26 - INFO - 	 ROC-AUC: 0.981
2024-10-20 21:26 - INFO - 	 PR-AUC: 0.789
2024-10-20 21:26 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 21:26 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 21:26 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 21:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 21:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 21:26 - INFO - ---------------------------------------------
2024-10-20 21:34 - INFO - ---------------------------------------------
2024-10-20 21:34 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 21:34 - INFO - 	 Train Loss: 0.085
2024-10-20 21:34 - INFO - 	 Val. Loss: 0.084
2024-10-20 21:34 - INFO - 	 ROC-AUC: 0.979
2024-10-20 21:34 - INFO - 	 PR-AUC: 0.798
2024-10-20 21:34 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 21:34 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 21:34 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 21:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 21:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 21:34 - INFO - ---------------------------------------------
2024-10-20 21:42 - INFO - ---------------------------------------------
2024-10-20 21:42 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 21:42 - INFO - 	 Train Loss: 0.086
2024-10-20 21:42 - INFO - 	 Val. Loss: 0.082
2024-10-20 21:42 - INFO - 	 ROC-AUC: 0.980
2024-10-20 21:42 - INFO - 	 PR-AUC: 0.810
2024-10-20 21:42 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 21:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 21:42 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 21:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 21:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 21:42 - INFO - ---------------------------------------------
2024-10-20 21:53 - INFO - Fit the preprocessing pipeline
2024-10-20 21:53 - INFO - Training using device: cuda
2024-10-20 21:53 - INFO - Creating generators
2024-10-20 21:53 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 21:53 - INFO - * Model:
2024-10-20 21:53 - INFO - * -----------
2024-10-20 21:53 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 21:53 - INFO - * -----------
2024-10-20 22:01 - INFO - ---------------------------------------------
2024-10-20 22:01 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 22:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74546
2024-10-20 22:01 - INFO - 	 Train Loss: 0.126
2024-10-20 22:01 - INFO - 	 Val. Loss: 0.097
2024-10-20 22:01 - INFO - 	 ROC-AUC: 0.974
2024-10-20 22:01 - INFO - 	 PR-AUC: 0.745
2024-10-20 22:01 - INFO - 	 Best Val. Loss: 0.097
2024-10-20 22:01 - INFO - 	 Best ROC-AUC: 0.974
2024-10-20 22:01 - INFO - 	 Best PR-AUC: 0.745
2024-10-20 22:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-20 22:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-20 22:01 - INFO - ---------------------------------------------
2024-10-20 22:09 - INFO - ---------------------------------------------
2024-10-20 22:09 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 22:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75862
2024-10-20 22:09 - INFO - 	 Train Loss: 0.100
2024-10-20 22:09 - INFO - 	 Val. Loss: 0.087
2024-10-20 22:09 - INFO - 	 ROC-AUC: 0.976
2024-10-20 22:09 - INFO - 	 PR-AUC: 0.759
2024-10-20 22:09 - INFO - 	 Best Val. Loss: 0.087
2024-10-20 22:09 - INFO - 	 Best ROC-AUC: 0.976
2024-10-20 22:09 - INFO - 	 Best PR-AUC: 0.759
2024-10-20 22:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 22:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-20 22:09 - INFO - ---------------------------------------------
2024-10-20 22:17 - INFO - ---------------------------------------------
2024-10-20 22:17 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 22:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.788
2024-10-20 22:17 - INFO - 	 Train Loss: 0.093
2024-10-20 22:17 - INFO - 	 Val. Loss: 0.093
2024-10-20 22:17 - INFO - 	 ROC-AUC: 0.978
2024-10-20 22:17 - INFO - 	 PR-AUC: 0.788
2024-10-20 22:17 - INFO - 	 Best Val. Loss: 0.087
2024-10-20 22:17 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 22:17 - INFO - 	 Best PR-AUC: 0.788
2024-10-20 22:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-20 22:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-20 22:17 - INFO - ---------------------------------------------
2024-10-20 22:25 - INFO - ---------------------------------------------
2024-10-20 22:25 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 22:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8064
2024-10-20 22:25 - INFO - 	 Train Loss: 0.092
2024-10-20 22:25 - INFO - 	 Val. Loss: 0.080
2024-10-20 22:25 - INFO - 	 ROC-AUC: 0.981
2024-10-20 22:25 - INFO - 	 PR-AUC: 0.806
2024-10-20 22:25 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 22:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 22:25 - INFO - 	 Best PR-AUC: 0.806
2024-10-20 22:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 22:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-20 22:25 - INFO - ---------------------------------------------
2024-10-20 22:33 - INFO - ---------------------------------------------
2024-10-20 22:33 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 22:33 - INFO - 	 Train Loss: 0.089
2024-10-20 22:33 - INFO - 	 Val. Loss: 0.082
2024-10-20 22:33 - INFO - 	 ROC-AUC: 0.979
2024-10-20 22:33 - INFO - 	 PR-AUC: 0.786
2024-10-20 22:33 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 22:33 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 22:33 - INFO - 	 Best PR-AUC: 0.806
2024-10-20 22:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 22:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-20 22:33 - INFO - ---------------------------------------------
2024-10-20 22:41 - INFO - ---------------------------------------------
2024-10-20 22:41 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 22:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82826
2024-10-20 22:41 - INFO - 	 Train Loss: 0.088
2024-10-20 22:41 - INFO - 	 Val. Loss: 0.074
2024-10-20 22:41 - INFO - 	 ROC-AUC: 0.982
2024-10-20 22:41 - INFO - 	 PR-AUC: 0.828
2024-10-20 22:41 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 22:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 22:41 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 22:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 22:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-20 22:41 - INFO - ---------------------------------------------
2024-10-20 22:49 - INFO - ---------------------------------------------
2024-10-20 22:49 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 22:49 - INFO - 	 Train Loss: 0.087
2024-10-20 22:49 - INFO - 	 Val. Loss: 0.082
2024-10-20 22:49 - INFO - 	 ROC-AUC: 0.980
2024-10-20 22:49 - INFO - 	 PR-AUC: 0.790
2024-10-20 22:49 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 22:49 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 22:49 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 22:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 22:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-20 22:49 - INFO - ---------------------------------------------
2024-10-20 22:57 - INFO - ---------------------------------------------
2024-10-20 22:57 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 22:57 - INFO - 	 Train Loss: 0.086
2024-10-20 22:57 - INFO - 	 Val. Loss: 0.081
2024-10-20 22:57 - INFO - 	 ROC-AUC: 0.980
2024-10-20 22:57 - INFO - 	 PR-AUC: 0.804
2024-10-20 22:57 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 22:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 22:57 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-20 22:57 - INFO - ---------------------------------------------
2024-10-20 23:05 - INFO - ---------------------------------------------
2024-10-20 23:05 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 23:05 - INFO - 	 Train Loss: 0.087
2024-10-20 23:05 - INFO - 	 Val. Loss: 0.076
2024-10-20 23:05 - INFO - 	 ROC-AUC: 0.982
2024-10-20 23:05 - INFO - 	 PR-AUC: 0.815
2024-10-20 23:05 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 23:05 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 23:05 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 23:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 23:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-20 23:05 - INFO - ---------------------------------------------
2024-10-20 23:16 - INFO - Fit the preprocessing pipeline
2024-10-20 23:16 - INFO - Training using device: cuda
2024-10-20 23:16 - INFO - Creating generators
2024-10-20 23:16 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 23:16 - INFO - * Model:
2024-10-20 23:16 - INFO - * -----------
2024-10-20 23:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 23:16 - INFO - * -----------
2024-10-20 23:24 - INFO - ---------------------------------------------
2024-10-20 23:24 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-20 23:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74113
2024-10-20 23:24 - INFO - 	 Train Loss: 0.128
2024-10-20 23:24 - INFO - 	 Val. Loss: 0.092
2024-10-20 23:24 - INFO - 	 ROC-AUC: 0.974
2024-10-20 23:24 - INFO - 	 PR-AUC: 0.741
2024-10-20 23:24 - INFO - 	 Best Val. Loss: 0.092
2024-10-20 23:24 - INFO - 	 Best ROC-AUC: 0.974
2024-10-20 23:24 - INFO - 	 Best PR-AUC: 0.741
2024-10-20 23:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-20 23:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.760
2024-10-20 23:24 - INFO - ---------------------------------------------
2024-10-20 23:32 - INFO - ---------------------------------------------
2024-10-20 23:32 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74916
2024-10-20 23:32 - INFO - 	 Train Loss: 0.100
2024-10-20 23:32 - INFO - 	 Val. Loss: 0.087
2024-10-20 23:32 - INFO - 	 ROC-AUC: 0.977
2024-10-20 23:32 - INFO - 	 PR-AUC: 0.749
2024-10-20 23:32 - INFO - 	 Best Val. Loss: 0.087
2024-10-20 23:32 - INFO - 	 Best ROC-AUC: 0.977
2024-10-20 23:32 - INFO - 	 Best PR-AUC: 0.749
2024-10-20 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-20 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-10-20 23:32 - INFO - ---------------------------------------------
2024-10-20 23:40 - INFO - ---------------------------------------------
2024-10-20 23:40 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 23:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77519
2024-10-20 23:40 - INFO - 	 Train Loss: 0.095
2024-10-20 23:40 - INFO - 	 Val. Loss: 0.087
2024-10-20 23:40 - INFO - 	 ROC-AUC: 0.977
2024-10-20 23:40 - INFO - 	 PR-AUC: 0.775
2024-10-20 23:40 - INFO - 	 Best Val. Loss: 0.087
2024-10-20 23:40 - INFO - 	 Best ROC-AUC: 0.977
2024-10-20 23:40 - INFO - 	 Best PR-AUC: 0.775
2024-10-20 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-20 23:40 - INFO - ---------------------------------------------
2024-10-20 23:48 - INFO - ---------------------------------------------
2024-10-20 23:48 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 23:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78512
2024-10-20 23:48 - INFO - 	 Train Loss: 0.091
2024-10-20 23:48 - INFO - 	 Val. Loss: 0.081
2024-10-20 23:48 - INFO - 	 ROC-AUC: 0.980
2024-10-20 23:48 - INFO - 	 PR-AUC: 0.785
2024-10-20 23:48 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 23:48 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 23:48 - INFO - 	 Best PR-AUC: 0.785
2024-10-20 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-10-20 23:48 - INFO - ---------------------------------------------
2024-10-20 23:56 - INFO - ---------------------------------------------
2024-10-20 23:56 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 23:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78927
2024-10-20 23:56 - INFO - 	 Train Loss: 0.089
2024-10-20 23:56 - INFO - 	 Val. Loss: 0.084
2024-10-20 23:56 - INFO - 	 ROC-AUC: 0.977
2024-10-20 23:56 - INFO - 	 PR-AUC: 0.789
2024-10-20 23:56 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 23:56 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 23:56 - INFO - 	 Best PR-AUC: 0.789
2024-10-20 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-10-20 23:56 - INFO - ---------------------------------------------
2024-10-21 00:04 - INFO - ---------------------------------------------
2024-10-21 00:04 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 00:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80263
2024-10-21 00:04 - INFO - 	 Train Loss: 0.089
2024-10-21 00:04 - INFO - 	 Val. Loss: 0.090
2024-10-21 00:04 - INFO - 	 ROC-AUC: 0.979
2024-10-21 00:04 - INFO - 	 PR-AUC: 0.803
2024-10-21 00:04 - INFO - 	 Best Val. Loss: 0.081
2024-10-21 00:04 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 00:04 - INFO - 	 Best PR-AUC: 0.803
2024-10-21 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-21 00:04 - INFO - ---------------------------------------------
2024-10-21 00:12 - INFO - ---------------------------------------------
2024-10-21 00:12 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 00:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80726
2024-10-21 00:12 - INFO - 	 Train Loss: 0.087
2024-10-21 00:12 - INFO - 	 Val. Loss: 0.077
2024-10-21 00:12 - INFO - 	 ROC-AUC: 0.981
2024-10-21 00:12 - INFO - 	 PR-AUC: 0.807
2024-10-21 00:12 - INFO - 	 Best Val. Loss: 0.077
2024-10-21 00:12 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 00:12 - INFO - 	 Best PR-AUC: 0.807
2024-10-21 00:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 00:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-21 00:12 - INFO - ---------------------------------------------
2024-10-21 00:20 - INFO - ---------------------------------------------
2024-10-21 00:20 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-21 00:20 - INFO - 	 Train Loss: 0.087
2024-10-21 00:20 - INFO - 	 Val. Loss: 0.078
2024-10-21 00:20 - INFO - 	 ROC-AUC: 0.979
2024-10-21 00:20 - INFO - 	 PR-AUC: 0.800
2024-10-21 00:20 - INFO - 	 Best Val. Loss: 0.077
2024-10-21 00:20 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 00:20 - INFO - 	 Best PR-AUC: 0.807
2024-10-21 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-21 00:20 - INFO - ---------------------------------------------
2024-10-21 00:28 - INFO - ---------------------------------------------
2024-10-21 00:28 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 00:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80746
2024-10-21 00:28 - INFO - 	 Train Loss: 0.085
2024-10-21 00:28 - INFO - 	 Val. Loss: 0.098
2024-10-21 00:28 - INFO - 	 ROC-AUC: 0.980
2024-10-21 00:28 - INFO - 	 PR-AUC: 0.807
2024-10-21 00:28 - INFO - 	 Best Val. Loss: 0.077
2024-10-21 00:28 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 00:28 - INFO - 	 Best PR-AUC: 0.807
2024-10-21 00:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 00:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-21 00:28 - INFO - ---------------------------------------------
2024-10-21 00:36 - INFO - ---------------------------------------------
2024-10-21 00:36 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-21 00:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82926
2024-10-21 00:36 - INFO - 	 Train Loss: 0.085
2024-10-21 00:36 - INFO - 	 Val. Loss: 0.076
2024-10-21 00:36 - INFO - 	 ROC-AUC: 0.982
2024-10-21 00:36 - INFO - 	 PR-AUC: 0.829
2024-10-21 00:36 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 00:36 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 00:36 - INFO - 	 Best PR-AUC: 0.829
2024-10-21 00:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-21 00:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-21 00:36 - INFO - ---------------------------------------------
2024-10-21 00:38 - INFO - Fit the preprocessing pipeline
2024-10-21 00:38 - INFO - Training using device: cuda
2024-10-21 00:38 - INFO - Creating generators
2024-10-21 00:38 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 00:38 - INFO - * Model:
2024-10-21 00:38 - INFO - * -----------
2024-10-21 00:38 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 00:38 - INFO - * -----------
2024-10-21 00:46 - INFO - ---------------------------------------------
2024-10-21 00:46 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 00:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72719
2024-10-21 00:46 - INFO - 	 Train Loss: 0.126
2024-10-21 00:46 - INFO - 	 Val. Loss: 0.093
2024-10-21 00:46 - INFO - 	 ROC-AUC: 0.974
2024-10-21 00:46 - INFO - 	 PR-AUC: 0.727
2024-10-21 00:46 - INFO - 	 Best Val. Loss: 0.093
2024-10-21 00:46 - INFO - 	 Best ROC-AUC: 0.974
2024-10-21 00:46 - INFO - 	 Best PR-AUC: 0.727
2024-10-21 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-21 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-10-21 00:46 - INFO - ---------------------------------------------
2024-10-21 00:54 - INFO - ---------------------------------------------
2024-10-21 00:54 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 00:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76358
2024-10-21 00:54 - INFO - 	 Train Loss: 0.101
2024-10-21 00:54 - INFO - 	 Val. Loss: 0.088
2024-10-21 00:54 - INFO - 	 ROC-AUC: 0.976
2024-10-21 00:54 - INFO - 	 PR-AUC: 0.764
2024-10-21 00:54 - INFO - 	 Best Val. Loss: 0.088
2024-10-21 00:54 - INFO - 	 Best ROC-AUC: 0.976
2024-10-21 00:54 - INFO - 	 Best PR-AUC: 0.764
2024-10-21 00:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-21 00:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-10-21 00:54 - INFO - ---------------------------------------------
2024-10-21 01:02 - INFO - ---------------------------------------------
2024-10-21 01:02 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78385
2024-10-21 01:02 - INFO - 	 Train Loss: 0.093
2024-10-21 01:02 - INFO - 	 Val. Loss: 0.083
2024-10-21 01:02 - INFO - 	 ROC-AUC: 0.980
2024-10-21 01:02 - INFO - 	 PR-AUC: 0.784
2024-10-21 01:02 - INFO - 	 Best Val. Loss: 0.083
2024-10-21 01:02 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 01:02 - INFO - 	 Best PR-AUC: 0.784
2024-10-21 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-21 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.772
2024-10-21 01:02 - INFO - ---------------------------------------------
2024-10-21 01:10 - INFO - ---------------------------------------------
2024-10-21 01:10 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 01:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79077
2024-10-21 01:10 - INFO - 	 Train Loss: 0.092
2024-10-21 01:10 - INFO - 	 Val. Loss: 0.083
2024-10-21 01:10 - INFO - 	 ROC-AUC: 0.978
2024-10-21 01:10 - INFO - 	 PR-AUC: 0.791
2024-10-21 01:10 - INFO - 	 Best Val. Loss: 0.083
2024-10-21 01:10 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 01:10 - INFO - 	 Best PR-AUC: 0.791
2024-10-21 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-21 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-21 01:10 - INFO - ---------------------------------------------
2024-10-21 01:18 - INFO - ---------------------------------------------
2024-10-21 01:18 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 01:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79943
2024-10-21 01:18 - INFO - 	 Train Loss: 0.090
2024-10-21 01:18 - INFO - 	 Val. Loss: 0.079
2024-10-21 01:18 - INFO - 	 ROC-AUC: 0.980
2024-10-21 01:18 - INFO - 	 PR-AUC: 0.799
2024-10-21 01:18 - INFO - 	 Best Val. Loss: 0.079
2024-10-21 01:18 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 01:18 - INFO - 	 Best PR-AUC: 0.799
2024-10-21 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-21 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-21 01:18 - INFO - ---------------------------------------------
2024-10-21 01:26 - INFO - ---------------------------------------------
2024-10-21 01:26 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 01:26 - INFO - 	 Train Loss: 0.087
2024-10-21 01:26 - INFO - 	 Val. Loss: 0.082
2024-10-21 01:26 - INFO - 	 ROC-AUC: 0.978
2024-10-21 01:26 - INFO - 	 PR-AUC: 0.784
2024-10-21 01:26 - INFO - 	 Best Val. Loss: 0.079
2024-10-21 01:26 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 01:26 - INFO - 	 Best PR-AUC: 0.799
2024-10-21 01:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-21 01:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-10-21 01:26 - INFO - ---------------------------------------------
2024-10-21 01:34 - INFO - ---------------------------------------------
2024-10-21 01:34 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 01:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81986
2024-10-21 01:34 - INFO - 	 Train Loss: 0.087
2024-10-21 01:34 - INFO - 	 Val. Loss: 0.078
2024-10-21 01:34 - INFO - 	 ROC-AUC: 0.981
2024-10-21 01:34 - INFO - 	 PR-AUC: 0.820
2024-10-21 01:34 - INFO - 	 Best Val. Loss: 0.078
2024-10-21 01:34 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 01:34 - INFO - 	 Best PR-AUC: 0.820
2024-10-21 01:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 01:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-21 01:34 - INFO - ---------------------------------------------
2024-10-21 01:43 - INFO - ---------------------------------------------
2024-10-21 01:43 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 01:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8278
2024-10-21 01:43 - INFO - 	 Train Loss: 0.085
2024-10-21 01:43 - INFO - 	 Val. Loss: 0.075
2024-10-21 01:43 - INFO - 	 ROC-AUC: 0.982
2024-10-21 01:43 - INFO - 	 PR-AUC: 0.828
2024-10-21 01:43 - INFO - 	 Best Val. Loss: 0.075
2024-10-21 01:43 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 01:43 - INFO - 	 Best PR-AUC: 0.828
2024-10-21 01:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 01:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-21 01:43 - INFO - ---------------------------------------------
2024-10-21 01:51 - INFO - ---------------------------------------------
2024-10-21 01:51 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 01:51 - INFO - 	 Train Loss: 0.086
2024-10-21 01:51 - INFO - 	 Val. Loss: 0.075
2024-10-21 01:51 - INFO - 	 ROC-AUC: 0.983
2024-10-21 01:51 - INFO - 	 PR-AUC: 0.825
2024-10-21 01:51 - INFO - 	 Best Val. Loss: 0.075
2024-10-21 01:51 - INFO - 	 Best ROC-AUC: 0.983
2024-10-21 01:51 - INFO - 	 Best PR-AUC: 0.828
2024-10-21 01:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 01:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-21 01:51 - INFO - ---------------------------------------------
2024-10-21 01:59 - INFO - ---------------------------------------------
2024-10-21 01:59 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 01:59 - INFO - 	 Train Loss: 0.085
2024-10-21 01:59 - INFO - 	 Val. Loss: 0.079
2024-10-21 01:59 - INFO - 	 ROC-AUC: 0.981
2024-10-21 01:59 - INFO - 	 PR-AUC: 0.811
2024-10-21 01:59 - INFO - 	 Best Val. Loss: 0.075
2024-10-21 01:59 - INFO - 	 Best ROC-AUC: 0.983
2024-10-21 01:59 - INFO - 	 Best PR-AUC: 0.828
2024-10-21 01:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 01:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-21 01:59 - INFO - ---------------------------------------------
2024-10-21 02:01 - INFO - Fit the preprocessing pipeline
2024-10-21 02:01 - INFO - Training using device: cuda
2024-10-21 02:01 - INFO - Creating generators
2024-10-21 02:01 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 02:01 - INFO - * Model:
2024-10-21 02:01 - INFO - * -----------
2024-10-21 02:01 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 02:01 - INFO - * -----------
2024-10-21 02:09 - INFO - ---------------------------------------------
2024-10-21 02:09 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 02:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70593
2024-10-21 02:09 - INFO - 	 Train Loss: 0.124
2024-10-21 02:09 - INFO - 	 Val. Loss: 0.101
2024-10-21 02:09 - INFO - 	 ROC-AUC: 0.968
2024-10-21 02:09 - INFO - 	 PR-AUC: 0.706
2024-10-21 02:09 - INFO - 	 Best Val. Loss: 0.101
2024-10-21 02:09 - INFO - 	 Best ROC-AUC: 0.968
2024-10-21 02:09 - INFO - 	 Best PR-AUC: 0.706
2024-10-21 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-21 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-21 02:09 - INFO - ---------------------------------------------
2024-10-21 02:17 - INFO - ---------------------------------------------
2024-10-21 02:17 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75594
2024-10-21 02:17 - INFO - 	 Train Loss: 0.101
2024-10-21 02:17 - INFO - 	 Val. Loss: 0.101
2024-10-21 02:17 - INFO - 	 ROC-AUC: 0.974
2024-10-21 02:17 - INFO - 	 PR-AUC: 0.756
2024-10-21 02:17 - INFO - 	 Best Val. Loss: 0.101
2024-10-21 02:17 - INFO - 	 Best ROC-AUC: 0.974
2024-10-21 02:17 - INFO - 	 Best PR-AUC: 0.756
2024-10-21 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-21 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-10-21 02:17 - INFO - ---------------------------------------------
2024-10-21 02:25 - INFO - ---------------------------------------------
2024-10-21 02:25 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 02:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80441
2024-10-21 02:25 - INFO - 	 Train Loss: 0.094
2024-10-21 02:25 - INFO - 	 Val. Loss: 0.082
2024-10-21 02:25 - INFO - 	 ROC-AUC: 0.981
2024-10-21 02:25 - INFO - 	 PR-AUC: 0.804
2024-10-21 02:25 - INFO - 	 Best Val. Loss: 0.082
2024-10-21 02:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 02:25 - INFO - 	 Best PR-AUC: 0.804
2024-10-21 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-21 02:25 - INFO - ---------------------------------------------
2024-10-21 02:33 - INFO - ---------------------------------------------
2024-10-21 02:33 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 02:33 - INFO - 	 Train Loss: 0.092
2024-10-21 02:33 - INFO - 	 Val. Loss: 0.087
2024-10-21 02:33 - INFO - 	 ROC-AUC: 0.979
2024-10-21 02:33 - INFO - 	 PR-AUC: 0.788
2024-10-21 02:33 - INFO - 	 Best Val. Loss: 0.082
2024-10-21 02:33 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 02:33 - INFO - 	 Best PR-AUC: 0.804
2024-10-21 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-21 02:33 - INFO - ---------------------------------------------
2024-10-21 02:41 - INFO - ---------------------------------------------
2024-10-21 02:41 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 02:41 - INFO - 	 Train Loss: 0.090
2024-10-21 02:41 - INFO - 	 Val. Loss: 0.085
2024-10-21 02:41 - INFO - 	 ROC-AUC: 0.979
2024-10-21 02:41 - INFO - 	 PR-AUC: 0.794
2024-10-21 02:41 - INFO - 	 Best Val. Loss: 0.082
2024-10-21 02:41 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 02:41 - INFO - 	 Best PR-AUC: 0.804
2024-10-21 02:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 02:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-21 02:41 - INFO - ---------------------------------------------
2024-10-21 02:49 - INFO - ---------------------------------------------
2024-10-21 02:49 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 02:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81973
2024-10-21 02:49 - INFO - 	 Train Loss: 0.088
2024-10-21 02:49 - INFO - 	 Val. Loss: 0.077
2024-10-21 02:49 - INFO - 	 ROC-AUC: 0.982
2024-10-21 02:49 - INFO - 	 PR-AUC: 0.820
2024-10-21 02:49 - INFO - 	 Best Val. Loss: 0.077
2024-10-21 02:49 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 02:49 - INFO - 	 Best PR-AUC: 0.820
2024-10-21 02:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 02:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-21 02:49 - INFO - ---------------------------------------------
2024-10-21 02:57 - INFO - ---------------------------------------------
2024-10-21 02:57 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 02:57 - INFO - 	 Train Loss: 0.087
2024-10-21 02:57 - INFO - 	 Val. Loss: 0.090
2024-10-21 02:57 - INFO - 	 ROC-AUC: 0.979
2024-10-21 02:57 - INFO - 	 PR-AUC: 0.786
2024-10-21 02:57 - INFO - 	 Best Val. Loss: 0.077
2024-10-21 02:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 02:57 - INFO - 	 Best PR-AUC: 0.820
2024-10-21 02:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 02:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-21 02:57 - INFO - ---------------------------------------------
2024-10-21 03:05 - INFO - ---------------------------------------------
2024-10-21 03:05 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 03:05 - INFO - 	 Train Loss: 0.086
2024-10-21 03:05 - INFO - 	 Val. Loss: 0.078
2024-10-21 03:05 - INFO - 	 ROC-AUC: 0.981
2024-10-21 03:05 - INFO - 	 PR-AUC: 0.799
2024-10-21 03:05 - INFO - 	 Best Val. Loss: 0.077
2024-10-21 03:05 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 03:05 - INFO - 	 Best PR-AUC: 0.820
2024-10-21 03:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 03:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-21 03:05 - INFO - ---------------------------------------------
2024-10-21 03:13 - INFO - ---------------------------------------------
2024-10-21 03:13 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 03:13 - INFO - 	 Train Loss: 0.084
2024-10-21 03:13 - INFO - 	 Val. Loss: 0.081
2024-10-21 03:13 - INFO - 	 ROC-AUC: 0.980
2024-10-21 03:13 - INFO - 	 PR-AUC: 0.795
2024-10-21 03:13 - INFO - 	 Best Val. Loss: 0.077
2024-10-21 03:13 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 03:13 - INFO - 	 Best PR-AUC: 0.820
2024-10-21 03:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 03:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-21 03:13 - INFO - ---------------------------------------------
2024-10-21 03:21 - INFO - ---------------------------------------------
2024-10-21 03:21 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 03:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8268
2024-10-21 03:21 - INFO - 	 Train Loss: 0.083
2024-10-21 03:21 - INFO - 	 Val. Loss: 0.075
2024-10-21 03:21 - INFO - 	 ROC-AUC: 0.982
2024-10-21 03:21 - INFO - 	 PR-AUC: 0.827
2024-10-21 03:21 - INFO - 	 Best Val. Loss: 0.075
2024-10-21 03:21 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 03:21 - INFO - 	 Best PR-AUC: 0.827
2024-10-21 03:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 03:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-21 03:21 - INFO - ---------------------------------------------
2024-10-21 03:23 - INFO - Fit the preprocessing pipeline
2024-10-21 03:23 - INFO - Training using device: cuda
2024-10-21 03:23 - INFO - Creating generators
2024-10-21 03:23 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 03:23 - INFO - * Model:
2024-10-21 03:23 - INFO - * -----------
2024-10-21 03:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 03:23 - INFO - * -----------
2024-10-21 03:31 - INFO - ---------------------------------------------
2024-10-21 03:31 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 03:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70234
2024-10-21 03:31 - INFO - 	 Train Loss: 0.124
2024-10-21 03:31 - INFO - 	 Val. Loss: 0.115
2024-10-21 03:31 - INFO - 	 ROC-AUC: 0.964
2024-10-21 03:31 - INFO - 	 PR-AUC: 0.702
2024-10-21 03:31 - INFO - 	 Best Val. Loss: 0.115
2024-10-21 03:31 - INFO - 	 Best ROC-AUC: 0.964
2024-10-21 03:31 - INFO - 	 Best PR-AUC: 0.702
2024-10-21 03:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-10-21 03:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-10-21 03:31 - INFO - ---------------------------------------------
2024-10-21 03:40 - INFO - ---------------------------------------------
2024-10-21 03:40 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 03:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80043
2024-10-21 03:40 - INFO - 	 Train Loss: 0.100
2024-10-21 03:40 - INFO - 	 Val. Loss: 0.083
2024-10-21 03:40 - INFO - 	 ROC-AUC: 0.979
2024-10-21 03:40 - INFO - 	 PR-AUC: 0.800
2024-10-21 03:40 - INFO - 	 Best Val. Loss: 0.083
2024-10-21 03:40 - INFO - 	 Best ROC-AUC: 0.979
2024-10-21 03:40 - INFO - 	 Best PR-AUC: 0.800
2024-10-21 03:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 03:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-21 03:40 - INFO - ---------------------------------------------
2024-10-21 03:48 - INFO - ---------------------------------------------
2024-10-21 03:48 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 03:48 - INFO - 	 Train Loss: 0.093
2024-10-21 03:48 - INFO - 	 Val. Loss: 0.082
2024-10-21 03:48 - INFO - 	 ROC-AUC: 0.979
2024-10-21 03:48 - INFO - 	 PR-AUC: 0.778
2024-10-21 03:48 - INFO - 	 Best Val. Loss: 0.082
2024-10-21 03:48 - INFO - 	 Best ROC-AUC: 0.979
2024-10-21 03:48 - INFO - 	 Best PR-AUC: 0.800
2024-10-21 03:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 03:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-21 03:48 - INFO - ---------------------------------------------
2024-10-21 03:56 - INFO - ---------------------------------------------
2024-10-21 03:56 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 03:56 - INFO - 	 Train Loss: 0.092
2024-10-21 03:56 - INFO - 	 Val. Loss: 0.084
2024-10-21 03:56 - INFO - 	 ROC-AUC: 0.979
2024-10-21 03:56 - INFO - 	 PR-AUC: 0.768
2024-10-21 03:56 - INFO - 	 Best Val. Loss: 0.082
2024-10-21 03:56 - INFO - 	 Best ROC-AUC: 0.979
2024-10-21 03:56 - INFO - 	 Best PR-AUC: 0.800
2024-10-21 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-21 03:56 - INFO - ---------------------------------------------
2024-10-21 04:04 - INFO - ---------------------------------------------
2024-10-21 04:04 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 04:04 - INFO - 	 Train Loss: 0.089
2024-10-21 04:04 - INFO - 	 Val. Loss: 0.081
2024-10-21 04:04 - INFO - 	 ROC-AUC: 0.979
2024-10-21 04:04 - INFO - 	 PR-AUC: 0.785
2024-10-21 04:04 - INFO - 	 Best Val. Loss: 0.081
2024-10-21 04:04 - INFO - 	 Best ROC-AUC: 0.979
2024-10-21 04:04 - INFO - 	 Best PR-AUC: 0.800
2024-10-21 04:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 04:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-21 04:04 - INFO - ---------------------------------------------
2024-10-21 04:14 - INFO - Fit the preprocessing pipeline
2024-10-21 04:14 - INFO - Training using device: cuda
2024-10-21 04:14 - INFO - Creating generators
2024-10-21 04:14 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 04:14 - INFO - * Model:
2024-10-21 04:14 - INFO - * -----------
2024-10-21 04:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 04:14 - INFO - * -----------
2024-10-21 04:22 - INFO - ---------------------------------------------
2024-10-21 04:22 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 04:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73172
2024-10-21 04:22 - INFO - 	 Train Loss: 0.126
2024-10-21 04:22 - INFO - 	 Val. Loss: 0.105
2024-10-21 04:22 - INFO - 	 ROC-AUC: 0.972
2024-10-21 04:22 - INFO - 	 PR-AUC: 0.732
2024-10-21 04:22 - INFO - 	 Best Val. Loss: 0.105
2024-10-21 04:22 - INFO - 	 Best ROC-AUC: 0.972
2024-10-21 04:22 - INFO - 	 Best PR-AUC: 0.732
2024-10-21 04:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-10-21 04:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.736
2024-10-21 04:22 - INFO - ---------------------------------------------
2024-10-21 04:30 - INFO - ---------------------------------------------
2024-10-21 04:30 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 04:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77387
2024-10-21 04:30 - INFO - 	 Train Loss: 0.103
2024-10-21 04:30 - INFO - 	 Val. Loss: 0.090
2024-10-21 04:30 - INFO - 	 ROC-AUC: 0.978
2024-10-21 04:30 - INFO - 	 PR-AUC: 0.774
2024-10-21 04:30 - INFO - 	 Best Val. Loss: 0.090
2024-10-21 04:30 - INFO - 	 Best ROC-AUC: 0.978
2024-10-21 04:30 - INFO - 	 Best PR-AUC: 0.774
2024-10-21 04:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-21 04:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-21 04:30 - INFO - ---------------------------------------------
2024-10-21 04:38 - INFO - ---------------------------------------------
2024-10-21 04:38 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 04:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80317
2024-10-21 04:38 - INFO - 	 Train Loss: 0.095
2024-10-21 04:38 - INFO - 	 Val. Loss: 0.081
2024-10-21 04:38 - INFO - 	 ROC-AUC: 0.980
2024-10-21 04:38 - INFO - 	 PR-AUC: 0.803
2024-10-21 04:38 - INFO - 	 Best Val. Loss: 0.081
2024-10-21 04:38 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 04:38 - INFO - 	 Best PR-AUC: 0.803
2024-10-21 04:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 04:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-21 04:38 - INFO - ---------------------------------------------
2024-10-21 04:46 - INFO - ---------------------------------------------
2024-10-21 04:46 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-21 04:46 - INFO - 	 Train Loss: 0.090
2024-10-21 04:46 - INFO - 	 Val. Loss: 0.079
2024-10-21 04:46 - INFO - 	 ROC-AUC: 0.979
2024-10-21 04:46 - INFO - 	 PR-AUC: 0.793
2024-10-21 04:46 - INFO - 	 Best Val. Loss: 0.079
2024-10-21 04:46 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 04:46 - INFO - 	 Best PR-AUC: 0.803
2024-10-21 04:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 04:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-21 04:46 - INFO - ---------------------------------------------
2024-10-21 04:54 - INFO - ---------------------------------------------
2024-10-21 04:54 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-21 04:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81024
2024-10-21 04:54 - INFO - 	 Train Loss: 0.091
2024-10-21 04:54 - INFO - 	 Val. Loss: 0.078
2024-10-21 04:54 - INFO - 	 ROC-AUC: 0.980
2024-10-21 04:54 - INFO - 	 PR-AUC: 0.810
2024-10-21 04:54 - INFO - 	 Best Val. Loss: 0.078
2024-10-21 04:54 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 04:54 - INFO - 	 Best PR-AUC: 0.810
2024-10-21 04:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 04:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-21 04:54 - INFO - ---------------------------------------------
2024-10-21 05:02 - INFO - ---------------------------------------------
2024-10-21 05:02 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 05:02 - INFO - 	 Train Loss: 0.088
2024-10-21 05:02 - INFO - 	 Val. Loss: 0.078
2024-10-21 05:02 - INFO - 	 ROC-AUC: 0.980
2024-10-21 05:02 - INFO - 	 PR-AUC: 0.805
2024-10-21 05:02 - INFO - 	 Best Val. Loss: 0.078
2024-10-21 05:02 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 05:02 - INFO - 	 Best PR-AUC: 0.810
2024-10-21 05:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 05:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-21 05:02 - INFO - ---------------------------------------------
2024-10-21 05:10 - INFO - ---------------------------------------------
2024-10-21 05:10 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 05:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82282
2024-10-21 05:10 - INFO - 	 Train Loss: 0.086
2024-10-21 05:10 - INFO - 	 Val. Loss: 0.078
2024-10-21 05:10 - INFO - 	 ROC-AUC: 0.980
2024-10-21 05:10 - INFO - 	 PR-AUC: 0.823
2024-10-21 05:10 - INFO - 	 Best Val. Loss: 0.078
2024-10-21 05:10 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 05:10 - INFO - 	 Best PR-AUC: 0.823
2024-10-21 05:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 05:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-21 05:10 - INFO - ---------------------------------------------
2024-10-21 05:18 - INFO - ---------------------------------------------
2024-10-21 05:18 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 05:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83686
2024-10-21 05:18 - INFO - 	 Train Loss: 0.085
2024-10-21 05:18 - INFO - 	 Val. Loss: 0.073
2024-10-21 05:18 - INFO - 	 ROC-AUC: 0.983
2024-10-21 05:18 - INFO - 	 PR-AUC: 0.837
2024-10-21 05:18 - INFO - 	 Best Val. Loss: 0.073
2024-10-21 05:18 - INFO - 	 Best ROC-AUC: 0.983
2024-10-21 05:18 - INFO - 	 Best PR-AUC: 0.837
2024-10-21 05:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 05:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-21 05:18 - INFO - ---------------------------------------------
2024-10-21 05:26 - INFO - ---------------------------------------------
2024-10-21 05:26 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 05:26 - INFO - 	 Train Loss: 0.085
2024-10-21 05:26 - INFO - 	 Val. Loss: 0.075
2024-10-21 05:26 - INFO - 	 ROC-AUC: 0.983
2024-10-21 05:26 - INFO - 	 PR-AUC: 0.828
2024-10-21 05:26 - INFO - 	 Best Val. Loss: 0.073
2024-10-21 05:26 - INFO - 	 Best ROC-AUC: 0.983
2024-10-21 05:26 - INFO - 	 Best PR-AUC: 0.837
2024-10-21 05:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 05:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-21 05:26 - INFO - ---------------------------------------------
2024-10-21 05:34 - INFO - ---------------------------------------------
2024-10-21 05:34 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 05:34 - INFO - 	 Train Loss: 0.085
2024-10-21 05:34 - INFO - 	 Val. Loss: 0.076
2024-10-21 05:34 - INFO - 	 ROC-AUC: 0.982
2024-10-21 05:34 - INFO - 	 PR-AUC: 0.823
2024-10-21 05:34 - INFO - 	 Best Val. Loss: 0.073
2024-10-21 05:34 - INFO - 	 Best ROC-AUC: 0.983
2024-10-21 05:34 - INFO - 	 Best PR-AUC: 0.837
2024-10-21 05:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 05:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-21 05:34 - INFO - ---------------------------------------------
2024-10-21 05:37 - INFO - Fit the preprocessing pipeline
2024-10-21 05:37 - INFO - Training using device: cuda
2024-10-21 05:37 - INFO - Creating generators
2024-10-21 05:37 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 05:37 - INFO - * Model:
2024-10-21 05:37 - INFO - * -----------
2024-10-21 05:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 05:37 - INFO - * -----------
2024-10-21 05:45 - INFO - ---------------------------------------------
2024-10-21 05:45 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 05:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73748
2024-10-21 05:45 - INFO - 	 Train Loss: 0.124
2024-10-21 05:45 - INFO - 	 Val. Loss: 0.091
2024-10-21 05:45 - INFO - 	 ROC-AUC: 0.976
2024-10-21 05:45 - INFO - 	 PR-AUC: 0.737
2024-10-21 05:45 - INFO - 	 Best Val. Loss: 0.091
2024-10-21 05:45 - INFO - 	 Best ROC-AUC: 0.976
2024-10-21 05:45 - INFO - 	 Best PR-AUC: 0.737
2024-10-21 05:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-21 05:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.757
2024-10-21 05:45 - INFO - ---------------------------------------------
2024-10-21 05:53 - INFO - ---------------------------------------------
2024-10-21 05:53 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77212
2024-10-21 05:53 - INFO - 	 Train Loss: 0.099
2024-10-21 05:53 - INFO - 	 Val. Loss: 0.088
2024-10-21 05:53 - INFO - 	 ROC-AUC: 0.977
2024-10-21 05:53 - INFO - 	 PR-AUC: 0.772
2024-10-21 05:53 - INFO - 	 Best Val. Loss: 0.088
2024-10-21 05:53 - INFO - 	 Best ROC-AUC: 0.977
2024-10-21 05:53 - INFO - 	 Best PR-AUC: 0.772
2024-10-21 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-21 05:53 - INFO - ---------------------------------------------
2024-10-21 06:01 - INFO - ---------------------------------------------
2024-10-21 06:01 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 06:01 - INFO - 	 Train Loss: 0.095
2024-10-21 06:01 - INFO - 	 Val. Loss: 0.086
2024-10-21 06:01 - INFO - 	 ROC-AUC: 0.977
2024-10-21 06:01 - INFO - 	 PR-AUC: 0.769
2024-10-21 06:01 - INFO - 	 Best Val. Loss: 0.086
2024-10-21 06:01 - INFO - 	 Best ROC-AUC: 0.977
2024-10-21 06:01 - INFO - 	 Best PR-AUC: 0.772
2024-10-21 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-10-21 06:01 - INFO - ---------------------------------------------
2024-10-21 06:09 - INFO - ---------------------------------------------
2024-10-21 06:09 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 06:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77749
2024-10-21 06:09 - INFO - 	 Train Loss: 0.092
2024-10-21 06:09 - INFO - 	 Val. Loss: 0.087
2024-10-21 06:09 - INFO - 	 ROC-AUC: 0.977
2024-10-21 06:09 - INFO - 	 PR-AUC: 0.777
2024-10-21 06:09 - INFO - 	 Best Val. Loss: 0.086
2024-10-21 06:09 - INFO - 	 Best ROC-AUC: 0.977
2024-10-21 06:09 - INFO - 	 Best PR-AUC: 0.777
2024-10-21 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-21 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-21 06:09 - INFO - ---------------------------------------------
2024-10-21 06:17 - INFO - ---------------------------------------------
2024-10-21 06:17 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-21 06:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80387
2024-10-21 06:17 - INFO - 	 Train Loss: 0.090
2024-10-21 06:17 - INFO - 	 Val. Loss: 0.080
2024-10-21 06:17 - INFO - 	 ROC-AUC: 0.981
2024-10-21 06:17 - INFO - 	 PR-AUC: 0.804
2024-10-21 06:17 - INFO - 	 Best Val. Loss: 0.080
2024-10-21 06:17 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 06:17 - INFO - 	 Best PR-AUC: 0.804
2024-10-21 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-21 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-21 06:17 - INFO - ---------------------------------------------
2024-10-21 06:25 - INFO - ---------------------------------------------
2024-10-21 06:25 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 06:25 - INFO - 	 Train Loss: 0.088
2024-10-21 06:25 - INFO - 	 Val. Loss: 0.079
2024-10-21 06:25 - INFO - 	 ROC-AUC: 0.980
2024-10-21 06:25 - INFO - 	 PR-AUC: 0.796
2024-10-21 06:25 - INFO - 	 Best Val. Loss: 0.079
2024-10-21 06:25 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 06:25 - INFO - 	 Best PR-AUC: 0.804
2024-10-21 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-21 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-21 06:25 - INFO - ---------------------------------------------
2024-10-21 06:33 - INFO - ---------------------------------------------
2024-10-21 06:33 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 06:33 - INFO - 	 Train Loss: 0.087
2024-10-21 06:33 - INFO - 	 Val. Loss: 0.079
2024-10-21 06:33 - INFO - 	 ROC-AUC: 0.980
2024-10-21 06:33 - INFO - 	 PR-AUC: 0.800
2024-10-21 06:33 - INFO - 	 Best Val. Loss: 0.079
2024-10-21 06:33 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 06:33 - INFO - 	 Best PR-AUC: 0.804
2024-10-21 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-21 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-21 06:33 - INFO - ---------------------------------------------
2024-10-21 06:41 - INFO - ---------------------------------------------
2024-10-21 06:41 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 06:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81587
2024-10-21 06:41 - INFO - 	 Train Loss: 0.086
2024-10-21 06:41 - INFO - 	 Val. Loss: 0.076
2024-10-21 06:41 - INFO - 	 ROC-AUC: 0.980
2024-10-21 06:41 - INFO - 	 PR-AUC: 0.816
2024-10-21 06:41 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 06:41 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 06:41 - INFO - 	 Best PR-AUC: 0.816
2024-10-21 06:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-21 06:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-21 06:41 - INFO - ---------------------------------------------
2024-10-21 06:49 - INFO - ---------------------------------------------
2024-10-21 06:49 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-21 06:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81682
2024-10-21 06:49 - INFO - 	 Train Loss: 0.087
2024-10-21 06:49 - INFO - 	 Val. Loss: 0.076
2024-10-21 06:49 - INFO - 	 ROC-AUC: 0.982
2024-10-21 06:49 - INFO - 	 PR-AUC: 0.817
2024-10-21 06:49 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 06:49 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 06:49 - INFO - 	 Best PR-AUC: 0.817
2024-10-21 06:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-21 06:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-21 06:49 - INFO - ---------------------------------------------
2024-10-21 06:57 - INFO - ---------------------------------------------
2024-10-21 06:57 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 06:57 - INFO - 	 Train Loss: 0.084
2024-10-21 06:57 - INFO - 	 Val. Loss: 0.079
2024-10-21 06:57 - INFO - 	 ROC-AUC: 0.981
2024-10-21 06:57 - INFO - 	 PR-AUC: 0.812
2024-10-21 06:57 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 06:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 06:57 - INFO - 	 Best PR-AUC: 0.817
2024-10-21 06:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-21 06:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-21 06:57 - INFO - ---------------------------------------------
2024-10-21 06:59 - INFO - Fit the preprocessing pipeline
2024-10-21 06:59 - INFO - Training using device: cuda
2024-10-21 06:59 - INFO - Creating generators
2024-10-21 06:59 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 06:59 - INFO - * Model:
2024-10-21 06:59 - INFO - * -----------
2024-10-21 06:59 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 06:59 - INFO - * -----------
2024-10-21 07:07 - INFO - ---------------------------------------------
2024-10-21 07:07 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 07:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73009
2024-10-21 07:07 - INFO - 	 Train Loss: 0.125
2024-10-21 07:07 - INFO - 	 Val. Loss: 0.094
2024-10-21 07:07 - INFO - 	 ROC-AUC: 0.972
2024-10-21 07:07 - INFO - 	 PR-AUC: 0.730
2024-10-21 07:07 - INFO - 	 Best Val. Loss: 0.094
2024-10-21 07:07 - INFO - 	 Best ROC-AUC: 0.972
2024-10-21 07:07 - INFO - 	 Best PR-AUC: 0.730
2024-10-21 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-10-21 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.763
2024-10-21 07:07 - INFO - ---------------------------------------------
2024-10-21 07:15 - INFO - ---------------------------------------------
2024-10-21 07:15 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 07:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75877
2024-10-21 07:15 - INFO - 	 Train Loss: 0.101
2024-10-21 07:15 - INFO - 	 Val. Loss: 0.091
2024-10-21 07:15 - INFO - 	 ROC-AUC: 0.974
2024-10-21 07:15 - INFO - 	 PR-AUC: 0.759
2024-10-21 07:15 - INFO - 	 Best Val. Loss: 0.091
2024-10-21 07:15 - INFO - 	 Best ROC-AUC: 0.974
2024-10-21 07:15 - INFO - 	 Best PR-AUC: 0.759
2024-10-21 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-10-21 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.777
2024-10-21 07:15 - INFO - ---------------------------------------------
2024-10-21 07:23 - INFO - ---------------------------------------------
2024-10-21 07:23 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 07:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7807
2024-10-21 07:23 - INFO - 	 Train Loss: 0.095
2024-10-21 07:23 - INFO - 	 Val. Loss: 0.085
2024-10-21 07:23 - INFO - 	 ROC-AUC: 0.978
2024-10-21 07:23 - INFO - 	 PR-AUC: 0.781
2024-10-21 07:23 - INFO - 	 Best Val. Loss: 0.085
2024-10-21 07:23 - INFO - 	 Best ROC-AUC: 0.978
2024-10-21 07:23 - INFO - 	 Best PR-AUC: 0.781
2024-10-21 07:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 07:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-21 07:23 - INFO - ---------------------------------------------
2024-10-21 07:31 - INFO - ---------------------------------------------
2024-10-21 07:31 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 07:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78911
2024-10-21 07:31 - INFO - 	 Train Loss: 0.091
2024-10-21 07:31 - INFO - 	 Val. Loss: 0.086
2024-10-21 07:31 - INFO - 	 ROC-AUC: 0.976
2024-10-21 07:31 - INFO - 	 PR-AUC: 0.789
2024-10-21 07:31 - INFO - 	 Best Val. Loss: 0.085
2024-10-21 07:31 - INFO - 	 Best ROC-AUC: 0.978
2024-10-21 07:31 - INFO - 	 Best PR-AUC: 0.789
2024-10-21 07:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 07:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-10-21 07:31 - INFO - ---------------------------------------------
2024-10-21 07:39 - INFO - ---------------------------------------------
2024-10-21 07:39 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 07:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7992
2024-10-21 07:39 - INFO - 	 Train Loss: 0.090
2024-10-21 07:39 - INFO - 	 Val. Loss: 0.081
2024-10-21 07:39 - INFO - 	 ROC-AUC: 0.980
2024-10-21 07:39 - INFO - 	 PR-AUC: 0.799
2024-10-21 07:39 - INFO - 	 Best Val. Loss: 0.081
2024-10-21 07:39 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 07:39 - INFO - 	 Best PR-AUC: 0.799
2024-10-21 07:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 07:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-10-21 07:39 - INFO - ---------------------------------------------
2024-10-21 07:47 - INFO - ---------------------------------------------
2024-10-21 07:47 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-21 07:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82822
2024-10-21 07:47 - INFO - 	 Train Loss: 0.087
2024-10-21 07:47 - INFO - 	 Val. Loss: 0.076
2024-10-21 07:47 - INFO - 	 ROC-AUC: 0.982
2024-10-21 07:47 - INFO - 	 PR-AUC: 0.828
2024-10-21 07:47 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 07:47 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 07:47 - INFO - 	 Best PR-AUC: 0.828
2024-10-21 07:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 07:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-21 07:47 - INFO - ---------------------------------------------
2024-10-21 07:55 - INFO - ---------------------------------------------
2024-10-21 07:55 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-21 07:55 - INFO - 	 Train Loss: 0.086
2024-10-21 07:55 - INFO - 	 Val. Loss: 0.079
2024-10-21 07:55 - INFO - 	 ROC-AUC: 0.980
2024-10-21 07:55 - INFO - 	 PR-AUC: 0.805
2024-10-21 07:55 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 07:55 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 07:55 - INFO - 	 Best PR-AUC: 0.828
2024-10-21 07:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 07:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-21 07:55 - INFO - ---------------------------------------------
2024-10-21 08:03 - INFO - ---------------------------------------------
2024-10-21 08:03 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-21 08:03 - INFO - 	 Train Loss: 0.086
2024-10-21 08:03 - INFO - 	 Val. Loss: 0.076
2024-10-21 08:03 - INFO - 	 ROC-AUC: 0.982
2024-10-21 08:03 - INFO - 	 PR-AUC: 0.819
2024-10-21 08:03 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 08:03 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 08:03 - INFO - 	 Best PR-AUC: 0.828
2024-10-21 08:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 08:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-21 08:03 - INFO - ---------------------------------------------
2024-10-21 08:11 - INFO - ---------------------------------------------
2024-10-21 08:11 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 08:11 - INFO - 	 Train Loss: 0.086
2024-10-21 08:11 - INFO - 	 Val. Loss: 0.078
2024-10-21 08:11 - INFO - 	 ROC-AUC: 0.981
2024-10-21 08:11 - INFO - 	 PR-AUC: 0.813
2024-10-21 08:11 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 08:11 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 08:11 - INFO - 	 Best PR-AUC: 0.828
2024-10-21 08:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-21 08:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-21 08:11 - INFO - ---------------------------------------------
2024-10-21 08:22 - INFO - Fit the preprocessing pipeline
2024-10-21 08:22 - INFO - Training using device: cuda
2024-10-21 08:22 - INFO - Creating generators
2024-10-21 08:22 - INFO - The model has 2,246,929 trainable parameters
2024-10-21 08:22 - INFO - * Model:
2024-10-21 08:22 - INFO - * -----------
2024-10-21 08:22 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-21 08:22 - INFO - * -----------
2024-10-21 08:30 - INFO - ---------------------------------------------
2024-10-21 08:30 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-21 08:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74608
2024-10-21 08:30 - INFO - 	 Train Loss: 0.128
2024-10-21 08:30 - INFO - 	 Val. Loss: 0.091
2024-10-21 08:30 - INFO - 	 ROC-AUC: 0.974
2024-10-21 08:30 - INFO - 	 PR-AUC: 0.746
2024-10-21 08:30 - INFO - 	 Best Val. Loss: 0.091
2024-10-21 08:30 - INFO - 	 Best ROC-AUC: 0.974
2024-10-21 08:30 - INFO - 	 Best PR-AUC: 0.746
2024-10-21 08:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-10-21 08:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-21 08:30 - INFO - ---------------------------------------------
2024-10-21 08:38 - INFO - ---------------------------------------------
2024-10-21 08:38 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-21 08:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75968
2024-10-21 08:38 - INFO - 	 Train Loss: 0.102
2024-10-21 08:38 - INFO - 	 Val. Loss: 0.088
2024-10-21 08:38 - INFO - 	 ROC-AUC: 0.975
2024-10-21 08:38 - INFO - 	 PR-AUC: 0.760
2024-10-21 08:38 - INFO - 	 Best Val. Loss: 0.088
2024-10-21 08:38 - INFO - 	 Best ROC-AUC: 0.975
2024-10-21 08:38 - INFO - 	 Best PR-AUC: 0.760
2024-10-21 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-10-21 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-21 08:38 - INFO - ---------------------------------------------
2024-10-21 08:46 - INFO - ---------------------------------------------
2024-10-21 08:46 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-21 08:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79731
2024-10-21 08:46 - INFO - 	 Train Loss: 0.095
2024-10-21 08:46 - INFO - 	 Val. Loss: 0.083
2024-10-21 08:46 - INFO - 	 ROC-AUC: 0.980
2024-10-21 08:46 - INFO - 	 PR-AUC: 0.797
2024-10-21 08:46 - INFO - 	 Best Val. Loss: 0.083
2024-10-21 08:46 - INFO - 	 Best ROC-AUC: 0.980
2024-10-21 08:46 - INFO - 	 Best PR-AUC: 0.797
2024-10-21 08:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-21 08:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-21 08:46 - INFO - ---------------------------------------------
2024-10-21 08:54 - INFO - ---------------------------------------------
2024-10-21 08:54 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-21 08:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80545
2024-10-21 08:54 - INFO - 	 Train Loss: 0.091
2024-10-21 08:54 - INFO - 	 Val. Loss: 0.081
2024-10-21 08:54 - INFO - 	 ROC-AUC: 0.981
2024-10-21 08:54 - INFO - 	 PR-AUC: 0.805
2024-10-21 08:54 - INFO - 	 Best Val. Loss: 0.081
2024-10-21 08:54 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 08:54 - INFO - 	 Best PR-AUC: 0.805
2024-10-21 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-21 08:54 - INFO - ---------------------------------------------
2024-10-21 09:02 - INFO - ---------------------------------------------
2024-10-21 09:02 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-21 09:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81062
2024-10-21 09:02 - INFO - 	 Train Loss: 0.088
2024-10-21 09:02 - INFO - 	 Val. Loss: 0.078
2024-10-21 09:02 - INFO - 	 ROC-AUC: 0.980
2024-10-21 09:02 - INFO - 	 PR-AUC: 0.811
2024-10-21 09:02 - INFO - 	 Best Val. Loss: 0.078
2024-10-21 09:02 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 09:02 - INFO - 	 Best PR-AUC: 0.811
2024-10-21 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-21 09:02 - INFO - ---------------------------------------------
2024-10-21 09:10 - INFO - ---------------------------------------------
2024-10-21 09:10 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-21 09:10 - INFO - 	 Train Loss: 0.088
2024-10-21 09:10 - INFO - 	 Val. Loss: 0.082
2024-10-21 09:10 - INFO - 	 ROC-AUC: 0.978
2024-10-21 09:10 - INFO - 	 PR-AUC: 0.798
2024-10-21 09:10 - INFO - 	 Best Val. Loss: 0.078
2024-10-21 09:10 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 09:10 - INFO - 	 Best PR-AUC: 0.811
2024-10-21 09:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 09:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-21 09:10 - INFO - ---------------------------------------------
2024-10-21 09:18 - INFO - ---------------------------------------------
2024-10-21 09:18 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-21 09:18 - INFO - 	 Train Loss: 0.087
2024-10-21 09:18 - INFO - 	 Val. Loss: 0.082
2024-10-21 09:18 - INFO - 	 ROC-AUC: 0.979
2024-10-21 09:18 - INFO - 	 PR-AUC: 0.780
2024-10-21 09:18 - INFO - 	 Best Val. Loss: 0.078
2024-10-21 09:18 - INFO - 	 Best ROC-AUC: 0.981
2024-10-21 09:18 - INFO - 	 Best PR-AUC: 0.811
2024-10-21 09:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 09:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-21 09:18 - INFO - ---------------------------------------------
2024-10-21 09:26 - INFO - ---------------------------------------------
2024-10-21 09:26 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-21 09:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8239
2024-10-21 09:26 - INFO - 	 Train Loss: 0.086
2024-10-21 09:26 - INFO - 	 Val. Loss: 0.076
2024-10-21 09:26 - INFO - 	 ROC-AUC: 0.982
2024-10-21 09:26 - INFO - 	 PR-AUC: 0.824
2024-10-21 09:26 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 09:26 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 09:26 - INFO - 	 Best PR-AUC: 0.824
2024-10-21 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-21 09:26 - INFO - ---------------------------------------------
2024-10-21 09:34 - INFO - ---------------------------------------------
2024-10-21 09:34 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-21 09:34 - INFO - 	 Train Loss: 0.086
2024-10-21 09:34 - INFO - 	 Val. Loss: 0.079
2024-10-21 09:34 - INFO - 	 ROC-AUC: 0.980
2024-10-21 09:34 - INFO - 	 PR-AUC: 0.815
2024-10-21 09:34 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 09:34 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 09:34 - INFO - 	 Best PR-AUC: 0.824
2024-10-21 09:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 09:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-21 09:34 - INFO - ---------------------------------------------
2024-10-21 09:42 - INFO - ---------------------------------------------
2024-10-21 09:42 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-21 09:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82625
2024-10-21 09:42 - INFO - 	 Train Loss: 0.084
2024-10-21 09:42 - INFO - 	 Val. Loss: 0.077
2024-10-21 09:42 - INFO - 	 ROC-AUC: 0.981
2024-10-21 09:42 - INFO - 	 PR-AUC: 0.826
2024-10-21 09:42 - INFO - 	 Best Val. Loss: 0.076
2024-10-21 09:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-21 09:42 - INFO - 	 Best PR-AUC: 0.826
2024-10-21 09:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-21 09:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-21 09:42 - INFO - ---------------------------------------------
