2024-10-13 23:48 - INFO - Fit the preprocessing pipeline
2024-10-13 23:48 - INFO - Training using device: cuda
2024-10-13 23:48 - INFO - Creating generators
2024-10-13 23:48 - INFO - The model has 2,246,929 trainable parameters
2024-10-13 23:48 - INFO - * Model:
2024-10-13 23:48 - INFO - * -----------
2024-10-13 23:48 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-13 23:48 - INFO - * -----------
2024-10-14 00:01 - INFO - ---------------------------------------------
2024-10-14 00:01 - INFO - Epoch: 01 | Time: 10m 20s
2024-10-14 00:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98721
2024-10-14 00:01 - INFO - 	 Train Loss: 0.046
2024-10-14 00:01 - INFO - 	 Val. Loss: 0.066
2024-10-14 00:01 - INFO - 	 ROC-AUC: 0.987
2024-10-14 00:01 - INFO - 	 PR-AUC: 0.897
2024-10-14 00:01 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 00:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 00:01 - INFO - 	 Best PR-AUC: 0.897
2024-10-14 00:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 00:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-14 00:01 - INFO - ---------------------------------------------
2024-10-14 00:11 - INFO - ---------------------------------------------
2024-10-14 00:11 - INFO - Epoch: 02 | Time: 10m 33s
2024-10-14 00:11 - INFO - 	 Train Loss: 0.042
2024-10-14 00:11 - INFO - 	 Val. Loss: 0.064
2024-10-14 00:11 - INFO - 	 ROC-AUC: 0.987
2024-10-14 00:11 - INFO - 	 PR-AUC: 0.897
2024-10-14 00:11 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 00:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 00:11 - INFO - 	 Best PR-AUC: 0.897
2024-10-14 00:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 00:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-14 00:11 - INFO - ---------------------------------------------
2024-10-14 00:22 - INFO - ---------------------------------------------
2024-10-14 00:22 - INFO - Epoch: 03 | Time: 10m 47s
2024-10-14 00:22 - INFO - 	 Train Loss: 0.042
2024-10-14 00:22 - INFO - 	 Val. Loss: 0.070
2024-10-14 00:22 - INFO - 	 ROC-AUC: 0.986
2024-10-14 00:22 - INFO - 	 PR-AUC: 0.886
2024-10-14 00:22 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 00:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 00:22 - INFO - 	 Best PR-AUC: 0.897
2024-10-14 00:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 00:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-14 00:22 - INFO - ---------------------------------------------
2024-10-14 00:33 - INFO - ---------------------------------------------
2024-10-14 00:33 - INFO - Epoch: 04 | Time: 10m 55s
2024-10-14 00:33 - INFO - 	 Train Loss: 0.039
2024-10-14 00:33 - INFO - 	 Val. Loss: 0.070
2024-10-14 00:33 - INFO - 	 ROC-AUC: 0.987
2024-10-14 00:33 - INFO - 	 PR-AUC: 0.892
2024-10-14 00:33 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 00:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 00:33 - INFO - 	 Best PR-AUC: 0.897
2024-10-14 00:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 00:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-14 00:33 - INFO - ---------------------------------------------
2024-10-14 00:46 - INFO - Fit the preprocessing pipeline
2024-10-14 00:46 - INFO - Training using device: cuda
2024-10-14 00:46 - INFO - Creating generators
2024-10-14 00:46 - INFO - The model has 2,246,929 trainable parameters
2024-10-14 00:46 - INFO - * Model:
2024-10-14 00:46 - INFO - * -----------
2024-10-14 00:46 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-14 00:46 - INFO - * -----------
2024-10-14 01:00 - INFO - ---------------------------------------------
2024-10-14 01:00 - INFO - Epoch: 01 | Time: 10m 21s
2024-10-14 01:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98705
2024-10-14 01:00 - INFO - 	 Train Loss: 0.047
2024-10-14 01:00 - INFO - 	 Val. Loss: 0.071
2024-10-14 01:00 - INFO - 	 ROC-AUC: 0.987
2024-10-14 01:00 - INFO - 	 PR-AUC: 0.882
2024-10-14 01:00 - INFO - 	 Best Val. Loss: 0.071
2024-10-14 01:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 01:00 - INFO - 	 Best PR-AUC: 0.882
2024-10-14 01:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 01:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-14 01:00 - INFO - ---------------------------------------------
2024-10-14 01:42 - INFO - ---------------------------------------------
2024-10-14 01:42 - INFO - Epoch: 02 | Time: 21m 53s
2024-10-14 01:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98719
2024-10-14 01:42 - INFO - 	 Train Loss: 0.042
2024-10-14 01:42 - INFO - 	 Val. Loss: 0.066
2024-10-14 01:42 - INFO - 	 ROC-AUC: 0.987
2024-10-14 01:42 - INFO - 	 PR-AUC: 0.896
2024-10-14 01:42 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 01:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 01:42 - INFO - 	 Best PR-AUC: 0.896
2024-10-14 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-14 01:42 - INFO - ---------------------------------------------
2024-10-14 01:52 - INFO - ---------------------------------------------
2024-10-14 01:52 - INFO - Epoch: 03 | Time: 10m 22s
2024-10-14 01:52 - INFO - 	 Train Loss: 0.042
2024-10-14 01:52 - INFO - 	 Val. Loss: 0.068
2024-10-14 01:52 - INFO - 	 ROC-AUC: 0.986
2024-10-14 01:52 - INFO - 	 PR-AUC: 0.882
2024-10-14 01:52 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 01:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 01:52 - INFO - 	 Best PR-AUC: 0.896
2024-10-14 01:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 01:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-14 01:52 - INFO - ---------------------------------------------
2024-10-14 02:04 - INFO - ---------------------------------------------
2024-10-14 02:04 - INFO - Epoch: 04 | Time: 11m 29s
2024-10-14 02:04 - INFO - 	 Train Loss: 0.040
2024-10-14 02:04 - INFO - 	 Val. Loss: 0.073
2024-10-14 02:04 - INFO - 	 ROC-AUC: 0.986
2024-10-14 02:04 - INFO - 	 PR-AUC: 0.880
2024-10-14 02:04 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 02:04 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 02:04 - INFO - 	 Best PR-AUC: 0.896
2024-10-14 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-14 02:04 - INFO - ---------------------------------------------
2024-10-14 02:15 - INFO - ---------------------------------------------
2024-10-14 02:15 - INFO - Epoch: 05 | Time: 11m 1s
2024-10-14 02:15 - INFO - 	 Train Loss: 0.037
2024-10-14 02:15 - INFO - 	 Val. Loss: 0.071
2024-10-14 02:15 - INFO - 	 ROC-AUC: 0.986
2024-10-14 02:15 - INFO - 	 PR-AUC: 0.888
2024-10-14 02:15 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 02:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 02:15 - INFO - 	 Best PR-AUC: 0.896
2024-10-14 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-14 02:15 - INFO - ---------------------------------------------
2024-10-14 02:28 - INFO - Fit the preprocessing pipeline
2024-10-14 02:28 - INFO - Training using device: cuda
2024-10-14 02:28 - INFO - Creating generators
2024-10-14 02:28 - INFO - The model has 2,246,929 trainable parameters
2024-10-14 02:28 - INFO - * Model:
2024-10-14 02:28 - INFO - * -----------
2024-10-14 02:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-14 02:28 - INFO - * -----------
2024-10-14 07:56 - INFO - Fit the preprocessing pipeline
2024-10-14 07:56 - INFO - Training using device: cuda
2024-10-14 07:56 - INFO - Creating generators
2024-10-14 07:56 - INFO - The model has 2,246,929 trainable parameters
2024-10-14 07:56 - INFO - * Model:
2024-10-14 07:56 - INFO - * -----------
2024-10-14 07:56 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-14 07:56 - INFO - * -----------
2024-10-14 07:57 - INFO - Fit the preprocessing pipeline
2024-10-14 07:57 - INFO - Training using device: cuda
2024-10-14 07:57 - INFO - Creating generators
2024-10-14 07:57 - INFO - The model has 2,246,929 trainable parameters
2024-10-14 07:57 - INFO - * Model:
2024-10-14 07:57 - INFO - * -----------
2024-10-14 07:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-14 07:57 - INFO - * -----------
2024-10-14 08:06 - INFO - ---------------------------------------------
2024-10-14 08:06 - INFO - Epoch: 01 | Time: 8m 57s
2024-10-14 08:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98684
2024-10-14 08:06 - INFO - 	 Train Loss: 0.046
2024-10-14 08:06 - INFO - 	 Val. Loss: 0.067
2024-10-14 08:06 - INFO - 	 ROC-AUC: 0.987
2024-10-14 08:06 - INFO - 	 PR-AUC: 0.890
2024-10-14 08:06 - INFO - 	 Best Val. Loss: 0.067
2024-10-14 08:06 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 08:06 - INFO - 	 Best PR-AUC: 0.890
2024-10-14 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-14 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-14 08:06 - INFO - ---------------------------------------------
2024-10-14 08:15 - INFO - ---------------------------------------------
2024-10-14 08:15 - INFO - Epoch: 02 | Time: 8m 27s
2024-10-14 08:15 - INFO - 	 Train Loss: 0.044
2024-10-14 08:15 - INFO - 	 Val. Loss: 0.080
2024-10-14 08:15 - INFO - 	 ROC-AUC: 0.985
2024-10-14 08:15 - INFO - 	 PR-AUC: 0.880
2024-10-14 08:15 - INFO - 	 Best Val. Loss: 0.067
2024-10-14 08:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 08:15 - INFO - 	 Best PR-AUC: 0.890
2024-10-14 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-14 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-14 08:15 - INFO - ---------------------------------------------
2024-10-14 08:23 - INFO - ---------------------------------------------
2024-10-14 08:23 - INFO - Epoch: 03 | Time: 8m 27s
2024-10-14 08:23 - INFO - 	 Train Loss: 0.043
2024-10-14 08:23 - INFO - 	 Val. Loss: 0.067
2024-10-14 08:23 - INFO - 	 ROC-AUC: 0.986
2024-10-14 08:23 - INFO - 	 PR-AUC: 0.894
2024-10-14 08:23 - INFO - 	 Best Val. Loss: 0.067
2024-10-14 08:23 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 08:23 - INFO - 	 Best PR-AUC: 0.894
2024-10-14 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-14 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-14 08:23 - INFO - ---------------------------------------------
2024-10-14 08:32 - INFO - ---------------------------------------------
2024-10-14 08:32 - INFO - Epoch: 04 | Time: 8m 26s
2024-10-14 08:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9877
2024-10-14 08:32 - INFO - 	 Train Loss: 0.040
2024-10-14 08:32 - INFO - 	 Val. Loss: 0.064
2024-10-14 08:32 - INFO - 	 ROC-AUC: 0.988
2024-10-14 08:32 - INFO - 	 PR-AUC: 0.898
2024-10-14 08:32 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 08:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 08:32 - INFO - 	 Best PR-AUC: 0.898
2024-10-14 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-14 08:32 - INFO - ---------------------------------------------
2024-10-14 08:40 - INFO - ---------------------------------------------
2024-10-14 08:40 - INFO - Epoch: 05 | Time: 8m 29s
2024-10-14 08:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98804
2024-10-14 08:40 - INFO - 	 Train Loss: 0.039
2024-10-14 08:40 - INFO - 	 Val. Loss: 0.066
2024-10-14 08:40 - INFO - 	 ROC-AUC: 0.988
2024-10-14 08:40 - INFO - 	 PR-AUC: 0.893
2024-10-14 08:40 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 08:40 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 08:40 - INFO - 	 Best PR-AUC: 0.898
2024-10-14 08:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-14 08:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-14 08:40 - INFO - ---------------------------------------------
2024-10-14 08:49 - INFO - ---------------------------------------------
2024-10-14 08:49 - INFO - Epoch: 06 | Time: 8m 32s
2024-10-14 08:49 - INFO - 	 Train Loss: 0.037
2024-10-14 08:49 - INFO - 	 Val. Loss: 0.076
2024-10-14 08:49 - INFO - 	 ROC-AUC: 0.986
2024-10-14 08:49 - INFO - 	 PR-AUC: 0.887
2024-10-14 08:49 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 08:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 08:49 - INFO - 	 Best PR-AUC: 0.898
2024-10-14 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-14 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-14 08:49 - INFO - ---------------------------------------------
2024-10-14 08:57 - INFO - ---------------------------------------------
2024-10-14 08:57 - INFO - Epoch: 07 | Time: 8m 28s
2024-10-14 08:57 - INFO - 	 Train Loss: 0.036
2024-10-14 08:57 - INFO - 	 Val. Loss: 0.076
2024-10-14 08:57 - INFO - 	 ROC-AUC: 0.986
2024-10-14 08:57 - INFO - 	 PR-AUC: 0.882
2024-10-14 08:57 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 08:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 08:57 - INFO - 	 Best PR-AUC: 0.898
2024-10-14 08:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-14 08:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-14 08:57 - INFO - ---------------------------------------------
2024-10-14 09:06 - INFO - ---------------------------------------------
2024-10-14 09:06 - INFO - Epoch: 08 | Time: 8m 24s
2024-10-14 09:06 - INFO - 	 Train Loss: 0.035
2024-10-14 09:06 - INFO - 	 Val. Loss: 0.071
2024-10-14 09:06 - INFO - 	 ROC-AUC: 0.986
2024-10-14 09:06 - INFO - 	 PR-AUC: 0.896
2024-10-14 09:06 - INFO - 	 Best Val. Loss: 0.064
2024-10-14 09:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 09:06 - INFO - 	 Best PR-AUC: 0.898
2024-10-14 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-14 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-14 09:06 - INFO - ---------------------------------------------
2024-10-14 09:16 - INFO - Fit the preprocessing pipeline
2024-10-14 09:16 - INFO - Training using device: cuda
2024-10-14 09:16 - INFO - Creating generators
2024-10-14 09:16 - INFO - The model has 2,246,929 trainable parameters
2024-10-14 09:16 - INFO - * Model:
2024-10-14 09:16 - INFO - * -----------
2024-10-14 09:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-14 09:16 - INFO - * -----------
2024-10-14 09:25 - INFO - ---------------------------------------------
2024-10-14 09:25 - INFO - Epoch: 01 | Time: 8m 41s
2024-10-14 09:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98631
2024-10-14 09:25 - INFO - 	 Train Loss: 0.047
2024-10-14 09:25 - INFO - 	 Val. Loss: 0.075
2024-10-14 09:25 - INFO - 	 ROC-AUC: 0.986
2024-10-14 09:25 - INFO - 	 PR-AUC: 0.876
2024-10-14 09:25 - INFO - 	 Best Val. Loss: 0.075
2024-10-14 09:25 - INFO - 	 Best ROC-AUC: 0.986
2024-10-14 09:25 - INFO - 	 Best PR-AUC: 0.876
2024-10-14 09:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-14 09:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-14 09:25 - INFO - ---------------------------------------------
2024-10-14 09:34 - INFO - ---------------------------------------------
2024-10-14 09:34 - INFO - Epoch: 02 | Time: 8m 44s
2024-10-14 09:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.98706
2024-10-14 09:34 - INFO - 	 Train Loss: 0.043
2024-10-14 09:34 - INFO - 	 Val. Loss: 0.066
2024-10-14 09:34 - INFO - 	 ROC-AUC: 0.987
2024-10-14 09:34 - INFO - 	 PR-AUC: 0.892
2024-10-14 09:34 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 09:34 - INFO - 	 Best ROC-AUC: 0.987
2024-10-14 09:34 - INFO - 	 Best PR-AUC: 0.892
2024-10-14 09:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-14 09:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-14 09:34 - INFO - ---------------------------------------------
2024-10-14 09:44 - INFO - ---------------------------------------------
2024-10-14 09:44 - INFO - Epoch: 03 | Time: 9m 28s
2024-10-14 09:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9881
2024-10-14 09:44 - INFO - 	 Train Loss: 0.041
2024-10-14 09:44 - INFO - 	 Val. Loss: 0.066
2024-10-14 09:44 - INFO - 	 ROC-AUC: 0.988
2024-10-14 09:44 - INFO - 	 PR-AUC: 0.895
2024-10-14 09:44 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 09:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 09:44 - INFO - 	 Best PR-AUC: 0.895
2024-10-14 09:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-14 09:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-14 09:44 - INFO - ---------------------------------------------
2024-10-14 09:53 - INFO - ---------------------------------------------
2024-10-14 09:53 - INFO - Epoch: 04 | Time: 8m 57s
2024-10-14 09:53 - INFO - 	 Train Loss: 0.039
2024-10-14 09:53 - INFO - 	 Val. Loss: 0.069
2024-10-14 09:53 - INFO - 	 ROC-AUC: 0.986
2024-10-14 09:53 - INFO - 	 PR-AUC: 0.889
2024-10-14 09:53 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 09:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 09:53 - INFO - 	 Best PR-AUC: 0.895
2024-10-14 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-14 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-14 09:53 - INFO - ---------------------------------------------
2024-10-14 10:02 - INFO - ---------------------------------------------
2024-10-14 10:02 - INFO - Epoch: 05 | Time: 8m 57s
2024-10-14 10:02 - INFO - 	 Train Loss: 0.039
2024-10-14 10:02 - INFO - 	 Val. Loss: 0.072
2024-10-14 10:02 - INFO - 	 ROC-AUC: 0.986
2024-10-14 10:02 - INFO - 	 PR-AUC: 0.891
2024-10-14 10:02 - INFO - 	 Best Val. Loss: 0.066
2024-10-14 10:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-14 10:02 - INFO - 	 Best PR-AUC: 0.895
2024-10-14 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-14 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-14 10:02 - INFO - ---------------------------------------------
2024-10-22 22:37 - INFO - Fit the preprocessing pipeline
2024-10-22 22:37 - INFO - Training using device: cuda
2024-10-22 22:37 - INFO - Creating generators
2024-10-22 22:37 - INFO - The model has 2,246,929 trainable parameters
2024-10-22 22:37 - INFO - * Model:
2024-10-22 22:37 - INFO - * -----------
2024-10-22 22:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-22 22:37 - INFO - * -----------
2024-10-22 22:45 - INFO - ---------------------------------------------
2024-10-22 22:45 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-22 22:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89625
2024-10-22 22:45 - INFO - 	 Train Loss: 0.046
2024-10-22 22:45 - INFO - 	 Val. Loss: 0.064
2024-10-22 22:45 - INFO - 	 ROC-AUC: 0.987
2024-10-22 22:45 - INFO - 	 PR-AUC: 0.896
2024-10-22 22:45 - INFO - 	 Best Val. Loss: 0.064
2024-10-22 22:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-22 22:45 - INFO - 	 Best PR-AUC: 0.896
2024-10-22 22:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-22 22:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-22 22:45 - INFO - ---------------------------------------------
2024-10-22 22:53 - INFO - ---------------------------------------------
2024-10-22 22:53 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-22 22:53 - INFO - 	 Train Loss: 0.043
2024-10-22 22:53 - INFO - 	 Val. Loss: 0.066
2024-10-22 22:53 - INFO - 	 ROC-AUC: 0.987
2024-10-22 22:53 - INFO - 	 PR-AUC: 0.895
2024-10-22 22:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-22 22:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-22 22:53 - INFO - 	 Best PR-AUC: 0.896
2024-10-22 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-22 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-22 22:53 - INFO - ---------------------------------------------
2024-10-22 23:01 - INFO - ---------------------------------------------
2024-10-22 23:01 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-22 23:01 - INFO - 	 Train Loss: 0.041
2024-10-22 23:01 - INFO - 	 Val. Loss: 0.066
2024-10-22 23:01 - INFO - 	 ROC-AUC: 0.987
2024-10-22 23:01 - INFO - 	 PR-AUC: 0.893
2024-10-22 23:01 - INFO - 	 Best Val. Loss: 0.064
2024-10-22 23:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-22 23:01 - INFO - 	 Best PR-AUC: 0.896
2024-10-22 23:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-22 23:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-22 23:01 - INFO - ---------------------------------------------
2024-10-22 23:09 - INFO - ---------------------------------------------
2024-10-22 23:09 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-22 23:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89687
2024-10-22 23:09 - INFO - 	 Train Loss: 0.040
2024-10-22 23:09 - INFO - 	 Val. Loss: 0.066
2024-10-22 23:09 - INFO - 	 ROC-AUC: 0.987
2024-10-22 23:09 - INFO - 	 PR-AUC: 0.897
2024-10-22 23:09 - INFO - 	 Best Val. Loss: 0.064
2024-10-22 23:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-22 23:09 - INFO - 	 Best PR-AUC: 0.897
2024-10-22 23:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-22 23:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-22 23:09 - INFO - ---------------------------------------------
2024-10-22 23:17 - INFO - ---------------------------------------------
2024-10-22 23:17 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-22 23:17 - INFO - 	 Train Loss: 0.038
2024-10-22 23:17 - INFO - 	 Val. Loss: 0.080
2024-10-22 23:17 - INFO - 	 ROC-AUC: 0.985
2024-10-22 23:17 - INFO - 	 PR-AUC: 0.869
2024-10-22 23:17 - INFO - 	 Best Val. Loss: 0.064
2024-10-22 23:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-22 23:17 - INFO - 	 Best PR-AUC: 0.897
2024-10-22 23:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-22 23:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-22 23:17 - INFO - ---------------------------------------------
2024-10-22 23:25 - INFO - ---------------------------------------------
2024-10-22 23:25 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-22 23:25 - INFO - 	 Train Loss: 0.039
2024-10-22 23:25 - INFO - 	 Val. Loss: 0.069
2024-10-22 23:25 - INFO - 	 ROC-AUC: 0.987
2024-10-22 23:25 - INFO - 	 PR-AUC: 0.891
2024-10-22 23:25 - INFO - 	 Best Val. Loss: 0.064
2024-10-22 23:25 - INFO - 	 Best ROC-AUC: 0.987
2024-10-22 23:25 - INFO - 	 Best PR-AUC: 0.897
2024-10-22 23:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-22 23:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-22 23:25 - INFO - ---------------------------------------------
2024-10-22 23:33 - INFO - ---------------------------------------------
2024-10-22 23:33 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-22 23:33 - INFO - 	 Train Loss: 0.037
2024-10-22 23:33 - INFO - 	 Val. Loss: 0.083
2024-10-22 23:33 - INFO - 	 ROC-AUC: 0.986
2024-10-22 23:33 - INFO - 	 PR-AUC: 0.883
2024-10-22 23:33 - INFO - 	 Best Val. Loss: 0.064
2024-10-22 23:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-22 23:33 - INFO - 	 Best PR-AUC: 0.897
2024-10-22 23:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-22 23:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-22 23:33 - INFO - ---------------------------------------------
2024-10-22 23:44 - INFO - Fit the preprocessing pipeline
2024-10-22 23:44 - INFO - Training using device: cuda
2024-10-22 23:44 - INFO - Creating generators
2024-10-22 23:44 - INFO - The model has 2,246,929 trainable parameters
2024-10-22 23:44 - INFO - * Model:
2024-10-22 23:44 - INFO - * -----------
2024-10-22 23:44 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-22 23:44 - INFO - * -----------
2024-10-22 23:52 - INFO - ---------------------------------------------
2024-10-22 23:52 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-22 23:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88256
2024-10-22 23:52 - INFO - 	 Train Loss: 0.047
2024-10-22 23:52 - INFO - 	 Val. Loss: 0.071
2024-10-22 23:52 - INFO - 	 ROC-AUC: 0.986
2024-10-22 23:52 - INFO - 	 PR-AUC: 0.883
2024-10-22 23:52 - INFO - 	 Best Val. Loss: 0.071
2024-10-22 23:52 - INFO - 	 Best ROC-AUC: 0.986
2024-10-22 23:52 - INFO - 	 Best PR-AUC: 0.883
2024-10-22 23:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-22 23:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-22 23:52 - INFO - ---------------------------------------------
2024-10-23 00:00 - INFO - ---------------------------------------------
2024-10-23 00:00 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-23 00:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89514
2024-10-23 00:00 - INFO - 	 Train Loss: 0.042
2024-10-23 00:00 - INFO - 	 Val. Loss: 0.063
2024-10-23 00:00 - INFO - 	 ROC-AUC: 0.987
2024-10-23 00:00 - INFO - 	 PR-AUC: 0.895
2024-10-23 00:00 - INFO - 	 Best Val. Loss: 0.063
2024-10-23 00:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 00:00 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 00:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 00:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-23 00:00 - INFO - ---------------------------------------------
2024-10-23 00:08 - INFO - ---------------------------------------------
2024-10-23 00:08 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 00:08 - INFO - 	 Train Loss: 0.041
2024-10-23 00:08 - INFO - 	 Val. Loss: 0.068
2024-10-23 00:08 - INFO - 	 ROC-AUC: 0.988
2024-10-23 00:08 - INFO - 	 PR-AUC: 0.892
2024-10-23 00:08 - INFO - 	 Best Val. Loss: 0.063
2024-10-23 00:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 00:08 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 00:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 00:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-23 00:08 - INFO - ---------------------------------------------
2024-10-23 00:16 - INFO - ---------------------------------------------
2024-10-23 00:16 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 00:16 - INFO - 	 Train Loss: 0.039
2024-10-23 00:16 - INFO - 	 Val. Loss: 0.072
2024-10-23 00:16 - INFO - 	 ROC-AUC: 0.986
2024-10-23 00:16 - INFO - 	 PR-AUC: 0.880
2024-10-23 00:16 - INFO - 	 Best Val. Loss: 0.063
2024-10-23 00:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 00:16 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-23 00:16 - INFO - ---------------------------------------------
2024-10-23 00:24 - INFO - ---------------------------------------------
2024-10-23 00:24 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-23 00:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89937
2024-10-23 00:24 - INFO - 	 Train Loss: 0.039
2024-10-23 00:24 - INFO - 	 Val. Loss: 0.064
2024-10-23 00:24 - INFO - 	 ROC-AUC: 0.988
2024-10-23 00:24 - INFO - 	 PR-AUC: 0.899
2024-10-23 00:24 - INFO - 	 Best Val. Loss: 0.063
2024-10-23 00:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 00:24 - INFO - 	 Best PR-AUC: 0.899
2024-10-23 00:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 00:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 00:24 - INFO - ---------------------------------------------
2024-10-23 00:32 - INFO - ---------------------------------------------
2024-10-23 00:32 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-23 00:32 - INFO - 	 Train Loss: 0.037
2024-10-23 00:32 - INFO - 	 Val. Loss: 0.075
2024-10-23 00:32 - INFO - 	 ROC-AUC: 0.987
2024-10-23 00:32 - INFO - 	 PR-AUC: 0.877
2024-10-23 00:32 - INFO - 	 Best Val. Loss: 0.063
2024-10-23 00:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 00:32 - INFO - 	 Best PR-AUC: 0.899
2024-10-23 00:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 00:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 00:32 - INFO - ---------------------------------------------
2024-10-23 00:40 - INFO - ---------------------------------------------
2024-10-23 00:40 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-23 00:40 - INFO - 	 Train Loss: 0.035
2024-10-23 00:40 - INFO - 	 Val. Loss: 0.070
2024-10-23 00:40 - INFO - 	 ROC-AUC: 0.986
2024-10-23 00:40 - INFO - 	 PR-AUC: 0.895
2024-10-23 00:40 - INFO - 	 Best Val. Loss: 0.063
2024-10-23 00:40 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 00:40 - INFO - 	 Best PR-AUC: 0.899
2024-10-23 00:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 00:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 00:40 - INFO - ---------------------------------------------
2024-10-23 00:48 - INFO - ---------------------------------------------
2024-10-23 00:48 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-23 00:48 - INFO - 	 Train Loss: 0.036
2024-10-23 00:48 - INFO - 	 Val. Loss: 0.070
2024-10-23 00:48 - INFO - 	 ROC-AUC: 0.987
2024-10-23 00:48 - INFO - 	 PR-AUC: 0.897
2024-10-23 00:48 - INFO - 	 Best Val. Loss: 0.063
2024-10-23 00:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 00:48 - INFO - 	 Best PR-AUC: 0.899
2024-10-23 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 00:48 - INFO - ---------------------------------------------
2024-10-23 00:58 - INFO - Fit the preprocessing pipeline
2024-10-23 00:58 - INFO - Training using device: cuda
2024-10-23 00:58 - INFO - Creating generators
2024-10-23 00:58 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 00:58 - INFO - * Model:
2024-10-23 00:58 - INFO - * -----------
2024-10-23 00:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 00:58 - INFO - * -----------
2024-10-23 01:06 - INFO - ---------------------------------------------
2024-10-23 01:06 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 01:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88821
2024-10-23 01:06 - INFO - 	 Train Loss: 0.046
2024-10-23 01:06 - INFO - 	 Val. Loss: 0.067
2024-10-23 01:06 - INFO - 	 ROC-AUC: 0.987
2024-10-23 01:06 - INFO - 	 PR-AUC: 0.888
2024-10-23 01:06 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 01:06 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 01:06 - INFO - 	 Best PR-AUC: 0.888
2024-10-23 01:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 01:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 01:06 - INFO - ---------------------------------------------
2024-10-23 01:14 - INFO - ---------------------------------------------
2024-10-23 01:14 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 01:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89452
2024-10-23 01:14 - INFO - 	 Train Loss: 0.045
2024-10-23 01:14 - INFO - 	 Val. Loss: 0.066
2024-10-23 01:14 - INFO - 	 ROC-AUC: 0.987
2024-10-23 01:14 - INFO - 	 PR-AUC: 0.895
2024-10-23 01:14 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 01:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 01:14 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 01:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 01:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-23 01:14 - INFO - ---------------------------------------------
2024-10-23 01:22 - INFO - ---------------------------------------------
2024-10-23 01:22 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 01:22 - INFO - 	 Train Loss: 0.042
2024-10-23 01:22 - INFO - 	 Val. Loss: 0.074
2024-10-23 01:22 - INFO - 	 ROC-AUC: 0.986
2024-10-23 01:22 - INFO - 	 PR-AUC: 0.883
2024-10-23 01:22 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 01:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 01:22 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-23 01:22 - INFO - ---------------------------------------------
2024-10-23 01:30 - INFO - ---------------------------------------------
2024-10-23 01:30 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 01:30 - INFO - 	 Train Loss: 0.039
2024-10-23 01:30 - INFO - 	 Val. Loss: 0.076
2024-10-23 01:30 - INFO - 	 ROC-AUC: 0.987
2024-10-23 01:30 - INFO - 	 PR-AUC: 0.884
2024-10-23 01:30 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 01:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 01:30 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-23 01:30 - INFO - ---------------------------------------------
2024-10-23 01:38 - INFO - ---------------------------------------------
2024-10-23 01:38 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-23 01:38 - INFO - 	 Train Loss: 0.038
2024-10-23 01:38 - INFO - 	 Val. Loss: 0.072
2024-10-23 01:38 - INFO - 	 ROC-AUC: 0.987
2024-10-23 01:38 - INFO - 	 PR-AUC: 0.881
2024-10-23 01:38 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 01:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 01:38 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-23 01:38 - INFO - ---------------------------------------------
2024-10-23 01:49 - INFO - Fit the preprocessing pipeline
2024-10-23 01:49 - INFO - Training using device: cuda
2024-10-23 01:49 - INFO - Creating generators
2024-10-23 01:49 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 01:49 - INFO - * Model:
2024-10-23 01:49 - INFO - * -----------
2024-10-23 01:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 01:49 - INFO - * -----------
2024-10-23 01:57 - INFO - ---------------------------------------------
2024-10-23 01:57 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 01:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89742
2024-10-23 01:57 - INFO - 	 Train Loss: 0.046
2024-10-23 01:57 - INFO - 	 Val. Loss: 0.064
2024-10-23 01:57 - INFO - 	 ROC-AUC: 0.988
2024-10-23 01:57 - INFO - 	 PR-AUC: 0.897
2024-10-23 01:57 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 01:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 01:57 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 01:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 01:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 01:57 - INFO - ---------------------------------------------
2024-10-23 02:05 - INFO - ---------------------------------------------
2024-10-23 02:05 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-23 02:05 - INFO - 	 Train Loss: 0.044
2024-10-23 02:05 - INFO - 	 Val. Loss: 0.077
2024-10-23 02:05 - INFO - 	 ROC-AUC: 0.986
2024-10-23 02:05 - INFO - 	 PR-AUC: 0.887
2024-10-23 02:05 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 02:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 02:05 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 02:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 02:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 02:05 - INFO - ---------------------------------------------
2024-10-23 02:13 - INFO - ---------------------------------------------
2024-10-23 02:13 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 02:13 - INFO - 	 Train Loss: 0.042
2024-10-23 02:13 - INFO - 	 Val. Loss: 0.071
2024-10-23 02:13 - INFO - 	 ROC-AUC: 0.987
2024-10-23 02:13 - INFO - 	 PR-AUC: 0.882
2024-10-23 02:13 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 02:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 02:13 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 02:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 02:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 02:13 - INFO - ---------------------------------------------
2024-10-23 02:21 - INFO - ---------------------------------------------
2024-10-23 02:21 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 02:21 - INFO - 	 Train Loss: 0.039
2024-10-23 02:21 - INFO - 	 Val. Loss: 0.087
2024-10-23 02:21 - INFO - 	 ROC-AUC: 0.986
2024-10-23 02:21 - INFO - 	 PR-AUC: 0.878
2024-10-23 02:21 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 02:21 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 02:21 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 02:21 - INFO - ---------------------------------------------
2024-10-23 02:31 - INFO - Fit the preprocessing pipeline
2024-10-23 02:31 - INFO - Training using device: cuda
2024-10-23 02:31 - INFO - Creating generators
2024-10-23 02:31 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 02:31 - INFO - * Model:
2024-10-23 02:31 - INFO - * -----------
2024-10-23 02:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 02:31 - INFO - * -----------
2024-10-23 02:39 - INFO - ---------------------------------------------
2024-10-23 02:39 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 02:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89037
2024-10-23 02:39 - INFO - 	 Train Loss: 0.046
2024-10-23 02:39 - INFO - 	 Val. Loss: 0.066
2024-10-23 02:39 - INFO - 	 ROC-AUC: 0.987
2024-10-23 02:39 - INFO - 	 PR-AUC: 0.890
2024-10-23 02:39 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 02:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 02:39 - INFO - 	 Best PR-AUC: 0.890
2024-10-23 02:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 02:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 02:39 - INFO - ---------------------------------------------
2024-10-23 02:47 - INFO - ---------------------------------------------
2024-10-23 02:47 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-23 02:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89233
2024-10-23 02:47 - INFO - 	 Train Loss: 0.041
2024-10-23 02:47 - INFO - 	 Val. Loss: 0.072
2024-10-23 02:47 - INFO - 	 ROC-AUC: 0.987
2024-10-23 02:47 - INFO - 	 PR-AUC: 0.892
2024-10-23 02:47 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 02:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 02:47 - INFO - 	 Best PR-AUC: 0.892
2024-10-23 02:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 02:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-23 02:47 - INFO - ---------------------------------------------
2024-10-23 02:55 - INFO - ---------------------------------------------
2024-10-23 02:55 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 02:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89279
2024-10-23 02:55 - INFO - 	 Train Loss: 0.040
2024-10-23 02:55 - INFO - 	 Val. Loss: 0.069
2024-10-23 02:55 - INFO - 	 ROC-AUC: 0.986
2024-10-23 02:55 - INFO - 	 PR-AUC: 0.893
2024-10-23 02:55 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 02:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 02:55 - INFO - 	 Best PR-AUC: 0.893
2024-10-23 02:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 02:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 02:55 - INFO - ---------------------------------------------
2024-10-23 03:03 - INFO - ---------------------------------------------
2024-10-23 03:03 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 03:03 - INFO - 	 Train Loss: 0.041
2024-10-23 03:03 - INFO - 	 Val. Loss: 0.065
2024-10-23 03:03 - INFO - 	 ROC-AUC: 0.987
2024-10-23 03:03 - INFO - 	 PR-AUC: 0.890
2024-10-23 03:03 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 03:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 03:03 - INFO - 	 Best PR-AUC: 0.893
2024-10-23 03:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 03:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 03:03 - INFO - ---------------------------------------------
2024-10-23 03:11 - INFO - ---------------------------------------------
2024-10-23 03:11 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-23 03:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90318
2024-10-23 03:11 - INFO - 	 Train Loss: 0.037
2024-10-23 03:11 - INFO - 	 Val. Loss: 0.068
2024-10-23 03:11 - INFO - 	 ROC-AUC: 0.986
2024-10-23 03:11 - INFO - 	 PR-AUC: 0.903
2024-10-23 03:11 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 03:11 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 03:11 - INFO - 	 Best PR-AUC: 0.903
2024-10-23 03:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 03:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-23 03:11 - INFO - ---------------------------------------------
2024-10-23 03:19 - INFO - ---------------------------------------------
2024-10-23 03:19 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-23 03:19 - INFO - 	 Train Loss: 0.038
2024-10-23 03:19 - INFO - 	 Val. Loss: 0.070
2024-10-23 03:19 - INFO - 	 ROC-AUC: 0.986
2024-10-23 03:19 - INFO - 	 PR-AUC: 0.881
2024-10-23 03:19 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 03:19 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 03:19 - INFO - 	 Best PR-AUC: 0.903
2024-10-23 03:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 03:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-23 03:19 - INFO - ---------------------------------------------
2024-10-23 03:27 - INFO - ---------------------------------------------
2024-10-23 03:27 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-23 03:27 - INFO - 	 Train Loss: 0.037
2024-10-23 03:27 - INFO - 	 Val. Loss: 0.064
2024-10-23 03:27 - INFO - 	 ROC-AUC: 0.987
2024-10-23 03:27 - INFO - 	 PR-AUC: 0.900
2024-10-23 03:27 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 03:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 03:27 - INFO - 	 Best PR-AUC: 0.903
2024-10-23 03:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 03:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-23 03:27 - INFO - ---------------------------------------------
2024-10-23 03:35 - INFO - ---------------------------------------------
2024-10-23 03:35 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-23 03:35 - INFO - 	 Train Loss: 0.036
2024-10-23 03:35 - INFO - 	 Val. Loss: 0.073
2024-10-23 03:35 - INFO - 	 ROC-AUC: 0.985
2024-10-23 03:35 - INFO - 	 PR-AUC: 0.886
2024-10-23 03:35 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 03:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 03:35 - INFO - 	 Best PR-AUC: 0.903
2024-10-23 03:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 03:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-23 03:35 - INFO - ---------------------------------------------
2024-10-23 03:46 - INFO - Fit the preprocessing pipeline
2024-10-23 03:46 - INFO - Training using device: cuda
2024-10-23 03:46 - INFO - Creating generators
2024-10-23 03:46 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 03:46 - INFO - * Model:
2024-10-23 03:46 - INFO - * -----------
2024-10-23 03:46 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 03:46 - INFO - * -----------
2024-10-23 03:54 - INFO - ---------------------------------------------
2024-10-23 03:54 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 03:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88392
2024-10-23 03:54 - INFO - 	 Train Loss: 0.046
2024-10-23 03:54 - INFO - 	 Val. Loss: 0.069
2024-10-23 03:54 - INFO - 	 ROC-AUC: 0.987
2024-10-23 03:54 - INFO - 	 PR-AUC: 0.884
2024-10-23 03:54 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 03:54 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 03:54 - INFO - 	 Best PR-AUC: 0.884
2024-10-23 03:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 03:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 03:54 - INFO - ---------------------------------------------
2024-10-23 04:02 - INFO - ---------------------------------------------
2024-10-23 04:02 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-23 04:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88858
2024-10-23 04:02 - INFO - 	 Train Loss: 0.044
2024-10-23 04:02 - INFO - 	 Val. Loss: 0.069
2024-10-23 04:02 - INFO - 	 ROC-AUC: 0.988
2024-10-23 04:02 - INFO - 	 PR-AUC: 0.889
2024-10-23 04:02 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 04:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 04:02 - INFO - 	 Best PR-AUC: 0.889
2024-10-23 04:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-23 04:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.911
2024-10-23 04:02 - INFO - ---------------------------------------------
2024-10-23 04:10 - INFO - ---------------------------------------------
2024-10-23 04:10 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 04:10 - INFO - 	 Train Loss: 0.042
2024-10-23 04:10 - INFO - 	 Val. Loss: 0.069
2024-10-23 04:10 - INFO - 	 ROC-AUC: 0.986
2024-10-23 04:10 - INFO - 	 PR-AUC: 0.883
2024-10-23 04:10 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 04:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 04:10 - INFO - 	 Best PR-AUC: 0.889
2024-10-23 04:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-23 04:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.911
2024-10-23 04:10 - INFO - ---------------------------------------------
2024-10-23 04:18 - INFO - ---------------------------------------------
2024-10-23 04:18 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 04:18 - INFO - 	 Train Loss: 0.040
2024-10-23 04:18 - INFO - 	 Val. Loss: 0.076
2024-10-23 04:18 - INFO - 	 ROC-AUC: 0.984
2024-10-23 04:18 - INFO - 	 PR-AUC: 0.876
2024-10-23 04:18 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 04:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 04:18 - INFO - 	 Best PR-AUC: 0.889
2024-10-23 04:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-23 04:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.911
2024-10-23 04:18 - INFO - ---------------------------------------------
2024-10-23 04:26 - INFO - ---------------------------------------------
2024-10-23 04:26 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-23 04:26 - INFO - 	 Train Loss: 0.038
2024-10-23 04:26 - INFO - 	 Val. Loss: 0.070
2024-10-23 04:26 - INFO - 	 ROC-AUC: 0.986
2024-10-23 04:26 - INFO - 	 PR-AUC: 0.884
2024-10-23 04:26 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 04:26 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 04:26 - INFO - 	 Best PR-AUC: 0.889
2024-10-23 04:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-23 04:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.911
2024-10-23 04:26 - INFO - ---------------------------------------------
2024-10-23 04:36 - INFO - Fit the preprocessing pipeline
2024-10-23 04:36 - INFO - Training using device: cuda
2024-10-23 04:36 - INFO - Creating generators
2024-10-23 04:36 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 04:36 - INFO - * Model:
2024-10-23 04:36 - INFO - * -----------
2024-10-23 04:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 04:36 - INFO - * -----------
2024-10-23 04:44 - INFO - ---------------------------------------------
2024-10-23 04:44 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 04:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89631
2024-10-23 04:44 - INFO - 	 Train Loss: 0.046
2024-10-23 04:44 - INFO - 	 Val. Loss: 0.064
2024-10-23 04:44 - INFO - 	 ROC-AUC: 0.987
2024-10-23 04:44 - INFO - 	 PR-AUC: 0.896
2024-10-23 04:44 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 04:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 04:44 - INFO - 	 Best PR-AUC: 0.896
2024-10-23 04:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 04:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 04:44 - INFO - ---------------------------------------------
2024-10-23 04:52 - INFO - ---------------------------------------------
2024-10-23 04:52 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-23 04:52 - INFO - 	 Train Loss: 0.043
2024-10-23 04:52 - INFO - 	 Val. Loss: 0.070
2024-10-23 04:52 - INFO - 	 ROC-AUC: 0.986
2024-10-23 04:52 - INFO - 	 PR-AUC: 0.888
2024-10-23 04:52 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 04:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 04:52 - INFO - 	 Best PR-AUC: 0.896
2024-10-23 04:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 04:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 04:52 - INFO - ---------------------------------------------
2024-10-23 05:00 - INFO - ---------------------------------------------
2024-10-23 05:00 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-23 05:00 - INFO - 	 Train Loss: 0.041
2024-10-23 05:00 - INFO - 	 Val. Loss: 0.073
2024-10-23 05:00 - INFO - 	 ROC-AUC: 0.985
2024-10-23 05:00 - INFO - 	 PR-AUC: 0.883
2024-10-23 05:00 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 05:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 05:00 - INFO - 	 Best PR-AUC: 0.896
2024-10-23 05:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 05:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 05:00 - INFO - ---------------------------------------------
2024-10-23 05:08 - INFO - ---------------------------------------------
2024-10-23 05:08 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-23 05:08 - INFO - 	 Train Loss: 0.042
2024-10-23 05:08 - INFO - 	 Val. Loss: 0.075
2024-10-23 05:08 - INFO - 	 ROC-AUC: 0.986
2024-10-23 05:08 - INFO - 	 PR-AUC: 0.884
2024-10-23 05:08 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 05:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 05:08 - INFO - 	 Best PR-AUC: 0.896
2024-10-23 05:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 05:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 05:08 - INFO - ---------------------------------------------
2024-10-23 05:19 - INFO - Fit the preprocessing pipeline
2024-10-23 05:19 - INFO - Training using device: cuda
2024-10-23 05:19 - INFO - Creating generators
2024-10-23 05:19 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 05:19 - INFO - * Model:
2024-10-23 05:19 - INFO - * -----------
2024-10-23 05:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 05:19 - INFO - * -----------
2024-10-23 05:27 - INFO - ---------------------------------------------
2024-10-23 05:27 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 05:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89338
2024-10-23 05:27 - INFO - 	 Train Loss: 0.047
2024-10-23 05:27 - INFO - 	 Val. Loss: 0.066
2024-10-23 05:27 - INFO - 	 ROC-AUC: 0.987
2024-10-23 05:27 - INFO - 	 PR-AUC: 0.893
2024-10-23 05:27 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 05:27 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 05:27 - INFO - 	 Best PR-AUC: 0.893
2024-10-23 05:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 05:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 05:27 - INFO - ---------------------------------------------
2024-10-23 05:35 - INFO - ---------------------------------------------
2024-10-23 05:35 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 05:35 - INFO - 	 Train Loss: 0.042
2024-10-23 05:35 - INFO - 	 Val. Loss: 0.081
2024-10-23 05:35 - INFO - 	 ROC-AUC: 0.986
2024-10-23 05:35 - INFO - 	 PR-AUC: 0.870
2024-10-23 05:35 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 05:35 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 05:35 - INFO - 	 Best PR-AUC: 0.893
2024-10-23 05:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 05:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 05:35 - INFO - ---------------------------------------------
2024-10-23 05:43 - INFO - ---------------------------------------------
2024-10-23 05:43 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-23 05:43 - INFO - 	 Train Loss: 0.040
2024-10-23 05:43 - INFO - 	 Val. Loss: 0.078
2024-10-23 05:43 - INFO - 	 ROC-AUC: 0.985
2024-10-23 05:43 - INFO - 	 PR-AUC: 0.875
2024-10-23 05:43 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 05:43 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 05:43 - INFO - 	 Best PR-AUC: 0.893
2024-10-23 05:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 05:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 05:43 - INFO - ---------------------------------------------
2024-10-23 05:51 - INFO - ---------------------------------------------
2024-10-23 05:51 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 05:51 - INFO - 	 Train Loss: 0.039
2024-10-23 05:51 - INFO - 	 Val. Loss: 0.073
2024-10-23 05:51 - INFO - 	 ROC-AUC: 0.986
2024-10-23 05:51 - INFO - 	 PR-AUC: 0.882
2024-10-23 05:51 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 05:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 05:51 - INFO - 	 Best PR-AUC: 0.893
2024-10-23 05:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 05:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 05:51 - INFO - ---------------------------------------------
2024-10-23 06:01 - INFO - Fit the preprocessing pipeline
2024-10-23 06:01 - INFO - Training using device: cuda
2024-10-23 06:01 - INFO - Creating generators
2024-10-23 06:01 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 06:01 - INFO - * Model:
2024-10-23 06:01 - INFO - * -----------
2024-10-23 06:01 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 06:01 - INFO - * -----------
2024-10-23 06:09 - INFO - ---------------------------------------------
2024-10-23 06:09 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 06:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88231
2024-10-23 06:09 - INFO - 	 Train Loss: 0.047
2024-10-23 06:09 - INFO - 	 Val. Loss: 0.069
2024-10-23 06:09 - INFO - 	 ROC-AUC: 0.986
2024-10-23 06:09 - INFO - 	 PR-AUC: 0.882
2024-10-23 06:09 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 06:09 - INFO - 	 Best ROC-AUC: 0.986
2024-10-23 06:09 - INFO - 	 Best PR-AUC: 0.882
2024-10-23 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-23 06:09 - INFO - ---------------------------------------------
2024-10-23 06:17 - INFO - ---------------------------------------------
2024-10-23 06:17 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 06:17 - INFO - 	 Train Loss: 0.043
2024-10-23 06:17 - INFO - 	 Val. Loss: 0.079
2024-10-23 06:17 - INFO - 	 ROC-AUC: 0.987
2024-10-23 06:17 - INFO - 	 PR-AUC: 0.879
2024-10-23 06:17 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 06:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 06:17 - INFO - 	 Best PR-AUC: 0.882
2024-10-23 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-23 06:17 - INFO - ---------------------------------------------
2024-10-23 06:25 - INFO - ---------------------------------------------
2024-10-23 06:25 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-23 06:25 - INFO - 	 Train Loss: 0.041
2024-10-23 06:25 - INFO - 	 Val. Loss: 0.079
2024-10-23 06:25 - INFO - 	 ROC-AUC: 0.985
2024-10-23 06:25 - INFO - 	 PR-AUC: 0.877
2024-10-23 06:25 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 06:25 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 06:25 - INFO - 	 Best PR-AUC: 0.882
2024-10-23 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-23 06:25 - INFO - ---------------------------------------------
2024-10-23 06:33 - INFO - ---------------------------------------------
2024-10-23 06:33 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 06:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88537
2024-10-23 06:33 - INFO - 	 Train Loss: 0.039
2024-10-23 06:33 - INFO - 	 Val. Loss: 0.071
2024-10-23 06:33 - INFO - 	 ROC-AUC: 0.987
2024-10-23 06:33 - INFO - 	 PR-AUC: 0.885
2024-10-23 06:33 - INFO - 	 Best Val. Loss: 0.069
2024-10-23 06:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 06:33 - INFO - 	 Best PR-AUC: 0.885
2024-10-23 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-23 06:33 - INFO - ---------------------------------------------
2024-10-23 06:41 - INFO - ---------------------------------------------
2024-10-23 06:41 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-23 06:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89768
2024-10-23 06:41 - INFO - 	 Train Loss: 0.039
2024-10-23 06:41 - INFO - 	 Val. Loss: 0.067
2024-10-23 06:41 - INFO - 	 ROC-AUC: 0.986
2024-10-23 06:41 - INFO - 	 PR-AUC: 0.898
2024-10-23 06:41 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 06:41 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 06:41 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 06:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 06:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 06:41 - INFO - ---------------------------------------------
2024-10-23 06:49 - INFO - ---------------------------------------------
2024-10-23 06:49 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-23 06:49 - INFO - 	 Train Loss: 0.036
2024-10-23 06:49 - INFO - 	 Val. Loss: 0.066
2024-10-23 06:49 - INFO - 	 ROC-AUC: 0.988
2024-10-23 06:49 - INFO - 	 PR-AUC: 0.893
2024-10-23 06:49 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 06:49 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 06:49 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 06:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-23 06:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 06:49 - INFO - ---------------------------------------------
2024-10-23 06:57 - INFO - ---------------------------------------------
2024-10-23 06:57 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-23 06:57 - INFO - 	 Train Loss: 0.035
2024-10-23 06:57 - INFO - 	 Val. Loss: 0.070
2024-10-23 06:57 - INFO - 	 ROC-AUC: 0.988
2024-10-23 06:57 - INFO - 	 PR-AUC: 0.881
2024-10-23 06:57 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 06:57 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 06:57 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 06:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 06:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 06:57 - INFO - ---------------------------------------------
2024-10-23 07:05 - INFO - ---------------------------------------------
2024-10-23 07:05 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-23 07:05 - INFO - 	 Train Loss: 0.035
2024-10-23 07:05 - INFO - 	 Val. Loss: 0.074
2024-10-23 07:05 - INFO - 	 ROC-AUC: 0.986
2024-10-23 07:05 - INFO - 	 PR-AUC: 0.880
2024-10-23 07:05 - INFO - 	 Best Val. Loss: 0.066
2024-10-23 07:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 07:05 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 07:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 07:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 07:05 - INFO - ---------------------------------------------
2024-10-23 07:16 - INFO - Fit the preprocessing pipeline
2024-10-23 07:16 - INFO - Training using device: cuda
2024-10-23 07:16 - INFO - Creating generators
2024-10-23 07:16 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 07:16 - INFO - * Model:
2024-10-23 07:16 - INFO - * -----------
2024-10-23 07:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 07:16 - INFO - * -----------
2024-10-23 07:24 - INFO - ---------------------------------------------
2024-10-23 07:24 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-23 07:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88751
2024-10-23 07:24 - INFO - 	 Train Loss: 0.046
2024-10-23 07:24 - INFO - 	 Val. Loss: 0.070
2024-10-23 07:24 - INFO - 	 ROC-AUC: 0.986
2024-10-23 07:24 - INFO - 	 PR-AUC: 0.888
2024-10-23 07:24 - INFO - 	 Best Val. Loss: 0.070
2024-10-23 07:24 - INFO - 	 Best ROC-AUC: 0.986
2024-10-23 07:24 - INFO - 	 Best PR-AUC: 0.888
2024-10-23 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 07:24 - INFO - ---------------------------------------------
2024-10-23 07:32 - INFO - ---------------------------------------------
2024-10-23 07:32 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 07:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89748
2024-10-23 07:32 - INFO - 	 Train Loss: 0.044
2024-10-23 07:32 - INFO - 	 Val. Loss: 0.065
2024-10-23 07:32 - INFO - 	 ROC-AUC: 0.988
2024-10-23 07:32 - INFO - 	 PR-AUC: 0.897
2024-10-23 07:32 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 07:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 07:32 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 07:32 - INFO - ---------------------------------------------
2024-10-23 07:40 - INFO - ---------------------------------------------
2024-10-23 07:40 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 07:40 - INFO - 	 Train Loss: 0.041
2024-10-23 07:40 - INFO - 	 Val. Loss: 0.068
2024-10-23 07:40 - INFO - 	 ROC-AUC: 0.986
2024-10-23 07:40 - INFO - 	 PR-AUC: 0.887
2024-10-23 07:40 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 07:40 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 07:40 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 07:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 07:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 07:40 - INFO - ---------------------------------------------
2024-10-23 07:48 - INFO - ---------------------------------------------
2024-10-23 07:48 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 07:48 - INFO - 	 Train Loss: 0.040
2024-10-23 07:48 - INFO - 	 Val. Loss: 0.075
2024-10-23 07:48 - INFO - 	 ROC-AUC: 0.986
2024-10-23 07:48 - INFO - 	 PR-AUC: 0.880
2024-10-23 07:48 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 07:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 07:48 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 07:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 07:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 07:48 - INFO - ---------------------------------------------
2024-10-23 07:56 - INFO - ---------------------------------------------
2024-10-23 07:56 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-23 07:56 - INFO - 	 Train Loss: 0.038
2024-10-23 07:56 - INFO - 	 Val. Loss: 0.074
2024-10-23 07:56 - INFO - 	 ROC-AUC: 0.985
2024-10-23 07:56 - INFO - 	 PR-AUC: 0.882
2024-10-23 07:56 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 07:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 07:56 - INFO - 	 Best PR-AUC: 0.897
2024-10-23 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 07:56 - INFO - ---------------------------------------------
2024-10-23 08:06 - INFO - Fit the preprocessing pipeline
2024-10-23 08:06 - INFO - Training using device: cuda
2024-10-23 08:06 - INFO - Creating generators
2024-10-23 08:06 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 08:06 - INFO - * Model:
2024-10-23 08:06 - INFO - * -----------
2024-10-23 08:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 08:06 - INFO - * -----------
2024-10-23 08:14 - INFO - ---------------------------------------------
2024-10-23 08:14 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 08:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89377
2024-10-23 08:14 - INFO - 	 Train Loss: 0.047
2024-10-23 08:14 - INFO - 	 Val. Loss: 0.064
2024-10-23 08:14 - INFO - 	 ROC-AUC: 0.988
2024-10-23 08:14 - INFO - 	 PR-AUC: 0.894
2024-10-23 08:14 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 08:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 08:14 - INFO - 	 Best PR-AUC: 0.894
2024-10-23 08:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 08:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 08:14 - INFO - ---------------------------------------------
2024-10-23 08:22 - INFO - ---------------------------------------------
2024-10-23 08:22 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 08:22 - INFO - 	 Train Loss: 0.042
2024-10-23 08:22 - INFO - 	 Val. Loss: 0.071
2024-10-23 08:22 - INFO - 	 ROC-AUC: 0.985
2024-10-23 08:22 - INFO - 	 PR-AUC: 0.883
2024-10-23 08:22 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 08:22 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 08:22 - INFO - 	 Best PR-AUC: 0.894
2024-10-23 08:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 08:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 08:22 - INFO - ---------------------------------------------
2024-10-23 08:30 - INFO - ---------------------------------------------
2024-10-23 08:30 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-23 08:30 - INFO - 	 Train Loss: 0.042
2024-10-23 08:30 - INFO - 	 Val. Loss: 0.069
2024-10-23 08:30 - INFO - 	 ROC-AUC: 0.986
2024-10-23 08:30 - INFO - 	 PR-AUC: 0.888
2024-10-23 08:30 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 08:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 08:30 - INFO - 	 Best PR-AUC: 0.894
2024-10-23 08:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 08:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 08:30 - INFO - ---------------------------------------------
2024-10-23 08:38 - INFO - ---------------------------------------------
2024-10-23 08:38 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 08:38 - INFO - 	 Train Loss: 0.040
2024-10-23 08:38 - INFO - 	 Val. Loss: 0.066
2024-10-23 08:38 - INFO - 	 ROC-AUC: 0.987
2024-10-23 08:38 - INFO - 	 PR-AUC: 0.888
2024-10-23 08:38 - INFO - 	 Best Val. Loss: 0.064
2024-10-23 08:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-23 08:38 - INFO - 	 Best PR-AUC: 0.894
2024-10-23 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-10-23 08:38 - INFO - ---------------------------------------------
2024-10-23 08:49 - INFO - Fit the preprocessing pipeline
2024-10-23 08:49 - INFO - Training using device: cuda
2024-10-23 08:49 - INFO - Creating generators
2024-10-23 08:49 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 08:49 - INFO - * Model:
2024-10-23 08:49 - INFO - * -----------
2024-10-23 08:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 08:49 - INFO - * -----------
2024-10-23 08:57 - INFO - ---------------------------------------------
2024-10-23 08:57 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 08:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89065
2024-10-23 08:57 - INFO - 	 Train Loss: 0.046
2024-10-23 08:57 - INFO - 	 Val. Loss: 0.067
2024-10-23 08:57 - INFO - 	 ROC-AUC: 0.987
2024-10-23 08:57 - INFO - 	 PR-AUC: 0.891
2024-10-23 08:57 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 08:57 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 08:57 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 08:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 08:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 08:57 - INFO - ---------------------------------------------
2024-10-23 09:05 - INFO - ---------------------------------------------
2024-10-23 09:05 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 09:05 - INFO - 	 Train Loss: 0.044
2024-10-23 09:05 - INFO - 	 Val. Loss: 0.071
2024-10-23 09:05 - INFO - 	 ROC-AUC: 0.985
2024-10-23 09:05 - INFO - 	 PR-AUC: 0.887
2024-10-23 09:05 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 09:05 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 09:05 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 09:05 - INFO - ---------------------------------------------
2024-10-23 09:13 - INFO - ---------------------------------------------
2024-10-23 09:13 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 09:13 - INFO - 	 Train Loss: 0.041
2024-10-23 09:13 - INFO - 	 Val. Loss: 0.068
2024-10-23 09:13 - INFO - 	 ROC-AUC: 0.987
2024-10-23 09:13 - INFO - 	 PR-AUC: 0.884
2024-10-23 09:13 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 09:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 09:13 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 09:13 - INFO - ---------------------------------------------
2024-10-23 09:21 - INFO - ---------------------------------------------
2024-10-23 09:21 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-23 09:21 - INFO - 	 Train Loss: 0.040
2024-10-23 09:21 - INFO - 	 Val. Loss: 0.073
2024-10-23 09:21 - INFO - 	 ROC-AUC: 0.986
2024-10-23 09:21 - INFO - 	 PR-AUC: 0.882
2024-10-23 09:21 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 09:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 09:21 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 09:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 09:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 09:21 - INFO - ---------------------------------------------
2024-10-23 09:31 - INFO - Fit the preprocessing pipeline
2024-10-23 09:31 - INFO - Training using device: cuda
2024-10-23 09:31 - INFO - Creating generators
2024-10-23 09:31 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 09:31 - INFO - * Model:
2024-10-23 09:31 - INFO - * -----------
2024-10-23 09:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 09:31 - INFO - * -----------
2024-10-23 09:39 - INFO - ---------------------------------------------
2024-10-23 09:39 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-23 09:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89099
2024-10-23 09:39 - INFO - 	 Train Loss: 0.046
2024-10-23 09:39 - INFO - 	 Val. Loss: 0.067
2024-10-23 09:39 - INFO - 	 ROC-AUC: 0.987
2024-10-23 09:39 - INFO - 	 PR-AUC: 0.891
2024-10-23 09:39 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 09:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 09:39 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 09:39 - INFO - ---------------------------------------------
2024-10-23 09:47 - INFO - ---------------------------------------------
2024-10-23 09:47 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 09:47 - INFO - 	 Train Loss: 0.042
2024-10-23 09:47 - INFO - 	 Val. Loss: 0.077
2024-10-23 09:47 - INFO - 	 ROC-AUC: 0.987
2024-10-23 09:47 - INFO - 	 PR-AUC: 0.879
2024-10-23 09:47 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 09:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 09:47 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 09:47 - INFO - ---------------------------------------------
2024-10-23 09:55 - INFO - ---------------------------------------------
2024-10-23 09:55 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-23 09:55 - INFO - 	 Train Loss: 0.043
2024-10-23 09:55 - INFO - 	 Val. Loss: 0.073
2024-10-23 09:55 - INFO - 	 ROC-AUC: 0.986
2024-10-23 09:55 - INFO - 	 PR-AUC: 0.882
2024-10-23 09:55 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 09:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 09:55 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 09:55 - INFO - ---------------------------------------------
2024-10-23 10:03 - INFO - ---------------------------------------------
2024-10-23 10:03 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-23 10:03 - INFO - 	 Train Loss: 0.040
2024-10-23 10:03 - INFO - 	 Val. Loss: 0.073
2024-10-23 10:03 - INFO - 	 ROC-AUC: 0.987
2024-10-23 10:03 - INFO - 	 PR-AUC: 0.877
2024-10-23 10:03 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 10:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 10:03 - INFO - 	 Best PR-AUC: 0.891
2024-10-23 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-23 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-23 10:03 - INFO - ---------------------------------------------
2024-10-23 10:14 - INFO - Fit the preprocessing pipeline
2024-10-23 10:14 - INFO - Training using device: cuda
2024-10-23 10:14 - INFO - Creating generators
2024-10-23 10:14 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 10:14 - INFO - * Model:
2024-10-23 10:14 - INFO - * -----------
2024-10-23 10:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 10:14 - INFO - * -----------
2024-10-23 10:22 - INFO - ---------------------------------------------
2024-10-23 10:22 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 10:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8717
2024-10-23 10:22 - INFO - 	 Train Loss: 0.046
2024-10-23 10:22 - INFO - 	 Val. Loss: 0.077
2024-10-23 10:22 - INFO - 	 ROC-AUC: 0.986
2024-10-23 10:22 - INFO - 	 PR-AUC: 0.872
2024-10-23 10:22 - INFO - 	 Best Val. Loss: 0.077
2024-10-23 10:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-23 10:22 - INFO - 	 Best PR-AUC: 0.872
2024-10-23 10:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 10:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-23 10:22 - INFO - ---------------------------------------------
2024-10-23 10:30 - INFO - ---------------------------------------------
2024-10-23 10:30 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 10:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88483
2024-10-23 10:30 - INFO - 	 Train Loss: 0.044
2024-10-23 10:30 - INFO - 	 Val. Loss: 0.068
2024-10-23 10:30 - INFO - 	 ROC-AUC: 0.987
2024-10-23 10:30 - INFO - 	 PR-AUC: 0.885
2024-10-23 10:30 - INFO - 	 Best Val. Loss: 0.068
2024-10-23 10:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 10:30 - INFO - 	 Best PR-AUC: 0.885
2024-10-23 10:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 10:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-23 10:30 - INFO - ---------------------------------------------
2024-10-23 10:38 - INFO - ---------------------------------------------
2024-10-23 10:38 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-23 10:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88698
2024-10-23 10:38 - INFO - 	 Train Loss: 0.042
2024-10-23 10:38 - INFO - 	 Val. Loss: 0.069
2024-10-23 10:38 - INFO - 	 ROC-AUC: 0.986
2024-10-23 10:38 - INFO - 	 PR-AUC: 0.887
2024-10-23 10:38 - INFO - 	 Best Val. Loss: 0.068
2024-10-23 10:38 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 10:38 - INFO - 	 Best PR-AUC: 0.887
2024-10-23 10:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 10:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 10:38 - INFO - ---------------------------------------------
2024-10-23 10:46 - INFO - ---------------------------------------------
2024-10-23 10:46 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-23 10:46 - INFO - 	 Train Loss: 0.041
2024-10-23 10:46 - INFO - 	 Val. Loss: 0.073
2024-10-23 10:46 - INFO - 	 ROC-AUC: 0.985
2024-10-23 10:46 - INFO - 	 PR-AUC: 0.868
2024-10-23 10:46 - INFO - 	 Best Val. Loss: 0.068
2024-10-23 10:46 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 10:46 - INFO - 	 Best PR-AUC: 0.887
2024-10-23 10:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 10:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 10:46 - INFO - ---------------------------------------------
2024-10-23 10:54 - INFO - ---------------------------------------------
2024-10-23 10:54 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-23 10:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8902
2024-10-23 10:54 - INFO - 	 Train Loss: 0.039
2024-10-23 10:54 - INFO - 	 Val. Loss: 0.067
2024-10-23 10:54 - INFO - 	 ROC-AUC: 0.987
2024-10-23 10:54 - INFO - 	 PR-AUC: 0.890
2024-10-23 10:54 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 10:54 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 10:54 - INFO - 	 Best PR-AUC: 0.890
2024-10-23 10:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 10:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-23 10:54 - INFO - ---------------------------------------------
2024-10-23 11:02 - INFO - ---------------------------------------------
2024-10-23 11:02 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-23 11:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89842
2024-10-23 11:02 - INFO - 	 Train Loss: 0.038
2024-10-23 11:02 - INFO - 	 Val. Loss: 0.067
2024-10-23 11:02 - INFO - 	 ROC-AUC: 0.987
2024-10-23 11:02 - INFO - 	 PR-AUC: 0.898
2024-10-23 11:02 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 11:02 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 11:02 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 11:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 11:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 11:02 - INFO - ---------------------------------------------
2024-10-23 11:10 - INFO - ---------------------------------------------
2024-10-23 11:10 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-23 11:10 - INFO - 	 Train Loss: 0.036
2024-10-23 11:10 - INFO - 	 Val. Loss: 0.072
2024-10-23 11:10 - INFO - 	 ROC-AUC: 0.985
2024-10-23 11:10 - INFO - 	 PR-AUC: 0.881
2024-10-23 11:10 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 11:10 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 11:10 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 11:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 11:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 11:10 - INFO - ---------------------------------------------
2024-10-23 11:18 - INFO - ---------------------------------------------
2024-10-23 11:18 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-23 11:18 - INFO - 	 Train Loss: 0.036
2024-10-23 11:18 - INFO - 	 Val. Loss: 0.077
2024-10-23 11:18 - INFO - 	 ROC-AUC: 0.986
2024-10-23 11:18 - INFO - 	 PR-AUC: 0.885
2024-10-23 11:18 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 11:18 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 11:18 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 11:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 11:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 11:18 - INFO - ---------------------------------------------
2024-10-23 11:26 - INFO - ---------------------------------------------
2024-10-23 11:26 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-23 11:26 - INFO - 	 Train Loss: 0.034
2024-10-23 11:26 - INFO - 	 Val. Loss: 0.070
2024-10-23 11:26 - INFO - 	 ROC-AUC: 0.987
2024-10-23 11:26 - INFO - 	 PR-AUC: 0.890
2024-10-23 11:26 - INFO - 	 Best Val. Loss: 0.067
2024-10-23 11:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 11:26 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-23 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 11:26 - INFO - ---------------------------------------------
2024-10-23 11:36 - INFO - Fit the preprocessing pipeline
2024-10-23 11:36 - INFO - Training using device: cuda
2024-10-23 11:36 - INFO - Creating generators
2024-10-23 11:36 - INFO - The model has 2,246,929 trainable parameters
2024-10-23 11:36 - INFO - * Model:
2024-10-23 11:36 - INFO - * -----------
2024-10-23 11:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-23 11:36 - INFO - * -----------
2024-10-23 11:44 - INFO - ---------------------------------------------
2024-10-23 11:44 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-23 11:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88894
2024-10-23 11:44 - INFO - 	 Train Loss: 0.046
2024-10-23 11:44 - INFO - 	 Val. Loss: 0.065
2024-10-23 11:44 - INFO - 	 ROC-AUC: 0.987
2024-10-23 11:44 - INFO - 	 PR-AUC: 0.889
2024-10-23 11:44 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 11:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 11:44 - INFO - 	 Best PR-AUC: 0.889
2024-10-23 11:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 11:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 11:44 - INFO - ---------------------------------------------
2024-10-23 11:52 - INFO - ---------------------------------------------
2024-10-23 11:52 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-23 11:52 - INFO - 	 Train Loss: 0.044
2024-10-23 11:52 - INFO - 	 Val. Loss: 0.074
2024-10-23 11:52 - INFO - 	 ROC-AUC: 0.986
2024-10-23 11:52 - INFO - 	 PR-AUC: 0.882
2024-10-23 11:52 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 11:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 11:52 - INFO - 	 Best PR-AUC: 0.889
2024-10-23 11:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 11:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-23 11:52 - INFO - ---------------------------------------------
2024-10-23 12:00 - INFO - ---------------------------------------------
2024-10-23 12:00 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-23 12:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.895
2024-10-23 12:00 - INFO - 	 Train Loss: 0.041
2024-10-23 12:00 - INFO - 	 Val. Loss: 0.066
2024-10-23 12:00 - INFO - 	 ROC-AUC: 0.987
2024-10-23 12:00 - INFO - 	 PR-AUC: 0.895
2024-10-23 12:00 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 12:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 12:00 - INFO - 	 Best PR-AUC: 0.895
2024-10-23 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-23 12:00 - INFO - ---------------------------------------------
2024-10-23 12:08 - INFO - ---------------------------------------------
2024-10-23 12:08 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-23 12:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89811
2024-10-23 12:08 - INFO - 	 Train Loss: 0.040
2024-10-23 12:08 - INFO - 	 Val. Loss: 0.066
2024-10-23 12:08 - INFO - 	 ROC-AUC: 0.986
2024-10-23 12:08 - INFO - 	 PR-AUC: 0.898
2024-10-23 12:08 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 12:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 12:08 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 12:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 12:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-23 12:08 - INFO - ---------------------------------------------
2024-10-23 12:16 - INFO - ---------------------------------------------
2024-10-23 12:16 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-23 12:16 - INFO - 	 Train Loss: 0.038
2024-10-23 12:16 - INFO - 	 Val. Loss: 0.070
2024-10-23 12:16 - INFO - 	 ROC-AUC: 0.986
2024-10-23 12:16 - INFO - 	 PR-AUC: 0.887
2024-10-23 12:16 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 12:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 12:16 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-23 12:16 - INFO - ---------------------------------------------
2024-10-23 12:24 - INFO - ---------------------------------------------
2024-10-23 12:24 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-23 12:24 - INFO - 	 Train Loss: 0.038
2024-10-23 12:24 - INFO - 	 Val. Loss: 0.071
2024-10-23 12:24 - INFO - 	 ROC-AUC: 0.986
2024-10-23 12:24 - INFO - 	 PR-AUC: 0.886
2024-10-23 12:24 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 12:24 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 12:24 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-23 12:24 - INFO - ---------------------------------------------
2024-10-23 12:33 - INFO - ---------------------------------------------
2024-10-23 12:33 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-23 12:33 - INFO - 	 Train Loss: 0.036
2024-10-23 12:33 - INFO - 	 Val. Loss: 0.076
2024-10-23 12:33 - INFO - 	 ROC-AUC: 0.985
2024-10-23 12:33 - INFO - 	 PR-AUC: 0.878
2024-10-23 12:33 - INFO - 	 Best Val. Loss: 0.065
2024-10-23 12:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-23 12:33 - INFO - 	 Best PR-AUC: 0.898
2024-10-23 12:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-23 12:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-23 12:33 - INFO - ---------------------------------------------
