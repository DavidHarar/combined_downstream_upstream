2024-11-20 00:54 - INFO - Fit the preprocessing pipeline
2024-11-20 00:54 - INFO - Training using device: cuda
2024-11-20 00:54 - INFO - Creating generators
2024-11-20 00:54 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 00:54 - INFO - * Model:
2024-11-20 00:54 - INFO - * -----------
2024-11-20 00:54 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 00:54 - INFO - * -----------
2024-11-20 01:01 - INFO - ---------------------------------------------
2024-11-20 01:01 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-20 01:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5247
2024-11-20 01:01 - INFO - 	 Train Loss: 0.121
2024-11-20 01:01 - INFO - 	 Val. Loss: 0.121
2024-11-20 01:01 - INFO - 	 ROC-AUC: 0.969
2024-11-20 01:01 - INFO - 	 PR-AUC: 0.525
2024-11-20 01:01 - INFO - 	 Best Val. Loss: 0.121
2024-11-20 01:01 - INFO - 	 Best ROC-AUC: 0.969
2024-11-20 01:01 - INFO - 	 Best PR-AUC: 0.525
2024-11-20 01:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-20 01:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.285
2024-11-20 01:01 - INFO - ---------------------------------------------
2024-11-20 01:08 - INFO - ---------------------------------------------
2024-11-20 01:08 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-20 01:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5943
2024-11-20 01:08 - INFO - 	 Train Loss: 0.110
2024-11-20 01:08 - INFO - 	 Val. Loss: 0.114
2024-11-20 01:08 - INFO - 	 ROC-AUC: 0.973
2024-11-20 01:08 - INFO - 	 PR-AUC: 0.594
2024-11-20 01:08 - INFO - 	 Best Val. Loss: 0.114
2024-11-20 01:08 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 01:08 - INFO - 	 Best PR-AUC: 0.594
2024-11-20 01:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 01:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-20 01:08 - INFO - ---------------------------------------------
2024-11-20 01:15 - INFO - ---------------------------------------------
2024-11-20 01:15 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-20 01:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64059
2024-11-20 01:15 - INFO - 	 Train Loss: 0.105
2024-11-20 01:15 - INFO - 	 Val. Loss: 0.097
2024-11-20 01:15 - INFO - 	 ROC-AUC: 0.974
2024-11-20 01:15 - INFO - 	 PR-AUC: 0.641
2024-11-20 01:15 - INFO - 	 Best Val. Loss: 0.097
2024-11-20 01:15 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 01:15 - INFO - 	 Best PR-AUC: 0.641
2024-11-20 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.335
2024-11-20 01:15 - INFO - ---------------------------------------------
2024-11-20 01:22 - INFO - ---------------------------------------------
2024-11-20 01:22 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64743
2024-11-20 01:22 - INFO - 	 Train Loss: 0.100
2024-11-20 01:22 - INFO - 	 Val. Loss: 0.093
2024-11-20 01:22 - INFO - 	 ROC-AUC: 0.973
2024-11-20 01:22 - INFO - 	 PR-AUC: 0.647
2024-11-20 01:22 - INFO - 	 Best Val. Loss: 0.093
2024-11-20 01:22 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 01:22 - INFO - 	 Best PR-AUC: 0.647
2024-11-20 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-20 01:22 - INFO - ---------------------------------------------
2024-11-20 01:29 - INFO - ---------------------------------------------
2024-11-20 01:29 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-20 01:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65492
2024-11-20 01:29 - INFO - 	 Train Loss: 0.099
2024-11-20 01:29 - INFO - 	 Val. Loss: 0.112
2024-11-20 01:29 - INFO - 	 ROC-AUC: 0.965
2024-11-20 01:29 - INFO - 	 PR-AUC: 0.655
2024-11-20 01:29 - INFO - 	 Best Val. Loss: 0.093
2024-11-20 01:29 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 01:29 - INFO - 	 Best PR-AUC: 0.655
2024-11-20 01:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 01:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.395
2024-11-20 01:29 - INFO - ---------------------------------------------
2024-11-20 01:37 - INFO - ---------------------------------------------
2024-11-20 01:37 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-20 01:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66044
2024-11-20 01:37 - INFO - 	 Train Loss: 0.099
2024-11-20 01:37 - INFO - 	 Val. Loss: 0.111
2024-11-20 01:37 - INFO - 	 ROC-AUC: 0.964
2024-11-20 01:37 - INFO - 	 PR-AUC: 0.660
2024-11-20 01:37 - INFO - 	 Best Val. Loss: 0.093
2024-11-20 01:37 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 01:37 - INFO - 	 Best PR-AUC: 0.660
2024-11-20 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-20 01:37 - INFO - ---------------------------------------------
2024-11-20 01:44 - INFO - ---------------------------------------------
2024-11-20 01:44 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 01:44 - INFO - 	 Train Loss: 0.099
2024-11-20 01:44 - INFO - 	 Val. Loss: 0.103
2024-11-20 01:44 - INFO - 	 ROC-AUC: 0.965
2024-11-20 01:44 - INFO - 	 PR-AUC: 0.652
2024-11-20 01:44 - INFO - 	 Best Val. Loss: 0.093
2024-11-20 01:44 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 01:44 - INFO - 	 Best PR-AUC: 0.660
2024-11-20 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-20 01:44 - INFO - ---------------------------------------------
2024-11-20 01:51 - INFO - ---------------------------------------------
2024-11-20 01:51 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-20 01:51 - INFO - 	 Train Loss: 0.097
2024-11-20 01:51 - INFO - 	 Val. Loss: 0.116
2024-11-20 01:51 - INFO - 	 ROC-AUC: 0.952
2024-11-20 01:51 - INFO - 	 PR-AUC: 0.618
2024-11-20 01:51 - INFO - 	 Best Val. Loss: 0.093
2024-11-20 01:51 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 01:51 - INFO - 	 Best PR-AUC: 0.660
2024-11-20 01:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 01:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-20 01:51 - INFO - ---------------------------------------------
2024-11-20 01:58 - INFO - ---------------------------------------------
2024-11-20 01:58 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-20 01:58 - INFO - 	 Train Loss: 0.098
2024-11-20 01:58 - INFO - 	 Val. Loss: 0.111
2024-11-20 01:58 - INFO - 	 ROC-AUC: 0.958
2024-11-20 01:58 - INFO - 	 PR-AUC: 0.650
2024-11-20 01:58 - INFO - 	 Best Val. Loss: 0.093
2024-11-20 01:58 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 01:58 - INFO - 	 Best PR-AUC: 0.660
2024-11-20 01:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 01:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-20 01:58 - INFO - ---------------------------------------------
2024-11-20 02:05 - INFO - ---------------------------------------------
2024-11-20 02:05 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-20 02:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68009
2024-11-20 02:05 - INFO - 	 Train Loss: 0.095
2024-11-20 02:05 - INFO - 	 Val. Loss: 0.112
2024-11-20 02:05 - INFO - 	 ROC-AUC: 0.961
2024-11-20 02:05 - INFO - 	 PR-AUC: 0.680
2024-11-20 02:05 - INFO - 	 Best Val. Loss: 0.093
2024-11-20 02:05 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 02:05 - INFO - 	 Best PR-AUC: 0.680
2024-11-20 02:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 02:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-11-20 02:05 - INFO - ---------------------------------------------
2024-11-20 02:07 - INFO - Fit the preprocessing pipeline
2024-11-20 02:07 - INFO - Training using device: cuda
2024-11-20 02:07 - INFO - Creating generators
2024-11-20 02:07 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 02:07 - INFO - * Model:
2024-11-20 02:07 - INFO - * -----------
2024-11-20 02:07 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 02:07 - INFO - * -----------
2024-11-20 02:14 - INFO - ---------------------------------------------
2024-11-20 02:14 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-20 02:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53177
2024-11-20 02:14 - INFO - 	 Train Loss: 0.120
2024-11-20 02:14 - INFO - 	 Val. Loss: 0.136
2024-11-20 02:14 - INFO - 	 ROC-AUC: 0.959
2024-11-20 02:14 - INFO - 	 PR-AUC: 0.532
2024-11-20 02:14 - INFO - 	 Best Val. Loss: 0.136
2024-11-20 02:14 - INFO - 	 Best ROC-AUC: 0.959
2024-11-20 02:14 - INFO - 	 Best PR-AUC: 0.532
2024-11-20 02:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-20 02:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.325
2024-11-20 02:14 - INFO - ---------------------------------------------
2024-11-20 02:21 - INFO - ---------------------------------------------
2024-11-20 02:21 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-20 02:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55726
2024-11-20 02:21 - INFO - 	 Train Loss: 0.113
2024-11-20 02:21 - INFO - 	 Val. Loss: 0.135
2024-11-20 02:21 - INFO - 	 ROC-AUC: 0.969
2024-11-20 02:21 - INFO - 	 PR-AUC: 0.557
2024-11-20 02:21 - INFO - 	 Best Val. Loss: 0.135
2024-11-20 02:21 - INFO - 	 Best ROC-AUC: 0.969
2024-11-20 02:21 - INFO - 	 Best PR-AUC: 0.557
2024-11-20 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-20 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.295
2024-11-20 02:21 - INFO - ---------------------------------------------
2024-11-20 02:28 - INFO - ---------------------------------------------
2024-11-20 02:28 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-20 02:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58473
2024-11-20 02:28 - INFO - 	 Train Loss: 0.107
2024-11-20 02:28 - INFO - 	 Val. Loss: 0.103
2024-11-20 02:28 - INFO - 	 ROC-AUC: 0.976
2024-11-20 02:28 - INFO - 	 PR-AUC: 0.585
2024-11-20 02:28 - INFO - 	 Best Val. Loss: 0.103
2024-11-20 02:28 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 02:28 - INFO - 	 Best PR-AUC: 0.585
2024-11-20 02:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 02:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.341
2024-11-20 02:28 - INFO - ---------------------------------------------
2024-11-20 02:35 - INFO - ---------------------------------------------
2024-11-20 02:35 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 02:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65213
2024-11-20 02:35 - INFO - 	 Train Loss: 0.101
2024-11-20 02:35 - INFO - 	 Val. Loss: 0.111
2024-11-20 02:35 - INFO - 	 ROC-AUC: 0.966
2024-11-20 02:35 - INFO - 	 PR-AUC: 0.652
2024-11-20 02:35 - INFO - 	 Best Val. Loss: 0.103
2024-11-20 02:35 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 02:35 - INFO - 	 Best PR-AUC: 0.652
2024-11-20 02:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 02:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.377
2024-11-20 02:35 - INFO - ---------------------------------------------
2024-11-20 02:42 - INFO - ---------------------------------------------
2024-11-20 02:42 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-20 02:42 - INFO - 	 Train Loss: 0.101
2024-11-20 02:42 - INFO - 	 Val. Loss: 0.103
2024-11-20 02:42 - INFO - 	 ROC-AUC: 0.961
2024-11-20 02:42 - INFO - 	 PR-AUC: 0.651
2024-11-20 02:42 - INFO - 	 Best Val. Loss: 0.103
2024-11-20 02:42 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 02:42 - INFO - 	 Best PR-AUC: 0.652
2024-11-20 02:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 02:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.377
2024-11-20 02:42 - INFO - ---------------------------------------------
2024-11-20 02:50 - INFO - ---------------------------------------------
2024-11-20 02:50 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-20 02:50 - INFO - 	 Train Loss: 0.099
2024-11-20 02:50 - INFO - 	 Val. Loss: 0.119
2024-11-20 02:50 - INFO - 	 ROC-AUC: 0.951
2024-11-20 02:50 - INFO - 	 PR-AUC: 0.630
2024-11-20 02:50 - INFO - 	 Best Val. Loss: 0.103
2024-11-20 02:50 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 02:50 - INFO - 	 Best PR-AUC: 0.652
2024-11-20 02:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 02:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.377
2024-11-20 02:50 - INFO - ---------------------------------------------
2024-11-20 02:57 - INFO - ---------------------------------------------
2024-11-20 02:57 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 02:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69477
2024-11-20 02:57 - INFO - 	 Train Loss: 0.099
2024-11-20 02:57 - INFO - 	 Val. Loss: 0.100
2024-11-20 02:57 - INFO - 	 ROC-AUC: 0.963
2024-11-20 02:57 - INFO - 	 PR-AUC: 0.695
2024-11-20 02:57 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 02:57 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 02:57 - INFO - 	 Best PR-AUC: 0.695
2024-11-20 02:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 02:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-11-20 02:57 - INFO - ---------------------------------------------
2024-11-20 03:04 - INFO - ---------------------------------------------
2024-11-20 03:04 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-20 03:04 - INFO - 	 Train Loss: 0.098
2024-11-20 03:04 - INFO - 	 Val. Loss: 0.107
2024-11-20 03:04 - INFO - 	 ROC-AUC: 0.957
2024-11-20 03:04 - INFO - 	 PR-AUC: 0.664
2024-11-20 03:04 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 03:04 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 03:04 - INFO - 	 Best PR-AUC: 0.695
2024-11-20 03:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 03:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-11-20 03:04 - INFO - ---------------------------------------------
2024-11-20 03:11 - INFO - ---------------------------------------------
2024-11-20 03:11 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-20 03:11 - INFO - 	 Train Loss: 0.098
2024-11-20 03:11 - INFO - 	 Val. Loss: 0.112
2024-11-20 03:11 - INFO - 	 ROC-AUC: 0.938
2024-11-20 03:11 - INFO - 	 PR-AUC: 0.583
2024-11-20 03:11 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 03:11 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 03:11 - INFO - 	 Best PR-AUC: 0.695
2024-11-20 03:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 03:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-11-20 03:11 - INFO - ---------------------------------------------
2024-11-20 03:18 - INFO - ---------------------------------------------
2024-11-20 03:18 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-20 03:18 - INFO - 	 Train Loss: 0.098
2024-11-20 03:18 - INFO - 	 Val. Loss: 0.112
2024-11-20 03:18 - INFO - 	 ROC-AUC: 0.942
2024-11-20 03:18 - INFO - 	 PR-AUC: 0.593
2024-11-20 03:18 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 03:18 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 03:18 - INFO - 	 Best PR-AUC: 0.695
2024-11-20 03:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 03:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.434
2024-11-20 03:18 - INFO - ---------------------------------------------
2024-11-20 03:20 - INFO - Fit the preprocessing pipeline
2024-11-20 03:20 - INFO - Training using device: cuda
2024-11-20 03:20 - INFO - Creating generators
2024-11-20 03:20 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 03:20 - INFO - * Model:
2024-11-20 03:20 - INFO - * -----------
2024-11-20 03:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 03:20 - INFO - * -----------
2024-11-20 03:27 - INFO - ---------------------------------------------
2024-11-20 03:27 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-20 03:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49727
2024-11-20 03:27 - INFO - 	 Train Loss: 0.121
2024-11-20 03:27 - INFO - 	 Val. Loss: 0.120
2024-11-20 03:27 - INFO - 	 ROC-AUC: 0.965
2024-11-20 03:27 - INFO - 	 PR-AUC: 0.497
2024-11-20 03:27 - INFO - 	 Best Val. Loss: 0.120
2024-11-20 03:27 - INFO - 	 Best ROC-AUC: 0.965
2024-11-20 03:27 - INFO - 	 Best PR-AUC: 0.497
2024-11-20 03:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-20 03:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.310
2024-11-20 03:27 - INFO - ---------------------------------------------
2024-11-20 03:34 - INFO - ---------------------------------------------
2024-11-20 03:34 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-20 03:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59095
2024-11-20 03:34 - INFO - 	 Train Loss: 0.108
2024-11-20 03:34 - INFO - 	 Val. Loss: 0.108
2024-11-20 03:34 - INFO - 	 ROC-AUC: 0.971
2024-11-20 03:34 - INFO - 	 PR-AUC: 0.591
2024-11-20 03:34 - INFO - 	 Best Val. Loss: 0.108
2024-11-20 03:34 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 03:34 - INFO - 	 Best PR-AUC: 0.591
2024-11-20 03:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-20 03:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-20 03:34 - INFO - ---------------------------------------------
2024-11-20 03:41 - INFO - ---------------------------------------------
2024-11-20 03:41 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-20 03:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60793
2024-11-20 03:41 - INFO - 	 Train Loss: 0.105
2024-11-20 03:41 - INFO - 	 Val. Loss: 0.108
2024-11-20 03:41 - INFO - 	 ROC-AUC: 0.968
2024-11-20 03:41 - INFO - 	 PR-AUC: 0.608
2024-11-20 03:41 - INFO - 	 Best Val. Loss: 0.108
2024-11-20 03:41 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 03:41 - INFO - 	 Best PR-AUC: 0.608
2024-11-20 03:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-20 03:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-20 03:41 - INFO - ---------------------------------------------
2024-11-20 03:48 - INFO - ---------------------------------------------
2024-11-20 03:48 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-20 03:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64803
2024-11-20 03:48 - INFO - 	 Train Loss: 0.101
2024-11-20 03:48 - INFO - 	 Val. Loss: 0.094
2024-11-20 03:48 - INFO - 	 ROC-AUC: 0.971
2024-11-20 03:48 - INFO - 	 PR-AUC: 0.648
2024-11-20 03:48 - INFO - 	 Best Val. Loss: 0.094
2024-11-20 03:48 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 03:48 - INFO - 	 Best PR-AUC: 0.648
2024-11-20 03:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-20 03:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.383
2024-11-20 03:48 - INFO - ---------------------------------------------
2024-11-20 03:56 - INFO - ---------------------------------------------
2024-11-20 03:56 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-20 03:56 - INFO - 	 Train Loss: 0.100
2024-11-20 03:56 - INFO - 	 Val. Loss: 0.103
2024-11-20 03:56 - INFO - 	 ROC-AUC: 0.961
2024-11-20 03:56 - INFO - 	 PR-AUC: 0.591
2024-11-20 03:56 - INFO - 	 Best Val. Loss: 0.094
2024-11-20 03:56 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 03:56 - INFO - 	 Best PR-AUC: 0.648
2024-11-20 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-20 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.383
2024-11-20 03:56 - INFO - ---------------------------------------------
2024-11-20 04:03 - INFO - ---------------------------------------------
2024-11-20 04:03 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-20 04:03 - INFO - 	 Train Loss: 0.098
2024-11-20 04:03 - INFO - 	 Val. Loss: 0.102
2024-11-20 04:03 - INFO - 	 ROC-AUC: 0.964
2024-11-20 04:03 - INFO - 	 PR-AUC: 0.624
2024-11-20 04:03 - INFO - 	 Best Val. Loss: 0.094
2024-11-20 04:03 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 04:03 - INFO - 	 Best PR-AUC: 0.648
2024-11-20 04:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-20 04:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.383
2024-11-20 04:03 - INFO - ---------------------------------------------
2024-11-20 04:10 - INFO - ---------------------------------------------
2024-11-20 04:10 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 04:10 - INFO - 	 Train Loss: 0.098
2024-11-20 04:10 - INFO - 	 Val. Loss: 0.136
2024-11-20 04:10 - INFO - 	 ROC-AUC: 0.948
2024-11-20 04:10 - INFO - 	 PR-AUC: 0.586
2024-11-20 04:10 - INFO - 	 Best Val. Loss: 0.094
2024-11-20 04:10 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 04:10 - INFO - 	 Best PR-AUC: 0.648
2024-11-20 04:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-20 04:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.383
2024-11-20 04:10 - INFO - ---------------------------------------------
2024-11-20 04:19 - INFO - Fit the preprocessing pipeline
2024-11-20 04:19 - INFO - Training using device: cuda
2024-11-20 04:19 - INFO - Creating generators
2024-11-20 04:19 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 04:19 - INFO - * Model:
2024-11-20 04:19 - INFO - * -----------
2024-11-20 04:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 04:19 - INFO - * -----------
2024-11-20 04:26 - INFO - ---------------------------------------------
2024-11-20 04:26 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-20 04:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5226
2024-11-20 04:26 - INFO - 	 Train Loss: 0.122
2024-11-20 04:26 - INFO - 	 Val. Loss: 0.124
2024-11-20 04:26 - INFO - 	 ROC-AUC: 0.969
2024-11-20 04:26 - INFO - 	 PR-AUC: 0.523
2024-11-20 04:26 - INFO - 	 Best Val. Loss: 0.124
2024-11-20 04:26 - INFO - 	 Best ROC-AUC: 0.969
2024-11-20 04:26 - INFO - 	 Best PR-AUC: 0.523
2024-11-20 04:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-20 04:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.307
2024-11-20 04:26 - INFO - ---------------------------------------------
2024-11-20 04:33 - INFO - ---------------------------------------------
2024-11-20 04:33 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-20 04:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55534
2024-11-20 04:33 - INFO - 	 Train Loss: 0.109
2024-11-20 04:33 - INFO - 	 Val. Loss: 0.118
2024-11-20 04:33 - INFO - 	 ROC-AUC: 0.970
2024-11-20 04:33 - INFO - 	 PR-AUC: 0.555
2024-11-20 04:33 - INFO - 	 Best Val. Loss: 0.118
2024-11-20 04:33 - INFO - 	 Best ROC-AUC: 0.970
2024-11-20 04:33 - INFO - 	 Best PR-AUC: 0.555
2024-11-20 04:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-20 04:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.287
2024-11-20 04:33 - INFO - ---------------------------------------------
2024-11-20 04:40 - INFO - ---------------------------------------------
2024-11-20 04:40 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-20 04:40 - INFO - 	 Train Loss: 0.107
2024-11-20 04:40 - INFO - 	 Val. Loss: 0.140
2024-11-20 04:40 - INFO - 	 ROC-AUC: 0.940
2024-11-20 04:40 - INFO - 	 PR-AUC: 0.530
2024-11-20 04:40 - INFO - 	 Best Val. Loss: 0.118
2024-11-20 04:40 - INFO - 	 Best ROC-AUC: 0.970
2024-11-20 04:40 - INFO - 	 Best PR-AUC: 0.555
2024-11-20 04:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-20 04:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.287
2024-11-20 04:40 - INFO - ---------------------------------------------
2024-11-20 04:47 - INFO - ---------------------------------------------
2024-11-20 04:47 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 04:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63425
2024-11-20 04:47 - INFO - 	 Train Loss: 0.100
2024-11-20 04:47 - INFO - 	 Val. Loss: 0.106
2024-11-20 04:47 - INFO - 	 ROC-AUC: 0.971
2024-11-20 04:47 - INFO - 	 PR-AUC: 0.634
2024-11-20 04:47 - INFO - 	 Best Val. Loss: 0.106
2024-11-20 04:47 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 04:47 - INFO - 	 Best PR-AUC: 0.634
2024-11-20 04:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-20 04:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.362
2024-11-20 04:47 - INFO - ---------------------------------------------
2024-11-20 04:54 - INFO - ---------------------------------------------
2024-11-20 04:54 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-20 04:54 - INFO - 	 Train Loss: 0.100
2024-11-20 04:54 - INFO - 	 Val. Loss: 0.106
2024-11-20 04:54 - INFO - 	 ROC-AUC: 0.964
2024-11-20 04:54 - INFO - 	 PR-AUC: 0.628
2024-11-20 04:54 - INFO - 	 Best Val. Loss: 0.106
2024-11-20 04:54 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 04:54 - INFO - 	 Best PR-AUC: 0.634
2024-11-20 04:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-20 04:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.362
2024-11-20 04:54 - INFO - ---------------------------------------------
2024-11-20 05:01 - INFO - ---------------------------------------------
2024-11-20 05:01 - INFO - Epoch: 06 | Time: 7m 5s
2024-11-20 05:01 - INFO - 	 Train Loss: 0.100
2024-11-20 05:01 - INFO - 	 Val. Loss: 0.119
2024-11-20 05:01 - INFO - 	 ROC-AUC: 0.960
2024-11-20 05:01 - INFO - 	 PR-AUC: 0.623
2024-11-20 05:01 - INFO - 	 Best Val. Loss: 0.106
2024-11-20 05:01 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 05:01 - INFO - 	 Best PR-AUC: 0.634
2024-11-20 05:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-20 05:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.362
2024-11-20 05:01 - INFO - ---------------------------------------------
2024-11-20 05:09 - INFO - ---------------------------------------------
2024-11-20 05:09 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-20 05:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67359
2024-11-20 05:09 - INFO - 	 Train Loss: 0.098
2024-11-20 05:09 - INFO - 	 Val. Loss: 0.104
2024-11-20 05:09 - INFO - 	 ROC-AUC: 0.966
2024-11-20 05:09 - INFO - 	 PR-AUC: 0.674
2024-11-20 05:09 - INFO - 	 Best Val. Loss: 0.104
2024-11-20 05:09 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 05:09 - INFO - 	 Best PR-AUC: 0.674
2024-11-20 05:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-20 05:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 05:09 - INFO - ---------------------------------------------
2024-11-20 05:16 - INFO - ---------------------------------------------
2024-11-20 05:16 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-20 05:16 - INFO - 	 Train Loss: 0.097
2024-11-20 05:16 - INFO - 	 Val. Loss: 0.112
2024-11-20 05:16 - INFO - 	 ROC-AUC: 0.953
2024-11-20 05:16 - INFO - 	 PR-AUC: 0.672
2024-11-20 05:16 - INFO - 	 Best Val. Loss: 0.104
2024-11-20 05:16 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 05:16 - INFO - 	 Best PR-AUC: 0.674
2024-11-20 05:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-20 05:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 05:16 - INFO - ---------------------------------------------
2024-11-20 05:23 - INFO - ---------------------------------------------
2024-11-20 05:23 - INFO - Epoch: 09 | Time: 7m 9s
2024-11-20 05:23 - INFO - 	 Train Loss: 0.096
2024-11-20 05:23 - INFO - 	 Val. Loss: 0.112
2024-11-20 05:23 - INFO - 	 ROC-AUC: 0.952
2024-11-20 05:23 - INFO - 	 PR-AUC: 0.667
2024-11-20 05:23 - INFO - 	 Best Val. Loss: 0.104
2024-11-20 05:23 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 05:23 - INFO - 	 Best PR-AUC: 0.674
2024-11-20 05:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-20 05:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 05:23 - INFO - ---------------------------------------------
2024-11-20 05:30 - INFO - ---------------------------------------------
2024-11-20 05:30 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-20 05:30 - INFO - 	 Train Loss: 0.099
2024-11-20 05:30 - INFO - 	 Val. Loss: 0.094
2024-11-20 05:30 - INFO - 	 ROC-AUC: 0.955
2024-11-20 05:30 - INFO - 	 PR-AUC: 0.671
2024-11-20 05:30 - INFO - 	 Best Val. Loss: 0.094
2024-11-20 05:30 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 05:30 - INFO - 	 Best PR-AUC: 0.674
2024-11-20 05:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-20 05:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 05:30 - INFO - ---------------------------------------------
2024-11-20 05:32 - INFO - Fit the preprocessing pipeline
2024-11-20 05:32 - INFO - Training using device: cuda
2024-11-20 05:32 - INFO - Creating generators
2024-11-20 05:32 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 05:32 - INFO - * Model:
2024-11-20 05:32 - INFO - * -----------
2024-11-20 05:32 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 05:32 - INFO - * -----------
2024-11-20 05:39 - INFO - ---------------------------------------------
2024-11-20 05:39 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-20 05:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52883
2024-11-20 05:39 - INFO - 	 Train Loss: 0.119
2024-11-20 05:39 - INFO - 	 Val. Loss: 0.121
2024-11-20 05:39 - INFO - 	 ROC-AUC: 0.968
2024-11-20 05:39 - INFO - 	 PR-AUC: 0.529
2024-11-20 05:39 - INFO - 	 Best Val. Loss: 0.121
2024-11-20 05:39 - INFO - 	 Best ROC-AUC: 0.968
2024-11-20 05:39 - INFO - 	 Best PR-AUC: 0.529
2024-11-20 05:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-20 05:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.307
2024-11-20 05:39 - INFO - ---------------------------------------------
2024-11-20 05:46 - INFO - ---------------------------------------------
2024-11-20 05:46 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-20 05:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55895
2024-11-20 05:46 - INFO - 	 Train Loss: 0.110
2024-11-20 05:46 - INFO - 	 Val. Loss: 0.122
2024-11-20 05:46 - INFO - 	 ROC-AUC: 0.971
2024-11-20 05:46 - INFO - 	 PR-AUC: 0.559
2024-11-20 05:46 - INFO - 	 Best Val. Loss: 0.121
2024-11-20 05:46 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 05:46 - INFO - 	 Best PR-AUC: 0.559
2024-11-20 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-20 05:46 - INFO - ---------------------------------------------
2024-11-20 05:53 - INFO - ---------------------------------------------
2024-11-20 05:53 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-20 05:53 - INFO - 	 Train Loss: 0.103
2024-11-20 05:53 - INFO - 	 Val. Loss: 0.147
2024-11-20 05:53 - INFO - 	 ROC-AUC: 0.967
2024-11-20 05:53 - INFO - 	 PR-AUC: 0.511
2024-11-20 05:53 - INFO - 	 Best Val. Loss: 0.121
2024-11-20 05:53 - INFO - 	 Best ROC-AUC: 0.971
2024-11-20 05:53 - INFO - 	 Best PR-AUC: 0.559
2024-11-20 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-20 05:53 - INFO - ---------------------------------------------
2024-11-20 06:00 - INFO - ---------------------------------------------
2024-11-20 06:00 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 06:00 - INFO - 	 Train Loss: 0.104
2024-11-20 06:00 - INFO - 	 Val. Loss: 0.132
2024-11-20 06:00 - INFO - 	 ROC-AUC: 0.974
2024-11-20 06:00 - INFO - 	 PR-AUC: 0.541
2024-11-20 06:00 - INFO - 	 Best Val. Loss: 0.121
2024-11-20 06:00 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 06:00 - INFO - 	 Best PR-AUC: 0.559
2024-11-20 06:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 06:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-20 06:00 - INFO - ---------------------------------------------
2024-11-20 06:07 - INFO - ---------------------------------------------
2024-11-20 06:07 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-20 06:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63225
2024-11-20 06:07 - INFO - 	 Train Loss: 0.100
2024-11-20 06:07 - INFO - 	 Val. Loss: 0.107
2024-11-20 06:07 - INFO - 	 ROC-AUC: 0.963
2024-11-20 06:07 - INFO - 	 PR-AUC: 0.632
2024-11-20 06:07 - INFO - 	 Best Val. Loss: 0.107
2024-11-20 06:07 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 06:07 - INFO - 	 Best PR-AUC: 0.632
2024-11-20 06:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 06:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-20 06:07 - INFO - ---------------------------------------------
2024-11-20 06:14 - INFO - ---------------------------------------------
2024-11-20 06:14 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-20 06:14 - INFO - 	 Train Loss: 0.101
2024-11-20 06:14 - INFO - 	 Val. Loss: 0.105
2024-11-20 06:14 - INFO - 	 ROC-AUC: 0.956
2024-11-20 06:14 - INFO - 	 PR-AUC: 0.581
2024-11-20 06:14 - INFO - 	 Best Val. Loss: 0.105
2024-11-20 06:14 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 06:14 - INFO - 	 Best PR-AUC: 0.632
2024-11-20 06:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 06:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-20 06:14 - INFO - ---------------------------------------------
2024-11-20 06:22 - INFO - ---------------------------------------------
2024-11-20 06:22 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 06:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69415
2024-11-20 06:22 - INFO - 	 Train Loss: 0.099
2024-11-20 06:22 - INFO - 	 Val. Loss: 0.095
2024-11-20 06:22 - INFO - 	 ROC-AUC: 0.959
2024-11-20 06:22 - INFO - 	 PR-AUC: 0.694
2024-11-20 06:22 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 06:22 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 06:22 - INFO - 	 Best PR-AUC: 0.694
2024-11-20 06:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 06:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-11-20 06:22 - INFO - ---------------------------------------------
2024-11-20 06:29 - INFO - ---------------------------------------------
2024-11-20 06:29 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-20 06:29 - INFO - 	 Train Loss: 0.098
2024-11-20 06:29 - INFO - 	 Val. Loss: 0.111
2024-11-20 06:29 - INFO - 	 ROC-AUC: 0.941
2024-11-20 06:29 - INFO - 	 PR-AUC: 0.623
2024-11-20 06:29 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 06:29 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 06:29 - INFO - 	 Best PR-AUC: 0.694
2024-11-20 06:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 06:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-11-20 06:29 - INFO - ---------------------------------------------
2024-11-20 06:36 - INFO - ---------------------------------------------
2024-11-20 06:36 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-20 06:36 - INFO - 	 Train Loss: 0.098
2024-11-20 06:36 - INFO - 	 Val. Loss: 0.108
2024-11-20 06:36 - INFO - 	 ROC-AUC: 0.950
2024-11-20 06:36 - INFO - 	 PR-AUC: 0.649
2024-11-20 06:36 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 06:36 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 06:36 - INFO - 	 Best PR-AUC: 0.694
2024-11-20 06:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 06:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-11-20 06:36 - INFO - ---------------------------------------------
2024-11-20 06:43 - INFO - ---------------------------------------------
2024-11-20 06:43 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-20 06:43 - INFO - 	 Train Loss: 0.095
2024-11-20 06:43 - INFO - 	 Val. Loss: 0.117
2024-11-20 06:43 - INFO - 	 ROC-AUC: 0.947
2024-11-20 06:43 - INFO - 	 PR-AUC: 0.610
2024-11-20 06:43 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 06:43 - INFO - 	 Best ROC-AUC: 0.974
2024-11-20 06:43 - INFO - 	 Best PR-AUC: 0.694
2024-11-20 06:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-20 06:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-11-20 06:43 - INFO - ---------------------------------------------
2024-11-20 06:45 - INFO - Fit the preprocessing pipeline
2024-11-20 06:45 - INFO - Training using device: cuda
2024-11-20 06:45 - INFO - Creating generators
2024-11-20 06:45 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 06:45 - INFO - * Model:
2024-11-20 06:45 - INFO - * -----------
2024-11-20 06:45 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 06:45 - INFO - * -----------
2024-11-20 06:52 - INFO - ---------------------------------------------
2024-11-20 06:52 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-20 06:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50469
2024-11-20 06:52 - INFO - 	 Train Loss: 0.120
2024-11-20 06:52 - INFO - 	 Val. Loss: 0.125
2024-11-20 06:52 - INFO - 	 ROC-AUC: 0.963
2024-11-20 06:52 - INFO - 	 PR-AUC: 0.505
2024-11-20 06:52 - INFO - 	 Best Val. Loss: 0.125
2024-11-20 06:52 - INFO - 	 Best ROC-AUC: 0.963
2024-11-20 06:52 - INFO - 	 Best PR-AUC: 0.505
2024-11-20 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-20 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.293
2024-11-20 06:52 - INFO - ---------------------------------------------
2024-11-20 06:59 - INFO - ---------------------------------------------
2024-11-20 06:59 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-20 06:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61239
2024-11-20 06:59 - INFO - 	 Train Loss: 0.109
2024-11-20 06:59 - INFO - 	 Val. Loss: 0.101
2024-11-20 06:59 - INFO - 	 ROC-AUC: 0.973
2024-11-20 06:59 - INFO - 	 PR-AUC: 0.612
2024-11-20 06:59 - INFO - 	 Best Val. Loss: 0.101
2024-11-20 06:59 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 06:59 - INFO - 	 Best PR-AUC: 0.612
2024-11-20 06:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 06:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.344
2024-11-20 06:59 - INFO - ---------------------------------------------
2024-11-20 07:06 - INFO - ---------------------------------------------
2024-11-20 07:06 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-20 07:06 - INFO - 	 Train Loss: 0.104
2024-11-20 07:06 - INFO - 	 Val. Loss: 0.108
2024-11-20 07:06 - INFO - 	 ROC-AUC: 0.975
2024-11-20 07:06 - INFO - 	 PR-AUC: 0.595
2024-11-20 07:06 - INFO - 	 Best Val. Loss: 0.101
2024-11-20 07:06 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:06 - INFO - 	 Best PR-AUC: 0.612
2024-11-20 07:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.344
2024-11-20 07:06 - INFO - ---------------------------------------------
2024-11-20 07:13 - INFO - ---------------------------------------------
2024-11-20 07:13 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 07:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64319
2024-11-20 07:13 - INFO - 	 Train Loss: 0.102
2024-11-20 07:13 - INFO - 	 Val. Loss: 0.103
2024-11-20 07:13 - INFO - 	 ROC-AUC: 0.971
2024-11-20 07:13 - INFO - 	 PR-AUC: 0.643
2024-11-20 07:13 - INFO - 	 Best Val. Loss: 0.101
2024-11-20 07:13 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:13 - INFO - 	 Best PR-AUC: 0.643
2024-11-20 07:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.353
2024-11-20 07:13 - INFO - ---------------------------------------------
2024-11-20 07:20 - INFO - ---------------------------------------------
2024-11-20 07:20 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-20 07:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67905
2024-11-20 07:20 - INFO - 	 Train Loss: 0.101
2024-11-20 07:20 - INFO - 	 Val. Loss: 0.092
2024-11-20 07:20 - INFO - 	 ROC-AUC: 0.974
2024-11-20 07:20 - INFO - 	 PR-AUC: 0.679
2024-11-20 07:20 - INFO - 	 Best Val. Loss: 0.092
2024-11-20 07:20 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:20 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-20 07:20 - INFO - ---------------------------------------------
2024-11-20 07:27 - INFO - ---------------------------------------------
2024-11-20 07:27 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-20 07:27 - INFO - 	 Train Loss: 0.099
2024-11-20 07:27 - INFO - 	 Val. Loss: 0.109
2024-11-20 07:27 - INFO - 	 ROC-AUC: 0.962
2024-11-20 07:27 - INFO - 	 PR-AUC: 0.635
2024-11-20 07:27 - INFO - 	 Best Val. Loss: 0.092
2024-11-20 07:27 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:27 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 07:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-20 07:27 - INFO - ---------------------------------------------
2024-11-20 07:35 - INFO - ---------------------------------------------
2024-11-20 07:35 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-20 07:35 - INFO - 	 Train Loss: 0.099
2024-11-20 07:35 - INFO - 	 Val. Loss: 0.111
2024-11-20 07:35 - INFO - 	 ROC-AUC: 0.952
2024-11-20 07:35 - INFO - 	 PR-AUC: 0.636
2024-11-20 07:35 - INFO - 	 Best Val. Loss: 0.092
2024-11-20 07:35 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:35 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 07:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-20 07:35 - INFO - ---------------------------------------------
2024-11-20 07:42 - INFO - ---------------------------------------------
2024-11-20 07:42 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-20 07:42 - INFO - 	 Train Loss: 0.100
2024-11-20 07:42 - INFO - 	 Val. Loss: 0.107
2024-11-20 07:42 - INFO - 	 ROC-AUC: 0.952
2024-11-20 07:42 - INFO - 	 PR-AUC: 0.585
2024-11-20 07:42 - INFO - 	 Best Val. Loss: 0.092
2024-11-20 07:42 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:42 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-20 07:42 - INFO - ---------------------------------------------
2024-11-20 07:49 - INFO - ---------------------------------------------
2024-11-20 07:49 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-20 07:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71751
2024-11-20 07:49 - INFO - 	 Train Loss: 0.099
2024-11-20 07:49 - INFO - 	 Val. Loss: 0.091
2024-11-20 07:49 - INFO - 	 ROC-AUC: 0.969
2024-11-20 07:49 - INFO - 	 PR-AUC: 0.718
2024-11-20 07:49 - INFO - 	 Best Val. Loss: 0.091
2024-11-20 07:49 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:49 - INFO - 	 Best PR-AUC: 0.718
2024-11-20 07:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-11-20 07:49 - INFO - ---------------------------------------------
2024-11-20 07:56 - INFO - ---------------------------------------------
2024-11-20 07:56 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-20 07:56 - INFO - 	 Train Loss: 0.097
2024-11-20 07:56 - INFO - 	 Val. Loss: 0.094
2024-11-20 07:56 - INFO - 	 ROC-AUC: 0.953
2024-11-20 07:56 - INFO - 	 PR-AUC: 0.653
2024-11-20 07:56 - INFO - 	 Best Val. Loss: 0.091
2024-11-20 07:56 - INFO - 	 Best ROC-AUC: 0.975
2024-11-20 07:56 - INFO - 	 Best PR-AUC: 0.718
2024-11-20 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-11-20 07:56 - INFO - ---------------------------------------------
2024-11-20 07:58 - INFO - Fit the preprocessing pipeline
2024-11-20 07:58 - INFO - Training using device: cuda
2024-11-20 07:58 - INFO - Creating generators
2024-11-20 07:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 07:58 - INFO - * Model:
2024-11-20 07:58 - INFO - * -----------
2024-11-20 07:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 07:58 - INFO - * -----------
2024-11-20 08:05 - INFO - ---------------------------------------------
2024-11-20 08:05 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-20 08:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55591
2024-11-20 08:05 - INFO - 	 Train Loss: 0.122
2024-11-20 08:05 - INFO - 	 Val. Loss: 0.106
2024-11-20 08:05 - INFO - 	 ROC-AUC: 0.973
2024-11-20 08:05 - INFO - 	 PR-AUC: 0.556
2024-11-20 08:05 - INFO - 	 Best Val. Loss: 0.106
2024-11-20 08:05 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:05 - INFO - 	 Best PR-AUC: 0.556
2024-11-20 08:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.340
2024-11-20 08:05 - INFO - ---------------------------------------------
2024-11-20 08:12 - INFO - ---------------------------------------------
2024-11-20 08:12 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-20 08:12 - INFO - 	 Train Loss: 0.108
2024-11-20 08:12 - INFO - 	 Val. Loss: 0.119
2024-11-20 08:12 - INFO - 	 ROC-AUC: 0.972
2024-11-20 08:12 - INFO - 	 PR-AUC: 0.547
2024-11-20 08:12 - INFO - 	 Best Val. Loss: 0.106
2024-11-20 08:12 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:12 - INFO - 	 Best PR-AUC: 0.556
2024-11-20 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.340
2024-11-20 08:12 - INFO - ---------------------------------------------
2024-11-20 08:19 - INFO - ---------------------------------------------
2024-11-20 08:19 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-20 08:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60259
2024-11-20 08:19 - INFO - 	 Train Loss: 0.105
2024-11-20 08:19 - INFO - 	 Val. Loss: 0.099
2024-11-20 08:19 - INFO - 	 ROC-AUC: 0.971
2024-11-20 08:19 - INFO - 	 PR-AUC: 0.603
2024-11-20 08:19 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 08:19 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:19 - INFO - 	 Best PR-AUC: 0.603
2024-11-20 08:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.366
2024-11-20 08:19 - INFO - ---------------------------------------------
2024-11-20 08:26 - INFO - ---------------------------------------------
2024-11-20 08:26 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-20 08:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62563
2024-11-20 08:26 - INFO - 	 Train Loss: 0.101
2024-11-20 08:26 - INFO - 	 Val. Loss: 0.104
2024-11-20 08:26 - INFO - 	 ROC-AUC: 0.963
2024-11-20 08:26 - INFO - 	 PR-AUC: 0.626
2024-11-20 08:26 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 08:26 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:26 - INFO - 	 Best PR-AUC: 0.626
2024-11-20 08:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.374
2024-11-20 08:26 - INFO - ---------------------------------------------
2024-11-20 08:33 - INFO - ---------------------------------------------
2024-11-20 08:33 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-20 08:33 - INFO - 	 Train Loss: 0.100
2024-11-20 08:33 - INFO - 	 Val. Loss: 0.106
2024-11-20 08:33 - INFO - 	 ROC-AUC: 0.970
2024-11-20 08:33 - INFO - 	 PR-AUC: 0.613
2024-11-20 08:33 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 08:33 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:33 - INFO - 	 Best PR-AUC: 0.626
2024-11-20 08:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.374
2024-11-20 08:33 - INFO - ---------------------------------------------
2024-11-20 08:41 - INFO - ---------------------------------------------
2024-11-20 08:41 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-20 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64332
2024-11-20 08:41 - INFO - 	 Train Loss: 0.099
2024-11-20 08:41 - INFO - 	 Val. Loss: 0.101
2024-11-20 08:41 - INFO - 	 ROC-AUC: 0.966
2024-11-20 08:41 - INFO - 	 PR-AUC: 0.643
2024-11-20 08:41 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 08:41 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:41 - INFO - 	 Best PR-AUC: 0.643
2024-11-20 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.412
2024-11-20 08:41 - INFO - ---------------------------------------------
2024-11-20 08:48 - INFO - ---------------------------------------------
2024-11-20 08:48 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-20 08:48 - INFO - 	 Train Loss: 0.100
2024-11-20 08:48 - INFO - 	 Val. Loss: 0.119
2024-11-20 08:48 - INFO - 	 ROC-AUC: 0.959
2024-11-20 08:48 - INFO - 	 PR-AUC: 0.622
2024-11-20 08:48 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 08:48 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:48 - INFO - 	 Best PR-AUC: 0.643
2024-11-20 08:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.412
2024-11-20 08:48 - INFO - ---------------------------------------------
2024-11-20 08:55 - INFO - ---------------------------------------------
2024-11-20 08:55 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-20 08:55 - INFO - 	 Train Loss: 0.098
2024-11-20 08:55 - INFO - 	 Val. Loss: 0.117
2024-11-20 08:55 - INFO - 	 ROC-AUC: 0.946
2024-11-20 08:55 - INFO - 	 PR-AUC: 0.572
2024-11-20 08:55 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 08:55 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 08:55 - INFO - 	 Best PR-AUC: 0.643
2024-11-20 08:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 08:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.412
2024-11-20 08:55 - INFO - ---------------------------------------------
2024-11-20 09:02 - INFO - ---------------------------------------------
2024-11-20 09:02 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-20 09:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6555
2024-11-20 09:02 - INFO - 	 Train Loss: 0.097
2024-11-20 09:02 - INFO - 	 Val. Loss: 0.102
2024-11-20 09:02 - INFO - 	 ROC-AUC: 0.962
2024-11-20 09:02 - INFO - 	 PR-AUC: 0.656
2024-11-20 09:02 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 09:02 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 09:02 - INFO - 	 Best PR-AUC: 0.656
2024-11-20 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.425
2024-11-20 09:02 - INFO - ---------------------------------------------
2024-11-20 09:09 - INFO - ---------------------------------------------
2024-11-20 09:09 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-20 09:09 - INFO - 	 Train Loss: 0.097
2024-11-20 09:09 - INFO - 	 Val. Loss: 0.118
2024-11-20 09:09 - INFO - 	 ROC-AUC: 0.952
2024-11-20 09:09 - INFO - 	 PR-AUC: 0.613
2024-11-20 09:09 - INFO - 	 Best Val. Loss: 0.099
2024-11-20 09:09 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 09:09 - INFO - 	 Best PR-AUC: 0.656
2024-11-20 09:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-20 09:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.425
2024-11-20 09:09 - INFO - ---------------------------------------------
2024-11-20 09:11 - INFO - Fit the preprocessing pipeline
2024-11-20 09:11 - INFO - Training using device: cuda
2024-11-20 09:11 - INFO - Creating generators
2024-11-20 09:11 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 09:11 - INFO - * Model:
2024-11-20 09:11 - INFO - * -----------
2024-11-20 09:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 09:11 - INFO - * -----------
2024-11-20 09:18 - INFO - ---------------------------------------------
2024-11-20 09:18 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-20 09:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48879
2024-11-20 09:18 - INFO - 	 Train Loss: 0.120
2024-11-20 09:18 - INFO - 	 Val. Loss: 0.125
2024-11-20 09:18 - INFO - 	 ROC-AUC: 0.966
2024-11-20 09:18 - INFO - 	 PR-AUC: 0.489
2024-11-20 09:18 - INFO - 	 Best Val. Loss: 0.125
2024-11-20 09:18 - INFO - 	 Best ROC-AUC: 0.966
2024-11-20 09:18 - INFO - 	 Best PR-AUC: 0.489
2024-11-20 09:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-20 09:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.276
2024-11-20 09:18 - INFO - ---------------------------------------------
2024-11-20 09:25 - INFO - ---------------------------------------------
2024-11-20 09:25 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-20 09:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58751
2024-11-20 09:25 - INFO - 	 Train Loss: 0.110
2024-11-20 09:25 - INFO - 	 Val. Loss: 0.126
2024-11-20 09:25 - INFO - 	 ROC-AUC: 0.973
2024-11-20 09:25 - INFO - 	 PR-AUC: 0.588
2024-11-20 09:25 - INFO - 	 Best Val. Loss: 0.125
2024-11-20 09:25 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 09:25 - INFO - 	 Best PR-AUC: 0.588
2024-11-20 09:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 09:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.324
2024-11-20 09:25 - INFO - ---------------------------------------------
2024-11-20 09:32 - INFO - ---------------------------------------------
2024-11-20 09:32 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-20 09:32 - INFO - 	 Train Loss: 0.107
2024-11-20 09:32 - INFO - 	 Val. Loss: 0.114
2024-11-20 09:32 - INFO - 	 ROC-AUC: 0.968
2024-11-20 09:32 - INFO - 	 PR-AUC: 0.573
2024-11-20 09:32 - INFO - 	 Best Val. Loss: 0.114
2024-11-20 09:32 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 09:32 - INFO - 	 Best PR-AUC: 0.588
2024-11-20 09:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 09:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.324
2024-11-20 09:32 - INFO - ---------------------------------------------
2024-11-20 09:39 - INFO - ---------------------------------------------
2024-11-20 09:39 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 09:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66999
2024-11-20 09:39 - INFO - 	 Train Loss: 0.102
2024-11-20 09:39 - INFO - 	 Val. Loss: 0.090
2024-11-20 09:39 - INFO - 	 ROC-AUC: 0.968
2024-11-20 09:39 - INFO - 	 PR-AUC: 0.670
2024-11-20 09:39 - INFO - 	 Best Val. Loss: 0.090
2024-11-20 09:39 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 09:39 - INFO - 	 Best PR-AUC: 0.670
2024-11-20 09:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 09:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.415
2024-11-20 09:39 - INFO - ---------------------------------------------
2024-11-20 09:47 - INFO - ---------------------------------------------
2024-11-20 09:47 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-20 09:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67101
2024-11-20 09:47 - INFO - 	 Train Loss: 0.100
2024-11-20 09:47 - INFO - 	 Val. Loss: 0.099
2024-11-20 09:47 - INFO - 	 ROC-AUC: 0.967
2024-11-20 09:47 - INFO - 	 PR-AUC: 0.671
2024-11-20 09:47 - INFO - 	 Best Val. Loss: 0.090
2024-11-20 09:47 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 09:47 - INFO - 	 Best PR-AUC: 0.671
2024-11-20 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-11-20 09:47 - INFO - ---------------------------------------------
2024-11-20 09:54 - INFO - ---------------------------------------------
2024-11-20 09:54 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-20 09:54 - INFO - 	 Train Loss: 0.099
2024-11-20 09:54 - INFO - 	 Val. Loss: 0.094
2024-11-20 09:54 - INFO - 	 ROC-AUC: 0.968
2024-11-20 09:54 - INFO - 	 PR-AUC: 0.670
2024-11-20 09:54 - INFO - 	 Best Val. Loss: 0.090
2024-11-20 09:54 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 09:54 - INFO - 	 Best PR-AUC: 0.671
2024-11-20 09:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 09:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-11-20 09:54 - INFO - ---------------------------------------------
2024-11-20 10:01 - INFO - ---------------------------------------------
2024-11-20 10:01 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 10:01 - INFO - 	 Train Loss: 0.098
2024-11-20 10:01 - INFO - 	 Val. Loss: 0.114
2024-11-20 10:01 - INFO - 	 ROC-AUC: 0.949
2024-11-20 10:01 - INFO - 	 PR-AUC: 0.639
2024-11-20 10:01 - INFO - 	 Best Val. Loss: 0.090
2024-11-20 10:01 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 10:01 - INFO - 	 Best PR-AUC: 0.671
2024-11-20 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-11-20 10:01 - INFO - ---------------------------------------------
2024-11-20 10:08 - INFO - ---------------------------------------------
2024-11-20 10:08 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-20 10:08 - INFO - 	 Train Loss: 0.099
2024-11-20 10:08 - INFO - 	 Val. Loss: 0.116
2024-11-20 10:08 - INFO - 	 ROC-AUC: 0.966
2024-11-20 10:08 - INFO - 	 PR-AUC: 0.587
2024-11-20 10:08 - INFO - 	 Best Val. Loss: 0.090
2024-11-20 10:08 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 10:08 - INFO - 	 Best PR-AUC: 0.671
2024-11-20 10:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-20 10:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.426
2024-11-20 10:08 - INFO - ---------------------------------------------
2024-11-20 10:17 - INFO - Fit the preprocessing pipeline
2024-11-20 10:17 - INFO - Training using device: cuda
2024-11-20 10:17 - INFO - Creating generators
2024-11-20 10:17 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 10:17 - INFO - * Model:
2024-11-20 10:17 - INFO - * -----------
2024-11-20 10:17 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 10:17 - INFO - * -----------
2024-11-20 10:24 - INFO - ---------------------------------------------
2024-11-20 10:24 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-20 10:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54165
2024-11-20 10:24 - INFO - 	 Train Loss: 0.121
2024-11-20 10:24 - INFO - 	 Val. Loss: 0.117
2024-11-20 10:24 - INFO - 	 ROC-AUC: 0.970
2024-11-20 10:24 - INFO - 	 PR-AUC: 0.542
2024-11-20 10:24 - INFO - 	 Best Val. Loss: 0.117
2024-11-20 10:24 - INFO - 	 Best ROC-AUC: 0.970
2024-11-20 10:24 - INFO - 	 Best PR-AUC: 0.542
2024-11-20 10:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-20 10:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.319
2024-11-20 10:24 - INFO - ---------------------------------------------
2024-11-20 10:31 - INFO - ---------------------------------------------
2024-11-20 10:31 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-20 10:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60367
2024-11-20 10:31 - INFO - 	 Train Loss: 0.109
2024-11-20 10:31 - INFO - 	 Val. Loss: 0.112
2024-11-20 10:31 - INFO - 	 ROC-AUC: 0.969
2024-11-20 10:31 - INFO - 	 PR-AUC: 0.604
2024-11-20 10:31 - INFO - 	 Best Val. Loss: 0.112
2024-11-20 10:31 - INFO - 	 Best ROC-AUC: 0.970
2024-11-20 10:31 - INFO - 	 Best PR-AUC: 0.604
2024-11-20 10:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-20 10:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.355
2024-11-20 10:31 - INFO - ---------------------------------------------
2024-11-20 10:38 - INFO - ---------------------------------------------
2024-11-20 10:38 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-20 10:38 - INFO - 	 Train Loss: 0.105
2024-11-20 10:38 - INFO - 	 Val. Loss: 0.095
2024-11-20 10:38 - INFO - 	 ROC-AUC: 0.967
2024-11-20 10:38 - INFO - 	 PR-AUC: 0.594
2024-11-20 10:38 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 10:38 - INFO - 	 Best ROC-AUC: 0.970
2024-11-20 10:38 - INFO - 	 Best PR-AUC: 0.604
2024-11-20 10:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-20 10:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.355
2024-11-20 10:38 - INFO - ---------------------------------------------
2024-11-20 10:45 - INFO - ---------------------------------------------
2024-11-20 10:45 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 10:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6401
2024-11-20 10:45 - INFO - 	 Train Loss: 0.101
2024-11-20 10:45 - INFO - 	 Val. Loss: 0.097
2024-11-20 10:45 - INFO - 	 ROC-AUC: 0.972
2024-11-20 10:45 - INFO - 	 PR-AUC: 0.640
2024-11-20 10:45 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 10:45 - INFO - 	 Best ROC-AUC: 0.972
2024-11-20 10:45 - INFO - 	 Best PR-AUC: 0.640
2024-11-20 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-20 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-20 10:45 - INFO - ---------------------------------------------
2024-11-20 10:52 - INFO - ---------------------------------------------
2024-11-20 10:52 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-20 10:52 - INFO - 	 Train Loss: 0.100
2024-11-20 10:52 - INFO - 	 Val. Loss: 0.103
2024-11-20 10:52 - INFO - 	 ROC-AUC: 0.967
2024-11-20 10:52 - INFO - 	 PR-AUC: 0.636
2024-11-20 10:52 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 10:52 - INFO - 	 Best ROC-AUC: 0.972
2024-11-20 10:52 - INFO - 	 Best PR-AUC: 0.640
2024-11-20 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-20 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-20 10:52 - INFO - ---------------------------------------------
2024-11-20 11:00 - INFO - ---------------------------------------------
2024-11-20 11:00 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-20 11:00 - INFO - 	 Train Loss: 0.100
2024-11-20 11:00 - INFO - 	 Val. Loss: 0.109
2024-11-20 11:00 - INFO - 	 ROC-AUC: 0.968
2024-11-20 11:00 - INFO - 	 PR-AUC: 0.613
2024-11-20 11:00 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 11:00 - INFO - 	 Best ROC-AUC: 0.972
2024-11-20 11:00 - INFO - 	 Best PR-AUC: 0.640
2024-11-20 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-20 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-20 11:00 - INFO - ---------------------------------------------
2024-11-20 11:07 - INFO - ---------------------------------------------
2024-11-20 11:07 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 11:07 - INFO - 	 Train Loss: 0.098
2024-11-20 11:07 - INFO - 	 Val. Loss: 0.110
2024-11-20 11:07 - INFO - 	 ROC-AUC: 0.949
2024-11-20 11:07 - INFO - 	 PR-AUC: 0.603
2024-11-20 11:07 - INFO - 	 Best Val. Loss: 0.095
2024-11-20 11:07 - INFO - 	 Best ROC-AUC: 0.972
2024-11-20 11:07 - INFO - 	 Best PR-AUC: 0.640
2024-11-20 11:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-20 11:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-20 11:07 - INFO - ---------------------------------------------
2024-11-20 11:16 - INFO - Fit the preprocessing pipeline
2024-11-20 11:16 - INFO - Training using device: cuda
2024-11-20 11:16 - INFO - Creating generators
2024-11-20 11:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-20 11:16 - INFO - * Model:
2024-11-20 11:16 - INFO - * -----------
2024-11-20 11:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-20 11:16 - INFO - * -----------
2024-11-20 11:23 - INFO - ---------------------------------------------
2024-11-20 11:23 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-20 11:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50578
2024-11-20 11:23 - INFO - 	 Train Loss: 0.120
2024-11-20 11:23 - INFO - 	 Val. Loss: 0.119
2024-11-20 11:23 - INFO - 	 ROC-AUC: 0.968
2024-11-20 11:23 - INFO - 	 PR-AUC: 0.506
2024-11-20 11:23 - INFO - 	 Best Val. Loss: 0.119
2024-11-20 11:23 - INFO - 	 Best ROC-AUC: 0.968
2024-11-20 11:23 - INFO - 	 Best PR-AUC: 0.506
2024-11-20 11:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-20 11:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.314
2024-11-20 11:23 - INFO - ---------------------------------------------
2024-11-20 11:30 - INFO - ---------------------------------------------
2024-11-20 11:30 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-20 11:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58534
2024-11-20 11:30 - INFO - 	 Train Loss: 0.110
2024-11-20 11:30 - INFO - 	 Val. Loss: 0.100
2024-11-20 11:30 - INFO - 	 ROC-AUC: 0.976
2024-11-20 11:30 - INFO - 	 PR-AUC: 0.585
2024-11-20 11:30 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 11:30 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 11:30 - INFO - 	 Best PR-AUC: 0.585
2024-11-20 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-20 11:30 - INFO - ---------------------------------------------
2024-11-20 11:37 - INFO - ---------------------------------------------
2024-11-20 11:37 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-20 11:37 - INFO - 	 Train Loss: 0.105
2024-11-20 11:37 - INFO - 	 Val. Loss: 0.141
2024-11-20 11:37 - INFO - 	 ROC-AUC: 0.950
2024-11-20 11:37 - INFO - 	 PR-AUC: 0.428
2024-11-20 11:37 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 11:37 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 11:37 - INFO - 	 Best PR-AUC: 0.585
2024-11-20 11:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 11:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-20 11:37 - INFO - ---------------------------------------------
2024-11-20 11:44 - INFO - ---------------------------------------------
2024-11-20 11:44 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-20 11:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58535
2024-11-20 11:44 - INFO - 	 Train Loss: 0.102
2024-11-20 11:44 - INFO - 	 Val. Loss: 0.100
2024-11-20 11:44 - INFO - 	 ROC-AUC: 0.962
2024-11-20 11:44 - INFO - 	 PR-AUC: 0.585
2024-11-20 11:44 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 11:44 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 11:44 - INFO - 	 Best PR-AUC: 0.585
2024-11-20 11:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 11:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.353
2024-11-20 11:44 - INFO - ---------------------------------------------
2024-11-20 11:51 - INFO - ---------------------------------------------
2024-11-20 11:51 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-20 11:51 - INFO - 	 Train Loss: 0.101
2024-11-20 11:51 - INFO - 	 Val. Loss: 0.112
2024-11-20 11:51 - INFO - 	 ROC-AUC: 0.958
2024-11-20 11:51 - INFO - 	 PR-AUC: 0.543
2024-11-20 11:51 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 11:51 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 11:51 - INFO - 	 Best PR-AUC: 0.585
2024-11-20 11:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 11:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.353
2024-11-20 11:51 - INFO - ---------------------------------------------
2024-11-20 11:58 - INFO - ---------------------------------------------
2024-11-20 11:58 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-20 11:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70266
2024-11-20 11:58 - INFO - 	 Train Loss: 0.100
2024-11-20 11:58 - INFO - 	 Val. Loss: 0.102
2024-11-20 11:58 - INFO - 	 ROC-AUC: 0.967
2024-11-20 11:58 - INFO - 	 PR-AUC: 0.703
2024-11-20 11:58 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 11:58 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 11:58 - INFO - 	 Best PR-AUC: 0.703
2024-11-20 11:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 11:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 11:58 - INFO - ---------------------------------------------
2024-11-20 12:06 - INFO - ---------------------------------------------
2024-11-20 12:06 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 12:06 - INFO - 	 Train Loss: 0.099
2024-11-20 12:06 - INFO - 	 Val. Loss: 0.108
2024-11-20 12:06 - INFO - 	 ROC-AUC: 0.951
2024-11-20 12:06 - INFO - 	 PR-AUC: 0.619
2024-11-20 12:06 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 12:06 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 12:06 - INFO - 	 Best PR-AUC: 0.703
2024-11-20 12:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 12:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 12:06 - INFO - ---------------------------------------------
2024-11-20 12:13 - INFO - ---------------------------------------------
2024-11-20 12:13 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-20 12:13 - INFO - 	 Train Loss: 0.099
2024-11-20 12:13 - INFO - 	 Val. Loss: 0.100
2024-11-20 12:13 - INFO - 	 ROC-AUC: 0.968
2024-11-20 12:13 - INFO - 	 PR-AUC: 0.621
2024-11-20 12:13 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 12:13 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 12:13 - INFO - 	 Best PR-AUC: 0.703
2024-11-20 12:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 12:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 12:13 - INFO - ---------------------------------------------
2024-11-20 12:20 - INFO - ---------------------------------------------
2024-11-20 12:20 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-20 12:20 - INFO - 	 Train Loss: 0.096
2024-11-20 12:20 - INFO - 	 Val. Loss: 0.109
2024-11-20 12:20 - INFO - 	 ROC-AUC: 0.964
2024-11-20 12:20 - INFO - 	 PR-AUC: 0.670
2024-11-20 12:20 - INFO - 	 Best Val. Loss: 0.100
2024-11-20 12:20 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 12:20 - INFO - 	 Best PR-AUC: 0.703
2024-11-20 12:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-20 12:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.414
2024-11-20 12:20 - INFO - ---------------------------------------------
