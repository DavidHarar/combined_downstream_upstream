2024-10-16 08:21 - INFO - Fit the preprocessing pipeline
2024-10-16 08:21 - INFO - Training using device: cuda
2024-10-16 08:21 - INFO - Creating generators
2024-10-16 08:21 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 08:21 - INFO - * Model:
2024-10-16 08:21 - INFO - * -----------
2024-10-16 08:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 08:21 - INFO - * -----------
2024-10-16 08:29 - INFO - ---------------------------------------------
2024-10-16 08:29 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 08:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87739
2024-10-16 08:29 - INFO - 	 Train Loss: 0.075
2024-10-16 08:29 - INFO - 	 Val. Loss: 0.062
2024-10-16 08:29 - INFO - 	 ROC-AUC: 0.988
2024-10-16 08:29 - INFO - 	 PR-AUC: 0.877
2024-10-16 08:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-16 08:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 08:29 - INFO - 	 Best PR-AUC: 0.877
2024-10-16 08:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-16 08:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-16 08:29 - INFO - ---------------------------------------------
2024-10-16 08:38 - INFO - ---------------------------------------------
2024-10-16 08:38 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-16 08:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8847
2024-10-16 08:38 - INFO - 	 Train Loss: 0.067
2024-10-16 08:38 - INFO - 	 Val. Loss: 0.059
2024-10-16 08:38 - INFO - 	 ROC-AUC: 0.988
2024-10-16 08:38 - INFO - 	 PR-AUC: 0.885
2024-10-16 08:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 08:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 08:38 - INFO - 	 Best PR-AUC: 0.885
2024-10-16 08:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 08:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-16 08:38 - INFO - ---------------------------------------------
2024-10-16 08:46 - INFO - ---------------------------------------------
2024-10-16 08:46 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 08:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89507
2024-10-16 08:46 - INFO - 	 Train Loss: 0.065
2024-10-16 08:46 - INFO - 	 Val. Loss: 0.057
2024-10-16 08:46 - INFO - 	 ROC-AUC: 0.989
2024-10-16 08:46 - INFO - 	 PR-AUC: 0.895
2024-10-16 08:46 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 08:46 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 08:46 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 08:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 08:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-16 08:46 - INFO - ---------------------------------------------
2024-10-16 08:54 - INFO - ---------------------------------------------
2024-10-16 08:54 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 08:54 - INFO - 	 Train Loss: 0.062
2024-10-16 08:54 - INFO - 	 Val. Loss: 0.057
2024-10-16 08:54 - INFO - 	 ROC-AUC: 0.988
2024-10-16 08:54 - INFO - 	 PR-AUC: 0.891
2024-10-16 08:54 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 08:54 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 08:54 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 08:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 08:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-16 08:54 - INFO - ---------------------------------------------
2024-10-16 09:02 - INFO - ---------------------------------------------
2024-10-16 09:02 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 09:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89607
2024-10-16 09:02 - INFO - 	 Train Loss: 0.061
2024-10-16 09:02 - INFO - 	 Val. Loss: 0.060
2024-10-16 09:02 - INFO - 	 ROC-AUC: 0.989
2024-10-16 09:02 - INFO - 	 PR-AUC: 0.896
2024-10-16 09:02 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 09:02 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 09:02 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 09:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 09:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-16 09:02 - INFO - ---------------------------------------------
2024-10-16 09:10 - INFO - ---------------------------------------------
2024-10-16 09:10 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 09:10 - INFO - 	 Train Loss: 0.060
2024-10-16 09:10 - INFO - 	 Val. Loss: 0.056
2024-10-16 09:10 - INFO - 	 ROC-AUC: 0.989
2024-10-16 09:10 - INFO - 	 PR-AUC: 0.893
2024-10-16 09:10 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 09:10 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 09:10 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 09:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 09:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-16 09:10 - INFO - ---------------------------------------------
2024-10-16 09:18 - INFO - ---------------------------------------------
2024-10-16 09:18 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 09:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89914
2024-10-16 09:18 - INFO - 	 Train Loss: 0.058
2024-10-16 09:18 - INFO - 	 Val. Loss: 0.055
2024-10-16 09:18 - INFO - 	 ROC-AUC: 0.989
2024-10-16 09:18 - INFO - 	 PR-AUC: 0.899
2024-10-16 09:18 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 09:18 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 09:18 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 09:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 09:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-16 09:18 - INFO - ---------------------------------------------
2024-10-16 09:26 - INFO - ---------------------------------------------
2024-10-16 09:26 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 09:26 - INFO - 	 Train Loss: 0.058
2024-10-16 09:26 - INFO - 	 Val. Loss: 0.057
2024-10-16 09:26 - INFO - 	 ROC-AUC: 0.988
2024-10-16 09:26 - INFO - 	 PR-AUC: 0.895
2024-10-16 09:26 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 09:26 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 09:26 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-16 09:26 - INFO - ---------------------------------------------
2024-10-16 09:34 - INFO - ---------------------------------------------
2024-10-16 09:34 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 09:34 - INFO - 	 Train Loss: 0.057
2024-10-16 09:34 - INFO - 	 Val. Loss: 0.056
2024-10-16 09:34 - INFO - 	 ROC-AUC: 0.989
2024-10-16 09:34 - INFO - 	 PR-AUC: 0.895
2024-10-16 09:34 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 09:34 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 09:34 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 09:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 09:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-16 09:34 - INFO - ---------------------------------------------
2024-10-16 09:42 - INFO - ---------------------------------------------
2024-10-16 09:42 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 09:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90199
2024-10-16 09:42 - INFO - 	 Train Loss: 0.055
2024-10-16 09:42 - INFO - 	 Val. Loss: 0.054
2024-10-16 09:42 - INFO - 	 ROC-AUC: 0.990
2024-10-16 09:42 - INFO - 	 PR-AUC: 0.902
2024-10-16 09:42 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 09:42 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 09:42 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 09:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 09:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-16 09:42 - INFO - ---------------------------------------------
2024-10-16 09:44 - INFO - Fit the preprocessing pipeline
2024-10-16 09:44 - INFO - Training using device: cuda
2024-10-16 09:44 - INFO - Creating generators
2024-10-16 09:44 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 09:44 - INFO - * Model:
2024-10-16 09:44 - INFO - * -----------
2024-10-16 09:44 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 09:44 - INFO - * -----------
2024-10-16 09:52 - INFO - ---------------------------------------------
2024-10-16 09:52 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 09:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88113
2024-10-16 09:52 - INFO - 	 Train Loss: 0.076
2024-10-16 09:52 - INFO - 	 Val. Loss: 0.061
2024-10-16 09:52 - INFO - 	 ROC-AUC: 0.988
2024-10-16 09:52 - INFO - 	 PR-AUC: 0.881
2024-10-16 09:52 - INFO - 	 Best Val. Loss: 0.061
2024-10-16 09:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 09:52 - INFO - 	 Best PR-AUC: 0.881
2024-10-16 09:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-16 09:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-16 09:52 - INFO - ---------------------------------------------
2024-10-16 10:00 - INFO - ---------------------------------------------
2024-10-16 10:00 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 10:00 - INFO - 	 Train Loss: 0.067
2024-10-16 10:00 - INFO - 	 Val. Loss: 0.064
2024-10-16 10:00 - INFO - 	 ROC-AUC: 0.987
2024-10-16 10:00 - INFO - 	 PR-AUC: 0.868
2024-10-16 10:00 - INFO - 	 Best Val. Loss: 0.061
2024-10-16 10:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 10:00 - INFO - 	 Best PR-AUC: 0.881
2024-10-16 10:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-16 10:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-16 10:00 - INFO - ---------------------------------------------
2024-10-16 10:08 - INFO - ---------------------------------------------
2024-10-16 10:08 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 10:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90155
2024-10-16 10:08 - INFO - 	 Train Loss: 0.065
2024-10-16 10:08 - INFO - 	 Val. Loss: 0.056
2024-10-16 10:08 - INFO - 	 ROC-AUC: 0.989
2024-10-16 10:08 - INFO - 	 PR-AUC: 0.902
2024-10-16 10:08 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 10:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 10:08 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 10:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 10:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-16 10:08 - INFO - ---------------------------------------------
2024-10-16 10:16 - INFO - ---------------------------------------------
2024-10-16 10:16 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 10:16 - INFO - 	 Train Loss: 0.062
2024-10-16 10:16 - INFO - 	 Val. Loss: 0.060
2024-10-16 10:16 - INFO - 	 ROC-AUC: 0.987
2024-10-16 10:16 - INFO - 	 PR-AUC: 0.883
2024-10-16 10:16 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 10:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 10:16 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 10:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 10:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-16 10:16 - INFO - ---------------------------------------------
2024-10-16 10:24 - INFO - ---------------------------------------------
2024-10-16 10:24 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 10:24 - INFO - 	 Train Loss: 0.061
2024-10-16 10:24 - INFO - 	 Val. Loss: 0.059
2024-10-16 10:24 - INFO - 	 ROC-AUC: 0.989
2024-10-16 10:24 - INFO - 	 PR-AUC: 0.878
2024-10-16 10:24 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 10:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 10:24 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 10:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 10:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-16 10:24 - INFO - ---------------------------------------------
2024-10-16 10:32 - INFO - ---------------------------------------------
2024-10-16 10:32 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 10:32 - INFO - 	 Train Loss: 0.060
2024-10-16 10:32 - INFO - 	 Val. Loss: 0.057
2024-10-16 10:32 - INFO - 	 ROC-AUC: 0.988
2024-10-16 10:32 - INFO - 	 PR-AUC: 0.890
2024-10-16 10:32 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 10:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 10:32 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 10:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 10:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-16 10:32 - INFO - ---------------------------------------------
2024-10-16 10:43 - INFO - Fit the preprocessing pipeline
2024-10-16 10:43 - INFO - Training using device: cuda
2024-10-16 10:43 - INFO - Creating generators
2024-10-16 10:43 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 10:43 - INFO - * Model:
2024-10-16 10:43 - INFO - * -----------
2024-10-16 10:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 10:43 - INFO - * -----------
2024-10-16 10:51 - INFO - ---------------------------------------------
2024-10-16 10:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 10:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87266
2024-10-16 10:51 - INFO - 	 Train Loss: 0.075
2024-10-16 10:51 - INFO - 	 Val. Loss: 0.063
2024-10-16 10:51 - INFO - 	 ROC-AUC: 0.987
2024-10-16 10:51 - INFO - 	 PR-AUC: 0.873
2024-10-16 10:51 - INFO - 	 Best Val. Loss: 0.063
2024-10-16 10:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 10:51 - INFO - 	 Best PR-AUC: 0.873
2024-10-16 10:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 10:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-16 10:51 - INFO - ---------------------------------------------
2024-10-16 10:59 - INFO - ---------------------------------------------
2024-10-16 10:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 10:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88958
2024-10-16 10:59 - INFO - 	 Train Loss: 0.067
2024-10-16 10:59 - INFO - 	 Val. Loss: 0.057
2024-10-16 10:59 - INFO - 	 ROC-AUC: 0.989
2024-10-16 10:59 - INFO - 	 PR-AUC: 0.890
2024-10-16 10:59 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 10:59 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 10:59 - INFO - 	 Best PR-AUC: 0.890
2024-10-16 10:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 10:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-16 10:59 - INFO - ---------------------------------------------
2024-10-16 11:07 - INFO - ---------------------------------------------
2024-10-16 11:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 11:07 - INFO - 	 Train Loss: 0.064
2024-10-16 11:07 - INFO - 	 Val. Loss: 0.058
2024-10-16 11:07 - INFO - 	 ROC-AUC: 0.989
2024-10-16 11:07 - INFO - 	 PR-AUC: 0.889
2024-10-16 11:07 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 11:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 11:07 - INFO - 	 Best PR-AUC: 0.890
2024-10-16 11:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 11:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-16 11:07 - INFO - ---------------------------------------------
2024-10-16 11:15 - INFO - ---------------------------------------------
2024-10-16 11:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 11:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89242
2024-10-16 11:15 - INFO - 	 Train Loss: 0.062
2024-10-16 11:15 - INFO - 	 Val. Loss: 0.058
2024-10-16 11:15 - INFO - 	 ROC-AUC: 0.989
2024-10-16 11:15 - INFO - 	 PR-AUC: 0.892
2024-10-16 11:15 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 11:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 11:15 - INFO - 	 Best PR-AUC: 0.892
2024-10-16 11:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 11:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-16 11:15 - INFO - ---------------------------------------------
2024-10-16 11:23 - INFO - ---------------------------------------------
2024-10-16 11:23 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 11:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89856
2024-10-16 11:23 - INFO - 	 Train Loss: 0.060
2024-10-16 11:23 - INFO - 	 Val. Loss: 0.055
2024-10-16 11:23 - INFO - 	 ROC-AUC: 0.989
2024-10-16 11:23 - INFO - 	 PR-AUC: 0.899
2024-10-16 11:23 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 11:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 11:23 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 11:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 11:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-16 11:23 - INFO - ---------------------------------------------
2024-10-16 11:31 - INFO - ---------------------------------------------
2024-10-16 11:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 11:31 - INFO - 	 Train Loss: 0.059
2024-10-16 11:31 - INFO - 	 Val. Loss: 0.058
2024-10-16 11:31 - INFO - 	 ROC-AUC: 0.988
2024-10-16 11:31 - INFO - 	 PR-AUC: 0.889
2024-10-16 11:31 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 11:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 11:31 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 11:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 11:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-16 11:31 - INFO - ---------------------------------------------
2024-10-16 11:39 - INFO - ---------------------------------------------
2024-10-16 11:39 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 11:39 - INFO - 	 Train Loss: 0.058
2024-10-16 11:39 - INFO - 	 Val. Loss: 0.056
2024-10-16 11:39 - INFO - 	 ROC-AUC: 0.989
2024-10-16 11:39 - INFO - 	 PR-AUC: 0.899
2024-10-16 11:39 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 11:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 11:39 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 11:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 11:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-16 11:39 - INFO - ---------------------------------------------
2024-10-16 11:47 - INFO - ---------------------------------------------
2024-10-16 11:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 11:47 - INFO - 	 Train Loss: 0.056
2024-10-16 11:47 - INFO - 	 Val. Loss: 0.059
2024-10-16 11:47 - INFO - 	 ROC-AUC: 0.988
2024-10-16 11:47 - INFO - 	 PR-AUC: 0.892
2024-10-16 11:47 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 11:47 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 11:47 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 11:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 11:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-16 11:47 - INFO - ---------------------------------------------
2024-10-16 11:55 - INFO - ---------------------------------------------
2024-10-16 11:55 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 11:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90751
2024-10-16 11:55 - INFO - 	 Train Loss: 0.056
2024-10-16 11:55 - INFO - 	 Val. Loss: 0.054
2024-10-16 11:55 - INFO - 	 ROC-AUC: 0.990
2024-10-16 11:55 - INFO - 	 PR-AUC: 0.908
2024-10-16 11:55 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 11:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 11:55 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 11:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 11:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 11:55 - INFO - ---------------------------------------------
2024-10-16 12:03 - INFO - ---------------------------------------------
2024-10-16 12:03 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 12:03 - INFO - 	 Train Loss: 0.055
2024-10-16 12:03 - INFO - 	 Val. Loss: 0.055
2024-10-16 12:03 - INFO - 	 ROC-AUC: 0.989
2024-10-16 12:03 - INFO - 	 PR-AUC: 0.904
2024-10-16 12:03 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 12:03 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 12:03 - INFO - 	 Best PR-AUC: 0.908
2024-10-16 12:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 12:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 12:03 - INFO - ---------------------------------------------
2024-10-16 12:05 - INFO - Fit the preprocessing pipeline
2024-10-16 12:05 - INFO - Training using device: cuda
2024-10-16 12:05 - INFO - Creating generators
2024-10-16 12:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 12:05 - INFO - * Model:
2024-10-16 12:05 - INFO - * -----------
2024-10-16 12:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 12:05 - INFO - * -----------
2024-10-16 12:13 - INFO - ---------------------------------------------
2024-10-16 12:13 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 12:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86714
2024-10-16 12:13 - INFO - 	 Train Loss: 0.075
2024-10-16 12:13 - INFO - 	 Val. Loss: 0.064
2024-10-16 12:13 - INFO - 	 ROC-AUC: 0.987
2024-10-16 12:13 - INFO - 	 PR-AUC: 0.867
2024-10-16 12:13 - INFO - 	 Best Val. Loss: 0.064
2024-10-16 12:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 12:13 - INFO - 	 Best PR-AUC: 0.867
2024-10-16 12:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 12:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-16 12:13 - INFO - ---------------------------------------------
2024-10-16 12:21 - INFO - ---------------------------------------------
2024-10-16 12:21 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 12:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8741
2024-10-16 12:21 - INFO - 	 Train Loss: 0.067
2024-10-16 12:21 - INFO - 	 Val. Loss: 0.063
2024-10-16 12:21 - INFO - 	 ROC-AUC: 0.988
2024-10-16 12:21 - INFO - 	 PR-AUC: 0.874
2024-10-16 12:21 - INFO - 	 Best Val. Loss: 0.063
2024-10-16 12:21 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 12:21 - INFO - 	 Best PR-AUC: 0.874
2024-10-16 12:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 12:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-16 12:21 - INFO - ---------------------------------------------
2024-10-16 12:29 - INFO - ---------------------------------------------
2024-10-16 12:29 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 12:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89409
2024-10-16 12:29 - INFO - 	 Train Loss: 0.065
2024-10-16 12:29 - INFO - 	 Val. Loss: 0.058
2024-10-16 12:29 - INFO - 	 ROC-AUC: 0.988
2024-10-16 12:29 - INFO - 	 PR-AUC: 0.894
2024-10-16 12:29 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 12:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 12:29 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 12:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 12:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-16 12:29 - INFO - ---------------------------------------------
2024-10-16 12:37 - INFO - ---------------------------------------------
2024-10-16 12:37 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 12:37 - INFO - 	 Train Loss: 0.062
2024-10-16 12:37 - INFO - 	 Val. Loss: 0.058
2024-10-16 12:37 - INFO - 	 ROC-AUC: 0.988
2024-10-16 12:37 - INFO - 	 PR-AUC: 0.886
2024-10-16 12:37 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 12:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 12:37 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 12:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 12:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-16 12:37 - INFO - ---------------------------------------------
2024-10-16 12:45 - INFO - ---------------------------------------------
2024-10-16 12:45 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 12:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89665
2024-10-16 12:45 - INFO - 	 Train Loss: 0.059
2024-10-16 12:45 - INFO - 	 Val. Loss: 0.056
2024-10-16 12:45 - INFO - 	 ROC-AUC: 0.988
2024-10-16 12:45 - INFO - 	 PR-AUC: 0.897
2024-10-16 12:45 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 12:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 12:45 - INFO - 	 Best PR-AUC: 0.897
2024-10-16 12:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 12:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-16 12:45 - INFO - ---------------------------------------------
2024-10-16 12:53 - INFO - ---------------------------------------------
2024-10-16 12:53 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 12:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89673
2024-10-16 12:53 - INFO - 	 Train Loss: 0.059
2024-10-16 12:53 - INFO - 	 Val. Loss: 0.056
2024-10-16 12:53 - INFO - 	 ROC-AUC: 0.989
2024-10-16 12:53 - INFO - 	 PR-AUC: 0.897
2024-10-16 12:53 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 12:53 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 12:53 - INFO - 	 Best PR-AUC: 0.897
2024-10-16 12:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 12:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-16 12:53 - INFO - ---------------------------------------------
2024-10-16 13:02 - INFO - ---------------------------------------------
2024-10-16 13:02 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 13:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89844
2024-10-16 13:02 - INFO - 	 Train Loss: 0.059
2024-10-16 13:02 - INFO - 	 Val. Loss: 0.056
2024-10-16 13:02 - INFO - 	 ROC-AUC: 0.989
2024-10-16 13:02 - INFO - 	 PR-AUC: 0.898
2024-10-16 13:02 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 13:02 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 13:02 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 13:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 13:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-16 13:02 - INFO - ---------------------------------------------
2024-10-16 13:10 - INFO - ---------------------------------------------
2024-10-16 13:10 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 13:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90473
2024-10-16 13:10 - INFO - 	 Train Loss: 0.056
2024-10-16 13:10 - INFO - 	 Val. Loss: 0.054
2024-10-16 13:10 - INFO - 	 ROC-AUC: 0.990
2024-10-16 13:10 - INFO - 	 PR-AUC: 0.905
2024-10-16 13:10 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 13:10 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 13:10 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 13:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 13:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-16 13:10 - INFO - ---------------------------------------------
2024-10-16 13:18 - INFO - ---------------------------------------------
2024-10-16 13:18 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 13:18 - INFO - 	 Train Loss: 0.057
2024-10-16 13:18 - INFO - 	 Val. Loss: 0.055
2024-10-16 13:18 - INFO - 	 ROC-AUC: 0.989
2024-10-16 13:18 - INFO - 	 PR-AUC: 0.895
2024-10-16 13:18 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 13:18 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 13:18 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 13:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 13:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-16 13:18 - INFO - ---------------------------------------------
2024-10-16 13:26 - INFO - ---------------------------------------------
2024-10-16 13:26 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 13:26 - INFO - 	 Train Loss: 0.057
2024-10-16 13:26 - INFO - 	 Val. Loss: 0.054
2024-10-16 13:26 - INFO - 	 ROC-AUC: 0.990
2024-10-16 13:26 - INFO - 	 PR-AUC: 0.897
2024-10-16 13:26 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 13:26 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 13:26 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 13:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 13:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-16 13:26 - INFO - ---------------------------------------------
2024-10-16 13:28 - INFO - Fit the preprocessing pipeline
2024-10-16 13:28 - INFO - Training using device: cuda
2024-10-16 13:28 - INFO - Creating generators
2024-10-16 13:28 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 13:28 - INFO - * Model:
2024-10-16 13:28 - INFO - * -----------
2024-10-16 13:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 13:28 - INFO - * -----------
2024-10-16 13:36 - INFO - ---------------------------------------------
2024-10-16 13:36 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 13:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87808
2024-10-16 13:36 - INFO - 	 Train Loss: 0.075
2024-10-16 13:36 - INFO - 	 Val. Loss: 0.066
2024-10-16 13:36 - INFO - 	 ROC-AUC: 0.986
2024-10-16 13:36 - INFO - 	 PR-AUC: 0.878
2024-10-16 13:36 - INFO - 	 Best Val. Loss: 0.066
2024-10-16 13:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-16 13:36 - INFO - 	 Best PR-AUC: 0.878
2024-10-16 13:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 13:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-16 13:36 - INFO - ---------------------------------------------
2024-10-16 13:44 - INFO - ---------------------------------------------
2024-10-16 13:44 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88768
2024-10-16 13:44 - INFO - 	 Train Loss: 0.066
2024-10-16 13:44 - INFO - 	 Val. Loss: 0.059
2024-10-16 13:44 - INFO - 	 ROC-AUC: 0.988
2024-10-16 13:44 - INFO - 	 PR-AUC: 0.888
2024-10-16 13:44 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 13:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 13:44 - INFO - 	 Best PR-AUC: 0.888
2024-10-16 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-16 13:44 - INFO - ---------------------------------------------
2024-10-16 13:52 - INFO - ---------------------------------------------
2024-10-16 13:52 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 13:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89485
2024-10-16 13:52 - INFO - 	 Train Loss: 0.065
2024-10-16 13:52 - INFO - 	 Val. Loss: 0.058
2024-10-16 13:52 - INFO - 	 ROC-AUC: 0.988
2024-10-16 13:52 - INFO - 	 PR-AUC: 0.895
2024-10-16 13:52 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 13:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 13:52 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 13:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 13:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-16 13:52 - INFO - ---------------------------------------------
2024-10-16 14:00 - INFO - ---------------------------------------------
2024-10-16 14:00 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 14:00 - INFO - 	 Train Loss: 0.062
2024-10-16 14:00 - INFO - 	 Val. Loss: 0.057
2024-10-16 14:00 - INFO - 	 ROC-AUC: 0.989
2024-10-16 14:00 - INFO - 	 PR-AUC: 0.893
2024-10-16 14:00 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 14:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 14:00 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 14:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 14:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-16 14:00 - INFO - ---------------------------------------------
2024-10-16 14:08 - INFO - ---------------------------------------------
2024-10-16 14:08 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 14:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89884
2024-10-16 14:08 - INFO - 	 Train Loss: 0.061
2024-10-16 14:08 - INFO - 	 Val. Loss: 0.059
2024-10-16 14:08 - INFO - 	 ROC-AUC: 0.989
2024-10-16 14:08 - INFO - 	 PR-AUC: 0.899
2024-10-16 14:08 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 14:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 14:08 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-16 14:08 - INFO - ---------------------------------------------
2024-10-16 14:16 - INFO - ---------------------------------------------
2024-10-16 14:16 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 14:16 - INFO - 	 Train Loss: 0.060
2024-10-16 14:16 - INFO - 	 Val. Loss: 0.057
2024-10-16 14:16 - INFO - 	 ROC-AUC: 0.988
2024-10-16 14:16 - INFO - 	 PR-AUC: 0.892
2024-10-16 14:16 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 14:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 14:16 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 14:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 14:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-16 14:16 - INFO - ---------------------------------------------
2024-10-16 14:24 - INFO - ---------------------------------------------
2024-10-16 14:24 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 14:24 - INFO - 	 Train Loss: 0.058
2024-10-16 14:24 - INFO - 	 Val. Loss: 0.058
2024-10-16 14:24 - INFO - 	 ROC-AUC: 0.988
2024-10-16 14:24 - INFO - 	 PR-AUC: 0.885
2024-10-16 14:24 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 14:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 14:24 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-16 14:24 - INFO - ---------------------------------------------
2024-10-16 14:32 - INFO - ---------------------------------------------
2024-10-16 14:32 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 14:32 - INFO - 	 Train Loss: 0.057
2024-10-16 14:32 - INFO - 	 Val. Loss: 0.056
2024-10-16 14:32 - INFO - 	 ROC-AUC: 0.989
2024-10-16 14:32 - INFO - 	 PR-AUC: 0.895
2024-10-16 14:32 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 14:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 14:32 - INFO - 	 Best PR-AUC: 0.899
2024-10-16 14:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 14:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-16 14:32 - INFO - ---------------------------------------------
2024-10-16 14:40 - INFO - ---------------------------------------------
2024-10-16 14:40 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 14:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90554
2024-10-16 14:40 - INFO - 	 Train Loss: 0.056
2024-10-16 14:40 - INFO - 	 Val. Loss: 0.053
2024-10-16 14:40 - INFO - 	 ROC-AUC: 0.990
2024-10-16 14:40 - INFO - 	 PR-AUC: 0.906
2024-10-16 14:40 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 14:40 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 14:40 - INFO - 	 Best PR-AUC: 0.906
2024-10-16 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.910
2024-10-16 14:40 - INFO - ---------------------------------------------
2024-10-16 14:48 - INFO - ---------------------------------------------
2024-10-16 14:48 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 14:48 - INFO - 	 Train Loss: 0.055
2024-10-16 14:48 - INFO - 	 Val. Loss: 0.057
2024-10-16 14:48 - INFO - 	 ROC-AUC: 0.988
2024-10-16 14:48 - INFO - 	 PR-AUC: 0.893
2024-10-16 14:48 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 14:48 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 14:48 - INFO - 	 Best PR-AUC: 0.906
2024-10-16 14:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 14:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.910
2024-10-16 14:48 - INFO - ---------------------------------------------
2024-10-16 14:51 - INFO - Fit the preprocessing pipeline
2024-10-16 14:51 - INFO - Training using device: cuda
2024-10-16 14:51 - INFO - Creating generators
2024-10-16 14:51 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 14:51 - INFO - * Model:
2024-10-16 14:51 - INFO - * -----------
2024-10-16 14:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 14:51 - INFO - * -----------
2024-10-16 14:59 - INFO - ---------------------------------------------
2024-10-16 14:59 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 14:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85771
2024-10-16 14:59 - INFO - 	 Train Loss: 0.075
2024-10-16 14:59 - INFO - 	 Val. Loss: 0.066
2024-10-16 14:59 - INFO - 	 ROC-AUC: 0.986
2024-10-16 14:59 - INFO - 	 PR-AUC: 0.858
2024-10-16 14:59 - INFO - 	 Best Val. Loss: 0.066
2024-10-16 14:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-16 14:59 - INFO - 	 Best PR-AUC: 0.858
2024-10-16 14:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 14:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-16 14:59 - INFO - ---------------------------------------------
2024-10-16 15:07 - INFO - ---------------------------------------------
2024-10-16 15:07 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 15:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88867
2024-10-16 15:07 - INFO - 	 Train Loss: 0.066
2024-10-16 15:07 - INFO - 	 Val. Loss: 0.059
2024-10-16 15:07 - INFO - 	 ROC-AUC: 0.988
2024-10-16 15:07 - INFO - 	 PR-AUC: 0.889
2024-10-16 15:07 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 15:07 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 15:07 - INFO - 	 Best PR-AUC: 0.889
2024-10-16 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-16 15:07 - INFO - ---------------------------------------------
2024-10-16 15:15 - INFO - ---------------------------------------------
2024-10-16 15:15 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 15:15 - INFO - 	 Train Loss: 0.063
2024-10-16 15:15 - INFO - 	 Val. Loss: 0.060
2024-10-16 15:15 - INFO - 	 ROC-AUC: 0.988
2024-10-16 15:15 - INFO - 	 PR-AUC: 0.878
2024-10-16 15:15 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 15:15 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 15:15 - INFO - 	 Best PR-AUC: 0.889
2024-10-16 15:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 15:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-16 15:15 - INFO - ---------------------------------------------
2024-10-16 15:23 - INFO - ---------------------------------------------
2024-10-16 15:23 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 15:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89177
2024-10-16 15:23 - INFO - 	 Train Loss: 0.061
2024-10-16 15:23 - INFO - 	 Val. Loss: 0.059
2024-10-16 15:23 - INFO - 	 ROC-AUC: 0.988
2024-10-16 15:23 - INFO - 	 PR-AUC: 0.892
2024-10-16 15:23 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 15:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 15:23 - INFO - 	 Best PR-AUC: 0.892
2024-10-16 15:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 15:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-16 15:23 - INFO - ---------------------------------------------
2024-10-16 15:31 - INFO - ---------------------------------------------
2024-10-16 15:31 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 15:31 - INFO - 	 Train Loss: 0.061
2024-10-16 15:31 - INFO - 	 Val. Loss: 0.056
2024-10-16 15:31 - INFO - 	 ROC-AUC: 0.989
2024-10-16 15:31 - INFO - 	 PR-AUC: 0.891
2024-10-16 15:31 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 15:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 15:31 - INFO - 	 Best PR-AUC: 0.892
2024-10-16 15:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 15:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-16 15:31 - INFO - ---------------------------------------------
2024-10-16 15:39 - INFO - ---------------------------------------------
2024-10-16 15:39 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89983
2024-10-16 15:39 - INFO - 	 Train Loss: 0.060
2024-10-16 15:39 - INFO - 	 Val. Loss: 0.056
2024-10-16 15:39 - INFO - 	 ROC-AUC: 0.989
2024-10-16 15:39 - INFO - 	 PR-AUC: 0.900
2024-10-16 15:39 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 15:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 15:39 - INFO - 	 Best PR-AUC: 0.900
2024-10-16 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-16 15:39 - INFO - ---------------------------------------------
2024-10-16 15:47 - INFO - ---------------------------------------------
2024-10-16 15:47 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 15:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90119
2024-10-16 15:47 - INFO - 	 Train Loss: 0.058
2024-10-16 15:47 - INFO - 	 Val. Loss: 0.054
2024-10-16 15:47 - INFO - 	 ROC-AUC: 0.990
2024-10-16 15:47 - INFO - 	 PR-AUC: 0.901
2024-10-16 15:47 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 15:47 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 15:47 - INFO - 	 Best PR-AUC: 0.901
2024-10-16 15:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 15:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-16 15:47 - INFO - ---------------------------------------------
2024-10-16 15:55 - INFO - ---------------------------------------------
2024-10-16 15:55 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 15:55 - INFO - 	 Train Loss: 0.057
2024-10-16 15:55 - INFO - 	 Val. Loss: 0.057
2024-10-16 15:55 - INFO - 	 ROC-AUC: 0.990
2024-10-16 15:55 - INFO - 	 PR-AUC: 0.891
2024-10-16 15:55 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 15:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 15:55 - INFO - 	 Best PR-AUC: 0.901
2024-10-16 15:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 15:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-16 15:55 - INFO - ---------------------------------------------
2024-10-16 16:03 - INFO - ---------------------------------------------
2024-10-16 16:03 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 16:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90662
2024-10-16 16:03 - INFO - 	 Train Loss: 0.057
2024-10-16 16:03 - INFO - 	 Val. Loss: 0.056
2024-10-16 16:03 - INFO - 	 ROC-AUC: 0.990
2024-10-16 16:03 - INFO - 	 PR-AUC: 0.907
2024-10-16 16:03 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 16:03 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 16:03 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 16:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 16:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 16:03 - INFO - ---------------------------------------------
2024-10-16 16:11 - INFO - ---------------------------------------------
2024-10-16 16:11 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 16:11 - INFO - 	 Train Loss: 0.057
2024-10-16 16:11 - INFO - 	 Val. Loss: 0.053
2024-10-16 16:11 - INFO - 	 ROC-AUC: 0.990
2024-10-16 16:11 - INFO - 	 PR-AUC: 0.905
2024-10-16 16:11 - INFO - 	 Best Val. Loss: 0.053
2024-10-16 16:11 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 16:11 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 16:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 16:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 16:11 - INFO - ---------------------------------------------
2024-10-16 16:13 - INFO - Fit the preprocessing pipeline
2024-10-16 16:13 - INFO - Training using device: cuda
2024-10-16 16:13 - INFO - Creating generators
2024-10-16 16:13 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 16:13 - INFO - * Model:
2024-10-16 16:13 - INFO - * -----------
2024-10-16 16:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 16:13 - INFO - * -----------
2024-10-16 16:21 - INFO - ---------------------------------------------
2024-10-16 16:21 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 16:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86782
2024-10-16 16:21 - INFO - 	 Train Loss: 0.074
2024-10-16 16:21 - INFO - 	 Val. Loss: 0.066
2024-10-16 16:21 - INFO - 	 ROC-AUC: 0.986
2024-10-16 16:21 - INFO - 	 PR-AUC: 0.868
2024-10-16 16:21 - INFO - 	 Best Val. Loss: 0.066
2024-10-16 16:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-16 16:21 - INFO - 	 Best PR-AUC: 0.868
2024-10-16 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-16 16:21 - INFO - ---------------------------------------------
2024-10-16 16:29 - INFO - ---------------------------------------------
2024-10-16 16:29 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 16:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87013
2024-10-16 16:29 - INFO - 	 Train Loss: 0.067
2024-10-16 16:29 - INFO - 	 Val. Loss: 0.062
2024-10-16 16:29 - INFO - 	 ROC-AUC: 0.987
2024-10-16 16:29 - INFO - 	 PR-AUC: 0.870
2024-10-16 16:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-16 16:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 16:29 - INFO - 	 Best PR-AUC: 0.870
2024-10-16 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-16 16:29 - INFO - ---------------------------------------------
2024-10-16 16:37 - INFO - ---------------------------------------------
2024-10-16 16:37 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 16:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89405
2024-10-16 16:37 - INFO - 	 Train Loss: 0.064
2024-10-16 16:37 - INFO - 	 Val. Loss: 0.059
2024-10-16 16:37 - INFO - 	 ROC-AUC: 0.989
2024-10-16 16:37 - INFO - 	 PR-AUC: 0.894
2024-10-16 16:37 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 16:37 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 16:37 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-16 16:37 - INFO - ---------------------------------------------
2024-10-16 16:45 - INFO - ---------------------------------------------
2024-10-16 16:45 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 16:45 - INFO - 	 Train Loss: 0.062
2024-10-16 16:45 - INFO - 	 Val. Loss: 0.060
2024-10-16 16:45 - INFO - 	 ROC-AUC: 0.988
2024-10-16 16:45 - INFO - 	 PR-AUC: 0.885
2024-10-16 16:45 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 16:45 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 16:45 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-16 16:45 - INFO - ---------------------------------------------
2024-10-16 16:53 - INFO - ---------------------------------------------
2024-10-16 16:53 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 16:53 - INFO - 	 Train Loss: 0.060
2024-10-16 16:53 - INFO - 	 Val. Loss: 0.056
2024-10-16 16:53 - INFO - 	 ROC-AUC: 0.988
2024-10-16 16:53 - INFO - 	 PR-AUC: 0.893
2024-10-16 16:53 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 16:53 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 16:53 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-16 16:53 - INFO - ---------------------------------------------
2024-10-16 17:01 - INFO - ---------------------------------------------
2024-10-16 17:01 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 17:01 - INFO - 	 Train Loss: 0.059
2024-10-16 17:01 - INFO - 	 Val. Loss: 0.058
2024-10-16 17:01 - INFO - 	 ROC-AUC: 0.988
2024-10-16 17:01 - INFO - 	 PR-AUC: 0.887
2024-10-16 17:01 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 17:01 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 17:01 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-16 17:01 - INFO - ---------------------------------------------
2024-10-16 17:12 - INFO - Fit the preprocessing pipeline
2024-10-16 17:12 - INFO - Training using device: cuda
2024-10-16 17:12 - INFO - Creating generators
2024-10-16 17:12 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 17:12 - INFO - * Model:
2024-10-16 17:12 - INFO - * -----------
2024-10-16 17:12 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 17:12 - INFO - * -----------
2024-10-16 17:20 - INFO - ---------------------------------------------
2024-10-16 17:20 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 17:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87155
2024-10-16 17:20 - INFO - 	 Train Loss: 0.075
2024-10-16 17:20 - INFO - 	 Val. Loss: 0.063
2024-10-16 17:20 - INFO - 	 ROC-AUC: 0.987
2024-10-16 17:20 - INFO - 	 PR-AUC: 0.872
2024-10-16 17:20 - INFO - 	 Best Val. Loss: 0.063
2024-10-16 17:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 17:20 - INFO - 	 Best PR-AUC: 0.872
2024-10-16 17:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 17:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-16 17:20 - INFO - ---------------------------------------------
2024-10-16 17:28 - INFO - ---------------------------------------------
2024-10-16 17:28 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 17:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8727
2024-10-16 17:28 - INFO - 	 Train Loss: 0.066
2024-10-16 17:28 - INFO - 	 Val. Loss: 0.061
2024-10-16 17:28 - INFO - 	 ROC-AUC: 0.987
2024-10-16 17:28 - INFO - 	 PR-AUC: 0.873
2024-10-16 17:28 - INFO - 	 Best Val. Loss: 0.061
2024-10-16 17:28 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 17:28 - INFO - 	 Best PR-AUC: 0.873
2024-10-16 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-16 17:28 - INFO - ---------------------------------------------
2024-10-16 17:36 - INFO - ---------------------------------------------
2024-10-16 17:36 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-16 17:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87807
2024-10-16 17:36 - INFO - 	 Train Loss: 0.064
2024-10-16 17:36 - INFO - 	 Val. Loss: 0.059
2024-10-16 17:36 - INFO - 	 ROC-AUC: 0.988
2024-10-16 17:36 - INFO - 	 PR-AUC: 0.878
2024-10-16 17:36 - INFO - 	 Best Val. Loss: 0.059
2024-10-16 17:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 17:36 - INFO - 	 Best PR-AUC: 0.878
2024-10-16 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-16 17:36 - INFO - ---------------------------------------------
2024-10-16 17:44 - INFO - ---------------------------------------------
2024-10-16 17:44 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 17:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88461
2024-10-16 17:44 - INFO - 	 Train Loss: 0.061
2024-10-16 17:44 - INFO - 	 Val. Loss: 0.058
2024-10-16 17:44 - INFO - 	 ROC-AUC: 0.989
2024-10-16 17:44 - INFO - 	 PR-AUC: 0.885
2024-10-16 17:44 - INFO - 	 Best Val. Loss: 0.058
2024-10-16 17:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 17:44 - INFO - 	 Best PR-AUC: 0.885
2024-10-16 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-10-16 17:44 - INFO - ---------------------------------------------
2024-10-16 17:52 - INFO - ---------------------------------------------
2024-10-16 17:52 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 17:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89277
2024-10-16 17:52 - INFO - 	 Train Loss: 0.060
2024-10-16 17:52 - INFO - 	 Val. Loss: 0.057
2024-10-16 17:52 - INFO - 	 ROC-AUC: 0.989
2024-10-16 17:52 - INFO - 	 PR-AUC: 0.893
2024-10-16 17:52 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 17:52 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 17:52 - INFO - 	 Best PR-AUC: 0.893
2024-10-16 17:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 17:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-10-16 17:52 - INFO - ---------------------------------------------
2024-10-16 18:00 - INFO - ---------------------------------------------
2024-10-16 18:00 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 18:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89762
2024-10-16 18:00 - INFO - 	 Train Loss: 0.060
2024-10-16 18:00 - INFO - 	 Val. Loss: 0.056
2024-10-16 18:00 - INFO - 	 ROC-AUC: 0.989
2024-10-16 18:00 - INFO - 	 PR-AUC: 0.898
2024-10-16 18:00 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 18:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 18:00 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 18:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 18:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 18:00 - INFO - ---------------------------------------------
2024-10-16 18:08 - INFO - ---------------------------------------------
2024-10-16 18:08 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 18:08 - INFO - 	 Train Loss: 0.057
2024-10-16 18:08 - INFO - 	 Val. Loss: 0.060
2024-10-16 18:08 - INFO - 	 ROC-AUC: 0.989
2024-10-16 18:08 - INFO - 	 PR-AUC: 0.895
2024-10-16 18:08 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 18:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 18:08 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 18:08 - INFO - ---------------------------------------------
2024-10-16 18:16 - INFO - ---------------------------------------------
2024-10-16 18:16 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 18:16 - INFO - 	 Train Loss: 0.058
2024-10-16 18:16 - INFO - 	 Val. Loss: 0.058
2024-10-16 18:16 - INFO - 	 ROC-AUC: 0.989
2024-10-16 18:16 - INFO - 	 PR-AUC: 0.896
2024-10-16 18:16 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 18:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 18:16 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 18:16 - INFO - ---------------------------------------------
2024-10-16 18:24 - INFO - ---------------------------------------------
2024-10-16 18:24 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 18:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89801
2024-10-16 18:24 - INFO - 	 Train Loss: 0.056
2024-10-16 18:24 - INFO - 	 Val. Loss: 0.057
2024-10-16 18:24 - INFO - 	 ROC-AUC: 0.988
2024-10-16 18:24 - INFO - 	 PR-AUC: 0.898
2024-10-16 18:24 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 18:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 18:24 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 18:24 - INFO - ---------------------------------------------
2024-10-16 18:32 - INFO - ---------------------------------------------
2024-10-16 18:32 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90479
2024-10-16 18:32 - INFO - 	 Train Loss: 0.055
2024-10-16 18:32 - INFO - 	 Val. Loss: 0.054
2024-10-16 18:32 - INFO - 	 ROC-AUC: 0.990
2024-10-16 18:32 - INFO - 	 PR-AUC: 0.905
2024-10-16 18:32 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 18:32 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 18:32 - INFO - 	 Best PR-AUC: 0.905
2024-10-16 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-10-16 18:32 - INFO - ---------------------------------------------
2024-10-16 18:35 - INFO - Fit the preprocessing pipeline
2024-10-16 18:35 - INFO - Training using device: cuda
2024-10-16 18:35 - INFO - Creating generators
2024-10-16 18:35 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 18:35 - INFO - * Model:
2024-10-16 18:35 - INFO - * -----------
2024-10-16 18:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 18:35 - INFO - * -----------
2024-10-16 18:43 - INFO - ---------------------------------------------
2024-10-16 18:43 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 18:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8556
2024-10-16 18:43 - INFO - 	 Train Loss: 0.075
2024-10-16 18:43 - INFO - 	 Val. Loss: 0.067
2024-10-16 18:43 - INFO - 	 ROC-AUC: 0.985
2024-10-16 18:43 - INFO - 	 PR-AUC: 0.856
2024-10-16 18:43 - INFO - 	 Best Val. Loss: 0.067
2024-10-16 18:43 - INFO - 	 Best ROC-AUC: 0.985
2024-10-16 18:43 - INFO - 	 Best PR-AUC: 0.856
2024-10-16 18:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-16 18:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-16 18:43 - INFO - ---------------------------------------------
2024-10-16 18:51 - INFO - ---------------------------------------------
2024-10-16 18:51 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 18:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87896
2024-10-16 18:51 - INFO - 	 Train Loss: 0.068
2024-10-16 18:51 - INFO - 	 Val. Loss: 0.060
2024-10-16 18:51 - INFO - 	 ROC-AUC: 0.989
2024-10-16 18:51 - INFO - 	 PR-AUC: 0.879
2024-10-16 18:51 - INFO - 	 Best Val. Loss: 0.060
2024-10-16 18:51 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 18:51 - INFO - 	 Best PR-AUC: 0.879
2024-10-16 18:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 18:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-16 18:51 - INFO - ---------------------------------------------
2024-10-16 18:59 - INFO - ---------------------------------------------
2024-10-16 18:59 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-16 18:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89354
2024-10-16 18:59 - INFO - 	 Train Loss: 0.063
2024-10-16 18:59 - INFO - 	 Val. Loss: 0.057
2024-10-16 18:59 - INFO - 	 ROC-AUC: 0.989
2024-10-16 18:59 - INFO - 	 PR-AUC: 0.894
2024-10-16 18:59 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 18:59 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 18:59 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 18:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 18:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-16 18:59 - INFO - ---------------------------------------------
2024-10-16 19:07 - INFO - ---------------------------------------------
2024-10-16 19:07 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 19:07 - INFO - 	 Train Loss: 0.062
2024-10-16 19:07 - INFO - 	 Val. Loss: 0.057
2024-10-16 19:07 - INFO - 	 ROC-AUC: 0.989
2024-10-16 19:07 - INFO - 	 PR-AUC: 0.890
2024-10-16 19:07 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 19:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 19:07 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-16 19:07 - INFO - ---------------------------------------------
2024-10-16 19:15 - INFO - ---------------------------------------------
2024-10-16 19:15 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 19:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89609
2024-10-16 19:15 - INFO - 	 Train Loss: 0.062
2024-10-16 19:15 - INFO - 	 Val. Loss: 0.055
2024-10-16 19:15 - INFO - 	 ROC-AUC: 0.989
2024-10-16 19:15 - INFO - 	 PR-AUC: 0.896
2024-10-16 19:15 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 19:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 19:15 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 19:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 19:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 19:15 - INFO - ---------------------------------------------
2024-10-16 19:23 - INFO - ---------------------------------------------
2024-10-16 19:23 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 19:23 - INFO - 	 Train Loss: 0.059
2024-10-16 19:23 - INFO - 	 Val. Loss: 0.054
2024-10-16 19:23 - INFO - 	 ROC-AUC: 0.989
2024-10-16 19:23 - INFO - 	 PR-AUC: 0.893
2024-10-16 19:23 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 19:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 19:23 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 19:23 - INFO - ---------------------------------------------
2024-10-16 19:31 - INFO - ---------------------------------------------
2024-10-16 19:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 19:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89613
2024-10-16 19:31 - INFO - 	 Train Loss: 0.058
2024-10-16 19:31 - INFO - 	 Val. Loss: 0.056
2024-10-16 19:31 - INFO - 	 ROC-AUC: 0.989
2024-10-16 19:31 - INFO - 	 PR-AUC: 0.896
2024-10-16 19:31 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 19:31 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 19:31 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-16 19:31 - INFO - ---------------------------------------------
2024-10-16 19:39 - INFO - ---------------------------------------------
2024-10-16 19:39 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 19:39 - INFO - 	 Train Loss: 0.057
2024-10-16 19:39 - INFO - 	 Val. Loss: 0.055
2024-10-16 19:39 - INFO - 	 ROC-AUC: 0.989
2024-10-16 19:39 - INFO - 	 PR-AUC: 0.896
2024-10-16 19:39 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 19:39 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 19:39 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-10-16 19:39 - INFO - ---------------------------------------------
2024-10-16 19:47 - INFO - ---------------------------------------------
2024-10-16 19:47 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 19:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89772
2024-10-16 19:47 - INFO - 	 Train Loss: 0.056
2024-10-16 19:47 - INFO - 	 Val. Loss: 0.056
2024-10-16 19:47 - INFO - 	 ROC-AUC: 0.990
2024-10-16 19:47 - INFO - 	 PR-AUC: 0.898
2024-10-16 19:47 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 19:47 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 19:47 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-10-16 19:47 - INFO - ---------------------------------------------
2024-10-16 19:55 - INFO - ---------------------------------------------
2024-10-16 19:55 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-16 19:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89844
2024-10-16 19:55 - INFO - 	 Train Loss: 0.056
2024-10-16 19:55 - INFO - 	 Val. Loss: 0.056
2024-10-16 19:55 - INFO - 	 ROC-AUC: 0.989
2024-10-16 19:55 - INFO - 	 PR-AUC: 0.898
2024-10-16 19:55 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 19:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 19:55 - INFO - 	 Best PR-AUC: 0.898
2024-10-16 19:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 19:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-10-16 19:55 - INFO - ---------------------------------------------
2024-10-16 19:57 - INFO - Fit the preprocessing pipeline
2024-10-16 19:57 - INFO - Training using device: cuda
2024-10-16 19:57 - INFO - Creating generators
2024-10-16 19:57 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 19:57 - INFO - * Model:
2024-10-16 19:57 - INFO - * -----------
2024-10-16 19:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 19:57 - INFO - * -----------
2024-10-16 20:05 - INFO - ---------------------------------------------
2024-10-16 20:05 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 20:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87739
2024-10-16 20:05 - INFO - 	 Train Loss: 0.075
2024-10-16 20:05 - INFO - 	 Val. Loss: 0.060
2024-10-16 20:05 - INFO - 	 ROC-AUC: 0.988
2024-10-16 20:05 - INFO - 	 PR-AUC: 0.877
2024-10-16 20:05 - INFO - 	 Best Val. Loss: 0.060
2024-10-16 20:05 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 20:05 - INFO - 	 Best PR-AUC: 0.877
2024-10-16 20:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 20:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-16 20:05 - INFO - ---------------------------------------------
2024-10-16 20:13 - INFO - ---------------------------------------------
2024-10-16 20:13 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-16 20:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8947
2024-10-16 20:13 - INFO - 	 Train Loss: 0.066
2024-10-16 20:13 - INFO - 	 Val. Loss: 0.057
2024-10-16 20:13 - INFO - 	 ROC-AUC: 0.990
2024-10-16 20:13 - INFO - 	 PR-AUC: 0.895
2024-10-16 20:13 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 20:13 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 20:13 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-16 20:13 - INFO - ---------------------------------------------
2024-10-16 20:21 - INFO - ---------------------------------------------
2024-10-16 20:21 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-16 20:21 - INFO - 	 Train Loss: 0.063
2024-10-16 20:21 - INFO - 	 Val. Loss: 0.060
2024-10-16 20:21 - INFO - 	 ROC-AUC: 0.988
2024-10-16 20:21 - INFO - 	 PR-AUC: 0.881
2024-10-16 20:21 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 20:21 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 20:21 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-16 20:21 - INFO - ---------------------------------------------
2024-10-16 20:29 - INFO - ---------------------------------------------
2024-10-16 20:29 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-16 20:29 - INFO - 	 Train Loss: 0.062
2024-10-16 20:29 - INFO - 	 Val. Loss: 0.058
2024-10-16 20:29 - INFO - 	 ROC-AUC: 0.988
2024-10-16 20:29 - INFO - 	 PR-AUC: 0.890
2024-10-16 20:29 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 20:29 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 20:29 - INFO - 	 Best PR-AUC: 0.895
2024-10-16 20:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 20:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-16 20:29 - INFO - ---------------------------------------------
2024-10-16 20:37 - INFO - ---------------------------------------------
2024-10-16 20:37 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 20:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89577
2024-10-16 20:37 - INFO - 	 Train Loss: 0.060
2024-10-16 20:37 - INFO - 	 Val. Loss: 0.056
2024-10-16 20:37 - INFO - 	 ROC-AUC: 0.989
2024-10-16 20:37 - INFO - 	 PR-AUC: 0.896
2024-10-16 20:37 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 20:37 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 20:37 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 20:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 20:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 20:37 - INFO - ---------------------------------------------
2024-10-16 20:45 - INFO - ---------------------------------------------
2024-10-16 20:45 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 20:45 - INFO - 	 Train Loss: 0.059
2024-10-16 20:45 - INFO - 	 Val. Loss: 0.058
2024-10-16 20:45 - INFO - 	 ROC-AUC: 0.988
2024-10-16 20:45 - INFO - 	 PR-AUC: 0.892
2024-10-16 20:45 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 20:45 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 20:45 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-10-16 20:45 - INFO - ---------------------------------------------
2024-10-16 20:53 - INFO - ---------------------------------------------
2024-10-16 20:53 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 20:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89685
2024-10-16 20:53 - INFO - 	 Train Loss: 0.058
2024-10-16 20:53 - INFO - 	 Val. Loss: 0.055
2024-10-16 20:53 - INFO - 	 ROC-AUC: 0.990
2024-10-16 20:53 - INFO - 	 PR-AUC: 0.897
2024-10-16 20:53 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 20:53 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 20:53 - INFO - 	 Best PR-AUC: 0.897
2024-10-16 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 20:53 - INFO - ---------------------------------------------
2024-10-16 21:01 - INFO - ---------------------------------------------
2024-10-16 21:01 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 21:01 - INFO - 	 Train Loss: 0.056
2024-10-16 21:01 - INFO - 	 Val. Loss: 0.057
2024-10-16 21:01 - INFO - 	 ROC-AUC: 0.988
2024-10-16 21:01 - INFO - 	 PR-AUC: 0.896
2024-10-16 21:01 - INFO - 	 Best Val. Loss: 0.055
2024-10-16 21:01 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 21:01 - INFO - 	 Best PR-AUC: 0.897
2024-10-16 21:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 21:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-10-16 21:01 - INFO - ---------------------------------------------
2024-10-16 21:10 - INFO - ---------------------------------------------
2024-10-16 21:10 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 21:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90196
2024-10-16 21:10 - INFO - 	 Train Loss: 0.057
2024-10-16 21:10 - INFO - 	 Val. Loss: 0.054
2024-10-16 21:10 - INFO - 	 ROC-AUC: 0.990
2024-10-16 21:10 - INFO - 	 PR-AUC: 0.902
2024-10-16 21:10 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 21:10 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 21:10 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 21:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 21:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-16 21:10 - INFO - ---------------------------------------------
2024-10-16 21:18 - INFO - ---------------------------------------------
2024-10-16 21:18 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 21:18 - INFO - 	 Train Loss: 0.056
2024-10-16 21:18 - INFO - 	 Val. Loss: 0.057
2024-10-16 21:18 - INFO - 	 ROC-AUC: 0.989
2024-10-16 21:18 - INFO - 	 PR-AUC: 0.887
2024-10-16 21:18 - INFO - 	 Best Val. Loss: 0.054
2024-10-16 21:18 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 21:18 - INFO - 	 Best PR-AUC: 0.902
2024-10-16 21:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-10-16 21:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-16 21:18 - INFO - ---------------------------------------------
2024-10-16 21:20 - INFO - Fit the preprocessing pipeline
2024-10-16 21:20 - INFO - Training using device: cuda
2024-10-16 21:20 - INFO - Creating generators
2024-10-16 21:20 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 21:20 - INFO - * Model:
2024-10-16 21:20 - INFO - * -----------
2024-10-16 21:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 21:20 - INFO - * -----------
2024-10-16 21:28 - INFO - ---------------------------------------------
2024-10-16 21:28 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 21:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86186
2024-10-16 21:28 - INFO - 	 Train Loss: 0.076
2024-10-16 21:28 - INFO - 	 Val. Loss: 0.066
2024-10-16 21:28 - INFO - 	 ROC-AUC: 0.986
2024-10-16 21:28 - INFO - 	 PR-AUC: 0.862
2024-10-16 21:28 - INFO - 	 Best Val. Loss: 0.066
2024-10-16 21:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-16 21:28 - INFO - 	 Best PR-AUC: 0.862
2024-10-16 21:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 21:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-16 21:28 - INFO - ---------------------------------------------
2024-10-16 21:36 - INFO - ---------------------------------------------
2024-10-16 21:36 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 21:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87736
2024-10-16 21:36 - INFO - 	 Train Loss: 0.066
2024-10-16 21:36 - INFO - 	 Val. Loss: 0.063
2024-10-16 21:36 - INFO - 	 ROC-AUC: 0.987
2024-10-16 21:36 - INFO - 	 PR-AUC: 0.877
2024-10-16 21:36 - INFO - 	 Best Val. Loss: 0.063
2024-10-16 21:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 21:36 - INFO - 	 Best PR-AUC: 0.877
2024-10-16 21:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 21:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-16 21:36 - INFO - ---------------------------------------------
2024-10-16 21:44 - INFO - ---------------------------------------------
2024-10-16 21:44 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 21:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88746
2024-10-16 21:44 - INFO - 	 Train Loss: 0.064
2024-10-16 21:44 - INFO - 	 Val. Loss: 0.057
2024-10-16 21:44 - INFO - 	 ROC-AUC: 0.989
2024-10-16 21:44 - INFO - 	 PR-AUC: 0.887
2024-10-16 21:44 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 21:44 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 21:44 - INFO - 	 Best PR-AUC: 0.887
2024-10-16 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-16 21:44 - INFO - ---------------------------------------------
2024-10-16 21:52 - INFO - ---------------------------------------------
2024-10-16 21:52 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 21:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89074
2024-10-16 21:52 - INFO - 	 Train Loss: 0.062
2024-10-16 21:52 - INFO - 	 Val. Loss: 0.058
2024-10-16 21:52 - INFO - 	 ROC-AUC: 0.989
2024-10-16 21:52 - INFO - 	 PR-AUC: 0.891
2024-10-16 21:52 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 21:52 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 21:52 - INFO - 	 Best PR-AUC: 0.891
2024-10-16 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-16 21:52 - INFO - ---------------------------------------------
2024-10-16 22:00 - INFO - ---------------------------------------------
2024-10-16 22:00 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 22:00 - INFO - 	 Train Loss: 0.061
2024-10-16 22:00 - INFO - 	 Val. Loss: 0.058
2024-10-16 22:00 - INFO - 	 ROC-AUC: 0.989
2024-10-16 22:00 - INFO - 	 PR-AUC: 0.885
2024-10-16 22:00 - INFO - 	 Best Val. Loss: 0.057
2024-10-16 22:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 22:00 - INFO - 	 Best PR-AUC: 0.891
2024-10-16 22:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 22:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-10-16 22:00 - INFO - ---------------------------------------------
2024-10-16 22:08 - INFO - ---------------------------------------------
2024-10-16 22:08 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 22:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89395
2024-10-16 22:08 - INFO - 	 Train Loss: 0.058
2024-10-16 22:08 - INFO - 	 Val. Loss: 0.056
2024-10-16 22:08 - INFO - 	 ROC-AUC: 0.989
2024-10-16 22:08 - INFO - 	 PR-AUC: 0.894
2024-10-16 22:08 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 22:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 22:08 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-16 22:08 - INFO - ---------------------------------------------
2024-10-16 22:16 - INFO - ---------------------------------------------
2024-10-16 22:16 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-16 22:16 - INFO - 	 Train Loss: 0.058
2024-10-16 22:16 - INFO - 	 Val. Loss: 0.057
2024-10-16 22:16 - INFO - 	 ROC-AUC: 0.989
2024-10-16 22:16 - INFO - 	 PR-AUC: 0.891
2024-10-16 22:16 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 22:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 22:16 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-16 22:16 - INFO - ---------------------------------------------
2024-10-16 22:24 - INFO - ---------------------------------------------
2024-10-16 22:24 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-16 22:24 - INFO - 	 Train Loss: 0.057
2024-10-16 22:24 - INFO - 	 Val. Loss: 0.056
2024-10-16 22:24 - INFO - 	 ROC-AUC: 0.989
2024-10-16 22:24 - INFO - 	 PR-AUC: 0.888
2024-10-16 22:24 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 22:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 22:24 - INFO - 	 Best PR-AUC: 0.894
2024-10-16 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-10-16 22:24 - INFO - ---------------------------------------------
2024-10-16 22:32 - INFO - ---------------------------------------------
2024-10-16 22:32 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 22:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89626
2024-10-16 22:32 - INFO - 	 Train Loss: 0.057
2024-10-16 22:32 - INFO - 	 Val. Loss: 0.056
2024-10-16 22:32 - INFO - 	 ROC-AUC: 0.989
2024-10-16 22:32 - INFO - 	 PR-AUC: 0.896
2024-10-16 22:32 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 22:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 22:32 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-16 22:32 - INFO - ---------------------------------------------
2024-10-16 22:40 - INFO - ---------------------------------------------
2024-10-16 22:40 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-16 22:40 - INFO - 	 Train Loss: 0.056
2024-10-16 22:40 - INFO - 	 Val. Loss: 0.056
2024-10-16 22:40 - INFO - 	 ROC-AUC: 0.989
2024-10-16 22:40 - INFO - 	 PR-AUC: 0.889
2024-10-16 22:40 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 22:40 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 22:40 - INFO - 	 Best PR-AUC: 0.896
2024-10-16 22:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 22:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-10-16 22:40 - INFO - ---------------------------------------------
2024-10-16 22:43 - INFO - Fit the preprocessing pipeline
2024-10-16 22:43 - INFO - Training using device: cuda
2024-10-16 22:43 - INFO - Creating generators
2024-10-16 22:43 - INFO - The model has 2,246,929 trainable parameters
2024-10-16 22:43 - INFO - * Model:
2024-10-16 22:43 - INFO - * -----------
2024-10-16 22:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-16 22:43 - INFO - * -----------
2024-10-16 22:51 - INFO - ---------------------------------------------
2024-10-16 22:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-16 22:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87678
2024-10-16 22:51 - INFO - 	 Train Loss: 0.076
2024-10-16 22:51 - INFO - 	 Val. Loss: 0.061
2024-10-16 22:51 - INFO - 	 ROC-AUC: 0.987
2024-10-16 22:51 - INFO - 	 PR-AUC: 0.877
2024-10-16 22:51 - INFO - 	 Best Val. Loss: 0.061
2024-10-16 22:51 - INFO - 	 Best ROC-AUC: 0.987
2024-10-16 22:51 - INFO - 	 Best PR-AUC: 0.877
2024-10-16 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-16 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-16 22:51 - INFO - ---------------------------------------------
2024-10-16 22:59 - INFO - ---------------------------------------------
2024-10-16 22:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-16 22:59 - INFO - 	 Train Loss: 0.066
2024-10-16 22:59 - INFO - 	 Val. Loss: 0.065
2024-10-16 22:59 - INFO - 	 ROC-AUC: 0.988
2024-10-16 22:59 - INFO - 	 PR-AUC: 0.876
2024-10-16 22:59 - INFO - 	 Best Val. Loss: 0.061
2024-10-16 22:59 - INFO - 	 Best ROC-AUC: 0.988
2024-10-16 22:59 - INFO - 	 Best PR-AUC: 0.877
2024-10-16 22:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-16 22:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-16 22:59 - INFO - ---------------------------------------------
2024-10-16 23:07 - INFO - ---------------------------------------------
2024-10-16 23:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-16 23:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88955
2024-10-16 23:07 - INFO - 	 Train Loss: 0.064
2024-10-16 23:07 - INFO - 	 Val. Loss: 0.056
2024-10-16 23:07 - INFO - 	 ROC-AUC: 0.989
2024-10-16 23:07 - INFO - 	 PR-AUC: 0.890
2024-10-16 23:07 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 23:07 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 23:07 - INFO - 	 Best PR-AUC: 0.890
2024-10-16 23:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 23:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-16 23:07 - INFO - ---------------------------------------------
2024-10-16 23:15 - INFO - ---------------------------------------------
2024-10-16 23:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-16 23:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89332
2024-10-16 23:15 - INFO - 	 Train Loss: 0.063
2024-10-16 23:15 - INFO - 	 Val. Loss: 0.057
2024-10-16 23:15 - INFO - 	 ROC-AUC: 0.989
2024-10-16 23:15 - INFO - 	 PR-AUC: 0.893
2024-10-16 23:15 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 23:15 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 23:15 - INFO - 	 Best PR-AUC: 0.893
2024-10-16 23:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 23:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-16 23:15 - INFO - ---------------------------------------------
2024-10-16 23:23 - INFO - ---------------------------------------------
2024-10-16 23:23 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-16 23:23 - INFO - 	 Train Loss: 0.061
2024-10-16 23:23 - INFO - 	 Val. Loss: 0.057
2024-10-16 23:23 - INFO - 	 ROC-AUC: 0.989
2024-10-16 23:23 - INFO - 	 PR-AUC: 0.890
2024-10-16 23:23 - INFO - 	 Best Val. Loss: 0.056
2024-10-16 23:23 - INFO - 	 Best ROC-AUC: 0.989
2024-10-16 23:23 - INFO - 	 Best PR-AUC: 0.893
2024-10-16 23:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 23:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-10-16 23:23 - INFO - ---------------------------------------------
2024-10-16 23:31 - INFO - ---------------------------------------------
2024-10-16 23:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-16 23:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90697
2024-10-16 23:31 - INFO - 	 Train Loss: 0.060
2024-10-16 23:31 - INFO - 	 Val. Loss: 0.052
2024-10-16 23:31 - INFO - 	 ROC-AUC: 0.990
2024-10-16 23:31 - INFO - 	 PR-AUC: 0.907
2024-10-16 23:31 - INFO - 	 Best Val. Loss: 0.052
2024-10-16 23:31 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 23:31 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 23:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 23:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-16 23:31 - INFO - ---------------------------------------------
2024-10-16 23:39 - INFO - ---------------------------------------------
2024-10-16 23:39 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-16 23:39 - INFO - 	 Train Loss: 0.058
2024-10-16 23:39 - INFO - 	 Val. Loss: 0.056
2024-10-16 23:39 - INFO - 	 ROC-AUC: 0.989
2024-10-16 23:39 - INFO - 	 PR-AUC: 0.896
2024-10-16 23:39 - INFO - 	 Best Val. Loss: 0.052
2024-10-16 23:39 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 23:39 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-16 23:39 - INFO - ---------------------------------------------
2024-10-16 23:47 - INFO - ---------------------------------------------
2024-10-16 23:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-16 23:47 - INFO - 	 Train Loss: 0.058
2024-10-16 23:47 - INFO - 	 Val. Loss: 0.055
2024-10-16 23:47 - INFO - 	 ROC-AUC: 0.989
2024-10-16 23:47 - INFO - 	 PR-AUC: 0.905
2024-10-16 23:47 - INFO - 	 Best Val. Loss: 0.052
2024-10-16 23:47 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 23:47 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 23:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 23:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-16 23:47 - INFO - ---------------------------------------------
2024-10-16 23:55 - INFO - ---------------------------------------------
2024-10-16 23:55 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-16 23:55 - INFO - 	 Train Loss: 0.057
2024-10-16 23:55 - INFO - 	 Val. Loss: 0.055
2024-10-16 23:55 - INFO - 	 ROC-AUC: 0.989
2024-10-16 23:55 - INFO - 	 PR-AUC: 0.901
2024-10-16 23:55 - INFO - 	 Best Val. Loss: 0.052
2024-10-16 23:55 - INFO - 	 Best ROC-AUC: 0.990
2024-10-16 23:55 - INFO - 	 Best PR-AUC: 0.907
2024-10-16 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-16 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-10-16 23:55 - INFO - ---------------------------------------------
2024-10-17 00:05 - INFO - Fit the preprocessing pipeline
2024-10-17 00:05 - INFO - Training using device: cuda
2024-10-17 00:05 - INFO - Creating generators
2024-10-17 00:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-17 00:05 - INFO - * Model:
2024-10-17 00:05 - INFO - * -----------
2024-10-17 00:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-17 00:05 - INFO - * -----------
2024-10-17 00:13 - INFO - ---------------------------------------------
2024-10-17 00:13 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-17 00:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87302
2024-10-17 00:13 - INFO - 	 Train Loss: 0.075
2024-10-17 00:13 - INFO - 	 Val. Loss: 0.063
2024-10-17 00:13 - INFO - 	 ROC-AUC: 0.987
2024-10-17 00:13 - INFO - 	 PR-AUC: 0.873
2024-10-17 00:13 - INFO - 	 Best Val. Loss: 0.063
2024-10-17 00:13 - INFO - 	 Best ROC-AUC: 0.987
2024-10-17 00:13 - INFO - 	 Best PR-AUC: 0.873
2024-10-17 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-17 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-17 00:13 - INFO - ---------------------------------------------
2024-10-17 00:21 - INFO - ---------------------------------------------
2024-10-17 00:21 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-17 00:21 - INFO - 	 Train Loss: 0.067
2024-10-17 00:21 - INFO - 	 Val. Loss: 0.060
2024-10-17 00:21 - INFO - 	 ROC-AUC: 0.989
2024-10-17 00:21 - INFO - 	 PR-AUC: 0.871
2024-10-17 00:21 - INFO - 	 Best Val. Loss: 0.060
2024-10-17 00:21 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 00:21 - INFO - 	 Best PR-AUC: 0.873
2024-10-17 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-17 00:21 - INFO - ---------------------------------------------
2024-10-17 00:29 - INFO - ---------------------------------------------
2024-10-17 00:29 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-17 00:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88768
2024-10-17 00:29 - INFO - 	 Train Loss: 0.064
2024-10-17 00:29 - INFO - 	 Val. Loss: 0.059
2024-10-17 00:29 - INFO - 	 ROC-AUC: 0.989
2024-10-17 00:29 - INFO - 	 PR-AUC: 0.888
2024-10-17 00:29 - INFO - 	 Best Val. Loss: 0.059
2024-10-17 00:29 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 00:29 - INFO - 	 Best PR-AUC: 0.888
2024-10-17 00:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 00:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-10-17 00:29 - INFO - ---------------------------------------------
2024-10-17 00:37 - INFO - ---------------------------------------------
2024-10-17 00:37 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-17 00:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89307
2024-10-17 00:37 - INFO - 	 Train Loss: 0.062
2024-10-17 00:37 - INFO - 	 Val. Loss: 0.056
2024-10-17 00:37 - INFO - 	 ROC-AUC: 0.989
2024-10-17 00:37 - INFO - 	 PR-AUC: 0.893
2024-10-17 00:37 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 00:37 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 00:37 - INFO - 	 Best PR-AUC: 0.893
2024-10-17 00:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 00:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-17 00:37 - INFO - ---------------------------------------------
2024-10-17 00:45 - INFO - ---------------------------------------------
2024-10-17 00:45 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-17 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89739
2024-10-17 00:45 - INFO - 	 Train Loss: 0.060
2024-10-17 00:45 - INFO - 	 Val. Loss: 0.055
2024-10-17 00:45 - INFO - 	 ROC-AUC: 0.989
2024-10-17 00:45 - INFO - 	 PR-AUC: 0.897
2024-10-17 00:45 - INFO - 	 Best Val. Loss: 0.055
2024-10-17 00:45 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 00:45 - INFO - 	 Best PR-AUC: 0.897
2024-10-17 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-17 00:45 - INFO - ---------------------------------------------
2024-10-17 00:53 - INFO - ---------------------------------------------
2024-10-17 00:53 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-17 00:53 - INFO - 	 Train Loss: 0.059
2024-10-17 00:53 - INFO - 	 Val. Loss: 0.056
2024-10-17 00:53 - INFO - 	 ROC-AUC: 0.989
2024-10-17 00:53 - INFO - 	 PR-AUC: 0.894
2024-10-17 00:53 - INFO - 	 Best Val. Loss: 0.055
2024-10-17 00:53 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 00:53 - INFO - 	 Best PR-AUC: 0.897
2024-10-17 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-17 00:53 - INFO - ---------------------------------------------
2024-10-17 01:01 - INFO - ---------------------------------------------
2024-10-17 01:01 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-17 01:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89774
2024-10-17 01:01 - INFO - 	 Train Loss: 0.058
2024-10-17 01:01 - INFO - 	 Val. Loss: 0.055
2024-10-17 01:01 - INFO - 	 ROC-AUC: 0.990
2024-10-17 01:01 - INFO - 	 PR-AUC: 0.898
2024-10-17 01:01 - INFO - 	 Best Val. Loss: 0.055
2024-10-17 01:01 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 01:01 - INFO - 	 Best PR-AUC: 0.898
2024-10-17 01:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 01:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-17 01:01 - INFO - ---------------------------------------------
2024-10-17 01:09 - INFO - ---------------------------------------------
2024-10-17 01:09 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-17 01:09 - INFO - 	 Train Loss: 0.057
2024-10-17 01:09 - INFO - 	 Val. Loss: 0.057
2024-10-17 01:09 - INFO - 	 ROC-AUC: 0.989
2024-10-17 01:09 - INFO - 	 PR-AUC: 0.891
2024-10-17 01:09 - INFO - 	 Best Val. Loss: 0.055
2024-10-17 01:09 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 01:09 - INFO - 	 Best PR-AUC: 0.898
2024-10-17 01:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 01:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-10-17 01:09 - INFO - ---------------------------------------------
2024-10-17 01:17 - INFO - ---------------------------------------------
2024-10-17 01:17 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-17 01:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90346
2024-10-17 01:17 - INFO - 	 Train Loss: 0.057
2024-10-17 01:17 - INFO - 	 Val. Loss: 0.053
2024-10-17 01:17 - INFO - 	 ROC-AUC: 0.990
2024-10-17 01:17 - INFO - 	 PR-AUC: 0.903
2024-10-17 01:17 - INFO - 	 Best Val. Loss: 0.053
2024-10-17 01:17 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 01:17 - INFO - 	 Best PR-AUC: 0.903
2024-10-17 01:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 01:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-17 01:17 - INFO - ---------------------------------------------
2024-10-17 01:25 - INFO - ---------------------------------------------
2024-10-17 01:25 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-17 01:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90875
2024-10-17 01:25 - INFO - 	 Train Loss: 0.055
2024-10-17 01:25 - INFO - 	 Val. Loss: 0.053
2024-10-17 01:25 - INFO - 	 ROC-AUC: 0.990
2024-10-17 01:25 - INFO - 	 PR-AUC: 0.909
2024-10-17 01:25 - INFO - 	 Best Val. Loss: 0.053
2024-10-17 01:25 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 01:25 - INFO - 	 Best PR-AUC: 0.909
2024-10-17 01:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 01:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-10-17 01:25 - INFO - ---------------------------------------------
2024-10-17 01:28 - INFO - Fit the preprocessing pipeline
2024-10-17 01:28 - INFO - Training using device: cuda
2024-10-17 01:28 - INFO - Creating generators
2024-10-17 01:28 - INFO - The model has 2,246,929 trainable parameters
2024-10-17 01:28 - INFO - * Model:
2024-10-17 01:28 - INFO - * -----------
2024-10-17 01:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-17 01:28 - INFO - * -----------
2024-10-17 01:36 - INFO - ---------------------------------------------
2024-10-17 01:36 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-17 01:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87421
2024-10-17 01:36 - INFO - 	 Train Loss: 0.074
2024-10-17 01:36 - INFO - 	 Val. Loss: 0.066
2024-10-17 01:36 - INFO - 	 ROC-AUC: 0.986
2024-10-17 01:36 - INFO - 	 PR-AUC: 0.874
2024-10-17 01:36 - INFO - 	 Best Val. Loss: 0.066
2024-10-17 01:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-17 01:36 - INFO - 	 Best PR-AUC: 0.874
2024-10-17 01:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-17 01:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-17 01:36 - INFO - ---------------------------------------------
2024-10-17 01:44 - INFO - ---------------------------------------------
2024-10-17 01:44 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-17 01:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88635
2024-10-17 01:44 - INFO - 	 Train Loss: 0.067
2024-10-17 01:44 - INFO - 	 Val. Loss: 0.060
2024-10-17 01:44 - INFO - 	 ROC-AUC: 0.988
2024-10-17 01:44 - INFO - 	 PR-AUC: 0.886
2024-10-17 01:44 - INFO - 	 Best Val. Loss: 0.060
2024-10-17 01:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-17 01:44 - INFO - 	 Best PR-AUC: 0.886
2024-10-17 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-17 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-17 01:44 - INFO - ---------------------------------------------
2024-10-17 01:52 - INFO - ---------------------------------------------
2024-10-17 01:52 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-17 01:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88942
2024-10-17 01:52 - INFO - 	 Train Loss: 0.064
2024-10-17 01:52 - INFO - 	 Val. Loss: 0.058
2024-10-17 01:52 - INFO - 	 ROC-AUC: 0.988
2024-10-17 01:52 - INFO - 	 PR-AUC: 0.889
2024-10-17 01:52 - INFO - 	 Best Val. Loss: 0.058
2024-10-17 01:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-17 01:52 - INFO - 	 Best PR-AUC: 0.889
2024-10-17 01:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 01:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-10-17 01:52 - INFO - ---------------------------------------------
2024-10-17 02:00 - INFO - ---------------------------------------------
2024-10-17 02:00 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-17 02:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89148
2024-10-17 02:00 - INFO - 	 Train Loss: 0.062
2024-10-17 02:00 - INFO - 	 Val. Loss: 0.058
2024-10-17 02:00 - INFO - 	 ROC-AUC: 0.989
2024-10-17 02:00 - INFO - 	 PR-AUC: 0.891
2024-10-17 02:00 - INFO - 	 Best Val. Loss: 0.058
2024-10-17 02:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 02:00 - INFO - 	 Best PR-AUC: 0.891
2024-10-17 02:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 02:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-17 02:00 - INFO - ---------------------------------------------
2024-10-17 02:08 - INFO - ---------------------------------------------
2024-10-17 02:08 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-17 02:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89878
2024-10-17 02:08 - INFO - 	 Train Loss: 0.061
2024-10-17 02:08 - INFO - 	 Val. Loss: 0.056
2024-10-17 02:08 - INFO - 	 ROC-AUC: 0.990
2024-10-17 02:08 - INFO - 	 PR-AUC: 0.899
2024-10-17 02:08 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 02:08 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 02:08 - INFO - 	 Best PR-AUC: 0.899
2024-10-17 02:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 02:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-17 02:08 - INFO - ---------------------------------------------
2024-10-17 02:16 - INFO - ---------------------------------------------
2024-10-17 02:16 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-17 02:16 - INFO - 	 Train Loss: 0.059
2024-10-17 02:16 - INFO - 	 Val. Loss: 0.056
2024-10-17 02:16 - INFO - 	 ROC-AUC: 0.989
2024-10-17 02:16 - INFO - 	 PR-AUC: 0.895
2024-10-17 02:16 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 02:16 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 02:16 - INFO - 	 Best PR-AUC: 0.899
2024-10-17 02:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 02:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-17 02:16 - INFO - ---------------------------------------------
2024-10-17 02:24 - INFO - ---------------------------------------------
2024-10-17 02:24 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-17 02:24 - INFO - 	 Train Loss: 0.057
2024-10-17 02:24 - INFO - 	 Val. Loss: 0.056
2024-10-17 02:24 - INFO - 	 ROC-AUC: 0.990
2024-10-17 02:24 - INFO - 	 PR-AUC: 0.898
2024-10-17 02:24 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 02:24 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 02:24 - INFO - 	 Best PR-AUC: 0.899
2024-10-17 02:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 02:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-17 02:24 - INFO - ---------------------------------------------
2024-10-17 02:32 - INFO - ---------------------------------------------
2024-10-17 02:32 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-17 02:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90321
2024-10-17 02:32 - INFO - 	 Train Loss: 0.057
2024-10-17 02:32 - INFO - 	 Val. Loss: 0.055
2024-10-17 02:32 - INFO - 	 ROC-AUC: 0.989
2024-10-17 02:32 - INFO - 	 PR-AUC: 0.903
2024-10-17 02:32 - INFO - 	 Best Val. Loss: 0.055
2024-10-17 02:32 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 02:32 - INFO - 	 Best PR-AUC: 0.903
2024-10-17 02:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 02:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-17 02:32 - INFO - ---------------------------------------------
2024-10-17 02:40 - INFO - ---------------------------------------------
2024-10-17 02:40 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-17 02:40 - INFO - 	 Train Loss: 0.057
2024-10-17 02:40 - INFO - 	 Val. Loss: 0.054
2024-10-17 02:40 - INFO - 	 ROC-AUC: 0.990
2024-10-17 02:40 - INFO - 	 PR-AUC: 0.903
2024-10-17 02:40 - INFO - 	 Best Val. Loss: 0.054
2024-10-17 02:40 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 02:40 - INFO - 	 Best PR-AUC: 0.903
2024-10-17 02:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 02:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-17 02:40 - INFO - ---------------------------------------------
2024-10-17 02:48 - INFO - ---------------------------------------------
2024-10-17 02:48 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-17 02:48 - INFO - 	 Train Loss: 0.056
2024-10-17 02:48 - INFO - 	 Val. Loss: 0.055
2024-10-17 02:48 - INFO - 	 ROC-AUC: 0.990
2024-10-17 02:48 - INFO - 	 PR-AUC: 0.893
2024-10-17 02:48 - INFO - 	 Best Val. Loss: 0.054
2024-10-17 02:48 - INFO - 	 Best ROC-AUC: 0.990
2024-10-17 02:48 - INFO - 	 Best PR-AUC: 0.903
2024-10-17 02:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 02:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-10-17 02:48 - INFO - ---------------------------------------------
2024-10-17 02:50 - INFO - Fit the preprocessing pipeline
2024-10-17 02:50 - INFO - Training using device: cuda
2024-10-17 02:50 - INFO - Creating generators
2024-10-17 02:50 - INFO - The model has 2,246,929 trainable parameters
2024-10-17 02:50 - INFO - * Model:
2024-10-17 02:50 - INFO - * -----------
2024-10-17 02:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-17 02:50 - INFO - * -----------
2024-10-17 02:58 - INFO - ---------------------------------------------
2024-10-17 02:58 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-17 02:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87821
2024-10-17 02:58 - INFO - 	 Train Loss: 0.075
2024-10-17 02:58 - INFO - 	 Val. Loss: 0.061
2024-10-17 02:58 - INFO - 	 ROC-AUC: 0.987
2024-10-17 02:58 - INFO - 	 PR-AUC: 0.878
2024-10-17 02:58 - INFO - 	 Best Val. Loss: 0.061
2024-10-17 02:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-17 02:58 - INFO - 	 Best PR-AUC: 0.878
2024-10-17 02:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-17 02:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-17 02:58 - INFO - ---------------------------------------------
2024-10-17 03:06 - INFO - ---------------------------------------------
2024-10-17 03:06 - INFO - Epoch: 02 | Time: 7m 59s
2024-10-17 03:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88806
2024-10-17 03:06 - INFO - 	 Train Loss: 0.066
2024-10-17 03:06 - INFO - 	 Val. Loss: 0.060
2024-10-17 03:06 - INFO - 	 ROC-AUC: 0.988
2024-10-17 03:06 - INFO - 	 PR-AUC: 0.888
2024-10-17 03:06 - INFO - 	 Best Val. Loss: 0.060
2024-10-17 03:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-17 03:06 - INFO - 	 Best PR-AUC: 0.888
2024-10-17 03:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 03:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-17 03:06 - INFO - ---------------------------------------------
2024-10-17 03:14 - INFO - ---------------------------------------------
2024-10-17 03:14 - INFO - Epoch: 03 | Time: 7m 59s
2024-10-17 03:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88911
2024-10-17 03:14 - INFO - 	 Train Loss: 0.063
2024-10-17 03:14 - INFO - 	 Val. Loss: 0.059
2024-10-17 03:14 - INFO - 	 ROC-AUC: 0.988
2024-10-17 03:14 - INFO - 	 PR-AUC: 0.889
2024-10-17 03:14 - INFO - 	 Best Val. Loss: 0.059
2024-10-17 03:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-17 03:14 - INFO - 	 Best PR-AUC: 0.889
2024-10-17 03:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-17 03:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-17 03:14 - INFO - ---------------------------------------------
2024-10-17 03:22 - INFO - ---------------------------------------------
2024-10-17 03:22 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-17 03:22 - INFO - 	 Train Loss: 0.063
2024-10-17 03:22 - INFO - 	 Val. Loss: 0.060
2024-10-17 03:22 - INFO - 	 ROC-AUC: 0.988
2024-10-17 03:22 - INFO - 	 PR-AUC: 0.884
2024-10-17 03:22 - INFO - 	 Best Val. Loss: 0.059
2024-10-17 03:22 - INFO - 	 Best ROC-AUC: 0.988
2024-10-17 03:22 - INFO - 	 Best PR-AUC: 0.889
2024-10-17 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-17 03:22 - INFO - ---------------------------------------------
2024-10-17 03:30 - INFO - ---------------------------------------------
2024-10-17 03:30 - INFO - Epoch: 05 | Time: 7m 59s
2024-10-17 03:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89867
2024-10-17 03:30 - INFO - 	 Train Loss: 0.060
2024-10-17 03:30 - INFO - 	 Val. Loss: 0.056
2024-10-17 03:30 - INFO - 	 ROC-AUC: 0.989
2024-10-17 03:30 - INFO - 	 PR-AUC: 0.899
2024-10-17 03:30 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 03:30 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 03:30 - INFO - 	 Best PR-AUC: 0.899
2024-10-17 03:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 03:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-17 03:30 - INFO - ---------------------------------------------
2024-10-17 03:38 - INFO - ---------------------------------------------
2024-10-17 03:38 - INFO - Epoch: 06 | Time: 7m 59s
2024-10-17 03:38 - INFO - 	 Train Loss: 0.058
2024-10-17 03:38 - INFO - 	 Val. Loss: 0.056
2024-10-17 03:38 - INFO - 	 ROC-AUC: 0.989
2024-10-17 03:38 - INFO - 	 PR-AUC: 0.896
2024-10-17 03:38 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 03:38 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 03:38 - INFO - 	 Best PR-AUC: 0.899
2024-10-17 03:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 03:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-17 03:38 - INFO - ---------------------------------------------
2024-10-17 03:46 - INFO - ---------------------------------------------
2024-10-17 03:46 - INFO - Epoch: 07 | Time: 7m 59s
2024-10-17 03:46 - INFO - 	 Train Loss: 0.059
2024-10-17 03:46 - INFO - 	 Val. Loss: 0.056
2024-10-17 03:46 - INFO - 	 ROC-AUC: 0.989
2024-10-17 03:46 - INFO - 	 PR-AUC: 0.898
2024-10-17 03:46 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 03:46 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 03:46 - INFO - 	 Best PR-AUC: 0.899
2024-10-17 03:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 03:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-17 03:46 - INFO - ---------------------------------------------
2024-10-17 03:54 - INFO - ---------------------------------------------
2024-10-17 03:54 - INFO - Epoch: 08 | Time: 7m 59s
2024-10-17 03:54 - INFO - 	 Train Loss: 0.056
2024-10-17 03:54 - INFO - 	 Val. Loss: 0.057
2024-10-17 03:54 - INFO - 	 ROC-AUC: 0.989
2024-10-17 03:54 - INFO - 	 PR-AUC: 0.887
2024-10-17 03:54 - INFO - 	 Best Val. Loss: 0.056
2024-10-17 03:54 - INFO - 	 Best ROC-AUC: 0.989
2024-10-17 03:54 - INFO - 	 Best PR-AUC: 0.899
2024-10-17 03:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-17 03:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-10-17 03:54 - INFO - ---------------------------------------------
