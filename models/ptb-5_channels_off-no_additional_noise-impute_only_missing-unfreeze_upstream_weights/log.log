2024-11-27 02:58 - INFO - Fit the preprocessing pipeline
2024-11-27 02:58 - INFO - Training using device: cuda
2024-11-27 02:58 - INFO - Creating generators
2024-11-27 02:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 02:58 - INFO - * Model:
2024-11-27 02:58 - INFO - * -----------
2024-11-27 02:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 02:58 - INFO - * -----------
2024-11-27 03:06 - INFO - ---------------------------------------------
2024-11-27 03:06 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-27 03:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8639
2024-11-27 03:06 - INFO - 	 Train Loss: 0.074
2024-11-27 03:06 - INFO - 	 Val. Loss: 0.065
2024-11-27 03:06 - INFO - 	 ROC-AUC: 0.987
2024-11-27 03:06 - INFO - 	 PR-AUC: 0.864
2024-11-27 03:06 - INFO - 	 Best Val. Loss: 0.065
2024-11-27 03:06 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 03:06 - INFO - 	 Best PR-AUC: 0.864
2024-11-27 03:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-27 03:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-27 03:06 - INFO - ---------------------------------------------
2024-11-27 03:14 - INFO - ---------------------------------------------
2024-11-27 03:14 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-27 03:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87602
2024-11-27 03:14 - INFO - 	 Train Loss: 0.067
2024-11-27 03:14 - INFO - 	 Val. Loss: 0.060
2024-11-27 03:14 - INFO - 	 ROC-AUC: 0.988
2024-11-27 03:14 - INFO - 	 PR-AUC: 0.876
2024-11-27 03:14 - INFO - 	 Best Val. Loss: 0.060
2024-11-27 03:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 03:14 - INFO - 	 Best PR-AUC: 0.876
2024-11-27 03:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 03:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-27 03:14 - INFO - ---------------------------------------------
2024-11-27 03:22 - INFO - ---------------------------------------------
2024-11-27 03:22 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 03:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89497
2024-11-27 03:22 - INFO - 	 Train Loss: 0.065
2024-11-27 03:22 - INFO - 	 Val. Loss: 0.057
2024-11-27 03:22 - INFO - 	 ROC-AUC: 0.989
2024-11-27 03:22 - INFO - 	 PR-AUC: 0.895
2024-11-27 03:22 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 03:22 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 03:22 - INFO - 	 Best PR-AUC: 0.895
2024-11-27 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-27 03:22 - INFO - ---------------------------------------------
2024-11-27 03:30 - INFO - ---------------------------------------------
2024-11-27 03:30 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-27 03:30 - INFO - 	 Train Loss: 0.062
2024-11-27 03:30 - INFO - 	 Val. Loss: 0.056
2024-11-27 03:30 - INFO - 	 ROC-AUC: 0.989
2024-11-27 03:30 - INFO - 	 PR-AUC: 0.894
2024-11-27 03:30 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 03:30 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 03:30 - INFO - 	 Best PR-AUC: 0.895
2024-11-27 03:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 03:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-27 03:30 - INFO - ---------------------------------------------
2024-11-27 03:38 - INFO - ---------------------------------------------
2024-11-27 03:38 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 03:38 - INFO - 	 Train Loss: 0.060
2024-11-27 03:38 - INFO - 	 Val. Loss: 0.057
2024-11-27 03:38 - INFO - 	 ROC-AUC: 0.988
2024-11-27 03:38 - INFO - 	 PR-AUC: 0.893
2024-11-27 03:38 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 03:38 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 03:38 - INFO - 	 Best PR-AUC: 0.895
2024-11-27 03:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 03:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-27 03:38 - INFO - ---------------------------------------------
2024-11-27 03:46 - INFO - ---------------------------------------------
2024-11-27 03:46 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 03:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89613
2024-11-27 03:46 - INFO - 	 Train Loss: 0.060
2024-11-27 03:46 - INFO - 	 Val. Loss: 0.056
2024-11-27 03:46 - INFO - 	 ROC-AUC: 0.989
2024-11-27 03:46 - INFO - 	 PR-AUC: 0.896
2024-11-27 03:46 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 03:46 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 03:46 - INFO - 	 Best PR-AUC: 0.896
2024-11-27 03:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 03:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-27 03:46 - INFO - ---------------------------------------------
2024-11-27 03:54 - INFO - ---------------------------------------------
2024-11-27 03:54 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 03:54 - INFO - 	 Train Loss: 0.058
2024-11-27 03:54 - INFO - 	 Val. Loss: 0.057
2024-11-27 03:54 - INFO - 	 ROC-AUC: 0.988
2024-11-27 03:54 - INFO - 	 PR-AUC: 0.892
2024-11-27 03:54 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 03:54 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 03:54 - INFO - 	 Best PR-AUC: 0.896
2024-11-27 03:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 03:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-27 03:54 - INFO - ---------------------------------------------
2024-11-27 04:02 - INFO - ---------------------------------------------
2024-11-27 04:02 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-27 04:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90087
2024-11-27 04:02 - INFO - 	 Train Loss: 0.058
2024-11-27 04:02 - INFO - 	 Val. Loss: 0.055
2024-11-27 04:02 - INFO - 	 ROC-AUC: 0.989
2024-11-27 04:02 - INFO - 	 PR-AUC: 0.901
2024-11-27 04:02 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 04:02 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 04:02 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 04:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 04:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-27 04:02 - INFO - ---------------------------------------------
2024-11-27 04:10 - INFO - ---------------------------------------------
2024-11-27 04:10 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-27 04:10 - INFO - 	 Train Loss: 0.056
2024-11-27 04:10 - INFO - 	 Val. Loss: 0.055
2024-11-27 04:10 - INFO - 	 ROC-AUC: 0.990
2024-11-27 04:10 - INFO - 	 PR-AUC: 0.898
2024-11-27 04:10 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 04:10 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 04:10 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 04:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 04:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-27 04:10 - INFO - ---------------------------------------------
2024-11-27 04:18 - INFO - ---------------------------------------------
2024-11-27 04:18 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-27 04:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9086
2024-11-27 04:18 - INFO - 	 Train Loss: 0.055
2024-11-27 04:18 - INFO - 	 Val. Loss: 0.053
2024-11-27 04:18 - INFO - 	 ROC-AUC: 0.991
2024-11-27 04:18 - INFO - 	 PR-AUC: 0.909
2024-11-27 04:18 - INFO - 	 Best Val. Loss: 0.053
2024-11-27 04:18 - INFO - 	 Best ROC-AUC: 0.991
2024-11-27 04:18 - INFO - 	 Best PR-AUC: 0.909
2024-11-27 04:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 04:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-11-27 04:18 - INFO - ---------------------------------------------
2024-11-27 04:21 - INFO - Fit the preprocessing pipeline
2024-11-27 04:21 - INFO - Training using device: cuda
2024-11-27 04:21 - INFO - Creating generators
2024-11-27 04:21 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 04:21 - INFO - * Model:
2024-11-27 04:21 - INFO - * -----------
2024-11-27 04:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 04:21 - INFO - * -----------
2024-11-27 04:29 - INFO - ---------------------------------------------
2024-11-27 04:29 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 04:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88008
2024-11-27 04:29 - INFO - 	 Train Loss: 0.076
2024-11-27 04:29 - INFO - 	 Val. Loss: 0.061
2024-11-27 04:29 - INFO - 	 ROC-AUC: 0.988
2024-11-27 04:29 - INFO - 	 PR-AUC: 0.880
2024-11-27 04:29 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 04:29 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 04:29 - INFO - 	 Best PR-AUC: 0.880
2024-11-27 04:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 04:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-27 04:29 - INFO - ---------------------------------------------
2024-11-27 04:37 - INFO - ---------------------------------------------
2024-11-27 04:37 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-27 04:37 - INFO - 	 Train Loss: 0.066
2024-11-27 04:37 - INFO - 	 Val. Loss: 0.066
2024-11-27 04:37 - INFO - 	 ROC-AUC: 0.988
2024-11-27 04:37 - INFO - 	 PR-AUC: 0.865
2024-11-27 04:37 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 04:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 04:37 - INFO - 	 Best PR-AUC: 0.880
2024-11-27 04:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 04:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-27 04:37 - INFO - ---------------------------------------------
2024-11-27 04:45 - INFO - ---------------------------------------------
2024-11-27 04:45 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 04:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89877
2024-11-27 04:45 - INFO - 	 Train Loss: 0.064
2024-11-27 04:45 - INFO - 	 Val. Loss: 0.059
2024-11-27 04:45 - INFO - 	 ROC-AUC: 0.989
2024-11-27 04:45 - INFO - 	 PR-AUC: 0.899
2024-11-27 04:45 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 04:45 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 04:45 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 04:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 04:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-27 04:45 - INFO - ---------------------------------------------
2024-11-27 04:53 - INFO - ---------------------------------------------
2024-11-27 04:53 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-27 04:53 - INFO - 	 Train Loss: 0.062
2024-11-27 04:53 - INFO - 	 Val. Loss: 0.061
2024-11-27 04:53 - INFO - 	 ROC-AUC: 0.988
2024-11-27 04:53 - INFO - 	 PR-AUC: 0.884
2024-11-27 04:53 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 04:53 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 04:53 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 04:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 04:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-27 04:53 - INFO - ---------------------------------------------
2024-11-27 05:01 - INFO - ---------------------------------------------
2024-11-27 05:01 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 05:01 - INFO - 	 Train Loss: 0.060
2024-11-27 05:01 - INFO - 	 Val. Loss: 0.056
2024-11-27 05:01 - INFO - 	 ROC-AUC: 0.989
2024-11-27 05:01 - INFO - 	 PR-AUC: 0.893
2024-11-27 05:01 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 05:01 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 05:01 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 05:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 05:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-27 05:01 - INFO - ---------------------------------------------
2024-11-27 05:09 - INFO - ---------------------------------------------
2024-11-27 05:09 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-27 05:09 - INFO - 	 Train Loss: 0.059
2024-11-27 05:09 - INFO - 	 Val. Loss: 0.061
2024-11-27 05:09 - INFO - 	 ROC-AUC: 0.988
2024-11-27 05:09 - INFO - 	 PR-AUC: 0.881
2024-11-27 05:09 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 05:09 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 05:09 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 05:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 05:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-27 05:09 - INFO - ---------------------------------------------
2024-11-27 05:17 - INFO - ---------------------------------------------
2024-11-27 05:17 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 05:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90084
2024-11-27 05:17 - INFO - 	 Train Loss: 0.058
2024-11-27 05:17 - INFO - 	 Val. Loss: 0.055
2024-11-27 05:17 - INFO - 	 ROC-AUC: 0.989
2024-11-27 05:17 - INFO - 	 PR-AUC: 0.901
2024-11-27 05:17 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 05:17 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 05:17 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 05:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 05:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-27 05:17 - INFO - ---------------------------------------------
2024-11-27 05:25 - INFO - ---------------------------------------------
2024-11-27 05:25 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-27 05:25 - INFO - 	 Train Loss: 0.058
2024-11-27 05:25 - INFO - 	 Val. Loss: 0.056
2024-11-27 05:25 - INFO - 	 ROC-AUC: 0.989
2024-11-27 05:25 - INFO - 	 PR-AUC: 0.896
2024-11-27 05:25 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 05:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 05:25 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 05:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 05:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-27 05:25 - INFO - ---------------------------------------------
2024-11-27 05:33 - INFO - ---------------------------------------------
2024-11-27 05:33 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-27 05:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90869
2024-11-27 05:33 - INFO - 	 Train Loss: 0.057
2024-11-27 05:33 - INFO - 	 Val. Loss: 0.053
2024-11-27 05:33 - INFO - 	 ROC-AUC: 0.990
2024-11-27 05:33 - INFO - 	 PR-AUC: 0.909
2024-11-27 05:33 - INFO - 	 Best Val. Loss: 0.053
2024-11-27 05:33 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 05:33 - INFO - 	 Best PR-AUC: 0.909
2024-11-27 05:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 05:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-11-27 05:33 - INFO - ---------------------------------------------
2024-11-27 05:41 - INFO - ---------------------------------------------
2024-11-27 05:41 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-27 05:41 - INFO - 	 Train Loss: 0.056
2024-11-27 05:41 - INFO - 	 Val. Loss: 0.054
2024-11-27 05:41 - INFO - 	 ROC-AUC: 0.989
2024-11-27 05:41 - INFO - 	 PR-AUC: 0.899
2024-11-27 05:41 - INFO - 	 Best Val. Loss: 0.053
2024-11-27 05:41 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 05:41 - INFO - 	 Best PR-AUC: 0.909
2024-11-27 05:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 05:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-11-27 05:41 - INFO - ---------------------------------------------
2024-11-27 05:43 - INFO - Fit the preprocessing pipeline
2024-11-27 05:43 - INFO - Training using device: cuda
2024-11-27 05:43 - INFO - Creating generators
2024-11-27 05:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 05:43 - INFO - * Model:
2024-11-27 05:43 - INFO - * -----------
2024-11-27 05:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 05:43 - INFO - * -----------
2024-11-27 05:51 - INFO - ---------------------------------------------
2024-11-27 05:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-27 05:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85993
2024-11-27 05:51 - INFO - 	 Train Loss: 0.075
2024-11-27 05:51 - INFO - 	 Val. Loss: 0.065
2024-11-27 05:51 - INFO - 	 ROC-AUC: 0.986
2024-11-27 05:51 - INFO - 	 PR-AUC: 0.860
2024-11-27 05:51 - INFO - 	 Best Val. Loss: 0.065
2024-11-27 05:51 - INFO - 	 Best ROC-AUC: 0.986
2024-11-27 05:51 - INFO - 	 Best PR-AUC: 0.860
2024-11-27 05:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 05:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-27 05:51 - INFO - ---------------------------------------------
2024-11-27 05:59 - INFO - ---------------------------------------------
2024-11-27 05:59 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 05:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88997
2024-11-27 05:59 - INFO - 	 Train Loss: 0.066
2024-11-27 05:59 - INFO - 	 Val. Loss: 0.058
2024-11-27 05:59 - INFO - 	 ROC-AUC: 0.989
2024-11-27 05:59 - INFO - 	 PR-AUC: 0.890
2024-11-27 05:59 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 05:59 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 05:59 - INFO - 	 Best PR-AUC: 0.890
2024-11-27 05:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 05:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-27 05:59 - INFO - ---------------------------------------------
2024-11-27 06:07 - INFO - ---------------------------------------------
2024-11-27 06:07 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 06:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89224
2024-11-27 06:07 - INFO - 	 Train Loss: 0.064
2024-11-27 06:07 - INFO - 	 Val. Loss: 0.058
2024-11-27 06:07 - INFO - 	 ROC-AUC: 0.989
2024-11-27 06:07 - INFO - 	 PR-AUC: 0.892
2024-11-27 06:07 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 06:07 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 06:07 - INFO - 	 Best PR-AUC: 0.892
2024-11-27 06:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 06:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-27 06:07 - INFO - ---------------------------------------------
2024-11-27 06:15 - INFO - ---------------------------------------------
2024-11-27 06:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-27 06:15 - INFO - 	 Train Loss: 0.061
2024-11-27 06:15 - INFO - 	 Val. Loss: 0.058
2024-11-27 06:15 - INFO - 	 ROC-AUC: 0.989
2024-11-27 06:15 - INFO - 	 PR-AUC: 0.891
2024-11-27 06:15 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 06:15 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 06:15 - INFO - 	 Best PR-AUC: 0.892
2024-11-27 06:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 06:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-27 06:15 - INFO - ---------------------------------------------
2024-11-27 06:23 - INFO - ---------------------------------------------
2024-11-27 06:23 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 06:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89784
2024-11-27 06:23 - INFO - 	 Train Loss: 0.060
2024-11-27 06:23 - INFO - 	 Val. Loss: 0.054
2024-11-27 06:23 - INFO - 	 ROC-AUC: 0.989
2024-11-27 06:23 - INFO - 	 PR-AUC: 0.898
2024-11-27 06:23 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 06:23 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 06:23 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 06:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 06:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-27 06:23 - INFO - ---------------------------------------------
2024-11-27 06:31 - INFO - ---------------------------------------------
2024-11-27 06:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 06:31 - INFO - 	 Train Loss: 0.059
2024-11-27 06:31 - INFO - 	 Val. Loss: 0.058
2024-11-27 06:31 - INFO - 	 ROC-AUC: 0.988
2024-11-27 06:31 - INFO - 	 PR-AUC: 0.887
2024-11-27 06:31 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 06:31 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 06:31 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 06:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 06:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-27 06:31 - INFO - ---------------------------------------------
2024-11-27 06:40 - INFO - ---------------------------------------------
2024-11-27 06:40 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-27 06:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89803
2024-11-27 06:40 - INFO - 	 Train Loss: 0.058
2024-11-27 06:40 - INFO - 	 Val. Loss: 0.057
2024-11-27 06:40 - INFO - 	 ROC-AUC: 0.989
2024-11-27 06:40 - INFO - 	 PR-AUC: 0.898
2024-11-27 06:40 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 06:40 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 06:40 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 06:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 06:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-27 06:40 - INFO - ---------------------------------------------
2024-11-27 06:48 - INFO - ---------------------------------------------
2024-11-27 06:48 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-27 06:48 - INFO - 	 Train Loss: 0.056
2024-11-27 06:48 - INFO - 	 Val. Loss: 0.061
2024-11-27 06:48 - INFO - 	 ROC-AUC: 0.988
2024-11-27 06:48 - INFO - 	 PR-AUC: 0.890
2024-11-27 06:48 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 06:48 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 06:48 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 06:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 06:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-27 06:48 - INFO - ---------------------------------------------
2024-11-27 06:56 - INFO - ---------------------------------------------
2024-11-27 06:56 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-27 06:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90711
2024-11-27 06:56 - INFO - 	 Train Loss: 0.056
2024-11-27 06:56 - INFO - 	 Val. Loss: 0.054
2024-11-27 06:56 - INFO - 	 ROC-AUC: 0.990
2024-11-27 06:56 - INFO - 	 PR-AUC: 0.907
2024-11-27 06:56 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 06:56 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 06:56 - INFO - 	 Best PR-AUC: 0.907
2024-11-27 06:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 06:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-27 06:56 - INFO - ---------------------------------------------
2024-11-27 07:04 - INFO - ---------------------------------------------
2024-11-27 07:04 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-27 07:04 - INFO - 	 Train Loss: 0.055
2024-11-27 07:04 - INFO - 	 Val. Loss: 0.054
2024-11-27 07:04 - INFO - 	 ROC-AUC: 0.990
2024-11-27 07:04 - INFO - 	 PR-AUC: 0.906
2024-11-27 07:04 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 07:04 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 07:04 - INFO - 	 Best PR-AUC: 0.907
2024-11-27 07:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 07:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-27 07:04 - INFO - ---------------------------------------------
2024-11-27 07:06 - INFO - Fit the preprocessing pipeline
2024-11-27 07:06 - INFO - Training using device: cuda
2024-11-27 07:06 - INFO - Creating generators
2024-11-27 07:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 07:06 - INFO - * Model:
2024-11-27 07:06 - INFO - * -----------
2024-11-27 07:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 07:06 - INFO - * -----------
2024-11-27 07:14 - INFO - ---------------------------------------------
2024-11-27 07:14 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-27 07:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87116
2024-11-27 07:14 - INFO - 	 Train Loss: 0.074
2024-11-27 07:14 - INFO - 	 Val. Loss: 0.064
2024-11-27 07:14 - INFO - 	 ROC-AUC: 0.988
2024-11-27 07:14 - INFO - 	 PR-AUC: 0.871
2024-11-27 07:14 - INFO - 	 Best Val. Loss: 0.064
2024-11-27 07:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 07:14 - INFO - 	 Best PR-AUC: 0.871
2024-11-27 07:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 07:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-27 07:14 - INFO - ---------------------------------------------
2024-11-27 07:22 - INFO - ---------------------------------------------
2024-11-27 07:22 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 07:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88714
2024-11-27 07:22 - INFO - 	 Train Loss: 0.067
2024-11-27 07:22 - INFO - 	 Val. Loss: 0.059
2024-11-27 07:22 - INFO - 	 ROC-AUC: 0.989
2024-11-27 07:22 - INFO - 	 PR-AUC: 0.887
2024-11-27 07:22 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 07:22 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 07:22 - INFO - 	 Best PR-AUC: 0.887
2024-11-27 07:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 07:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-27 07:22 - INFO - ---------------------------------------------
2024-11-27 07:30 - INFO - ---------------------------------------------
2024-11-27 07:30 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 07:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8934
2024-11-27 07:30 - INFO - 	 Train Loss: 0.064
2024-11-27 07:30 - INFO - 	 Val. Loss: 0.058
2024-11-27 07:30 - INFO - 	 ROC-AUC: 0.988
2024-11-27 07:30 - INFO - 	 PR-AUC: 0.893
2024-11-27 07:30 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 07:30 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 07:30 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 07:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 07:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 07:30 - INFO - ---------------------------------------------
2024-11-27 07:38 - INFO - ---------------------------------------------
2024-11-27 07:38 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 07:38 - INFO - 	 Train Loss: 0.062
2024-11-27 07:38 - INFO - 	 Val. Loss: 0.057
2024-11-27 07:38 - INFO - 	 ROC-AUC: 0.989
2024-11-27 07:38 - INFO - 	 PR-AUC: 0.891
2024-11-27 07:38 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 07:38 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 07:38 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 07:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 07:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 07:38 - INFO - ---------------------------------------------
2024-11-27 07:46 - INFO - ---------------------------------------------
2024-11-27 07:46 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 07:46 - INFO - 	 Train Loss: 0.060
2024-11-27 07:46 - INFO - 	 Val. Loss: 0.056
2024-11-27 07:46 - INFO - 	 ROC-AUC: 0.989
2024-11-27 07:46 - INFO - 	 PR-AUC: 0.888
2024-11-27 07:46 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 07:46 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 07:46 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 07:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 07:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 07:46 - INFO - ---------------------------------------------
2024-11-27 07:54 - INFO - ---------------------------------------------
2024-11-27 07:54 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 07:54 - INFO - 	 Train Loss: 0.059
2024-11-27 07:54 - INFO - 	 Val. Loss: 0.055
2024-11-27 07:54 - INFO - 	 ROC-AUC: 0.989
2024-11-27 07:54 - INFO - 	 PR-AUC: 0.888
2024-11-27 07:54 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 07:54 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 07:54 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 07:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 07:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 07:54 - INFO - ---------------------------------------------
2024-11-27 08:02 - INFO - ---------------------------------------------
2024-11-27 08:02 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-27 08:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89484
2024-11-27 08:02 - INFO - 	 Train Loss: 0.058
2024-11-27 08:02 - INFO - 	 Val. Loss: 0.056
2024-11-27 08:02 - INFO - 	 ROC-AUC: 0.989
2024-11-27 08:02 - INFO - 	 PR-AUC: 0.895
2024-11-27 08:02 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 08:02 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 08:02 - INFO - 	 Best PR-AUC: 0.895
2024-11-27 08:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 08:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-27 08:02 - INFO - ---------------------------------------------
2024-11-27 08:10 - INFO - ---------------------------------------------
2024-11-27 08:10 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 08:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9011
2024-11-27 08:10 - INFO - 	 Train Loss: 0.057
2024-11-27 08:10 - INFO - 	 Val. Loss: 0.055
2024-11-27 08:10 - INFO - 	 ROC-AUC: 0.990
2024-11-27 08:10 - INFO - 	 PR-AUC: 0.901
2024-11-27 08:10 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 08:10 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 08:10 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 08:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 08:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 08:10 - INFO - ---------------------------------------------
2024-11-27 08:18 - INFO - ---------------------------------------------
2024-11-27 08:18 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-27 08:18 - INFO - 	 Train Loss: 0.056
2024-11-27 08:18 - INFO - 	 Val. Loss: 0.057
2024-11-27 08:18 - INFO - 	 ROC-AUC: 0.988
2024-11-27 08:18 - INFO - 	 PR-AUC: 0.892
2024-11-27 08:18 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 08:18 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 08:18 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 08:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 08:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 08:18 - INFO - ---------------------------------------------
2024-11-27 08:26 - INFO - ---------------------------------------------
2024-11-27 08:26 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-27 08:26 - INFO - 	 Train Loss: 0.056
2024-11-27 08:26 - INFO - 	 Val. Loss: 0.056
2024-11-27 08:26 - INFO - 	 ROC-AUC: 0.989
2024-11-27 08:26 - INFO - 	 PR-AUC: 0.893
2024-11-27 08:26 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 08:26 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 08:26 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 08:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 08:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 08:26 - INFO - ---------------------------------------------
2024-11-27 08:29 - INFO - Fit the preprocessing pipeline
2024-11-27 08:29 - INFO - Training using device: cuda
2024-11-27 08:29 - INFO - Creating generators
2024-11-27 08:29 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 08:29 - INFO - * Model:
2024-11-27 08:29 - INFO - * -----------
2024-11-27 08:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 08:29 - INFO - * -----------
2024-11-27 08:37 - INFO - ---------------------------------------------
2024-11-27 08:37 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 08:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88393
2024-11-27 08:37 - INFO - 	 Train Loss: 0.075
2024-11-27 08:37 - INFO - 	 Val. Loss: 0.062
2024-11-27 08:37 - INFO - 	 ROC-AUC: 0.987
2024-11-27 08:37 - INFO - 	 PR-AUC: 0.884
2024-11-27 08:37 - INFO - 	 Best Val. Loss: 0.062
2024-11-27 08:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 08:37 - INFO - 	 Best PR-AUC: 0.884
2024-11-27 08:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 08:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-27 08:37 - INFO - ---------------------------------------------
2024-11-27 08:45 - INFO - ---------------------------------------------
2024-11-27 08:45 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-27 08:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88539
2024-11-27 08:45 - INFO - 	 Train Loss: 0.066
2024-11-27 08:45 - INFO - 	 Val. Loss: 0.061
2024-11-27 08:45 - INFO - 	 ROC-AUC: 0.988
2024-11-27 08:45 - INFO - 	 PR-AUC: 0.885
2024-11-27 08:45 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 08:45 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 08:45 - INFO - 	 Best PR-AUC: 0.885
2024-11-27 08:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 08:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-27 08:45 - INFO - ---------------------------------------------
2024-11-27 08:53 - INFO - ---------------------------------------------
2024-11-27 08:53 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 08:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89758
2024-11-27 08:53 - INFO - 	 Train Loss: 0.065
2024-11-27 08:53 - INFO - 	 Val. Loss: 0.059
2024-11-27 08:53 - INFO - 	 ROC-AUC: 0.988
2024-11-27 08:53 - INFO - 	 PR-AUC: 0.898
2024-11-27 08:53 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 08:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 08:53 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 08:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 08:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-27 08:53 - INFO - ---------------------------------------------
2024-11-27 09:01 - INFO - ---------------------------------------------
2024-11-27 09:01 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 09:01 - INFO - 	 Train Loss: 0.062
2024-11-27 09:01 - INFO - 	 Val. Loss: 0.061
2024-11-27 09:01 - INFO - 	 ROC-AUC: 0.988
2024-11-27 09:01 - INFO - 	 PR-AUC: 0.892
2024-11-27 09:01 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 09:01 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 09:01 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 09:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 09:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-27 09:01 - INFO - ---------------------------------------------
2024-11-27 09:09 - INFO - ---------------------------------------------
2024-11-27 09:09 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 09:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90127
2024-11-27 09:09 - INFO - 	 Train Loss: 0.061
2024-11-27 09:09 - INFO - 	 Val. Loss: 0.056
2024-11-27 09:09 - INFO - 	 ROC-AUC: 0.989
2024-11-27 09:09 - INFO - 	 PR-AUC: 0.901
2024-11-27 09:09 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 09:09 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 09:09 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 09:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 09:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-27 09:09 - INFO - ---------------------------------------------
2024-11-27 09:17 - INFO - ---------------------------------------------
2024-11-27 09:17 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 09:17 - INFO - 	 Train Loss: 0.060
2024-11-27 09:17 - INFO - 	 Val. Loss: 0.057
2024-11-27 09:17 - INFO - 	 ROC-AUC: 0.989
2024-11-27 09:17 - INFO - 	 PR-AUC: 0.892
2024-11-27 09:17 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 09:17 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 09:17 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 09:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 09:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-27 09:17 - INFO - ---------------------------------------------
2024-11-27 09:25 - INFO - ---------------------------------------------
2024-11-27 09:25 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-27 09:25 - INFO - 	 Train Loss: 0.059
2024-11-27 09:25 - INFO - 	 Val. Loss: 0.057
2024-11-27 09:25 - INFO - 	 ROC-AUC: 0.989
2024-11-27 09:25 - INFO - 	 PR-AUC: 0.892
2024-11-27 09:25 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 09:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 09:25 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 09:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 09:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-27 09:25 - INFO - ---------------------------------------------
2024-11-27 09:33 - INFO - ---------------------------------------------
2024-11-27 09:33 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 09:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.9047
2024-11-27 09:33 - INFO - 	 Train Loss: 0.057
2024-11-27 09:33 - INFO - 	 Val. Loss: 0.054
2024-11-27 09:33 - INFO - 	 ROC-AUC: 0.989
2024-11-27 09:33 - INFO - 	 PR-AUC: 0.905
2024-11-27 09:33 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 09:33 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 09:33 - INFO - 	 Best PR-AUC: 0.905
2024-11-27 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-11-27 09:33 - INFO - ---------------------------------------------
2024-11-27 09:41 - INFO - ---------------------------------------------
2024-11-27 09:41 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-27 09:41 - INFO - 	 Train Loss: 0.056
2024-11-27 09:41 - INFO - 	 Val. Loss: 0.056
2024-11-27 09:41 - INFO - 	 ROC-AUC: 0.989
2024-11-27 09:41 - INFO - 	 PR-AUC: 0.897
2024-11-27 09:41 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 09:41 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 09:41 - INFO - 	 Best PR-AUC: 0.905
2024-11-27 09:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 09:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-11-27 09:41 - INFO - ---------------------------------------------
2024-11-27 09:49 - INFO - ---------------------------------------------
2024-11-27 09:49 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-27 09:49 - INFO - 	 Train Loss: 0.055
2024-11-27 09:49 - INFO - 	 Val. Loss: 0.054
2024-11-27 09:49 - INFO - 	 ROC-AUC: 0.989
2024-11-27 09:49 - INFO - 	 PR-AUC: 0.901
2024-11-27 09:49 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 09:49 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 09:49 - INFO - 	 Best PR-AUC: 0.905
2024-11-27 09:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 09:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-11-27 09:49 - INFO - ---------------------------------------------
2024-11-27 09:51 - INFO - Fit the preprocessing pipeline
2024-11-27 09:51 - INFO - Training using device: cuda
2024-11-27 09:51 - INFO - Creating generators
2024-11-27 09:51 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 09:51 - INFO - * Model:
2024-11-27 09:51 - INFO - * -----------
2024-11-27 09:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 09:51 - INFO - * -----------
2024-11-27 10:00 - INFO - ---------------------------------------------
2024-11-27 10:00 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 10:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84898
2024-11-27 10:00 - INFO - 	 Train Loss: 0.075
2024-11-27 10:00 - INFO - 	 Val. Loss: 0.069
2024-11-27 10:00 - INFO - 	 ROC-AUC: 0.985
2024-11-27 10:00 - INFO - 	 PR-AUC: 0.849
2024-11-27 10:00 - INFO - 	 Best Val. Loss: 0.069
2024-11-27 10:00 - INFO - 	 Best ROC-AUC: 0.985
2024-11-27 10:00 - INFO - 	 Best PR-AUC: 0.849
2024-11-27 10:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 10:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-27 10:00 - INFO - ---------------------------------------------
2024-11-27 10:08 - INFO - ---------------------------------------------
2024-11-27 10:08 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-27 10:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88639
2024-11-27 10:08 - INFO - 	 Train Loss: 0.067
2024-11-27 10:08 - INFO - 	 Val. Loss: 0.058
2024-11-27 10:08 - INFO - 	 ROC-AUC: 0.989
2024-11-27 10:08 - INFO - 	 PR-AUC: 0.886
2024-11-27 10:08 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 10:08 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 10:08 - INFO - 	 Best PR-AUC: 0.886
2024-11-27 10:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 10:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-27 10:08 - INFO - ---------------------------------------------
2024-11-27 10:16 - INFO - ---------------------------------------------
2024-11-27 10:16 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 10:16 - INFO - 	 Train Loss: 0.064
2024-11-27 10:16 - INFO - 	 Val. Loss: 0.060
2024-11-27 10:16 - INFO - 	 ROC-AUC: 0.988
2024-11-27 10:16 - INFO - 	 PR-AUC: 0.880
2024-11-27 10:16 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 10:16 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 10:16 - INFO - 	 Best PR-AUC: 0.886
2024-11-27 10:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 10:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-27 10:16 - INFO - ---------------------------------------------
2024-11-27 10:24 - INFO - ---------------------------------------------
2024-11-27 10:24 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-27 10:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89677
2024-11-27 10:24 - INFO - 	 Train Loss: 0.062
2024-11-27 10:24 - INFO - 	 Val. Loss: 0.056
2024-11-27 10:24 - INFO - 	 ROC-AUC: 0.988
2024-11-27 10:24 - INFO - 	 PR-AUC: 0.897
2024-11-27 10:24 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 10:24 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 10:24 - INFO - 	 Best PR-AUC: 0.897
2024-11-27 10:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 10:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-27 10:24 - INFO - ---------------------------------------------
2024-11-27 10:32 - INFO - ---------------------------------------------
2024-11-27 10:32 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 10:32 - INFO - 	 Train Loss: 0.061
2024-11-27 10:32 - INFO - 	 Val. Loss: 0.055
2024-11-27 10:32 - INFO - 	 ROC-AUC: 0.990
2024-11-27 10:32 - INFO - 	 PR-AUC: 0.894
2024-11-27 10:32 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 10:32 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 10:32 - INFO - 	 Best PR-AUC: 0.897
2024-11-27 10:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 10:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-27 10:32 - INFO - ---------------------------------------------
2024-11-27 10:40 - INFO - ---------------------------------------------
2024-11-27 10:40 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 10:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.904
2024-11-27 10:40 - INFO - 	 Train Loss: 0.060
2024-11-27 10:40 - INFO - 	 Val. Loss: 0.054
2024-11-27 10:40 - INFO - 	 ROC-AUC: 0.990
2024-11-27 10:40 - INFO - 	 PR-AUC: 0.904
2024-11-27 10:40 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 10:40 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 10:40 - INFO - 	 Best PR-AUC: 0.904
2024-11-27 10:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 10:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 10:40 - INFO - ---------------------------------------------
2024-11-27 10:48 - INFO - ---------------------------------------------
2024-11-27 10:48 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 10:48 - INFO - 	 Train Loss: 0.058
2024-11-27 10:48 - INFO - 	 Val. Loss: 0.056
2024-11-27 10:48 - INFO - 	 ROC-AUC: 0.989
2024-11-27 10:48 - INFO - 	 PR-AUC: 0.899
2024-11-27 10:48 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 10:48 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 10:48 - INFO - 	 Best PR-AUC: 0.904
2024-11-27 10:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 10:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 10:48 - INFO - ---------------------------------------------
2024-11-27 10:56 - INFO - ---------------------------------------------
2024-11-27 10:56 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 10:56 - INFO - 	 Train Loss: 0.057
2024-11-27 10:56 - INFO - 	 Val. Loss: 0.057
2024-11-27 10:56 - INFO - 	 ROC-AUC: 0.989
2024-11-27 10:56 - INFO - 	 PR-AUC: 0.888
2024-11-27 10:56 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 10:56 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 10:56 - INFO - 	 Best PR-AUC: 0.904
2024-11-27 10:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 10:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 10:56 - INFO - ---------------------------------------------
2024-11-27 11:04 - INFO - ---------------------------------------------
2024-11-27 11:04 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-27 11:04 - INFO - 	 Train Loss: 0.057
2024-11-27 11:04 - INFO - 	 Val. Loss: 0.055
2024-11-27 11:04 - INFO - 	 ROC-AUC: 0.989
2024-11-27 11:04 - INFO - 	 PR-AUC: 0.903
2024-11-27 11:04 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 11:04 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 11:04 - INFO - 	 Best PR-AUC: 0.904
2024-11-27 11:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 11:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 11:04 - INFO - ---------------------------------------------
2024-11-27 11:14 - INFO - Fit the preprocessing pipeline
2024-11-27 11:14 - INFO - Training using device: cuda
2024-11-27 11:14 - INFO - Creating generators
2024-11-27 11:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 11:14 - INFO - * Model:
2024-11-27 11:14 - INFO - * -----------
2024-11-27 11:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 11:14 - INFO - * -----------
2024-11-27 11:22 - INFO - ---------------------------------------------
2024-11-27 11:22 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 11:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87698
2024-11-27 11:22 - INFO - 	 Train Loss: 0.075
2024-11-27 11:22 - INFO - 	 Val. Loss: 0.061
2024-11-27 11:22 - INFO - 	 ROC-AUC: 0.988
2024-11-27 11:22 - INFO - 	 PR-AUC: 0.877
2024-11-27 11:22 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 11:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 11:22 - INFO - 	 Best PR-AUC: 0.877
2024-11-27 11:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 11:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 11:22 - INFO - ---------------------------------------------
2024-11-27 11:30 - INFO - ---------------------------------------------
2024-11-27 11:30 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 11:30 - INFO - 	 Train Loss: 0.067
2024-11-27 11:30 - INFO - 	 Val. Loss: 0.062
2024-11-27 11:30 - INFO - 	 ROC-AUC: 0.987
2024-11-27 11:30 - INFO - 	 PR-AUC: 0.868
2024-11-27 11:30 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 11:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 11:30 - INFO - 	 Best PR-AUC: 0.877
2024-11-27 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 11:30 - INFO - ---------------------------------------------
2024-11-27 11:38 - INFO - ---------------------------------------------
2024-11-27 11:38 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 11:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89777
2024-11-27 11:38 - INFO - 	 Train Loss: 0.063
2024-11-27 11:38 - INFO - 	 Val. Loss: 0.057
2024-11-27 11:38 - INFO - 	 ROC-AUC: 0.989
2024-11-27 11:38 - INFO - 	 PR-AUC: 0.898
2024-11-27 11:38 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 11:38 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 11:38 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 11:38 - INFO - ---------------------------------------------
2024-11-27 11:46 - INFO - ---------------------------------------------
2024-11-27 11:46 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 11:46 - INFO - 	 Train Loss: 0.062
2024-11-27 11:46 - INFO - 	 Val. Loss: 0.062
2024-11-27 11:46 - INFO - 	 ROC-AUC: 0.988
2024-11-27 11:46 - INFO - 	 PR-AUC: 0.882
2024-11-27 11:46 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 11:46 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 11:46 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 11:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 11:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 11:46 - INFO - ---------------------------------------------
2024-11-27 11:54 - INFO - ---------------------------------------------
2024-11-27 11:54 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 11:54 - INFO - 	 Train Loss: 0.061
2024-11-27 11:54 - INFO - 	 Val. Loss: 0.059
2024-11-27 11:54 - INFO - 	 ROC-AUC: 0.987
2024-11-27 11:54 - INFO - 	 PR-AUC: 0.882
2024-11-27 11:54 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 11:54 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 11:54 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 11:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 11:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 11:54 - INFO - ---------------------------------------------
2024-11-27 12:03 - INFO - ---------------------------------------------
2024-11-27 12:03 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-27 12:03 - INFO - 	 Train Loss: 0.059
2024-11-27 12:03 - INFO - 	 Val. Loss: 0.057
2024-11-27 12:03 - INFO - 	 ROC-AUC: 0.988
2024-11-27 12:03 - INFO - 	 PR-AUC: 0.890
2024-11-27 12:03 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 12:03 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 12:03 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 12:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 12:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 12:03 - INFO - ---------------------------------------------
2024-11-27 12:13 - INFO - Fit the preprocessing pipeline
2024-11-27 12:13 - INFO - Training using device: cuda
2024-11-27 12:13 - INFO - Creating generators
2024-11-27 12:13 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 12:13 - INFO - * Model:
2024-11-27 12:13 - INFO - * -----------
2024-11-27 12:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 12:13 - INFO - * -----------
2024-11-27 12:21 - INFO - ---------------------------------------------
2024-11-27 12:21 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-27 12:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8761
2024-11-27 12:21 - INFO - 	 Train Loss: 0.075
2024-11-27 12:21 - INFO - 	 Val. Loss: 0.063
2024-11-27 12:21 - INFO - 	 ROC-AUC: 0.988
2024-11-27 12:21 - INFO - 	 PR-AUC: 0.876
2024-11-27 12:21 - INFO - 	 Best Val. Loss: 0.063
2024-11-27 12:21 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 12:21 - INFO - 	 Best PR-AUC: 0.876
2024-11-27 12:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 12:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-27 12:21 - INFO - ---------------------------------------------
2024-11-27 12:29 - INFO - ---------------------------------------------
2024-11-27 12:29 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 12:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88664
2024-11-27 12:29 - INFO - 	 Train Loss: 0.066
2024-11-27 12:29 - INFO - 	 Val. Loss: 0.058
2024-11-27 12:29 - INFO - 	 ROC-AUC: 0.988
2024-11-27 12:29 - INFO - 	 PR-AUC: 0.887
2024-11-27 12:29 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 12:29 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 12:29 - INFO - 	 Best PR-AUC: 0.887
2024-11-27 12:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 12:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 12:29 - INFO - ---------------------------------------------
2024-11-27 12:37 - INFO - ---------------------------------------------
2024-11-27 12:37 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 12:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8906
2024-11-27 12:37 - INFO - 	 Train Loss: 0.065
2024-11-27 12:37 - INFO - 	 Val. Loss: 0.059
2024-11-27 12:37 - INFO - 	 ROC-AUC: 0.989
2024-11-27 12:37 - INFO - 	 PR-AUC: 0.891
2024-11-27 12:37 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 12:37 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 12:37 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 12:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 12:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-11-27 12:37 - INFO - ---------------------------------------------
2024-11-27 12:45 - INFO - ---------------------------------------------
2024-11-27 12:45 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 12:45 - INFO - 	 Train Loss: 0.062
2024-11-27 12:45 - INFO - 	 Val. Loss: 0.057
2024-11-27 12:45 - INFO - 	 ROC-AUC: 0.989
2024-11-27 12:45 - INFO - 	 PR-AUC: 0.889
2024-11-27 12:45 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 12:45 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 12:45 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 12:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 12:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-11-27 12:45 - INFO - ---------------------------------------------
2024-11-27 12:53 - INFO - ---------------------------------------------
2024-11-27 12:53 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 12:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89502
2024-11-27 12:53 - INFO - 	 Train Loss: 0.060
2024-11-27 12:53 - INFO - 	 Val. Loss: 0.056
2024-11-27 12:53 - INFO - 	 ROC-AUC: 0.989
2024-11-27 12:53 - INFO - 	 PR-AUC: 0.895
2024-11-27 12:53 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 12:53 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 12:53 - INFO - 	 Best PR-AUC: 0.895
2024-11-27 12:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 12:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 12:53 - INFO - ---------------------------------------------
2024-11-27 13:01 - INFO - ---------------------------------------------
2024-11-27 13:01 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-27 13:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90648
2024-11-27 13:01 - INFO - 	 Train Loss: 0.060
2024-11-27 13:01 - INFO - 	 Val. Loss: 0.055
2024-11-27 13:01 - INFO - 	 ROC-AUC: 0.989
2024-11-27 13:01 - INFO - 	 PR-AUC: 0.906
2024-11-27 13:01 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 13:01 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 13:01 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 13:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 13:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 13:01 - INFO - ---------------------------------------------
2024-11-27 13:09 - INFO - ---------------------------------------------
2024-11-27 13:09 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-27 13:09 - INFO - 	 Train Loss: 0.058
2024-11-27 13:09 - INFO - 	 Val. Loss: 0.056
2024-11-27 13:09 - INFO - 	 ROC-AUC: 0.989
2024-11-27 13:09 - INFO - 	 PR-AUC: 0.899
2024-11-27 13:09 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 13:09 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 13:09 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 13:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 13:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 13:09 - INFO - ---------------------------------------------
2024-11-27 13:17 - INFO - ---------------------------------------------
2024-11-27 13:17 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 13:17 - INFO - 	 Train Loss: 0.057
2024-11-27 13:17 - INFO - 	 Val. Loss: 0.055
2024-11-27 13:17 - INFO - 	 ROC-AUC: 0.989
2024-11-27 13:17 - INFO - 	 PR-AUC: 0.903
2024-11-27 13:17 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 13:17 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 13:17 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 13:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 13:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 13:17 - INFO - ---------------------------------------------
2024-11-27 13:25 - INFO - ---------------------------------------------
2024-11-27 13:25 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-27 13:25 - INFO - 	 Train Loss: 0.057
2024-11-27 13:25 - INFO - 	 Val. Loss: 0.058
2024-11-27 13:25 - INFO - 	 ROC-AUC: 0.988
2024-11-27 13:25 - INFO - 	 PR-AUC: 0.895
2024-11-27 13:25 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 13:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 13:25 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 13:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 13:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 13:25 - INFO - ---------------------------------------------
2024-11-27 13:36 - INFO - Fit the preprocessing pipeline
2024-11-27 13:36 - INFO - Training using device: cuda
2024-11-27 13:36 - INFO - Creating generators
2024-11-27 13:36 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 13:36 - INFO - * Model:
2024-11-27 13:36 - INFO - * -----------
2024-11-27 13:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 13:36 - INFO - * -----------
2024-11-27 13:44 - INFO - ---------------------------------------------
2024-11-27 13:44 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 13:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86192
2024-11-27 13:44 - INFO - 	 Train Loss: 0.075
2024-11-27 13:44 - INFO - 	 Val. Loss: 0.066
2024-11-27 13:44 - INFO - 	 ROC-AUC: 0.985
2024-11-27 13:44 - INFO - 	 PR-AUC: 0.862
2024-11-27 13:44 - INFO - 	 Best Val. Loss: 0.066
2024-11-27 13:44 - INFO - 	 Best ROC-AUC: 0.985
2024-11-27 13:44 - INFO - 	 Best PR-AUC: 0.862
2024-11-27 13:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-27 13:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-11-27 13:44 - INFO - ---------------------------------------------
2024-11-27 13:52 - INFO - ---------------------------------------------
2024-11-27 13:52 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 13:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87549
2024-11-27 13:52 - INFO - 	 Train Loss: 0.067
2024-11-27 13:52 - INFO - 	 Val. Loss: 0.061
2024-11-27 13:52 - INFO - 	 ROC-AUC: 0.988
2024-11-27 13:52 - INFO - 	 PR-AUC: 0.875
2024-11-27 13:52 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 13:52 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 13:52 - INFO - 	 Best PR-AUC: 0.875
2024-11-27 13:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 13:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-11-27 13:52 - INFO - ---------------------------------------------
2024-11-27 14:00 - INFO - ---------------------------------------------
2024-11-27 14:00 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 14:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88115
2024-11-27 14:00 - INFO - 	 Train Loss: 0.063
2024-11-27 14:00 - INFO - 	 Val. Loss: 0.060
2024-11-27 14:00 - INFO - 	 ROC-AUC: 0.988
2024-11-27 14:00 - INFO - 	 PR-AUC: 0.881
2024-11-27 14:00 - INFO - 	 Best Val. Loss: 0.060
2024-11-27 14:00 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 14:00 - INFO - 	 Best PR-AUC: 0.881
2024-11-27 14:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 14:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-27 14:00 - INFO - ---------------------------------------------
2024-11-27 14:08 - INFO - ---------------------------------------------
2024-11-27 14:08 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 14:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88899
2024-11-27 14:08 - INFO - 	 Train Loss: 0.062
2024-11-27 14:08 - INFO - 	 Val. Loss: 0.057
2024-11-27 14:08 - INFO - 	 ROC-AUC: 0.989
2024-11-27 14:08 - INFO - 	 PR-AUC: 0.889
2024-11-27 14:08 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 14:08 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 14:08 - INFO - 	 Best PR-AUC: 0.889
2024-11-27 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-27 14:08 - INFO - ---------------------------------------------
2024-11-27 14:16 - INFO - ---------------------------------------------
2024-11-27 14:16 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 14:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89957
2024-11-27 14:16 - INFO - 	 Train Loss: 0.061
2024-11-27 14:16 - INFO - 	 Val. Loss: 0.055
2024-11-27 14:16 - INFO - 	 ROC-AUC: 0.989
2024-11-27 14:16 - INFO - 	 PR-AUC: 0.900
2024-11-27 14:16 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 14:16 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 14:16 - INFO - 	 Best PR-AUC: 0.900
2024-11-27 14:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 14:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-27 14:16 - INFO - ---------------------------------------------
2024-11-27 14:24 - INFO - ---------------------------------------------
2024-11-27 14:24 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 14:24 - INFO - 	 Train Loss: 0.059
2024-11-27 14:24 - INFO - 	 Val. Loss: 0.053
2024-11-27 14:24 - INFO - 	 ROC-AUC: 0.990
2024-11-27 14:24 - INFO - 	 PR-AUC: 0.899
2024-11-27 14:24 - INFO - 	 Best Val. Loss: 0.053
2024-11-27 14:24 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 14:24 - INFO - 	 Best PR-AUC: 0.900
2024-11-27 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-27 14:24 - INFO - ---------------------------------------------
2024-11-27 14:32 - INFO - ---------------------------------------------
2024-11-27 14:32 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-27 14:32 - INFO - 	 Train Loss: 0.058
2024-11-27 14:32 - INFO - 	 Val. Loss: 0.056
2024-11-27 14:32 - INFO - 	 ROC-AUC: 0.989
2024-11-27 14:32 - INFO - 	 PR-AUC: 0.899
2024-11-27 14:32 - INFO - 	 Best Val. Loss: 0.053
2024-11-27 14:32 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 14:32 - INFO - 	 Best PR-AUC: 0.900
2024-11-27 14:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 14:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-27 14:32 - INFO - ---------------------------------------------
2024-11-27 14:40 - INFO - ---------------------------------------------
2024-11-27 14:40 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-27 14:40 - INFO - 	 Train Loss: 0.057
2024-11-27 14:40 - INFO - 	 Val. Loss: 0.057
2024-11-27 14:40 - INFO - 	 ROC-AUC: 0.988
2024-11-27 14:40 - INFO - 	 PR-AUC: 0.891
2024-11-27 14:40 - INFO - 	 Best Val. Loss: 0.053
2024-11-27 14:40 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 14:40 - INFO - 	 Best PR-AUC: 0.900
2024-11-27 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-27 14:40 - INFO - ---------------------------------------------
2024-11-27 14:50 - INFO - Fit the preprocessing pipeline
2024-11-27 14:50 - INFO - Training using device: cuda
2024-11-27 14:50 - INFO - Creating generators
2024-11-27 14:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 14:50 - INFO - * Model:
2024-11-27 14:50 - INFO - * -----------
2024-11-27 14:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 14:50 - INFO - * -----------
2024-11-27 14:58 - INFO - ---------------------------------------------
2024-11-27 14:58 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-27 14:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86785
2024-11-27 14:58 - INFO - 	 Train Loss: 0.075
2024-11-27 14:58 - INFO - 	 Val. Loss: 0.062
2024-11-27 14:58 - INFO - 	 ROC-AUC: 0.987
2024-11-27 14:58 - INFO - 	 PR-AUC: 0.868
2024-11-27 14:58 - INFO - 	 Best Val. Loss: 0.062
2024-11-27 14:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 14:58 - INFO - 	 Best PR-AUC: 0.868
2024-11-27 14:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 14:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-27 14:58 - INFO - ---------------------------------------------
2024-11-27 15:06 - INFO - ---------------------------------------------
2024-11-27 15:06 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 15:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.891
2024-11-27 15:06 - INFO - 	 Train Loss: 0.066
2024-11-27 15:06 - INFO - 	 Val. Loss: 0.058
2024-11-27 15:06 - INFO - 	 ROC-AUC: 0.989
2024-11-27 15:06 - INFO - 	 PR-AUC: 0.891
2024-11-27 15:06 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 15:06 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 15:06 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-27 15:06 - INFO - ---------------------------------------------
2024-11-27 15:15 - INFO - ---------------------------------------------
2024-11-27 15:15 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 15:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89761
2024-11-27 15:15 - INFO - 	 Train Loss: 0.064
2024-11-27 15:15 - INFO - 	 Val. Loss: 0.057
2024-11-27 15:15 - INFO - 	 ROC-AUC: 0.989
2024-11-27 15:15 - INFO - 	 PR-AUC: 0.898
2024-11-27 15:15 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 15:15 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 15:15 - INFO - 	 Best PR-AUC: 0.898
2024-11-27 15:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 15:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-27 15:15 - INFO - ---------------------------------------------
2024-11-27 15:23 - INFO - ---------------------------------------------
2024-11-27 15:23 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-27 15:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89928
2024-11-27 15:23 - INFO - 	 Train Loss: 0.062
2024-11-27 15:23 - INFO - 	 Val. Loss: 0.056
2024-11-27 15:23 - INFO - 	 ROC-AUC: 0.989
2024-11-27 15:23 - INFO - 	 PR-AUC: 0.899
2024-11-27 15:23 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 15:23 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 15:23 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 15:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 15:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 15:23 - INFO - ---------------------------------------------
2024-11-27 15:31 - INFO - ---------------------------------------------
2024-11-27 15:31 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 15:31 - INFO - 	 Train Loss: 0.061
2024-11-27 15:31 - INFO - 	 Val. Loss: 0.058
2024-11-27 15:31 - INFO - 	 ROC-AUC: 0.988
2024-11-27 15:31 - INFO - 	 PR-AUC: 0.886
2024-11-27 15:31 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 15:31 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 15:31 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 15:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 15:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 15:31 - INFO - ---------------------------------------------
2024-11-27 15:39 - INFO - ---------------------------------------------
2024-11-27 15:39 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 15:39 - INFO - 	 Train Loss: 0.059
2024-11-27 15:39 - INFO - 	 Val. Loss: 0.058
2024-11-27 15:39 - INFO - 	 ROC-AUC: 0.989
2024-11-27 15:39 - INFO - 	 PR-AUC: 0.892
2024-11-27 15:39 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 15:39 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 15:39 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 15:39 - INFO - ---------------------------------------------
2024-11-27 15:47 - INFO - ---------------------------------------------
2024-11-27 15:47 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-27 15:47 - INFO - 	 Train Loss: 0.058
2024-11-27 15:47 - INFO - 	 Val. Loss: 0.055
2024-11-27 15:47 - INFO - 	 ROC-AUC: 0.989
2024-11-27 15:47 - INFO - 	 PR-AUC: 0.894
2024-11-27 15:47 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 15:47 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 15:47 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 15:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 15:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-27 15:47 - INFO - ---------------------------------------------
2024-11-27 15:55 - INFO - ---------------------------------------------
2024-11-27 15:55 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 15:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90091
2024-11-27 15:55 - INFO - 	 Train Loss: 0.057
2024-11-27 15:55 - INFO - 	 Val. Loss: 0.056
2024-11-27 15:55 - INFO - 	 ROC-AUC: 0.989
2024-11-27 15:55 - INFO - 	 PR-AUC: 0.901
2024-11-27 15:55 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 15:55 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 15:55 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 15:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 15:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-27 15:55 - INFO - ---------------------------------------------
2024-11-27 16:03 - INFO - ---------------------------------------------
2024-11-27 16:03 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-27 16:03 - INFO - 	 Train Loss: 0.057
2024-11-27 16:03 - INFO - 	 Val. Loss: 0.055
2024-11-27 16:03 - INFO - 	 ROC-AUC: 0.990
2024-11-27 16:03 - INFO - 	 PR-AUC: 0.898
2024-11-27 16:03 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 16:03 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 16:03 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 16:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 16:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-27 16:03 - INFO - ---------------------------------------------
2024-11-27 16:11 - INFO - ---------------------------------------------
2024-11-27 16:11 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-27 16:11 - INFO - 	 Train Loss: 0.056
2024-11-27 16:11 - INFO - 	 Val. Loss: 0.056
2024-11-27 16:11 - INFO - 	 ROC-AUC: 0.989
2024-11-27 16:11 - INFO - 	 PR-AUC: 0.896
2024-11-27 16:11 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 16:11 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 16:11 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 16:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 16:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-27 16:11 - INFO - ---------------------------------------------
2024-11-27 16:13 - INFO - Fit the preprocessing pipeline
2024-11-27 16:13 - INFO - Training using device: cuda
2024-11-27 16:13 - INFO - Creating generators
2024-11-27 16:13 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 16:13 - INFO - * Model:
2024-11-27 16:13 - INFO - * -----------
2024-11-27 16:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 16:13 - INFO - * -----------
2024-11-27 16:21 - INFO - ---------------------------------------------
2024-11-27 16:21 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 16:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86654
2024-11-27 16:21 - INFO - 	 Train Loss: 0.075
2024-11-27 16:21 - INFO - 	 Val. Loss: 0.065
2024-11-27 16:21 - INFO - 	 ROC-AUC: 0.986
2024-11-27 16:21 - INFO - 	 PR-AUC: 0.867
2024-11-27 16:21 - INFO - 	 Best Val. Loss: 0.065
2024-11-27 16:21 - INFO - 	 Best ROC-AUC: 0.986
2024-11-27 16:21 - INFO - 	 Best PR-AUC: 0.867
2024-11-27 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-27 16:21 - INFO - ---------------------------------------------
2024-11-27 16:29 - INFO - ---------------------------------------------
2024-11-27 16:29 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 16:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87204
2024-11-27 16:29 - INFO - 	 Train Loss: 0.066
2024-11-27 16:29 - INFO - 	 Val. Loss: 0.062
2024-11-27 16:29 - INFO - 	 ROC-AUC: 0.987
2024-11-27 16:29 - INFO - 	 PR-AUC: 0.872
2024-11-27 16:29 - INFO - 	 Best Val. Loss: 0.062
2024-11-27 16:29 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 16:29 - INFO - 	 Best PR-AUC: 0.872
2024-11-27 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-27 16:29 - INFO - ---------------------------------------------
2024-11-27 16:37 - INFO - ---------------------------------------------
2024-11-27 16:37 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 16:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87948
2024-11-27 16:37 - INFO - 	 Train Loss: 0.064
2024-11-27 16:37 - INFO - 	 Val. Loss: 0.059
2024-11-27 16:37 - INFO - 	 ROC-AUC: 0.988
2024-11-27 16:37 - INFO - 	 PR-AUC: 0.879
2024-11-27 16:37 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 16:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 16:37 - INFO - 	 Best PR-AUC: 0.879
2024-11-27 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-27 16:37 - INFO - ---------------------------------------------
2024-11-27 16:45 - INFO - ---------------------------------------------
2024-11-27 16:45 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89334
2024-11-27 16:45 - INFO - 	 Train Loss: 0.062
2024-11-27 16:45 - INFO - 	 Val. Loss: 0.057
2024-11-27 16:45 - INFO - 	 ROC-AUC: 0.989
2024-11-27 16:45 - INFO - 	 PR-AUC: 0.893
2024-11-27 16:45 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 16:45 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 16:45 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-27 16:45 - INFO - ---------------------------------------------
2024-11-27 16:53 - INFO - ---------------------------------------------
2024-11-27 16:53 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 16:53 - INFO - 	 Train Loss: 0.061
2024-11-27 16:53 - INFO - 	 Val. Loss: 0.056
2024-11-27 16:53 - INFO - 	 ROC-AUC: 0.989
2024-11-27 16:53 - INFO - 	 PR-AUC: 0.892
2024-11-27 16:53 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 16:53 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 16:53 - INFO - 	 Best PR-AUC: 0.893
2024-11-27 16:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 16:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-27 16:53 - INFO - ---------------------------------------------
2024-11-27 17:01 - INFO - ---------------------------------------------
2024-11-27 17:01 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-27 17:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89529
2024-11-27 17:01 - INFO - 	 Train Loss: 0.059
2024-11-27 17:01 - INFO - 	 Val. Loss: 0.054
2024-11-27 17:01 - INFO - 	 ROC-AUC: 0.989
2024-11-27 17:01 - INFO - 	 PR-AUC: 0.895
2024-11-27 17:01 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 17:01 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 17:01 - INFO - 	 Best PR-AUC: 0.895
2024-11-27 17:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 17:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 17:01 - INFO - ---------------------------------------------
2024-11-27 17:09 - INFO - ---------------------------------------------
2024-11-27 17:09 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 17:09 - INFO - 	 Train Loss: 0.058
2024-11-27 17:09 - INFO - 	 Val. Loss: 0.056
2024-11-27 17:09 - INFO - 	 ROC-AUC: 0.989
2024-11-27 17:09 - INFO - 	 PR-AUC: 0.893
2024-11-27 17:09 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 17:09 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 17:09 - INFO - 	 Best PR-AUC: 0.895
2024-11-27 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 17:09 - INFO - ---------------------------------------------
2024-11-27 17:18 - INFO - ---------------------------------------------
2024-11-27 17:18 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 17:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89879
2024-11-27 17:18 - INFO - 	 Train Loss: 0.058
2024-11-27 17:18 - INFO - 	 Val. Loss: 0.054
2024-11-27 17:18 - INFO - 	 ROC-AUC: 0.990
2024-11-27 17:18 - INFO - 	 PR-AUC: 0.899
2024-11-27 17:18 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 17:18 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 17:18 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 17:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 17:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 17:18 - INFO - ---------------------------------------------
2024-11-27 17:26 - INFO - ---------------------------------------------
2024-11-27 17:26 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-27 17:26 - INFO - 	 Train Loss: 0.058
2024-11-27 17:26 - INFO - 	 Val. Loss: 0.056
2024-11-27 17:26 - INFO - 	 ROC-AUC: 0.989
2024-11-27 17:26 - INFO - 	 PR-AUC: 0.895
2024-11-27 17:26 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 17:26 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 17:26 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 17:26 - INFO - ---------------------------------------------
2024-11-27 17:34 - INFO - ---------------------------------------------
2024-11-27 17:34 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-27 17:34 - INFO - 	 Train Loss: 0.056
2024-11-27 17:34 - INFO - 	 Val. Loss: 0.057
2024-11-27 17:34 - INFO - 	 ROC-AUC: 0.989
2024-11-27 17:34 - INFO - 	 PR-AUC: 0.888
2024-11-27 17:34 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 17:34 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 17:34 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 17:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 17:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 17:34 - INFO - ---------------------------------------------
2024-11-27 17:36 - INFO - Fit the preprocessing pipeline
2024-11-27 17:36 - INFO - Training using device: cuda
2024-11-27 17:36 - INFO - Creating generators
2024-11-27 17:36 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 17:36 - INFO - * Model:
2024-11-27 17:36 - INFO - * -----------
2024-11-27 17:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 17:36 - INFO - * -----------
2024-11-27 17:44 - INFO - ---------------------------------------------
2024-11-27 17:44 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-27 17:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88189
2024-11-27 17:44 - INFO - 	 Train Loss: 0.075
2024-11-27 17:44 - INFO - 	 Val. Loss: 0.061
2024-11-27 17:44 - INFO - 	 ROC-AUC: 0.988
2024-11-27 17:44 - INFO - 	 PR-AUC: 0.882
2024-11-27 17:44 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 17:44 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 17:44 - INFO - 	 Best PR-AUC: 0.882
2024-11-27 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-27 17:44 - INFO - ---------------------------------------------
2024-11-27 17:52 - INFO - ---------------------------------------------
2024-11-27 17:52 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-27 17:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88641
2024-11-27 17:52 - INFO - 	 Train Loss: 0.067
2024-11-27 17:52 - INFO - 	 Val. Loss: 0.061
2024-11-27 17:52 - INFO - 	 ROC-AUC: 0.988
2024-11-27 17:52 - INFO - 	 PR-AUC: 0.886
2024-11-27 17:52 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 17:52 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 17:52 - INFO - 	 Best PR-AUC: 0.886
2024-11-27 17:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 17:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 17:52 - INFO - ---------------------------------------------
2024-11-27 18:00 - INFO - ---------------------------------------------
2024-11-27 18:00 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 18:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88849
2024-11-27 18:00 - INFO - 	 Train Loss: 0.064
2024-11-27 18:00 - INFO - 	 Val. Loss: 0.056
2024-11-27 18:00 - INFO - 	 ROC-AUC: 0.989
2024-11-27 18:00 - INFO - 	 PR-AUC: 0.888
2024-11-27 18:00 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 18:00 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 18:00 - INFO - 	 Best PR-AUC: 0.888
2024-11-27 18:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 18:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 18:00 - INFO - ---------------------------------------------
2024-11-27 18:08 - INFO - ---------------------------------------------
2024-11-27 18:08 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 18:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8907
2024-11-27 18:08 - INFO - 	 Train Loss: 0.062
2024-11-27 18:08 - INFO - 	 Val. Loss: 0.058
2024-11-27 18:08 - INFO - 	 ROC-AUC: 0.988
2024-11-27 18:08 - INFO - 	 PR-AUC: 0.891
2024-11-27 18:08 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 18:08 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 18:08 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-11-27 18:08 - INFO - ---------------------------------------------
2024-11-27 18:16 - INFO - ---------------------------------------------
2024-11-27 18:16 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 18:16 - INFO - 	 Train Loss: 0.061
2024-11-27 18:16 - INFO - 	 Val. Loss: 0.056
2024-11-27 18:16 - INFO - 	 ROC-AUC: 0.989
2024-11-27 18:16 - INFO - 	 PR-AUC: 0.890
2024-11-27 18:16 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 18:16 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 18:16 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 18:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-27 18:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-11-27 18:16 - INFO - ---------------------------------------------
2024-11-27 18:24 - INFO - ---------------------------------------------
2024-11-27 18:24 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-27 18:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89951
2024-11-27 18:24 - INFO - 	 Train Loss: 0.060
2024-11-27 18:24 - INFO - 	 Val. Loss: 0.054
2024-11-27 18:24 - INFO - 	 ROC-AUC: 0.990
2024-11-27 18:24 - INFO - 	 PR-AUC: 0.900
2024-11-27 18:24 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 18:24 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 18:24 - INFO - 	 Best PR-AUC: 0.900
2024-11-27 18:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 18:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-27 18:24 - INFO - ---------------------------------------------
2024-11-27 18:32 - INFO - ---------------------------------------------
2024-11-27 18:32 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90102
2024-11-27 18:32 - INFO - 	 Train Loss: 0.058
2024-11-27 18:32 - INFO - 	 Val. Loss: 0.055
2024-11-27 18:32 - INFO - 	 ROC-AUC: 0.990
2024-11-27 18:32 - INFO - 	 PR-AUC: 0.901
2024-11-27 18:32 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 18:32 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 18:32 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-27 18:32 - INFO - ---------------------------------------------
2024-11-27 18:40 - INFO - ---------------------------------------------
2024-11-27 18:40 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 18:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90442
2024-11-27 18:40 - INFO - 	 Train Loss: 0.058
2024-11-27 18:40 - INFO - 	 Val. Loss: 0.054
2024-11-27 18:40 - INFO - 	 ROC-AUC: 0.989
2024-11-27 18:40 - INFO - 	 PR-AUC: 0.904
2024-11-27 18:40 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 18:40 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 18:40 - INFO - 	 Best PR-AUC: 0.904
2024-11-27 18:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 18:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-27 18:40 - INFO - ---------------------------------------------
2024-11-27 18:48 - INFO - ---------------------------------------------
2024-11-27 18:48 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-27 18:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90539
2024-11-27 18:48 - INFO - 	 Train Loss: 0.057
2024-11-27 18:48 - INFO - 	 Val. Loss: 0.054
2024-11-27 18:48 - INFO - 	 ROC-AUC: 0.990
2024-11-27 18:48 - INFO - 	 PR-AUC: 0.905
2024-11-27 18:48 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 18:48 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 18:48 - INFO - 	 Best PR-AUC: 0.905
2024-11-27 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-27 18:48 - INFO - ---------------------------------------------
2024-11-27 18:56 - INFO - ---------------------------------------------
2024-11-27 18:56 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-27 18:56 - INFO - 	 Train Loss: 0.055
2024-11-27 18:56 - INFO - 	 Val. Loss: 0.057
2024-11-27 18:56 - INFO - 	 ROC-AUC: 0.988
2024-11-27 18:56 - INFO - 	 PR-AUC: 0.899
2024-11-27 18:56 - INFO - 	 Best Val. Loss: 0.054
2024-11-27 18:56 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 18:56 - INFO - 	 Best PR-AUC: 0.905
2024-11-27 18:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 18:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-27 18:56 - INFO - ---------------------------------------------
2024-11-27 18:59 - INFO - Fit the preprocessing pipeline
2024-11-27 18:59 - INFO - Training using device: cuda
2024-11-27 18:59 - INFO - Creating generators
2024-11-27 18:59 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 18:59 - INFO - * Model:
2024-11-27 18:59 - INFO - * -----------
2024-11-27 18:59 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 18:59 - INFO - * -----------
2024-11-27 19:07 - INFO - ---------------------------------------------
2024-11-27 19:07 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 19:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87503
2024-11-27 19:07 - INFO - 	 Train Loss: 0.075
2024-11-27 19:07 - INFO - 	 Val. Loss: 0.062
2024-11-27 19:07 - INFO - 	 ROC-AUC: 0.987
2024-11-27 19:07 - INFO - 	 PR-AUC: 0.875
2024-11-27 19:07 - INFO - 	 Best Val. Loss: 0.062
2024-11-27 19:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 19:07 - INFO - 	 Best PR-AUC: 0.875
2024-11-27 19:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-27 19:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-27 19:07 - INFO - ---------------------------------------------
2024-11-27 19:15 - INFO - ---------------------------------------------
2024-11-27 19:15 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 19:15 - INFO - 	 Train Loss: 0.067
2024-11-27 19:15 - INFO - 	 Val. Loss: 0.061
2024-11-27 19:15 - INFO - 	 ROC-AUC: 0.988
2024-11-27 19:15 - INFO - 	 PR-AUC: 0.859
2024-11-27 19:15 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 19:15 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 19:15 - INFO - 	 Best PR-AUC: 0.875
2024-11-27 19:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 19:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-27 19:15 - INFO - ---------------------------------------------
2024-11-27 19:23 - INFO - ---------------------------------------------
2024-11-27 19:23 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 19:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88439
2024-11-27 19:23 - INFO - 	 Train Loss: 0.063
2024-11-27 19:23 - INFO - 	 Val. Loss: 0.061
2024-11-27 19:23 - INFO - 	 ROC-AUC: 0.988
2024-11-27 19:23 - INFO - 	 PR-AUC: 0.884
2024-11-27 19:23 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 19:23 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 19:23 - INFO - 	 Best PR-AUC: 0.884
2024-11-27 19:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 19:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-27 19:23 - INFO - ---------------------------------------------
2024-11-27 19:31 - INFO - ---------------------------------------------
2024-11-27 19:31 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 19:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89567
2024-11-27 19:31 - INFO - 	 Train Loss: 0.062
2024-11-27 19:31 - INFO - 	 Val. Loss: 0.056
2024-11-27 19:31 - INFO - 	 ROC-AUC: 0.989
2024-11-27 19:31 - INFO - 	 PR-AUC: 0.896
2024-11-27 19:31 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 19:31 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 19:31 - INFO - 	 Best PR-AUC: 0.896
2024-11-27 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 19:31 - INFO - ---------------------------------------------
2024-11-27 19:39 - INFO - ---------------------------------------------
2024-11-27 19:39 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 19:39 - INFO - 	 Train Loss: 0.060
2024-11-27 19:39 - INFO - 	 Val. Loss: 0.057
2024-11-27 19:39 - INFO - 	 ROC-AUC: 0.988
2024-11-27 19:39 - INFO - 	 PR-AUC: 0.892
2024-11-27 19:39 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 19:39 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 19:39 - INFO - 	 Best PR-AUC: 0.896
2024-11-27 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 19:39 - INFO - ---------------------------------------------
2024-11-27 19:47 - INFO - ---------------------------------------------
2024-11-27 19:47 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-27 19:47 - INFO - 	 Train Loss: 0.059
2024-11-27 19:47 - INFO - 	 Val. Loss: 0.057
2024-11-27 19:47 - INFO - 	 ROC-AUC: 0.989
2024-11-27 19:47 - INFO - 	 PR-AUC: 0.886
2024-11-27 19:47 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 19:47 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 19:47 - INFO - 	 Best PR-AUC: 0.896
2024-11-27 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 19:47 - INFO - ---------------------------------------------
2024-11-27 19:55 - INFO - ---------------------------------------------
2024-11-27 19:55 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-27 19:55 - INFO - 	 Train Loss: 0.059
2024-11-27 19:55 - INFO - 	 Val. Loss: 0.057
2024-11-27 19:55 - INFO - 	 ROC-AUC: 0.988
2024-11-27 19:55 - INFO - 	 PR-AUC: 0.890
2024-11-27 19:55 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 19:55 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 19:55 - INFO - 	 Best PR-AUC: 0.896
2024-11-27 19:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 19:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-27 19:55 - INFO - ---------------------------------------------
2024-11-27 20:05 - INFO - Fit the preprocessing pipeline
2024-11-27 20:05 - INFO - Training using device: cuda
2024-11-27 20:05 - INFO - Creating generators
2024-11-27 20:05 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 20:05 - INFO - * Model:
2024-11-27 20:05 - INFO - * -----------
2024-11-27 20:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 20:05 - INFO - * -----------
2024-11-27 20:13 - INFO - ---------------------------------------------
2024-11-27 20:13 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-27 20:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88806
2024-11-27 20:13 - INFO - 	 Train Loss: 0.074
2024-11-27 20:13 - INFO - 	 Val. Loss: 0.061
2024-11-27 20:13 - INFO - 	 ROC-AUC: 0.987
2024-11-27 20:13 - INFO - 	 PR-AUC: 0.888
2024-11-27 20:13 - INFO - 	 Best Val. Loss: 0.061
2024-11-27 20:13 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 20:13 - INFO - 	 Best PR-AUC: 0.888
2024-11-27 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-27 20:13 - INFO - ---------------------------------------------
2024-11-27 20:21 - INFO - ---------------------------------------------
2024-11-27 20:21 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-27 20:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89012
2024-11-27 20:21 - INFO - 	 Train Loss: 0.067
2024-11-27 20:21 - INFO - 	 Val. Loss: 0.059
2024-11-27 20:21 - INFO - 	 ROC-AUC: 0.988
2024-11-27 20:21 - INFO - 	 PR-AUC: 0.890
2024-11-27 20:21 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 20:21 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 20:21 - INFO - 	 Best PR-AUC: 0.890
2024-11-27 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-27 20:21 - INFO - ---------------------------------------------
2024-11-27 20:30 - INFO - ---------------------------------------------
2024-11-27 20:30 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-27 20:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8915
2024-11-27 20:30 - INFO - 	 Train Loss: 0.063
2024-11-27 20:30 - INFO - 	 Val. Loss: 0.057
2024-11-27 20:30 - INFO - 	 ROC-AUC: 0.989
2024-11-27 20:30 - INFO - 	 PR-AUC: 0.891
2024-11-27 20:30 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 20:30 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 20:30 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 20:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 20:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-27 20:30 - INFO - ---------------------------------------------
2024-11-27 20:38 - INFO - ---------------------------------------------
2024-11-27 20:38 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-27 20:38 - INFO - 	 Train Loss: 0.062
2024-11-27 20:38 - INFO - 	 Val. Loss: 0.062
2024-11-27 20:38 - INFO - 	 ROC-AUC: 0.988
2024-11-27 20:38 - INFO - 	 PR-AUC: 0.876
2024-11-27 20:38 - INFO - 	 Best Val. Loss: 0.057
2024-11-27 20:38 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 20:38 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 20:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 20:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-27 20:38 - INFO - ---------------------------------------------
2024-11-27 20:46 - INFO - ---------------------------------------------
2024-11-27 20:46 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-27 20:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.901
2024-11-27 20:46 - INFO - 	 Train Loss: 0.060
2024-11-27 20:46 - INFO - 	 Val. Loss: 0.056
2024-11-27 20:46 - INFO - 	 ROC-AUC: 0.990
2024-11-27 20:46 - INFO - 	 PR-AUC: 0.901
2024-11-27 20:46 - INFO - 	 Best Val. Loss: 0.056
2024-11-27 20:46 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 20:46 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 20:46 - INFO - ---------------------------------------------
2024-11-27 20:54 - INFO - ---------------------------------------------
2024-11-27 20:54 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-27 20:54 - INFO - 	 Train Loss: 0.059
2024-11-27 20:54 - INFO - 	 Val. Loss: 0.055
2024-11-27 20:54 - INFO - 	 ROC-AUC: 0.990
2024-11-27 20:54 - INFO - 	 PR-AUC: 0.893
2024-11-27 20:54 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 20:54 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 20:54 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 20:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 20:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 20:54 - INFO - ---------------------------------------------
2024-11-27 21:02 - INFO - ---------------------------------------------
2024-11-27 21:02 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 21:02 - INFO - 	 Train Loss: 0.058
2024-11-27 21:02 - INFO - 	 Val. Loss: 0.056
2024-11-27 21:02 - INFO - 	 ROC-AUC: 0.990
2024-11-27 21:02 - INFO - 	 PR-AUC: 0.891
2024-11-27 21:02 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 21:02 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 21:02 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 21:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 21:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 21:02 - INFO - ---------------------------------------------
2024-11-27 21:10 - INFO - ---------------------------------------------
2024-11-27 21:10 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-27 21:10 - INFO - 	 Train Loss: 0.057
2024-11-27 21:10 - INFO - 	 Val. Loss: 0.058
2024-11-27 21:10 - INFO - 	 ROC-AUC: 0.988
2024-11-27 21:10 - INFO - 	 PR-AUC: 0.889
2024-11-27 21:10 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 21:10 - INFO - 	 Best ROC-AUC: 0.990
2024-11-27 21:10 - INFO - 	 Best PR-AUC: 0.901
2024-11-27 21:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 21:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-27 21:10 - INFO - ---------------------------------------------
2024-11-27 21:20 - INFO - Fit the preprocessing pipeline
2024-11-27 21:20 - INFO - Training using device: cuda
2024-11-27 21:20 - INFO - Creating generators
2024-11-27 21:20 - INFO - The model has 2,246,929 trainable parameters
2024-11-27 21:20 - INFO - * Model:
2024-11-27 21:20 - INFO - * -----------
2024-11-27 21:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-27 21:20 - INFO - * -----------
2024-11-27 21:28 - INFO - ---------------------------------------------
2024-11-27 21:28 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-27 21:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87336
2024-11-27 21:28 - INFO - 	 Train Loss: 0.076
2024-11-27 21:28 - INFO - 	 Val. Loss: 0.062
2024-11-27 21:28 - INFO - 	 ROC-AUC: 0.987
2024-11-27 21:28 - INFO - 	 PR-AUC: 0.873
2024-11-27 21:28 - INFO - 	 Best Val. Loss: 0.062
2024-11-27 21:28 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 21:28 - INFO - 	 Best PR-AUC: 0.873
2024-11-27 21:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 21:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-27 21:28 - INFO - ---------------------------------------------
2024-11-27 21:36 - INFO - ---------------------------------------------
2024-11-27 21:36 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-27 21:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88699
2024-11-27 21:36 - INFO - 	 Train Loss: 0.066
2024-11-27 21:36 - INFO - 	 Val. Loss: 0.059
2024-11-27 21:36 - INFO - 	 ROC-AUC: 0.987
2024-11-27 21:36 - INFO - 	 PR-AUC: 0.887
2024-11-27 21:36 - INFO - 	 Best Val. Loss: 0.059
2024-11-27 21:36 - INFO - 	 Best ROC-AUC: 0.987
2024-11-27 21:36 - INFO - 	 Best PR-AUC: 0.887
2024-11-27 21:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-27 21:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-27 21:36 - INFO - ---------------------------------------------
2024-11-27 21:44 - INFO - ---------------------------------------------
2024-11-27 21:44 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-27 21:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89137
2024-11-27 21:44 - INFO - 	 Train Loss: 0.063
2024-11-27 21:44 - INFO - 	 Val. Loss: 0.058
2024-11-27 21:44 - INFO - 	 ROC-AUC: 0.988
2024-11-27 21:44 - INFO - 	 PR-AUC: 0.891
2024-11-27 21:44 - INFO - 	 Best Val. Loss: 0.058
2024-11-27 21:44 - INFO - 	 Best ROC-AUC: 0.988
2024-11-27 21:44 - INFO - 	 Best PR-AUC: 0.891
2024-11-27 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-11-27 21:44 - INFO - ---------------------------------------------
2024-11-27 21:52 - INFO - ---------------------------------------------
2024-11-27 21:52 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-27 21:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89944
2024-11-27 21:52 - INFO - 	 Train Loss: 0.062
2024-11-27 21:52 - INFO - 	 Val. Loss: 0.055
2024-11-27 21:52 - INFO - 	 ROC-AUC: 0.989
2024-11-27 21:52 - INFO - 	 PR-AUC: 0.899
2024-11-27 21:52 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 21:52 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 21:52 - INFO - 	 Best PR-AUC: 0.899
2024-11-27 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-27 21:52 - INFO - ---------------------------------------------
2024-11-27 22:00 - INFO - ---------------------------------------------
2024-11-27 22:00 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-27 22:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90564
2024-11-27 22:00 - INFO - 	 Train Loss: 0.061
2024-11-27 22:00 - INFO - 	 Val. Loss: 0.056
2024-11-27 22:00 - INFO - 	 ROC-AUC: 0.989
2024-11-27 22:00 - INFO - 	 PR-AUC: 0.906
2024-11-27 22:00 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 22:00 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 22:00 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 22:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-27 22:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-27 22:00 - INFO - ---------------------------------------------
2024-11-27 22:08 - INFO - ---------------------------------------------
2024-11-27 22:08 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-27 22:08 - INFO - 	 Train Loss: 0.059
2024-11-27 22:08 - INFO - 	 Val. Loss: 0.055
2024-11-27 22:08 - INFO - 	 ROC-AUC: 0.989
2024-11-27 22:08 - INFO - 	 PR-AUC: 0.901
2024-11-27 22:08 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 22:08 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 22:08 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-27 22:08 - INFO - ---------------------------------------------
2024-11-27 22:16 - INFO - ---------------------------------------------
2024-11-27 22:16 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-27 22:16 - INFO - 	 Train Loss: 0.059
2024-11-27 22:16 - INFO - 	 Val. Loss: 0.055
2024-11-27 22:16 - INFO - 	 ROC-AUC: 0.989
2024-11-27 22:16 - INFO - 	 PR-AUC: 0.899
2024-11-27 22:16 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 22:16 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 22:16 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-27 22:16 - INFO - ---------------------------------------------
2024-11-27 22:24 - INFO - ---------------------------------------------
2024-11-27 22:24 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-27 22:24 - INFO - 	 Train Loss: 0.057
2024-11-27 22:24 - INFO - 	 Val. Loss: 0.057
2024-11-27 22:24 - INFO - 	 ROC-AUC: 0.989
2024-11-27 22:24 - INFO - 	 PR-AUC: 0.882
2024-11-27 22:24 - INFO - 	 Best Val. Loss: 0.055
2024-11-27 22:24 - INFO - 	 Best ROC-AUC: 0.989
2024-11-27 22:24 - INFO - 	 Best PR-AUC: 0.906
2024-11-27 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-27 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-27 22:24 - INFO - ---------------------------------------------
