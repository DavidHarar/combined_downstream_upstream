2024-11-02 07:08 - INFO - Fit the preprocessing pipeline
2024-11-02 07:08 - INFO - Training using device: cuda
2024-11-02 07:08 - INFO - Creating generators
2024-11-02 07:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 07:08 - INFO - * Model:
2024-11-02 07:08 - INFO - * -----------
2024-11-02 07:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 07:08 - INFO - * -----------
2024-11-02 07:16 - INFO - ---------------------------------------------
2024-11-02 07:16 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-02 07:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66163
2024-11-02 07:16 - INFO - 	 Train Loss: 0.191
2024-11-02 07:16 - INFO - 	 Val. Loss: 0.134
2024-11-02 07:16 - INFO - 	 ROC-AUC: 0.959
2024-11-02 07:16 - INFO - 	 PR-AUC: 0.662
2024-11-02 07:16 - INFO - 	 Best Val. Loss: 0.134
2024-11-02 07:16 - INFO - 	 Best ROC-AUC: 0.959
2024-11-02 07:16 - INFO - 	 Best PR-AUC: 0.662
2024-11-02 07:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-02 07:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.679
2024-11-02 07:16 - INFO - ---------------------------------------------
2024-11-02 07:24 - INFO - ---------------------------------------------
2024-11-02 07:24 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 07:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83674
2024-11-02 07:24 - INFO - 	 Train Loss: 0.096
2024-11-02 07:24 - INFO - 	 Val. Loss: 0.074
2024-11-02 07:24 - INFO - 	 ROC-AUC: 0.982
2024-11-02 07:24 - INFO - 	 PR-AUC: 0.837
2024-11-02 07:24 - INFO - 	 Best Val. Loss: 0.074
2024-11-02 07:24 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 07:24 - INFO - 	 Best PR-AUC: 0.837
2024-11-02 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-11-02 07:24 - INFO - ---------------------------------------------
2024-11-02 07:32 - INFO - ---------------------------------------------
2024-11-02 07:32 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 07:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85985
2024-11-02 07:32 - INFO - 	 Train Loss: 0.079
2024-11-02 07:32 - INFO - 	 Val. Loss: 0.070
2024-11-02 07:32 - INFO - 	 ROC-AUC: 0.985
2024-11-02 07:32 - INFO - 	 PR-AUC: 0.860
2024-11-02 07:32 - INFO - 	 Best Val. Loss: 0.070
2024-11-02 07:32 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 07:32 - INFO - 	 Best PR-AUC: 0.860
2024-11-02 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-02 07:32 - INFO - ---------------------------------------------
2024-11-02 07:40 - INFO - ---------------------------------------------
2024-11-02 07:40 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-02 07:40 - INFO - 	 Train Loss: 0.074
2024-11-02 07:40 - INFO - 	 Val. Loss: 0.067
2024-11-02 07:40 - INFO - 	 ROC-AUC: 0.986
2024-11-02 07:40 - INFO - 	 PR-AUC: 0.860
2024-11-02 07:40 - INFO - 	 Best Val. Loss: 0.067
2024-11-02 07:40 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 07:40 - INFO - 	 Best PR-AUC: 0.860
2024-11-02 07:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 07:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-02 07:40 - INFO - ---------------------------------------------
2024-11-02 07:48 - INFO - ---------------------------------------------
2024-11-02 07:48 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 07:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87193
2024-11-02 07:48 - INFO - 	 Train Loss: 0.068
2024-11-02 07:48 - INFO - 	 Val. Loss: 0.065
2024-11-02 07:48 - INFO - 	 ROC-AUC: 0.986
2024-11-02 07:48 - INFO - 	 PR-AUC: 0.872
2024-11-02 07:48 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 07:48 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 07:48 - INFO - 	 Best PR-AUC: 0.872
2024-11-02 07:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 07:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 07:48 - INFO - ---------------------------------------------
2024-11-02 07:56 - INFO - ---------------------------------------------
2024-11-02 07:56 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 07:56 - INFO - 	 Train Loss: 0.066
2024-11-02 07:56 - INFO - 	 Val. Loss: 0.065
2024-11-02 07:56 - INFO - 	 ROC-AUC: 0.987
2024-11-02 07:56 - INFO - 	 PR-AUC: 0.865
2024-11-02 07:56 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 07:56 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 07:56 - INFO - 	 Best PR-AUC: 0.872
2024-11-02 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 07:56 - INFO - ---------------------------------------------
2024-11-02 08:04 - INFO - ---------------------------------------------
2024-11-02 08:04 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-02 08:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87311
2024-11-02 08:04 - INFO - 	 Train Loss: 0.062
2024-11-02 08:04 - INFO - 	 Val. Loss: 0.063
2024-11-02 08:04 - INFO - 	 ROC-AUC: 0.987
2024-11-02 08:04 - INFO - 	 PR-AUC: 0.873
2024-11-02 08:04 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 08:04 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 08:04 - INFO - 	 Best PR-AUC: 0.873
2024-11-02 08:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 08:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-02 08:04 - INFO - ---------------------------------------------
2024-11-02 08:12 - INFO - ---------------------------------------------
2024-11-02 08:12 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 08:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87873
2024-11-02 08:12 - INFO - 	 Train Loss: 0.059
2024-11-02 08:12 - INFO - 	 Val. Loss: 0.064
2024-11-02 08:12 - INFO - 	 ROC-AUC: 0.987
2024-11-02 08:12 - INFO - 	 PR-AUC: 0.879
2024-11-02 08:12 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 08:12 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 08:12 - INFO - 	 Best PR-AUC: 0.879
2024-11-02 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-11-02 08:12 - INFO - ---------------------------------------------
2024-11-02 08:20 - INFO - ---------------------------------------------
2024-11-02 08:20 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-02 08:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8823
2024-11-02 08:20 - INFO - 	 Train Loss: 0.056
2024-11-02 08:20 - INFO - 	 Val. Loss: 0.063
2024-11-02 08:20 - INFO - 	 ROC-AUC: 0.988
2024-11-02 08:20 - INFO - 	 PR-AUC: 0.882
2024-11-02 08:20 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 08:20 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 08:20 - INFO - 	 Best PR-AUC: 0.882
2024-11-02 08:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 08:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-02 08:20 - INFO - ---------------------------------------------
2024-11-02 08:28 - INFO - ---------------------------------------------
2024-11-02 08:28 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-02 08:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88657
2024-11-02 08:28 - INFO - 	 Train Loss: 0.055
2024-11-02 08:28 - INFO - 	 Val. Loss: 0.059
2024-11-02 08:28 - INFO - 	 ROC-AUC: 0.988
2024-11-02 08:28 - INFO - 	 PR-AUC: 0.887
2024-11-02 08:28 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 08:28 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 08:28 - INFO - 	 Best PR-AUC: 0.887
2024-11-02 08:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-02 08:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-11-02 08:28 - INFO - ---------------------------------------------
2024-11-02 08:31 - INFO - Fit the preprocessing pipeline
2024-11-02 08:31 - INFO - Training using device: cuda
2024-11-02 08:31 - INFO - Creating generators
2024-11-02 08:31 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 08:31 - INFO - * Model:
2024-11-02 08:31 - INFO - * -----------
2024-11-02 08:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 08:31 - INFO - * -----------
2024-11-02 08:39 - INFO - ---------------------------------------------
2024-11-02 08:39 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67128
2024-11-02 08:39 - INFO - 	 Train Loss: 0.192
2024-11-02 08:39 - INFO - 	 Val. Loss: 0.229
2024-11-02 08:39 - INFO - 	 ROC-AUC: 0.954
2024-11-02 08:39 - INFO - 	 PR-AUC: 0.671
2024-11-02 08:39 - INFO - 	 Best Val. Loss: 0.229
2024-11-02 08:39 - INFO - 	 Best ROC-AUC: 0.954
2024-11-02 08:39 - INFO - 	 Best PR-AUC: 0.671
2024-11-02 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-02 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.685
2024-11-02 08:39 - INFO - ---------------------------------------------
2024-11-02 08:47 - INFO - ---------------------------------------------
2024-11-02 08:47 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 08:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82169
2024-11-02 08:47 - INFO - 	 Train Loss: 0.094
2024-11-02 08:47 - INFO - 	 Val. Loss: 0.093
2024-11-02 08:47 - INFO - 	 ROC-AUC: 0.979
2024-11-02 08:47 - INFO - 	 PR-AUC: 0.822
2024-11-02 08:47 - INFO - 	 Best Val. Loss: 0.093
2024-11-02 08:47 - INFO - 	 Best ROC-AUC: 0.979
2024-11-02 08:47 - INFO - 	 Best PR-AUC: 0.822
2024-11-02 08:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 08:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-11-02 08:47 - INFO - ---------------------------------------------
2024-11-02 08:55 - INFO - ---------------------------------------------
2024-11-02 08:55 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 08:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84845
2024-11-02 08:55 - INFO - 	 Train Loss: 0.080
2024-11-02 08:55 - INFO - 	 Val. Loss: 0.075
2024-11-02 08:55 - INFO - 	 ROC-AUC: 0.982
2024-11-02 08:55 - INFO - 	 PR-AUC: 0.848
2024-11-02 08:55 - INFO - 	 Best Val. Loss: 0.075
2024-11-02 08:55 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 08:55 - INFO - 	 Best PR-AUC: 0.848
2024-11-02 08:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-02 08:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-11-02 08:55 - INFO - ---------------------------------------------
2024-11-02 09:03 - INFO - ---------------------------------------------
2024-11-02 09:03 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-02 09:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8649
2024-11-02 09:03 - INFO - 	 Train Loss: 0.073
2024-11-02 09:03 - INFO - 	 Val. Loss: 0.068
2024-11-02 09:03 - INFO - 	 ROC-AUC: 0.985
2024-11-02 09:03 - INFO - 	 PR-AUC: 0.865
2024-11-02 09:03 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 09:03 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 09:03 - INFO - 	 Best PR-AUC: 0.865
2024-11-02 09:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 09:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-02 09:03 - INFO - ---------------------------------------------
2024-11-02 09:11 - INFO - ---------------------------------------------
2024-11-02 09:11 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 09:11 - INFO - 	 Train Loss: 0.067
2024-11-02 09:11 - INFO - 	 Val. Loss: 0.070
2024-11-02 09:11 - INFO - 	 ROC-AUC: 0.984
2024-11-02 09:11 - INFO - 	 PR-AUC: 0.862
2024-11-02 09:11 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 09:11 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 09:11 - INFO - 	 Best PR-AUC: 0.865
2024-11-02 09:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 09:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-02 09:11 - INFO - ---------------------------------------------
2024-11-02 09:19 - INFO - ---------------------------------------------
2024-11-02 09:19 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-02 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88148
2024-11-02 09:19 - INFO - 	 Train Loss: 0.064
2024-11-02 09:19 - INFO - 	 Val. Loss: 0.065
2024-11-02 09:19 - INFO - 	 ROC-AUC: 0.985
2024-11-02 09:19 - INFO - 	 PR-AUC: 0.881
2024-11-02 09:19 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 09:19 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 09:19 - INFO - 	 Best PR-AUC: 0.881
2024-11-02 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-02 09:19 - INFO - ---------------------------------------------
2024-11-02 09:27 - INFO - ---------------------------------------------
2024-11-02 09:27 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-02 09:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88618
2024-11-02 09:27 - INFO - 	 Train Loss: 0.060
2024-11-02 09:27 - INFO - 	 Val. Loss: 0.063
2024-11-02 09:27 - INFO - 	 ROC-AUC: 0.987
2024-11-02 09:27 - INFO - 	 PR-AUC: 0.886
2024-11-02 09:27 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 09:27 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 09:27 - INFO - 	 Best PR-AUC: 0.886
2024-11-02 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-02 09:27 - INFO - ---------------------------------------------
2024-11-02 09:35 - INFO - ---------------------------------------------
2024-11-02 09:35 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 09:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88668
2024-11-02 09:35 - INFO - 	 Train Loss: 0.057
2024-11-02 09:35 - INFO - 	 Val. Loss: 0.063
2024-11-02 09:35 - INFO - 	 ROC-AUC: 0.987
2024-11-02 09:35 - INFO - 	 PR-AUC: 0.887
2024-11-02 09:35 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 09:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 09:35 - INFO - 	 Best PR-AUC: 0.887
2024-11-02 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-11-02 09:35 - INFO - ---------------------------------------------
2024-11-02 09:43 - INFO - ---------------------------------------------
2024-11-02 09:43 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 09:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89518
2024-11-02 09:43 - INFO - 	 Train Loss: 0.055
2024-11-02 09:43 - INFO - 	 Val. Loss: 0.060
2024-11-02 09:43 - INFO - 	 ROC-AUC: 0.987
2024-11-02 09:43 - INFO - 	 PR-AUC: 0.895
2024-11-02 09:43 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 09:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 09:43 - INFO - 	 Best PR-AUC: 0.895
2024-11-02 09:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 09:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-02 09:43 - INFO - ---------------------------------------------
2024-11-02 09:51 - INFO - ---------------------------------------------
2024-11-02 09:51 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 09:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89573
2024-11-02 09:51 - INFO - 	 Train Loss: 0.054
2024-11-02 09:51 - INFO - 	 Val. Loss: 0.059
2024-11-02 09:51 - INFO - 	 ROC-AUC: 0.988
2024-11-02 09:51 - INFO - 	 PR-AUC: 0.896
2024-11-02 09:51 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 09:51 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 09:51 - INFO - 	 Best PR-AUC: 0.896
2024-11-02 09:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 09:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-02 09:51 - INFO - ---------------------------------------------
2024-11-02 09:53 - INFO - Fit the preprocessing pipeline
2024-11-02 09:53 - INFO - Training using device: cuda
2024-11-02 09:53 - INFO - Creating generators
2024-11-02 09:53 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 09:53 - INFO - * Model:
2024-11-02 09:53 - INFO - * -----------
2024-11-02 09:53 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 09:53 - INFO - * -----------
2024-11-02 10:01 - INFO - ---------------------------------------------
2024-11-02 10:01 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 10:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56397
2024-11-02 10:01 - INFO - 	 Train Loss: 0.198
2024-11-02 10:01 - INFO - 	 Val. Loss: 0.183
2024-11-02 10:01 - INFO - 	 ROC-AUC: 0.952
2024-11-02 10:01 - INFO - 	 PR-AUC: 0.564
2024-11-02 10:01 - INFO - 	 Best Val. Loss: 0.183
2024-11-02 10:01 - INFO - 	 Best ROC-AUC: 0.952
2024-11-02 10:01 - INFO - 	 Best PR-AUC: 0.564
2024-11-02 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-02 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.624
2024-11-02 10:01 - INFO - ---------------------------------------------
2024-11-02 10:10 - INFO - ---------------------------------------------
2024-11-02 10:10 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82765
2024-11-02 10:10 - INFO - 	 Train Loss: 0.096
2024-11-02 10:10 - INFO - 	 Val. Loss: 0.090
2024-11-02 10:10 - INFO - 	 ROC-AUC: 0.981
2024-11-02 10:10 - INFO - 	 PR-AUC: 0.828
2024-11-02 10:10 - INFO - 	 Best Val. Loss: 0.090
2024-11-02 10:10 - INFO - 	 Best ROC-AUC: 0.981
2024-11-02 10:10 - INFO - 	 Best PR-AUC: 0.828
2024-11-02 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-11-02 10:10 - INFO - ---------------------------------------------
2024-11-02 10:18 - INFO - ---------------------------------------------
2024-11-02 10:18 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 10:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84526
2024-11-02 10:18 - INFO - 	 Train Loss: 0.079
2024-11-02 10:18 - INFO - 	 Val. Loss: 0.080
2024-11-02 10:18 - INFO - 	 ROC-AUC: 0.982
2024-11-02 10:18 - INFO - 	 PR-AUC: 0.845
2024-11-02 10:18 - INFO - 	 Best Val. Loss: 0.080
2024-11-02 10:18 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 10:18 - INFO - 	 Best PR-AUC: 0.845
2024-11-02 10:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 10:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-02 10:18 - INFO - ---------------------------------------------
2024-11-02 10:26 - INFO - ---------------------------------------------
2024-11-02 10:26 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-02 10:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87683
2024-11-02 10:26 - INFO - 	 Train Loss: 0.071
2024-11-02 10:26 - INFO - 	 Val. Loss: 0.065
2024-11-02 10:26 - INFO - 	 ROC-AUC: 0.986
2024-11-02 10:26 - INFO - 	 PR-AUC: 0.877
2024-11-02 10:26 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 10:26 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 10:26 - INFO - 	 Best PR-AUC: 0.877
2024-11-02 10:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 10:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 10:26 - INFO - ---------------------------------------------
2024-11-02 10:34 - INFO - ---------------------------------------------
2024-11-02 10:34 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-02 10:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88123
2024-11-02 10:34 - INFO - 	 Train Loss: 0.067
2024-11-02 10:34 - INFO - 	 Val. Loss: 0.065
2024-11-02 10:34 - INFO - 	 ROC-AUC: 0.986
2024-11-02 10:34 - INFO - 	 PR-AUC: 0.881
2024-11-02 10:34 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 10:34 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 10:34 - INFO - 	 Best PR-AUC: 0.881
2024-11-02 10:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 10:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-02 10:34 - INFO - ---------------------------------------------
2024-11-02 10:42 - INFO - ---------------------------------------------
2024-11-02 10:42 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 10:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89092
2024-11-02 10:42 - INFO - 	 Train Loss: 0.064
2024-11-02 10:42 - INFO - 	 Val. Loss: 0.059
2024-11-02 10:42 - INFO - 	 ROC-AUC: 0.987
2024-11-02 10:42 - INFO - 	 PR-AUC: 0.891
2024-11-02 10:42 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 10:42 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 10:42 - INFO - 	 Best PR-AUC: 0.891
2024-11-02 10:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 10:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-02 10:42 - INFO - ---------------------------------------------
2024-11-02 10:50 - INFO - ---------------------------------------------
2024-11-02 10:50 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-02 10:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89369
2024-11-02 10:50 - INFO - 	 Train Loss: 0.060
2024-11-02 10:50 - INFO - 	 Val. Loss: 0.059
2024-11-02 10:50 - INFO - 	 ROC-AUC: 0.987
2024-11-02 10:50 - INFO - 	 PR-AUC: 0.894
2024-11-02 10:50 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 10:50 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 10:50 - INFO - 	 Best PR-AUC: 0.894
2024-11-02 10:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 10:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-11-02 10:50 - INFO - ---------------------------------------------
2024-11-02 10:58 - INFO - ---------------------------------------------
2024-11-02 10:58 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 10:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89543
2024-11-02 10:58 - INFO - 	 Train Loss: 0.058
2024-11-02 10:58 - INFO - 	 Val. Loss: 0.059
2024-11-02 10:58 - INFO - 	 ROC-AUC: 0.987
2024-11-02 10:58 - INFO - 	 PR-AUC: 0.895
2024-11-02 10:58 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 10:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 10:58 - INFO - 	 Best PR-AUC: 0.895
2024-11-02 10:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 10:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-02 10:58 - INFO - ---------------------------------------------
2024-11-02 11:06 - INFO - ---------------------------------------------
2024-11-02 11:06 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 11:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89949
2024-11-02 11:06 - INFO - 	 Train Loss: 0.056
2024-11-02 11:06 - INFO - 	 Val. Loss: 0.058
2024-11-02 11:06 - INFO - 	 ROC-AUC: 0.988
2024-11-02 11:06 - INFO - 	 PR-AUC: 0.899
2024-11-02 11:06 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 11:06 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 11:06 - INFO - 	 Best PR-AUC: 0.899
2024-11-02 11:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 11:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-02 11:06 - INFO - ---------------------------------------------
2024-11-02 11:14 - INFO - ---------------------------------------------
2024-11-02 11:14 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 11:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90405
2024-11-02 11:14 - INFO - 	 Train Loss: 0.054
2024-11-02 11:14 - INFO - 	 Val. Loss: 0.056
2024-11-02 11:14 - INFO - 	 ROC-AUC: 0.989
2024-11-02 11:14 - INFO - 	 PR-AUC: 0.904
2024-11-02 11:14 - INFO - 	 Best Val. Loss: 0.056
2024-11-02 11:14 - INFO - 	 Best ROC-AUC: 0.989
2024-11-02 11:14 - INFO - 	 Best PR-AUC: 0.904
2024-11-02 11:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 11:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-11-02 11:14 - INFO - ---------------------------------------------
2024-11-02 11:16 - INFO - Fit the preprocessing pipeline
2024-11-02 11:16 - INFO - Training using device: cuda
2024-11-02 11:16 - INFO - Creating generators
2024-11-02 11:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 11:16 - INFO - * Model:
2024-11-02 11:16 - INFO - * -----------
2024-11-02 11:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 11:16 - INFO - * -----------
2024-11-02 11:24 - INFO - ---------------------------------------------
2024-11-02 11:24 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 11:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60517
2024-11-02 11:24 - INFO - 	 Train Loss: 0.189
2024-11-02 11:24 - INFO - 	 Val. Loss: 0.156
2024-11-02 11:24 - INFO - 	 ROC-AUC: 0.943
2024-11-02 11:24 - INFO - 	 PR-AUC: 0.605
2024-11-02 11:24 - INFO - 	 Best Val. Loss: 0.156
2024-11-02 11:24 - INFO - 	 Best ROC-AUC: 0.943
2024-11-02 11:24 - INFO - 	 Best PR-AUC: 0.605
2024-11-02 11:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-02 11:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.655
2024-11-02 11:24 - INFO - ---------------------------------------------
2024-11-02 11:32 - INFO - ---------------------------------------------
2024-11-02 11:32 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 11:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83263
2024-11-02 11:32 - INFO - 	 Train Loss: 0.096
2024-11-02 11:32 - INFO - 	 Val. Loss: 0.086
2024-11-02 11:32 - INFO - 	 ROC-AUC: 0.979
2024-11-02 11:32 - INFO - 	 PR-AUC: 0.833
2024-11-02 11:32 - INFO - 	 Best Val. Loss: 0.086
2024-11-02 11:32 - INFO - 	 Best ROC-AUC: 0.979
2024-11-02 11:32 - INFO - 	 Best PR-AUC: 0.833
2024-11-02 11:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 11:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-11-02 11:32 - INFO - ---------------------------------------------
2024-11-02 11:40 - INFO - ---------------------------------------------
2024-11-02 11:40 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-02 11:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87517
2024-11-02 11:40 - INFO - 	 Train Loss: 0.079
2024-11-02 11:40 - INFO - 	 Val. Loss: 0.066
2024-11-02 11:40 - INFO - 	 ROC-AUC: 0.985
2024-11-02 11:40 - INFO - 	 PR-AUC: 0.875
2024-11-02 11:40 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 11:40 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 11:40 - INFO - 	 Best PR-AUC: 0.875
2024-11-02 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-02 11:40 - INFO - ---------------------------------------------
2024-11-02 11:48 - INFO - ---------------------------------------------
2024-11-02 11:48 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-02 11:48 - INFO - 	 Train Loss: 0.073
2024-11-02 11:48 - INFO - 	 Val. Loss: 0.070
2024-11-02 11:48 - INFO - 	 ROC-AUC: 0.985
2024-11-02 11:48 - INFO - 	 PR-AUC: 0.866
2024-11-02 11:48 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 11:48 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 11:48 - INFO - 	 Best PR-AUC: 0.875
2024-11-02 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-02 11:48 - INFO - ---------------------------------------------
2024-11-02 11:56 - INFO - ---------------------------------------------
2024-11-02 11:56 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-02 11:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87819
2024-11-02 11:56 - INFO - 	 Train Loss: 0.068
2024-11-02 11:56 - INFO - 	 Val. Loss: 0.066
2024-11-02 11:56 - INFO - 	 ROC-AUC: 0.986
2024-11-02 11:56 - INFO - 	 PR-AUC: 0.878
2024-11-02 11:56 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 11:56 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 11:56 - INFO - 	 Best PR-AUC: 0.878
2024-11-02 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-02 11:56 - INFO - ---------------------------------------------
2024-11-02 12:04 - INFO - ---------------------------------------------
2024-11-02 12:04 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 12:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87937
2024-11-02 12:04 - INFO - 	 Train Loss: 0.064
2024-11-02 12:04 - INFO - 	 Val. Loss: 0.066
2024-11-02 12:04 - INFO - 	 ROC-AUC: 0.985
2024-11-02 12:04 - INFO - 	 PR-AUC: 0.879
2024-11-02 12:04 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 12:04 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 12:04 - INFO - 	 Best PR-AUC: 0.879
2024-11-02 12:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 12:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-02 12:04 - INFO - ---------------------------------------------
2024-11-02 12:12 - INFO - ---------------------------------------------
2024-11-02 12:12 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 12:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8848
2024-11-02 12:12 - INFO - 	 Train Loss: 0.061
2024-11-02 12:12 - INFO - 	 Val. Loss: 0.065
2024-11-02 12:12 - INFO - 	 ROC-AUC: 0.987
2024-11-02 12:12 - INFO - 	 PR-AUC: 0.885
2024-11-02 12:12 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 12:12 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 12:12 - INFO - 	 Best PR-AUC: 0.885
2024-11-02 12:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 12:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-02 12:12 - INFO - ---------------------------------------------
2024-11-02 12:20 - INFO - ---------------------------------------------
2024-11-02 12:20 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-02 12:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88528
2024-11-02 12:20 - INFO - 	 Train Loss: 0.058
2024-11-02 12:20 - INFO - 	 Val. Loss: 0.061
2024-11-02 12:20 - INFO - 	 ROC-AUC: 0.987
2024-11-02 12:20 - INFO - 	 PR-AUC: 0.885
2024-11-02 12:20 - INFO - 	 Best Val. Loss: 0.061
2024-11-02 12:20 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 12:20 - INFO - 	 Best PR-AUC: 0.885
2024-11-02 12:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 12:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-02 12:20 - INFO - ---------------------------------------------
2024-11-02 12:28 - INFO - ---------------------------------------------
2024-11-02 12:28 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 12:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88755
2024-11-02 12:28 - INFO - 	 Train Loss: 0.056
2024-11-02 12:28 - INFO - 	 Val. Loss: 0.062
2024-11-02 12:28 - INFO - 	 ROC-AUC: 0.987
2024-11-02 12:28 - INFO - 	 PR-AUC: 0.888
2024-11-02 12:28 - INFO - 	 Best Val. Loss: 0.061
2024-11-02 12:28 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 12:28 - INFO - 	 Best PR-AUC: 0.888
2024-11-02 12:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 12:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-02 12:28 - INFO - ---------------------------------------------
2024-11-02 12:37 - INFO - ---------------------------------------------
2024-11-02 12:37 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 12:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88885
2024-11-02 12:37 - INFO - 	 Train Loss: 0.054
2024-11-02 12:37 - INFO - 	 Val. Loss: 0.061
2024-11-02 12:37 - INFO - 	 ROC-AUC: 0.987
2024-11-02 12:37 - INFO - 	 PR-AUC: 0.889
2024-11-02 12:37 - INFO - 	 Best Val. Loss: 0.061
2024-11-02 12:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 12:37 - INFO - 	 Best PR-AUC: 0.889
2024-11-02 12:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 12:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-11-02 12:37 - INFO - ---------------------------------------------
2024-11-02 12:39 - INFO - Fit the preprocessing pipeline
2024-11-02 12:39 - INFO - Training using device: cuda
2024-11-02 12:39 - INFO - Creating generators
2024-11-02 12:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 12:39 - INFO - * Model:
2024-11-02 12:39 - INFO - * -----------
2024-11-02 12:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 12:39 - INFO - * -----------
2024-11-02 12:47 - INFO - ---------------------------------------------
2024-11-02 12:47 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 12:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66494
2024-11-02 12:47 - INFO - 	 Train Loss: 0.190
2024-11-02 12:47 - INFO - 	 Val. Loss: 0.167
2024-11-02 12:47 - INFO - 	 ROC-AUC: 0.957
2024-11-02 12:47 - INFO - 	 PR-AUC: 0.665
2024-11-02 12:47 - INFO - 	 Best Val. Loss: 0.167
2024-11-02 12:47 - INFO - 	 Best ROC-AUC: 0.957
2024-11-02 12:47 - INFO - 	 Best PR-AUC: 0.665
2024-11-02 12:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-02 12:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.689
2024-11-02 12:47 - INFO - ---------------------------------------------
2024-11-02 12:55 - INFO - ---------------------------------------------
2024-11-02 12:55 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 12:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84184
2024-11-02 12:55 - INFO - 	 Train Loss: 0.093
2024-11-02 12:55 - INFO - 	 Val. Loss: 0.074
2024-11-02 12:55 - INFO - 	 ROC-AUC: 0.982
2024-11-02 12:55 - INFO - 	 PR-AUC: 0.842
2024-11-02 12:55 - INFO - 	 Best Val. Loss: 0.074
2024-11-02 12:55 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 12:55 - INFO - 	 Best PR-AUC: 0.842
2024-11-02 12:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-02 12:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-11-02 12:55 - INFO - ---------------------------------------------
2024-11-02 13:03 - INFO - ---------------------------------------------
2024-11-02 13:03 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-02 13:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85332
2024-11-02 13:03 - INFO - 	 Train Loss: 0.078
2024-11-02 13:03 - INFO - 	 Val. Loss: 0.068
2024-11-02 13:03 - INFO - 	 ROC-AUC: 0.985
2024-11-02 13:03 - INFO - 	 PR-AUC: 0.853
2024-11-02 13:03 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 13:03 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 13:03 - INFO - 	 Best PR-AUC: 0.853
2024-11-02 13:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 13:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-02 13:03 - INFO - ---------------------------------------------
2024-11-02 13:11 - INFO - ---------------------------------------------
2024-11-02 13:11 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-02 13:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86272
2024-11-02 13:11 - INFO - 	 Train Loss: 0.072
2024-11-02 13:11 - INFO - 	 Val. Loss: 0.069
2024-11-02 13:11 - INFO - 	 ROC-AUC: 0.986
2024-11-02 13:11 - INFO - 	 PR-AUC: 0.863
2024-11-02 13:11 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 13:11 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 13:11 - INFO - 	 Best PR-AUC: 0.863
2024-11-02 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-02 13:11 - INFO - ---------------------------------------------
2024-11-02 13:19 - INFO - ---------------------------------------------
2024-11-02 13:19 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 13:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8781
2024-11-02 13:19 - INFO - 	 Train Loss: 0.068
2024-11-02 13:19 - INFO - 	 Val. Loss: 0.060
2024-11-02 13:19 - INFO - 	 ROC-AUC: 0.988
2024-11-02 13:19 - INFO - 	 PR-AUC: 0.878
2024-11-02 13:19 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 13:19 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 13:19 - INFO - 	 Best PR-AUC: 0.878
2024-11-02 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 13:19 - INFO - ---------------------------------------------
2024-11-02 13:27 - INFO - ---------------------------------------------
2024-11-02 13:27 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-02 13:27 - INFO - 	 Train Loss: 0.063
2024-11-02 13:27 - INFO - 	 Val. Loss: 0.061
2024-11-02 13:27 - INFO - 	 ROC-AUC: 0.987
2024-11-02 13:27 - INFO - 	 PR-AUC: 0.874
2024-11-02 13:27 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 13:27 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 13:27 - INFO - 	 Best PR-AUC: 0.878
2024-11-02 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 13:27 - INFO - ---------------------------------------------
2024-11-02 13:35 - INFO - ---------------------------------------------
2024-11-02 13:35 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 13:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88229
2024-11-02 13:35 - INFO - 	 Train Loss: 0.060
2024-11-02 13:35 - INFO - 	 Val. Loss: 0.058
2024-11-02 13:35 - INFO - 	 ROC-AUC: 0.989
2024-11-02 13:35 - INFO - 	 PR-AUC: 0.882
2024-11-02 13:35 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 13:35 - INFO - 	 Best ROC-AUC: 0.989
2024-11-02 13:35 - INFO - 	 Best PR-AUC: 0.882
2024-11-02 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-02 13:35 - INFO - ---------------------------------------------
2024-11-02 13:43 - INFO - ---------------------------------------------
2024-11-02 13:43 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 13:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89344
2024-11-02 13:43 - INFO - 	 Train Loss: 0.057
2024-11-02 13:43 - INFO - 	 Val. Loss: 0.057
2024-11-02 13:43 - INFO - 	 ROC-AUC: 0.989
2024-11-02 13:43 - INFO - 	 PR-AUC: 0.893
2024-11-02 13:43 - INFO - 	 Best Val. Loss: 0.057
2024-11-02 13:43 - INFO - 	 Best ROC-AUC: 0.989
2024-11-02 13:43 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-02 13:43 - INFO - ---------------------------------------------
2024-11-02 13:51 - INFO - ---------------------------------------------
2024-11-02 13:51 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 13:51 - INFO - 	 Train Loss: 0.055
2024-11-02 13:51 - INFO - 	 Val. Loss: 0.060
2024-11-02 13:51 - INFO - 	 ROC-AUC: 0.988
2024-11-02 13:51 - INFO - 	 PR-AUC: 0.882
2024-11-02 13:51 - INFO - 	 Best Val. Loss: 0.057
2024-11-02 13:51 - INFO - 	 Best ROC-AUC: 0.989
2024-11-02 13:51 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 13:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 13:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-02 13:51 - INFO - ---------------------------------------------
2024-11-02 13:59 - INFO - ---------------------------------------------
2024-11-02 13:59 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 13:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90166
2024-11-02 13:59 - INFO - 	 Train Loss: 0.053
2024-11-02 13:59 - INFO - 	 Val. Loss: 0.056
2024-11-02 13:59 - INFO - 	 ROC-AUC: 0.989
2024-11-02 13:59 - INFO - 	 PR-AUC: 0.902
2024-11-02 13:59 - INFO - 	 Best Val. Loss: 0.056
2024-11-02 13:59 - INFO - 	 Best ROC-AUC: 0.989
2024-11-02 13:59 - INFO - 	 Best PR-AUC: 0.902
2024-11-02 13:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 13:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-02 13:59 - INFO - ---------------------------------------------
2024-11-02 14:02 - INFO - Fit the preprocessing pipeline
2024-11-02 14:02 - INFO - Training using device: cuda
2024-11-02 14:02 - INFO - Creating generators
2024-11-02 14:02 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 14:02 - INFO - * Model:
2024-11-02 14:02 - INFO - * -----------
2024-11-02 14:02 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 14:02 - INFO - * -----------
2024-11-02 14:10 - INFO - ---------------------------------------------
2024-11-02 14:10 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 14:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67654
2024-11-02 14:10 - INFO - 	 Train Loss: 0.186
2024-11-02 14:10 - INFO - 	 Val. Loss: 0.159
2024-11-02 14:10 - INFO - 	 ROC-AUC: 0.962
2024-11-02 14:10 - INFO - 	 PR-AUC: 0.677
2024-11-02 14:10 - INFO - 	 Best Val. Loss: 0.159
2024-11-02 14:10 - INFO - 	 Best ROC-AUC: 0.962
2024-11-02 14:10 - INFO - 	 Best PR-AUC: 0.677
2024-11-02 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-02 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.685
2024-11-02 14:10 - INFO - ---------------------------------------------
2024-11-02 14:18 - INFO - ---------------------------------------------
2024-11-02 14:18 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 14:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83094
2024-11-02 14:18 - INFO - 	 Train Loss: 0.098
2024-11-02 14:18 - INFO - 	 Val. Loss: 0.087
2024-11-02 14:18 - INFO - 	 ROC-AUC: 0.981
2024-11-02 14:18 - INFO - 	 PR-AUC: 0.831
2024-11-02 14:18 - INFO - 	 Best Val. Loss: 0.087
2024-11-02 14:18 - INFO - 	 Best ROC-AUC: 0.981
2024-11-02 14:18 - INFO - 	 Best PR-AUC: 0.831
2024-11-02 14:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-02 14:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-02 14:18 - INFO - ---------------------------------------------
2024-11-02 14:26 - INFO - ---------------------------------------------
2024-11-02 14:26 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-02 14:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86668
2024-11-02 14:26 - INFO - 	 Train Loss: 0.082
2024-11-02 14:26 - INFO - 	 Val. Loss: 0.066
2024-11-02 14:26 - INFO - 	 ROC-AUC: 0.986
2024-11-02 14:26 - INFO - 	 PR-AUC: 0.867
2024-11-02 14:26 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 14:26 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 14:26 - INFO - 	 Best PR-AUC: 0.867
2024-11-02 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-02 14:26 - INFO - ---------------------------------------------
2024-11-02 14:34 - INFO - ---------------------------------------------
2024-11-02 14:34 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-02 14:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87817
2024-11-02 14:34 - INFO - 	 Train Loss: 0.074
2024-11-02 14:34 - INFO - 	 Val. Loss: 0.069
2024-11-02 14:34 - INFO - 	 ROC-AUC: 0.987
2024-11-02 14:34 - INFO - 	 PR-AUC: 0.878
2024-11-02 14:34 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 14:34 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 14:34 - INFO - 	 Best PR-AUC: 0.878
2024-11-02 14:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 14:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 14:34 - INFO - ---------------------------------------------
2024-11-02 14:42 - INFO - ---------------------------------------------
2024-11-02 14:42 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-02 14:42 - INFO - 	 Train Loss: 0.068
2024-11-02 14:42 - INFO - 	 Val. Loss: 0.063
2024-11-02 14:42 - INFO - 	 ROC-AUC: 0.987
2024-11-02 14:42 - INFO - 	 PR-AUC: 0.869
2024-11-02 14:42 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 14:42 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 14:42 - INFO - 	 Best PR-AUC: 0.878
2024-11-02 14:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 14:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 14:42 - INFO - ---------------------------------------------
2024-11-02 14:50 - INFO - ---------------------------------------------
2024-11-02 14:50 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-02 14:50 - INFO - 	 Train Loss: 0.064
2024-11-02 14:50 - INFO - 	 Val. Loss: 0.065
2024-11-02 14:50 - INFO - 	 ROC-AUC: 0.987
2024-11-02 14:50 - INFO - 	 PR-AUC: 0.875
2024-11-02 14:50 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 14:50 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 14:50 - INFO - 	 Best PR-AUC: 0.878
2024-11-02 14:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 14:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 14:50 - INFO - ---------------------------------------------
2024-11-02 14:58 - INFO - ---------------------------------------------
2024-11-02 14:58 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 14:58 - INFO - 	 Train Loss: 0.061
2024-11-02 14:58 - INFO - 	 Val. Loss: 0.063
2024-11-02 14:58 - INFO - 	 ROC-AUC: 0.987
2024-11-02 14:58 - INFO - 	 PR-AUC: 0.874
2024-11-02 14:58 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 14:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 14:58 - INFO - 	 Best PR-AUC: 0.878
2024-11-02 14:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 14:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 14:58 - INFO - ---------------------------------------------
2024-11-02 15:06 - INFO - ---------------------------------------------
2024-11-02 15:06 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-02 15:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88534
2024-11-02 15:06 - INFO - 	 Train Loss: 0.058
2024-11-02 15:06 - INFO - 	 Val. Loss: 0.060
2024-11-02 15:06 - INFO - 	 ROC-AUC: 0.988
2024-11-02 15:06 - INFO - 	 PR-AUC: 0.885
2024-11-02 15:06 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 15:06 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 15:06 - INFO - 	 Best PR-AUC: 0.885
2024-11-02 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-02 15:06 - INFO - ---------------------------------------------
2024-11-02 15:14 - INFO - ---------------------------------------------
2024-11-02 15:14 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-02 15:14 - INFO - 	 Train Loss: 0.056
2024-11-02 15:14 - INFO - 	 Val. Loss: 0.062
2024-11-02 15:14 - INFO - 	 ROC-AUC: 0.987
2024-11-02 15:14 - INFO - 	 PR-AUC: 0.884
2024-11-02 15:14 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 15:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 15:14 - INFO - 	 Best PR-AUC: 0.885
2024-11-02 15:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 15:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-02 15:14 - INFO - ---------------------------------------------
2024-11-02 15:22 - INFO - ---------------------------------------------
2024-11-02 15:22 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-02 15:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88784
2024-11-02 15:22 - INFO - 	 Train Loss: 0.055
2024-11-02 15:22 - INFO - 	 Val. Loss: 0.061
2024-11-02 15:22 - INFO - 	 ROC-AUC: 0.988
2024-11-02 15:22 - INFO - 	 PR-AUC: 0.888
2024-11-02 15:22 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 15:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 15:22 - INFO - 	 Best PR-AUC: 0.888
2024-11-02 15:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-02 15:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-02 15:22 - INFO - ---------------------------------------------
2024-11-02 15:24 - INFO - Fit the preprocessing pipeline
2024-11-02 15:24 - INFO - Training using device: cuda
2024-11-02 15:24 - INFO - Creating generators
2024-11-02 15:24 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 15:24 - INFO - * Model:
2024-11-02 15:24 - INFO - * -----------
2024-11-02 15:24 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 15:24 - INFO - * -----------
2024-11-02 15:32 - INFO - ---------------------------------------------
2024-11-02 15:32 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65159
2024-11-02 15:32 - INFO - 	 Train Loss: 0.191
2024-11-02 15:32 - INFO - 	 Val. Loss: 0.197
2024-11-02 15:32 - INFO - 	 ROC-AUC: 0.960
2024-11-02 15:32 - INFO - 	 PR-AUC: 0.652
2024-11-02 15:32 - INFO - 	 Best Val. Loss: 0.197
2024-11-02 15:32 - INFO - 	 Best ROC-AUC: 0.960
2024-11-02 15:32 - INFO - 	 Best PR-AUC: 0.652
2024-11-02 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-02 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.685
2024-11-02 15:32 - INFO - ---------------------------------------------
2024-11-02 15:40 - INFO - ---------------------------------------------
2024-11-02 15:40 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 15:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84374
2024-11-02 15:40 - INFO - 	 Train Loss: 0.096
2024-11-02 15:40 - INFO - 	 Val. Loss: 0.079
2024-11-02 15:40 - INFO - 	 ROC-AUC: 0.982
2024-11-02 15:40 - INFO - 	 PR-AUC: 0.844
2024-11-02 15:40 - INFO - 	 Best Val. Loss: 0.079
2024-11-02 15:40 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 15:40 - INFO - 	 Best PR-AUC: 0.844
2024-11-02 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-02 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-11-02 15:40 - INFO - ---------------------------------------------
2024-11-02 15:48 - INFO - ---------------------------------------------
2024-11-02 15:48 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 15:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86555
2024-11-02 15:48 - INFO - 	 Train Loss: 0.079
2024-11-02 15:48 - INFO - 	 Val. Loss: 0.069
2024-11-02 15:48 - INFO - 	 ROC-AUC: 0.984
2024-11-02 15:48 - INFO - 	 PR-AUC: 0.866
2024-11-02 15:48 - INFO - 	 Best Val. Loss: 0.069
2024-11-02 15:48 - INFO - 	 Best ROC-AUC: 0.984
2024-11-02 15:48 - INFO - 	 Best PR-AUC: 0.866
2024-11-02 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-02 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-02 15:48 - INFO - ---------------------------------------------
2024-11-02 15:57 - INFO - ---------------------------------------------
2024-11-02 15:57 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-02 15:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86742
2024-11-02 15:57 - INFO - 	 Train Loss: 0.074
2024-11-02 15:57 - INFO - 	 Val. Loss: 0.069
2024-11-02 15:57 - INFO - 	 ROC-AUC: 0.984
2024-11-02 15:57 - INFO - 	 PR-AUC: 0.867
2024-11-02 15:57 - INFO - 	 Best Val. Loss: 0.069
2024-11-02 15:57 - INFO - 	 Best ROC-AUC: 0.984
2024-11-02 15:57 - INFO - 	 Best PR-AUC: 0.867
2024-11-02 15:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-02 15:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-02 15:57 - INFO - ---------------------------------------------
2024-11-02 16:05 - INFO - ---------------------------------------------
2024-11-02 16:05 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 16:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88217
2024-11-02 16:05 - INFO - 	 Train Loss: 0.069
2024-11-02 16:05 - INFO - 	 Val. Loss: 0.062
2024-11-02 16:05 - INFO - 	 ROC-AUC: 0.987
2024-11-02 16:05 - INFO - 	 PR-AUC: 0.882
2024-11-02 16:05 - INFO - 	 Best Val. Loss: 0.062
2024-11-02 16:05 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 16:05 - INFO - 	 Best PR-AUC: 0.882
2024-11-02 16:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 16:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-02 16:05 - INFO - ---------------------------------------------
2024-11-02 16:13 - INFO - ---------------------------------------------
2024-11-02 16:13 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-02 16:13 - INFO - 	 Train Loss: 0.065
2024-11-02 16:13 - INFO - 	 Val. Loss: 0.060
2024-11-02 16:13 - INFO - 	 ROC-AUC: 0.988
2024-11-02 16:13 - INFO - 	 PR-AUC: 0.881
2024-11-02 16:13 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 16:13 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 16:13 - INFO - 	 Best PR-AUC: 0.882
2024-11-02 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-02 16:13 - INFO - ---------------------------------------------
2024-11-02 16:21 - INFO - ---------------------------------------------
2024-11-02 16:21 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 16:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88262
2024-11-02 16:21 - INFO - 	 Train Loss: 0.061
2024-11-02 16:21 - INFO - 	 Val. Loss: 0.061
2024-11-02 16:21 - INFO - 	 ROC-AUC: 0.987
2024-11-02 16:21 - INFO - 	 PR-AUC: 0.883
2024-11-02 16:21 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 16:21 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 16:21 - INFO - 	 Best PR-AUC: 0.883
2024-11-02 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-02 16:21 - INFO - ---------------------------------------------
2024-11-02 16:29 - INFO - ---------------------------------------------
2024-11-02 16:29 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-02 16:29 - INFO - 	 Train Loss: 0.058
2024-11-02 16:29 - INFO - 	 Val. Loss: 0.062
2024-11-02 16:29 - INFO - 	 ROC-AUC: 0.988
2024-11-02 16:29 - INFO - 	 PR-AUC: 0.881
2024-11-02 16:29 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 16:29 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 16:29 - INFO - 	 Best PR-AUC: 0.883
2024-11-02 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-02 16:29 - INFO - ---------------------------------------------
2024-11-02 16:37 - INFO - ---------------------------------------------
2024-11-02 16:37 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-02 16:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88301
2024-11-02 16:37 - INFO - 	 Train Loss: 0.055
2024-11-02 16:37 - INFO - 	 Val. Loss: 0.061
2024-11-02 16:37 - INFO - 	 ROC-AUC: 0.988
2024-11-02 16:37 - INFO - 	 PR-AUC: 0.883
2024-11-02 16:37 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 16:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 16:37 - INFO - 	 Best PR-AUC: 0.883
2024-11-02 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-11-02 16:37 - INFO - ---------------------------------------------
2024-11-02 16:45 - INFO - ---------------------------------------------
2024-11-02 16:45 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89079
2024-11-02 16:45 - INFO - 	 Train Loss: 0.053
2024-11-02 16:45 - INFO - 	 Val. Loss: 0.058
2024-11-02 16:45 - INFO - 	 ROC-AUC: 0.989
2024-11-02 16:45 - INFO - 	 PR-AUC: 0.891
2024-11-02 16:45 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 16:45 - INFO - 	 Best ROC-AUC: 0.989
2024-11-02 16:45 - INFO - 	 Best PR-AUC: 0.891
2024-11-02 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-02 16:45 - INFO - ---------------------------------------------
2024-11-02 16:47 - INFO - Fit the preprocessing pipeline
2024-11-02 16:47 - INFO - Training using device: cuda
2024-11-02 16:47 - INFO - Creating generators
2024-11-02 16:47 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 16:47 - INFO - * Model:
2024-11-02 16:47 - INFO - * -----------
2024-11-02 16:47 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 16:47 - INFO - * -----------
2024-11-02 16:55 - INFO - ---------------------------------------------
2024-11-02 16:55 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 16:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67047
2024-11-02 16:55 - INFO - 	 Train Loss: 0.176
2024-11-02 16:55 - INFO - 	 Val. Loss: 0.153
2024-11-02 16:55 - INFO - 	 ROC-AUC: 0.959
2024-11-02 16:55 - INFO - 	 PR-AUC: 0.670
2024-11-02 16:55 - INFO - 	 Best Val. Loss: 0.153
2024-11-02 16:55 - INFO - 	 Best ROC-AUC: 0.959
2024-11-02 16:55 - INFO - 	 Best PR-AUC: 0.670
2024-11-02 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-02 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.693
2024-11-02 16:55 - INFO - ---------------------------------------------
2024-11-02 17:03 - INFO - ---------------------------------------------
2024-11-02 17:03 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-02 17:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81664
2024-11-02 17:03 - INFO - 	 Train Loss: 0.094
2024-11-02 17:03 - INFO - 	 Val. Loss: 0.083
2024-11-02 17:03 - INFO - 	 ROC-AUC: 0.980
2024-11-02 17:03 - INFO - 	 PR-AUC: 0.817
2024-11-02 17:03 - INFO - 	 Best Val. Loss: 0.083
2024-11-02 17:03 - INFO - 	 Best ROC-AUC: 0.980
2024-11-02 17:03 - INFO - 	 Best PR-AUC: 0.817
2024-11-02 17:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-02 17:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-02 17:03 - INFO - ---------------------------------------------
2024-11-02 17:11 - INFO - ---------------------------------------------
2024-11-02 17:11 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-02 17:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83805
2024-11-02 17:11 - INFO - 	 Train Loss: 0.081
2024-11-02 17:11 - INFO - 	 Val. Loss: 0.074
2024-11-02 17:11 - INFO - 	 ROC-AUC: 0.983
2024-11-02 17:11 - INFO - 	 PR-AUC: 0.838
2024-11-02 17:11 - INFO - 	 Best Val. Loss: 0.074
2024-11-02 17:11 - INFO - 	 Best ROC-AUC: 0.983
2024-11-02 17:11 - INFO - 	 Best PR-AUC: 0.838
2024-11-02 17:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-02 17:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-11-02 17:11 - INFO - ---------------------------------------------
2024-11-02 17:19 - INFO - ---------------------------------------------
2024-11-02 17:19 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-02 17:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85918
2024-11-02 17:19 - INFO - 	 Train Loss: 0.074
2024-11-02 17:19 - INFO - 	 Val. Loss: 0.068
2024-11-02 17:19 - INFO - 	 ROC-AUC: 0.985
2024-11-02 17:19 - INFO - 	 PR-AUC: 0.859
2024-11-02 17:19 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 17:19 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 17:19 - INFO - 	 Best PR-AUC: 0.859
2024-11-02 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-02 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-02 17:19 - INFO - ---------------------------------------------
2024-11-02 17:27 - INFO - ---------------------------------------------
2024-11-02 17:27 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87266
2024-11-02 17:27 - INFO - 	 Train Loss: 0.069
2024-11-02 17:27 - INFO - 	 Val. Loss: 0.064
2024-11-02 17:27 - INFO - 	 ROC-AUC: 0.986
2024-11-02 17:27 - INFO - 	 PR-AUC: 0.873
2024-11-02 17:27 - INFO - 	 Best Val. Loss: 0.064
2024-11-02 17:27 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 17:27 - INFO - 	 Best PR-AUC: 0.873
2024-11-02 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-02 17:27 - INFO - ---------------------------------------------
2024-11-02 17:35 - INFO - ---------------------------------------------
2024-11-02 17:35 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-02 17:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88289
2024-11-02 17:35 - INFO - 	 Train Loss: 0.065
2024-11-02 17:35 - INFO - 	 Val. Loss: 0.062
2024-11-02 17:35 - INFO - 	 ROC-AUC: 0.986
2024-11-02 17:35 - INFO - 	 PR-AUC: 0.883
2024-11-02 17:35 - INFO - 	 Best Val. Loss: 0.062
2024-11-02 17:35 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 17:35 - INFO - 	 Best PR-AUC: 0.883
2024-11-02 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-02 17:35 - INFO - ---------------------------------------------
2024-11-02 17:43 - INFO - ---------------------------------------------
2024-11-02 17:43 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-02 17:43 - INFO - 	 Train Loss: 0.060
2024-11-02 17:43 - INFO - 	 Val. Loss: 0.062
2024-11-02 17:43 - INFO - 	 ROC-AUC: 0.986
2024-11-02 17:43 - INFO - 	 PR-AUC: 0.875
2024-11-02 17:43 - INFO - 	 Best Val. Loss: 0.062
2024-11-02 17:43 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 17:43 - INFO - 	 Best PR-AUC: 0.883
2024-11-02 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-02 17:43 - INFO - ---------------------------------------------
2024-11-02 17:51 - INFO - ---------------------------------------------
2024-11-02 17:51 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88705
2024-11-02 17:51 - INFO - 	 Train Loss: 0.058
2024-11-02 17:51 - INFO - 	 Val. Loss: 0.059
2024-11-02 17:51 - INFO - 	 ROC-AUC: 0.988
2024-11-02 17:51 - INFO - 	 PR-AUC: 0.887
2024-11-02 17:51 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 17:51 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 17:51 - INFO - 	 Best PR-AUC: 0.887
2024-11-02 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-02 17:51 - INFO - ---------------------------------------------
2024-11-02 17:59 - INFO - ---------------------------------------------
2024-11-02 17:59 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-02 17:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89201
2024-11-02 17:59 - INFO - 	 Train Loss: 0.055
2024-11-02 17:59 - INFO - 	 Val. Loss: 0.062
2024-11-02 17:59 - INFO - 	 ROC-AUC: 0.987
2024-11-02 17:59 - INFO - 	 PR-AUC: 0.892
2024-11-02 17:59 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 17:59 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 17:59 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 17:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 17:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-02 17:59 - INFO - ---------------------------------------------
2024-11-02 18:08 - INFO - ---------------------------------------------
2024-11-02 18:08 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-02 18:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8936
2024-11-02 18:08 - INFO - 	 Train Loss: 0.053
2024-11-02 18:08 - INFO - 	 Val. Loss: 0.058
2024-11-02 18:08 - INFO - 	 ROC-AUC: 0.988
2024-11-02 18:08 - INFO - 	 PR-AUC: 0.894
2024-11-02 18:08 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 18:08 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 18:08 - INFO - 	 Best PR-AUC: 0.894
2024-11-02 18:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-02 18:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.905
2024-11-02 18:08 - INFO - ---------------------------------------------
2024-11-02 18:10 - INFO - Fit the preprocessing pipeline
2024-11-02 18:10 - INFO - Training using device: cuda
2024-11-02 18:10 - INFO - Creating generators
2024-11-02 18:10 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 18:10 - INFO - * Model:
2024-11-02 18:10 - INFO - * -----------
2024-11-02 18:10 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 18:10 - INFO - * -----------
2024-11-02 18:18 - INFO - ---------------------------------------------
2024-11-02 18:18 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-02 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67543
2024-11-02 18:18 - INFO - 	 Train Loss: 0.186
2024-11-02 18:18 - INFO - 	 Val. Loss: 0.162
2024-11-02 18:18 - INFO - 	 ROC-AUC: 0.967
2024-11-02 18:18 - INFO - 	 PR-AUC: 0.675
2024-11-02 18:18 - INFO - 	 Best Val. Loss: 0.162
2024-11-02 18:18 - INFO - 	 Best ROC-AUC: 0.967
2024-11-02 18:18 - INFO - 	 Best PR-AUC: 0.675
2024-11-02 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-02 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.703
2024-11-02 18:18 - INFO - ---------------------------------------------
2024-11-02 18:26 - INFO - ---------------------------------------------
2024-11-02 18:26 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-02 18:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82841
2024-11-02 18:26 - INFO - 	 Train Loss: 0.093
2024-11-02 18:26 - INFO - 	 Val. Loss: 0.079
2024-11-02 18:26 - INFO - 	 ROC-AUC: 0.981
2024-11-02 18:26 - INFO - 	 PR-AUC: 0.828
2024-11-02 18:26 - INFO - 	 Best Val. Loss: 0.079
2024-11-02 18:26 - INFO - 	 Best ROC-AUC: 0.981
2024-11-02 18:26 - INFO - 	 Best PR-AUC: 0.828
2024-11-02 18:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 18:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-02 18:26 - INFO - ---------------------------------------------
2024-11-02 18:34 - INFO - ---------------------------------------------
2024-11-02 18:34 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-02 18:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85881
2024-11-02 18:34 - INFO - 	 Train Loss: 0.079
2024-11-02 18:34 - INFO - 	 Val. Loss: 0.084
2024-11-02 18:34 - INFO - 	 ROC-AUC: 0.984
2024-11-02 18:34 - INFO - 	 PR-AUC: 0.859
2024-11-02 18:34 - INFO - 	 Best Val. Loss: 0.079
2024-11-02 18:34 - INFO - 	 Best ROC-AUC: 0.984
2024-11-02 18:34 - INFO - 	 Best PR-AUC: 0.859
2024-11-02 18:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 18:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-02 18:34 - INFO - ---------------------------------------------
2024-11-02 18:42 - INFO - ---------------------------------------------
2024-11-02 18:42 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-02 18:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8683
2024-11-02 18:42 - INFO - 	 Train Loss: 0.073
2024-11-02 18:42 - INFO - 	 Val. Loss: 0.068
2024-11-02 18:42 - INFO - 	 ROC-AUC: 0.985
2024-11-02 18:42 - INFO - 	 PR-AUC: 0.868
2024-11-02 18:42 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 18:42 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 18:42 - INFO - 	 Best PR-AUC: 0.868
2024-11-02 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-02 18:42 - INFO - ---------------------------------------------
2024-11-02 18:50 - INFO - ---------------------------------------------
2024-11-02 18:50 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 18:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87579
2024-11-02 18:50 - INFO - 	 Train Loss: 0.067
2024-11-02 18:50 - INFO - 	 Val. Loss: 0.064
2024-11-02 18:50 - INFO - 	 ROC-AUC: 0.986
2024-11-02 18:50 - INFO - 	 PR-AUC: 0.876
2024-11-02 18:50 - INFO - 	 Best Val. Loss: 0.064
2024-11-02 18:50 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 18:50 - INFO - 	 Best PR-AUC: 0.876
2024-11-02 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-02 18:50 - INFO - ---------------------------------------------
2024-11-02 18:58 - INFO - ---------------------------------------------
2024-11-02 18:58 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 18:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88619
2024-11-02 18:58 - INFO - 	 Train Loss: 0.062
2024-11-02 18:58 - INFO - 	 Val. Loss: 0.064
2024-11-02 18:58 - INFO - 	 ROC-AUC: 0.987
2024-11-02 18:58 - INFO - 	 PR-AUC: 0.886
2024-11-02 18:58 - INFO - 	 Best Val. Loss: 0.064
2024-11-02 18:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 18:58 - INFO - 	 Best PR-AUC: 0.886
2024-11-02 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-02 18:58 - INFO - ---------------------------------------------
2024-11-02 19:06 - INFO - ---------------------------------------------
2024-11-02 19:06 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-02 19:06 - INFO - 	 Train Loss: 0.060
2024-11-02 19:06 - INFO - 	 Val. Loss: 0.067
2024-11-02 19:06 - INFO - 	 ROC-AUC: 0.987
2024-11-02 19:06 - INFO - 	 PR-AUC: 0.876
2024-11-02 19:06 - INFO - 	 Best Val. Loss: 0.064
2024-11-02 19:06 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 19:06 - INFO - 	 Best PR-AUC: 0.886
2024-11-02 19:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 19:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-02 19:06 - INFO - ---------------------------------------------
2024-11-02 19:14 - INFO - ---------------------------------------------
2024-11-02 19:14 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-02 19:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88682
2024-11-02 19:14 - INFO - 	 Train Loss: 0.058
2024-11-02 19:14 - INFO - 	 Val. Loss: 0.060
2024-11-02 19:14 - INFO - 	 ROC-AUC: 0.988
2024-11-02 19:14 - INFO - 	 PR-AUC: 0.887
2024-11-02 19:14 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 19:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 19:14 - INFO - 	 Best PR-AUC: 0.887
2024-11-02 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-02 19:14 - INFO - ---------------------------------------------
2024-11-02 19:22 - INFO - ---------------------------------------------
2024-11-02 19:22 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 19:22 - INFO - 	 Train Loss: 0.054
2024-11-02 19:22 - INFO - 	 Val. Loss: 0.062
2024-11-02 19:22 - INFO - 	 ROC-AUC: 0.988
2024-11-02 19:22 - INFO - 	 PR-AUC: 0.884
2024-11-02 19:22 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 19:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 19:22 - INFO - 	 Best PR-AUC: 0.887
2024-11-02 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-02 19:22 - INFO - ---------------------------------------------
2024-11-02 19:30 - INFO - ---------------------------------------------
2024-11-02 19:30 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88884
2024-11-02 19:30 - INFO - 	 Train Loss: 0.053
2024-11-02 19:30 - INFO - 	 Val. Loss: 0.061
2024-11-02 19:30 - INFO - 	 ROC-AUC: 0.988
2024-11-02 19:30 - INFO - 	 PR-AUC: 0.889
2024-11-02 19:30 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 19:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 19:30 - INFO - 	 Best PR-AUC: 0.889
2024-11-02 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-02 19:30 - INFO - ---------------------------------------------
2024-11-02 19:33 - INFO - Fit the preprocessing pipeline
2024-11-02 19:33 - INFO - Training using device: cuda
2024-11-02 19:33 - INFO - Creating generators
2024-11-02 19:33 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 19:33 - INFO - * Model:
2024-11-02 19:33 - INFO - * -----------
2024-11-02 19:33 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 19:33 - INFO - * -----------
2024-11-02 19:41 - INFO - ---------------------------------------------
2024-11-02 19:41 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 19:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55106
2024-11-02 19:41 - INFO - 	 Train Loss: 0.196
2024-11-02 19:41 - INFO - 	 Val. Loss: 0.179
2024-11-02 19:41 - INFO - 	 ROC-AUC: 0.940
2024-11-02 19:41 - INFO - 	 PR-AUC: 0.551
2024-11-02 19:41 - INFO - 	 Best Val. Loss: 0.179
2024-11-02 19:41 - INFO - 	 Best ROC-AUC: 0.940
2024-11-02 19:41 - INFO - 	 Best PR-AUC: 0.551
2024-11-02 19:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-02 19:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.585
2024-11-02 19:41 - INFO - ---------------------------------------------
2024-11-02 19:49 - INFO - ---------------------------------------------
2024-11-02 19:49 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 19:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80025
2024-11-02 19:49 - INFO - 	 Train Loss: 0.097
2024-11-02 19:49 - INFO - 	 Val. Loss: 0.093
2024-11-02 19:49 - INFO - 	 ROC-AUC: 0.977
2024-11-02 19:49 - INFO - 	 PR-AUC: 0.800
2024-11-02 19:49 - INFO - 	 Best Val. Loss: 0.093
2024-11-02 19:49 - INFO - 	 Best ROC-AUC: 0.977
2024-11-02 19:49 - INFO - 	 Best PR-AUC: 0.800
2024-11-02 19:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-02 19:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-11-02 19:49 - INFO - ---------------------------------------------
2024-11-02 19:57 - INFO - ---------------------------------------------
2024-11-02 19:57 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 19:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86632
2024-11-02 19:57 - INFO - 	 Train Loss: 0.080
2024-11-02 19:57 - INFO - 	 Val. Loss: 0.068
2024-11-02 19:57 - INFO - 	 ROC-AUC: 0.984
2024-11-02 19:57 - INFO - 	 PR-AUC: 0.866
2024-11-02 19:57 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 19:57 - INFO - 	 Best ROC-AUC: 0.984
2024-11-02 19:57 - INFO - 	 Best PR-AUC: 0.866
2024-11-02 19:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-02 19:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-02 19:57 - INFO - ---------------------------------------------
2024-11-02 20:05 - INFO - ---------------------------------------------
2024-11-02 20:05 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-02 20:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86773
2024-11-02 20:05 - INFO - 	 Train Loss: 0.072
2024-11-02 20:05 - INFO - 	 Val. Loss: 0.068
2024-11-02 20:05 - INFO - 	 ROC-AUC: 0.985
2024-11-02 20:05 - INFO - 	 PR-AUC: 0.868
2024-11-02 20:05 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 20:05 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 20:05 - INFO - 	 Best PR-AUC: 0.868
2024-11-02 20:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 20:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-02 20:05 - INFO - ---------------------------------------------
2024-11-02 20:13 - INFO - ---------------------------------------------
2024-11-02 20:13 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 20:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88817
2024-11-02 20:13 - INFO - 	 Train Loss: 0.067
2024-11-02 20:13 - INFO - 	 Val. Loss: 0.061
2024-11-02 20:13 - INFO - 	 ROC-AUC: 0.987
2024-11-02 20:13 - INFO - 	 PR-AUC: 0.888
2024-11-02 20:13 - INFO - 	 Best Val. Loss: 0.061
2024-11-02 20:13 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 20:13 - INFO - 	 Best PR-AUC: 0.888
2024-11-02 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-02 20:13 - INFO - ---------------------------------------------
2024-11-02 20:21 - INFO - ---------------------------------------------
2024-11-02 20:21 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 20:21 - INFO - 	 Train Loss: 0.062
2024-11-02 20:21 - INFO - 	 Val. Loss: 0.060
2024-11-02 20:21 - INFO - 	 ROC-AUC: 0.987
2024-11-02 20:21 - INFO - 	 PR-AUC: 0.887
2024-11-02 20:21 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 20:21 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 20:21 - INFO - 	 Best PR-AUC: 0.888
2024-11-02 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-02 20:21 - INFO - ---------------------------------------------
2024-11-02 20:29 - INFO - ---------------------------------------------
2024-11-02 20:29 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 20:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89054
2024-11-02 20:29 - INFO - 	 Train Loss: 0.060
2024-11-02 20:29 - INFO - 	 Val. Loss: 0.062
2024-11-02 20:29 - INFO - 	 ROC-AUC: 0.988
2024-11-02 20:29 - INFO - 	 PR-AUC: 0.891
2024-11-02 20:29 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 20:29 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 20:29 - INFO - 	 Best PR-AUC: 0.891
2024-11-02 20:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 20:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-02 20:29 - INFO - ---------------------------------------------
2024-11-02 20:37 - INFO - ---------------------------------------------
2024-11-02 20:37 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 20:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89063
2024-11-02 20:37 - INFO - 	 Train Loss: 0.058
2024-11-02 20:37 - INFO - 	 Val. Loss: 0.058
2024-11-02 20:37 - INFO - 	 ROC-AUC: 0.988
2024-11-02 20:37 - INFO - 	 PR-AUC: 0.891
2024-11-02 20:37 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 20:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 20:37 - INFO - 	 Best PR-AUC: 0.891
2024-11-02 20:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 20:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-11-02 20:37 - INFO - ---------------------------------------------
2024-11-02 20:45 - INFO - ---------------------------------------------
2024-11-02 20:45 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-02 20:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89233
2024-11-02 20:45 - INFO - 	 Train Loss: 0.055
2024-11-02 20:45 - INFO - 	 Val. Loss: 0.058
2024-11-02 20:45 - INFO - 	 ROC-AUC: 0.988
2024-11-02 20:45 - INFO - 	 PR-AUC: 0.892
2024-11-02 20:45 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 20:45 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 20:45 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-02 20:45 - INFO - ---------------------------------------------
2024-11-02 20:53 - INFO - ---------------------------------------------
2024-11-02 20:53 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 20:53 - INFO - 	 Train Loss: 0.054
2024-11-02 20:53 - INFO - 	 Val. Loss: 0.058
2024-11-02 20:53 - INFO - 	 ROC-AUC: 0.988
2024-11-02 20:53 - INFO - 	 PR-AUC: 0.888
2024-11-02 20:53 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 20:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 20:53 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-02 20:53 - INFO - ---------------------------------------------
2024-11-02 20:55 - INFO - Fit the preprocessing pipeline
2024-11-02 20:55 - INFO - Training using device: cuda
2024-11-02 20:55 - INFO - Creating generators
2024-11-02 20:55 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 20:55 - INFO - * Model:
2024-11-02 20:55 - INFO - * -----------
2024-11-02 20:55 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 20:55 - INFO - * -----------
2024-11-02 21:03 - INFO - ---------------------------------------------
2024-11-02 21:03 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 21:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69791
2024-11-02 21:03 - INFO - 	 Train Loss: 0.182
2024-11-02 21:03 - INFO - 	 Val. Loss: 0.137
2024-11-02 21:03 - INFO - 	 ROC-AUC: 0.965
2024-11-02 21:03 - INFO - 	 PR-AUC: 0.698
2024-11-02 21:03 - INFO - 	 Best Val. Loss: 0.137
2024-11-02 21:03 - INFO - 	 Best ROC-AUC: 0.965
2024-11-02 21:03 - INFO - 	 Best PR-AUC: 0.698
2024-11-02 21:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-02 21:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.718
2024-11-02 21:03 - INFO - ---------------------------------------------
2024-11-02 21:11 - INFO - ---------------------------------------------
2024-11-02 21:11 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 21:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83902
2024-11-02 21:11 - INFO - 	 Train Loss: 0.092
2024-11-02 21:11 - INFO - 	 Val. Loss: 0.079
2024-11-02 21:11 - INFO - 	 ROC-AUC: 0.982
2024-11-02 21:11 - INFO - 	 PR-AUC: 0.839
2024-11-02 21:11 - INFO - 	 Best Val. Loss: 0.079
2024-11-02 21:11 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 21:11 - INFO - 	 Best PR-AUC: 0.839
2024-11-02 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-02 21:11 - INFO - ---------------------------------------------
2024-11-02 21:19 - INFO - ---------------------------------------------
2024-11-02 21:19 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 21:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85538
2024-11-02 21:19 - INFO - 	 Train Loss: 0.079
2024-11-02 21:19 - INFO - 	 Val. Loss: 0.070
2024-11-02 21:19 - INFO - 	 ROC-AUC: 0.984
2024-11-02 21:19 - INFO - 	 PR-AUC: 0.855
2024-11-02 21:19 - INFO - 	 Best Val. Loss: 0.070
2024-11-02 21:19 - INFO - 	 Best ROC-AUC: 0.984
2024-11-02 21:19 - INFO - 	 Best PR-AUC: 0.855
2024-11-02 21:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 21:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-02 21:19 - INFO - ---------------------------------------------
2024-11-02 21:27 - INFO - ---------------------------------------------
2024-11-02 21:27 - INFO - Epoch: 04 | Time: 8m 3s
2024-11-02 21:27 - INFO - 	 Train Loss: 0.074
2024-11-02 21:27 - INFO - 	 Val. Loss: 0.069
2024-11-02 21:27 - INFO - 	 ROC-AUC: 0.985
2024-11-02 21:27 - INFO - 	 PR-AUC: 0.851
2024-11-02 21:27 - INFO - 	 Best Val. Loss: 0.069
2024-11-02 21:27 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 21:27 - INFO - 	 Best PR-AUC: 0.855
2024-11-02 21:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 21:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-02 21:27 - INFO - ---------------------------------------------
2024-11-02 21:36 - INFO - ---------------------------------------------
2024-11-02 21:36 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-02 21:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86171
2024-11-02 21:36 - INFO - 	 Train Loss: 0.068
2024-11-02 21:36 - INFO - 	 Val. Loss: 0.067
2024-11-02 21:36 - INFO - 	 ROC-AUC: 0.986
2024-11-02 21:36 - INFO - 	 PR-AUC: 0.862
2024-11-02 21:36 - INFO - 	 Best Val. Loss: 0.067
2024-11-02 21:36 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 21:36 - INFO - 	 Best PR-AUC: 0.862
2024-11-02 21:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 21:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-02 21:36 - INFO - ---------------------------------------------
2024-11-02 21:44 - INFO - ---------------------------------------------
2024-11-02 21:44 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 21:44 - INFO - 	 Train Loss: 0.065
2024-11-02 21:44 - INFO - 	 Val. Loss: 0.066
2024-11-02 21:44 - INFO - 	 ROC-AUC: 0.986
2024-11-02 21:44 - INFO - 	 PR-AUC: 0.856
2024-11-02 21:44 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 21:44 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 21:44 - INFO - 	 Best PR-AUC: 0.862
2024-11-02 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-02 21:44 - INFO - ---------------------------------------------
2024-11-02 21:52 - INFO - ---------------------------------------------
2024-11-02 21:52 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 21:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86407
2024-11-02 21:52 - INFO - 	 Train Loss: 0.062
2024-11-02 21:52 - INFO - 	 Val. Loss: 0.067
2024-11-02 21:52 - INFO - 	 ROC-AUC: 0.986
2024-11-02 21:52 - INFO - 	 PR-AUC: 0.864
2024-11-02 21:52 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 21:52 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 21:52 - INFO - 	 Best PR-AUC: 0.864
2024-11-02 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-02 21:52 - INFO - ---------------------------------------------
2024-11-02 22:00 - INFO - ---------------------------------------------
2024-11-02 22:00 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 22:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87488
2024-11-02 22:00 - INFO - 	 Train Loss: 0.060
2024-11-02 22:00 - INFO - 	 Val. Loss: 0.062
2024-11-02 22:00 - INFO - 	 ROC-AUC: 0.987
2024-11-02 22:00 - INFO - 	 PR-AUC: 0.875
2024-11-02 22:00 - INFO - 	 Best Val. Loss: 0.062
2024-11-02 22:00 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 22:00 - INFO - 	 Best PR-AUC: 0.875
2024-11-02 22:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 22:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-02 22:00 - INFO - ---------------------------------------------
2024-11-02 22:08 - INFO - ---------------------------------------------
2024-11-02 22:08 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 22:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89192
2024-11-02 22:08 - INFO - 	 Train Loss: 0.057
2024-11-02 22:08 - INFO - 	 Val. Loss: 0.060
2024-11-02 22:08 - INFO - 	 ROC-AUC: 0.988
2024-11-02 22:08 - INFO - 	 PR-AUC: 0.892
2024-11-02 22:08 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 22:08 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 22:08 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-02 22:08 - INFO - ---------------------------------------------
2024-11-02 22:16 - INFO - ---------------------------------------------
2024-11-02 22:16 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-02 22:16 - INFO - 	 Train Loss: 0.054
2024-11-02 22:16 - INFO - 	 Val. Loss: 0.062
2024-11-02 22:16 - INFO - 	 ROC-AUC: 0.987
2024-11-02 22:16 - INFO - 	 PR-AUC: 0.884
2024-11-02 22:16 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 22:16 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 22:16 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-02 22:16 - INFO - ---------------------------------------------
2024-11-02 22:18 - INFO - Fit the preprocessing pipeline
2024-11-02 22:18 - INFO - Training using device: cuda
2024-11-02 22:18 - INFO - Creating generators
2024-11-02 22:18 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 22:18 - INFO - * Model:
2024-11-02 22:18 - INFO - * -----------
2024-11-02 22:18 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 22:18 - INFO - * -----------
2024-11-02 22:26 - INFO - ---------------------------------------------
2024-11-02 22:26 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-02 22:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63085
2024-11-02 22:26 - INFO - 	 Train Loss: 0.206
2024-11-02 22:26 - INFO - 	 Val. Loss: 0.149
2024-11-02 22:26 - INFO - 	 ROC-AUC: 0.935
2024-11-02 22:26 - INFO - 	 PR-AUC: 0.631
2024-11-02 22:26 - INFO - 	 Best Val. Loss: 0.149
2024-11-02 22:26 - INFO - 	 Best ROC-AUC: 0.935
2024-11-02 22:26 - INFO - 	 Best PR-AUC: 0.631
2024-11-02 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-02 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-11-02 22:26 - INFO - ---------------------------------------------
2024-11-02 22:34 - INFO - ---------------------------------------------
2024-11-02 22:34 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 22:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83865
2024-11-02 22:34 - INFO - 	 Train Loss: 0.095
2024-11-02 22:34 - INFO - 	 Val. Loss: 0.084
2024-11-02 22:34 - INFO - 	 ROC-AUC: 0.983
2024-11-02 22:34 - INFO - 	 PR-AUC: 0.839
2024-11-02 22:34 - INFO - 	 Best Val. Loss: 0.084
2024-11-02 22:34 - INFO - 	 Best ROC-AUC: 0.983
2024-11-02 22:34 - INFO - 	 Best PR-AUC: 0.839
2024-11-02 22:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-02 22:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-02 22:34 - INFO - ---------------------------------------------
2024-11-02 22:42 - INFO - ---------------------------------------------
2024-11-02 22:42 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 22:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86314
2024-11-02 22:42 - INFO - 	 Train Loss: 0.079
2024-11-02 22:42 - INFO - 	 Val. Loss: 0.070
2024-11-02 22:42 - INFO - 	 ROC-AUC: 0.984
2024-11-02 22:42 - INFO - 	 PR-AUC: 0.863
2024-11-02 22:42 - INFO - 	 Best Val. Loss: 0.070
2024-11-02 22:42 - INFO - 	 Best ROC-AUC: 0.984
2024-11-02 22:42 - INFO - 	 Best PR-AUC: 0.863
2024-11-02 22:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 22:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-11-02 22:42 - INFO - ---------------------------------------------
2024-11-02 22:50 - INFO - ---------------------------------------------
2024-11-02 22:50 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-02 22:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86874
2024-11-02 22:50 - INFO - 	 Train Loss: 0.073
2024-11-02 22:50 - INFO - 	 Val. Loss: 0.067
2024-11-02 22:50 - INFO - 	 ROC-AUC: 0.986
2024-11-02 22:50 - INFO - 	 PR-AUC: 0.869
2024-11-02 22:50 - INFO - 	 Best Val. Loss: 0.067
2024-11-02 22:50 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 22:50 - INFO - 	 Best PR-AUC: 0.869
2024-11-02 22:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 22:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-02 22:50 - INFO - ---------------------------------------------
2024-11-02 22:58 - INFO - ---------------------------------------------
2024-11-02 22:58 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-02 22:58 - INFO - 	 Train Loss: 0.068
2024-11-02 22:58 - INFO - 	 Val. Loss: 0.069
2024-11-02 22:58 - INFO - 	 ROC-AUC: 0.985
2024-11-02 22:58 - INFO - 	 PR-AUC: 0.856
2024-11-02 22:58 - INFO - 	 Best Val. Loss: 0.067
2024-11-02 22:58 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 22:58 - INFO - 	 Best PR-AUC: 0.869
2024-11-02 22:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 22:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-02 22:58 - INFO - ---------------------------------------------
2024-11-02 23:06 - INFO - ---------------------------------------------
2024-11-02 23:06 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 23:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87137
2024-11-02 23:06 - INFO - 	 Train Loss: 0.065
2024-11-02 23:06 - INFO - 	 Val. Loss: 0.065
2024-11-02 23:06 - INFO - 	 ROC-AUC: 0.987
2024-11-02 23:06 - INFO - 	 PR-AUC: 0.871
2024-11-02 23:06 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 23:06 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 23:06 - INFO - 	 Best PR-AUC: 0.871
2024-11-02 23:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 23:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-02 23:06 - INFO - ---------------------------------------------
2024-11-02 23:14 - INFO - ---------------------------------------------
2024-11-02 23:14 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-02 23:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87918
2024-11-02 23:14 - INFO - 	 Train Loss: 0.062
2024-11-02 23:14 - INFO - 	 Val. Loss: 0.063
2024-11-02 23:14 - INFO - 	 ROC-AUC: 0.987
2024-11-02 23:14 - INFO - 	 PR-AUC: 0.879
2024-11-02 23:14 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 23:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 23:14 - INFO - 	 Best PR-AUC: 0.879
2024-11-02 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-02 23:14 - INFO - ---------------------------------------------
2024-11-02 23:22 - INFO - ---------------------------------------------
2024-11-02 23:22 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 23:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88165
2024-11-02 23:22 - INFO - 	 Train Loss: 0.059
2024-11-02 23:22 - INFO - 	 Val. Loss: 0.062
2024-11-02 23:22 - INFO - 	 ROC-AUC: 0.987
2024-11-02 23:22 - INFO - 	 PR-AUC: 0.882
2024-11-02 23:22 - INFO - 	 Best Val. Loss: 0.062
2024-11-02 23:22 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 23:22 - INFO - 	 Best PR-AUC: 0.882
2024-11-02 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-02 23:22 - INFO - ---------------------------------------------
2024-11-02 23:30 - INFO - ---------------------------------------------
2024-11-02 23:30 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 23:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89208
2024-11-02 23:30 - INFO - 	 Train Loss: 0.057
2024-11-02 23:30 - INFO - 	 Val. Loss: 0.059
2024-11-02 23:30 - INFO - 	 ROC-AUC: 0.988
2024-11-02 23:30 - INFO - 	 PR-AUC: 0.892
2024-11-02 23:30 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 23:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 23:30 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 23:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 23:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-02 23:30 - INFO - ---------------------------------------------
2024-11-02 23:39 - INFO - ---------------------------------------------
2024-11-02 23:39 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 23:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89643
2024-11-02 23:39 - INFO - 	 Train Loss: 0.054
2024-11-02 23:39 - INFO - 	 Val. Loss: 0.063
2024-11-02 23:39 - INFO - 	 ROC-AUC: 0.988
2024-11-02 23:39 - INFO - 	 PR-AUC: 0.896
2024-11-02 23:39 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 23:39 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 23:39 - INFO - 	 Best PR-AUC: 0.896
2024-11-02 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-11-02 23:39 - INFO - ---------------------------------------------
2024-11-02 23:41 - INFO - Fit the preprocessing pipeline
2024-11-02 23:41 - INFO - Training using device: cuda
2024-11-02 23:41 - INFO - Creating generators
2024-11-02 23:41 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 23:41 - INFO - * Model:
2024-11-02 23:41 - INFO - * -----------
2024-11-02 23:41 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 23:41 - INFO - * -----------
2024-11-02 23:49 - INFO - ---------------------------------------------
2024-11-02 23:49 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 23:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66655
2024-11-02 23:49 - INFO - 	 Train Loss: 0.188
2024-11-02 23:49 - INFO - 	 Val. Loss: 0.114
2024-11-02 23:49 - INFO - 	 ROC-AUC: 0.964
2024-11-02 23:49 - INFO - 	 PR-AUC: 0.667
2024-11-02 23:49 - INFO - 	 Best Val. Loss: 0.114
2024-11-02 23:49 - INFO - 	 Best ROC-AUC: 0.964
2024-11-02 23:49 - INFO - 	 Best PR-AUC: 0.667
2024-11-02 23:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-02 23:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.699
2024-11-02 23:49 - INFO - ---------------------------------------------
2024-11-02 23:57 - INFO - ---------------------------------------------
2024-11-02 23:57 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 23:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80901
2024-11-02 23:57 - INFO - 	 Train Loss: 0.097
2024-11-02 23:57 - INFO - 	 Val. Loss: 0.089
2024-11-02 23:57 - INFO - 	 ROC-AUC: 0.980
2024-11-02 23:57 - INFO - 	 PR-AUC: 0.809
2024-11-02 23:57 - INFO - 	 Best Val. Loss: 0.089
2024-11-02 23:57 - INFO - 	 Best ROC-AUC: 0.980
2024-11-02 23:57 - INFO - 	 Best PR-AUC: 0.809
2024-11-02 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-02 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-11-02 23:57 - INFO - ---------------------------------------------
2024-11-03 00:05 - INFO - ---------------------------------------------
2024-11-03 00:05 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 00:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85927
2024-11-03 00:05 - INFO - 	 Train Loss: 0.079
2024-11-03 00:05 - INFO - 	 Val. Loss: 0.070
2024-11-03 00:05 - INFO - 	 ROC-AUC: 0.985
2024-11-03 00:05 - INFO - 	 PR-AUC: 0.859
2024-11-03 00:05 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 00:05 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 00:05 - INFO - 	 Best PR-AUC: 0.859
2024-11-03 00:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 00:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-03 00:05 - INFO - ---------------------------------------------
2024-11-03 00:13 - INFO - ---------------------------------------------
2024-11-03 00:13 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 00:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87853
2024-11-03 00:13 - INFO - 	 Train Loss: 0.072
2024-11-03 00:13 - INFO - 	 Val. Loss: 0.064
2024-11-03 00:13 - INFO - 	 ROC-AUC: 0.986
2024-11-03 00:13 - INFO - 	 PR-AUC: 0.879
2024-11-03 00:13 - INFO - 	 Best Val. Loss: 0.064
2024-11-03 00:13 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 00:13 - INFO - 	 Best PR-AUC: 0.879
2024-11-03 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-03 00:13 - INFO - ---------------------------------------------
2024-11-03 00:21 - INFO - ---------------------------------------------
2024-11-03 00:21 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 00:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88064
2024-11-03 00:21 - INFO - 	 Train Loss: 0.066
2024-11-03 00:21 - INFO - 	 Val. Loss: 0.062
2024-11-03 00:21 - INFO - 	 ROC-AUC: 0.986
2024-11-03 00:21 - INFO - 	 PR-AUC: 0.881
2024-11-03 00:21 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 00:21 - INFO - 	 Best ROC-AUC: 0.986
2024-11-03 00:21 - INFO - 	 Best PR-AUC: 0.881
2024-11-03 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-03 00:21 - INFO - ---------------------------------------------
2024-11-03 00:29 - INFO - ---------------------------------------------
2024-11-03 00:29 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 00:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88807
2024-11-03 00:29 - INFO - 	 Train Loss: 0.061
2024-11-03 00:29 - INFO - 	 Val. Loss: 0.060
2024-11-03 00:29 - INFO - 	 ROC-AUC: 0.988
2024-11-03 00:29 - INFO - 	 PR-AUC: 0.888
2024-11-03 00:29 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 00:29 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 00:29 - INFO - 	 Best PR-AUC: 0.888
2024-11-03 00:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 00:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-03 00:29 - INFO - ---------------------------------------------
2024-11-03 00:37 - INFO - ---------------------------------------------
2024-11-03 00:37 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-03 00:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89075
2024-11-03 00:37 - INFO - 	 Train Loss: 0.058
2024-11-03 00:37 - INFO - 	 Val. Loss: 0.062
2024-11-03 00:37 - INFO - 	 ROC-AUC: 0.987
2024-11-03 00:37 - INFO - 	 PR-AUC: 0.891
2024-11-03 00:37 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 00:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 00:37 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 00:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 00:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-03 00:37 - INFO - ---------------------------------------------
2024-11-03 00:45 - INFO - ---------------------------------------------
2024-11-03 00:45 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 00:45 - INFO - 	 Train Loss: 0.056
2024-11-03 00:45 - INFO - 	 Val. Loss: 0.061
2024-11-03 00:45 - INFO - 	 ROC-AUC: 0.987
2024-11-03 00:45 - INFO - 	 PR-AUC: 0.888
2024-11-03 00:45 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 00:45 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 00:45 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-03 00:45 - INFO - ---------------------------------------------
2024-11-03 00:53 - INFO - ---------------------------------------------
2024-11-03 00:53 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-03 00:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89735
2024-11-03 00:53 - INFO - 	 Train Loss: 0.054
2024-11-03 00:53 - INFO - 	 Val. Loss: 0.058
2024-11-03 00:53 - INFO - 	 ROC-AUC: 0.988
2024-11-03 00:53 - INFO - 	 PR-AUC: 0.897
2024-11-03 00:53 - INFO - 	 Best Val. Loss: 0.058
2024-11-03 00:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 00:53 - INFO - 	 Best PR-AUC: 0.897
2024-11-03 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-03 00:53 - INFO - ---------------------------------------------
2024-11-03 01:01 - INFO - ---------------------------------------------
2024-11-03 01:01 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-03 01:01 - INFO - 	 Train Loss: 0.052
2024-11-03 01:01 - INFO - 	 Val. Loss: 0.059
2024-11-03 01:01 - INFO - 	 ROC-AUC: 0.989
2024-11-03 01:01 - INFO - 	 PR-AUC: 0.896
2024-11-03 01:01 - INFO - 	 Best Val. Loss: 0.058
2024-11-03 01:01 - INFO - 	 Best ROC-AUC: 0.989
2024-11-03 01:01 - INFO - 	 Best PR-AUC: 0.897
2024-11-03 01:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 01:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.903
2024-11-03 01:01 - INFO - ---------------------------------------------
2024-11-03 01:04 - INFO - Fit the preprocessing pipeline
2024-11-03 01:04 - INFO - Training using device: cuda
2024-11-03 01:04 - INFO - Creating generators
2024-11-03 01:04 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 01:04 - INFO - * Model:
2024-11-03 01:04 - INFO - * -----------
2024-11-03 01:04 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 01:04 - INFO - * -----------
2024-11-03 01:12 - INFO - ---------------------------------------------
2024-11-03 01:12 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 01:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65487
2024-11-03 01:12 - INFO - 	 Train Loss: 0.180
2024-11-03 01:12 - INFO - 	 Val. Loss: 0.218
2024-11-03 01:12 - INFO - 	 ROC-AUC: 0.958
2024-11-03 01:12 - INFO - 	 PR-AUC: 0.655
2024-11-03 01:12 - INFO - 	 Best Val. Loss: 0.218
2024-11-03 01:12 - INFO - 	 Best ROC-AUC: 0.958
2024-11-03 01:12 - INFO - 	 Best PR-AUC: 0.655
2024-11-03 01:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-03 01:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.675
2024-11-03 01:12 - INFO - ---------------------------------------------
2024-11-03 01:20 - INFO - ---------------------------------------------
2024-11-03 01:20 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-03 01:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79409
2024-11-03 01:20 - INFO - 	 Train Loss: 0.096
2024-11-03 01:20 - INFO - 	 Val. Loss: 0.095
2024-11-03 01:20 - INFO - 	 ROC-AUC: 0.977
2024-11-03 01:20 - INFO - 	 PR-AUC: 0.794
2024-11-03 01:20 - INFO - 	 Best Val. Loss: 0.095
2024-11-03 01:20 - INFO - 	 Best ROC-AUC: 0.977
2024-11-03 01:20 - INFO - 	 Best PR-AUC: 0.794
2024-11-03 01:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-03 01:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.786
2024-11-03 01:20 - INFO - ---------------------------------------------
2024-11-03 01:28 - INFO - ---------------------------------------------
2024-11-03 01:28 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 01:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83783
2024-11-03 01:28 - INFO - 	 Train Loss: 0.081
2024-11-03 01:28 - INFO - 	 Val. Loss: 0.075
2024-11-03 01:28 - INFO - 	 ROC-AUC: 0.982
2024-11-03 01:28 - INFO - 	 PR-AUC: 0.838
2024-11-03 01:28 - INFO - 	 Best Val. Loss: 0.075
2024-11-03 01:28 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 01:28 - INFO - 	 Best PR-AUC: 0.838
2024-11-03 01:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-03 01:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-03 01:28 - INFO - ---------------------------------------------
2024-11-03 01:36 - INFO - ---------------------------------------------
2024-11-03 01:36 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 01:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85652
2024-11-03 01:36 - INFO - 	 Train Loss: 0.075
2024-11-03 01:36 - INFO - 	 Val. Loss: 0.071
2024-11-03 01:36 - INFO - 	 ROC-AUC: 0.984
2024-11-03 01:36 - INFO - 	 PR-AUC: 0.857
2024-11-03 01:36 - INFO - 	 Best Val. Loss: 0.071
2024-11-03 01:36 - INFO - 	 Best ROC-AUC: 0.984
2024-11-03 01:36 - INFO - 	 Best PR-AUC: 0.857
2024-11-03 01:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 01:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-03 01:36 - INFO - ---------------------------------------------
2024-11-03 01:44 - INFO - ---------------------------------------------
2024-11-03 01:44 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-03 01:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86291
2024-11-03 01:44 - INFO - 	 Train Loss: 0.070
2024-11-03 01:44 - INFO - 	 Val. Loss: 0.070
2024-11-03 01:44 - INFO - 	 ROC-AUC: 0.985
2024-11-03 01:44 - INFO - 	 PR-AUC: 0.863
2024-11-03 01:44 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 01:44 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 01:44 - INFO - 	 Best PR-AUC: 0.863
2024-11-03 01:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-03 01:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-03 01:44 - INFO - ---------------------------------------------
2024-11-03 01:52 - INFO - ---------------------------------------------
2024-11-03 01:52 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-03 01:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88467
2024-11-03 01:52 - INFO - 	 Train Loss: 0.064
2024-11-03 01:52 - INFO - 	 Val. Loss: 0.063
2024-11-03 01:52 - INFO - 	 ROC-AUC: 0.987
2024-11-03 01:52 - INFO - 	 PR-AUC: 0.885
2024-11-03 01:52 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 01:52 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 01:52 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 01:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-03 01:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-03 01:52 - INFO - ---------------------------------------------
2024-11-03 01:00 - INFO - ---------------------------------------------
2024-11-03 01:00 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-03 01:00 - INFO - 	 Train Loss: 0.061
2024-11-03 01:00 - INFO - 	 Val. Loss: 0.063
2024-11-03 01:00 - INFO - 	 ROC-AUC: 0.988
2024-11-03 01:00 - INFO - 	 PR-AUC: 0.883
2024-11-03 01:00 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 01:00 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 01:00 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 01:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 01:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-03 01:00 - INFO - ---------------------------------------------
2024-11-03 01:08 - INFO - ---------------------------------------------
2024-11-03 01:08 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-03 01:08 - INFO - 	 Train Loss: 0.058
2024-11-03 01:08 - INFO - 	 Val. Loss: 0.061
2024-11-03 01:08 - INFO - 	 ROC-AUC: 0.988
2024-11-03 01:08 - INFO - 	 PR-AUC: 0.883
2024-11-03 01:08 - INFO - 	 Best Val. Loss: 0.061
2024-11-03 01:08 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 01:08 - INFO - 	 Best PR-AUC: 0.885
2024-11-03 01:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 01:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-03 01:08 - INFO - ---------------------------------------------
2024-11-03 01:16 - INFO - ---------------------------------------------
2024-11-03 01:16 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-03 01:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8912
2024-11-03 01:16 - INFO - 	 Train Loss: 0.056
2024-11-03 01:16 - INFO - 	 Val. Loss: 0.060
2024-11-03 01:16 - INFO - 	 ROC-AUC: 0.989
2024-11-03 01:16 - INFO - 	 PR-AUC: 0.891
2024-11-03 01:16 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 01:16 - INFO - 	 Best ROC-AUC: 0.989
2024-11-03 01:16 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 01:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 01:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-03 01:16 - INFO - ---------------------------------------------
2024-11-03 01:24 - INFO - ---------------------------------------------
2024-11-03 01:24 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-03 01:24 - INFO - 	 Train Loss: 0.053
2024-11-03 01:24 - INFO - 	 Val. Loss: 0.061
2024-11-03 01:24 - INFO - 	 ROC-AUC: 0.988
2024-11-03 01:24 - INFO - 	 PR-AUC: 0.883
2024-11-03 01:24 - INFO - 	 Best Val. Loss: 0.060
2024-11-03 01:24 - INFO - 	 Best ROC-AUC: 0.989
2024-11-03 01:24 - INFO - 	 Best PR-AUC: 0.891
2024-11-03 01:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 01:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-03 01:24 - INFO - ---------------------------------------------
2024-11-03 01:26 - INFO - Fit the preprocessing pipeline
2024-11-03 01:26 - INFO - Training using device: cuda
2024-11-03 01:26 - INFO - Creating generators
2024-11-03 01:26 - INFO - The model has 2,246,929 trainable parameters
2024-11-03 01:26 - INFO - * Model:
2024-11-03 01:26 - INFO - * -----------
2024-11-03 01:26 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-03 01:26 - INFO - * -----------
2024-11-03 01:34 - INFO - ---------------------------------------------
2024-11-03 01:34 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-03 01:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67526
2024-11-03 01:34 - INFO - 	 Train Loss: 0.193
2024-11-03 01:34 - INFO - 	 Val. Loss: 0.132
2024-11-03 01:34 - INFO - 	 ROC-AUC: 0.959
2024-11-03 01:34 - INFO - 	 PR-AUC: 0.675
2024-11-03 01:34 - INFO - 	 Best Val. Loss: 0.132
2024-11-03 01:34 - INFO - 	 Best ROC-AUC: 0.959
2024-11-03 01:34 - INFO - 	 Best PR-AUC: 0.675
2024-11-03 01:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-03 01:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.691
2024-11-03 01:34 - INFO - ---------------------------------------------
2024-11-03 01:42 - INFO - ---------------------------------------------
2024-11-03 01:42 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-03 01:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83622
2024-11-03 01:42 - INFO - 	 Train Loss: 0.094
2024-11-03 01:42 - INFO - 	 Val. Loss: 0.076
2024-11-03 01:42 - INFO - 	 ROC-AUC: 0.982
2024-11-03 01:42 - INFO - 	 PR-AUC: 0.836
2024-11-03 01:42 - INFO - 	 Best Val. Loss: 0.076
2024-11-03 01:42 - INFO - 	 Best ROC-AUC: 0.982
2024-11-03 01:42 - INFO - 	 Best PR-AUC: 0.836
2024-11-03 01:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-03 01:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-11-03 01:42 - INFO - ---------------------------------------------
2024-11-03 01:50 - INFO - ---------------------------------------------
2024-11-03 01:50 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-03 01:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84793
2024-11-03 01:50 - INFO - 	 Train Loss: 0.079
2024-11-03 01:50 - INFO - 	 Val. Loss: 0.072
2024-11-03 01:50 - INFO - 	 ROC-AUC: 0.983
2024-11-03 01:50 - INFO - 	 PR-AUC: 0.848
2024-11-03 01:50 - INFO - 	 Best Val. Loss: 0.072
2024-11-03 01:50 - INFO - 	 Best ROC-AUC: 0.983
2024-11-03 01:50 - INFO - 	 Best PR-AUC: 0.848
2024-11-03 01:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-03 01:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-03 01:50 - INFO - ---------------------------------------------
2024-11-03 01:58 - INFO - ---------------------------------------------
2024-11-03 01:58 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-03 01:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86107
2024-11-03 01:58 - INFO - 	 Train Loss: 0.073
2024-11-03 01:58 - INFO - 	 Val. Loss: 0.070
2024-11-03 01:58 - INFO - 	 ROC-AUC: 0.985
2024-11-03 01:58 - INFO - 	 PR-AUC: 0.861
2024-11-03 01:58 - INFO - 	 Best Val. Loss: 0.070
2024-11-03 01:58 - INFO - 	 Best ROC-AUC: 0.985
2024-11-03 01:58 - INFO - 	 Best PR-AUC: 0.861
2024-11-03 01:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 01:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-03 01:58 - INFO - ---------------------------------------------
2024-11-03 02:06 - INFO - ---------------------------------------------
2024-11-03 02:06 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-03 02:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87385
2024-11-03 02:06 - INFO - 	 Train Loss: 0.069
2024-11-03 02:06 - INFO - 	 Val. Loss: 0.066
2024-11-03 02:06 - INFO - 	 ROC-AUC: 0.987
2024-11-03 02:06 - INFO - 	 PR-AUC: 0.874
2024-11-03 02:06 - INFO - 	 Best Val. Loss: 0.066
2024-11-03 02:06 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 02:06 - INFO - 	 Best PR-AUC: 0.874
2024-11-03 02:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 02:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-03 02:06 - INFO - ---------------------------------------------
2024-11-03 02:14 - INFO - ---------------------------------------------
2024-11-03 02:14 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-03 02:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88095
2024-11-03 02:14 - INFO - 	 Train Loss: 0.064
2024-11-03 02:14 - INFO - 	 Val. Loss: 0.063
2024-11-03 02:14 - INFO - 	 ROC-AUC: 0.986
2024-11-03 02:14 - INFO - 	 PR-AUC: 0.881
2024-11-03 02:14 - INFO - 	 Best Val. Loss: 0.063
2024-11-03 02:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 02:14 - INFO - 	 Best PR-AUC: 0.881
2024-11-03 02:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-03 02:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-03 02:14 - INFO - ---------------------------------------------
2024-11-03 02:22 - INFO - ---------------------------------------------
2024-11-03 02:22 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-03 02:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88377
2024-11-03 02:22 - INFO - 	 Train Loss: 0.061
2024-11-03 02:22 - INFO - 	 Val. Loss: 0.062
2024-11-03 02:22 - INFO - 	 ROC-AUC: 0.987
2024-11-03 02:22 - INFO - 	 PR-AUC: 0.884
2024-11-03 02:22 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 02:22 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 02:22 - INFO - 	 Best PR-AUC: 0.884
2024-11-03 02:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 02:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-03 02:22 - INFO - ---------------------------------------------
2024-11-03 02:30 - INFO - ---------------------------------------------
2024-11-03 02:30 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-03 02:30 - INFO - 	 Train Loss: 0.058
2024-11-03 02:30 - INFO - 	 Val. Loss: 0.063
2024-11-03 02:30 - INFO - 	 ROC-AUC: 0.987
2024-11-03 02:30 - INFO - 	 PR-AUC: 0.882
2024-11-03 02:30 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 02:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 02:30 - INFO - 	 Best PR-AUC: 0.884
2024-11-03 02:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 02:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-03 02:30 - INFO - ---------------------------------------------
2024-11-03 02:38 - INFO - ---------------------------------------------
2024-11-03 02:38 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-03 02:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88628
2024-11-03 02:38 - INFO - 	 Train Loss: 0.055
2024-11-03 02:38 - INFO - 	 Val. Loss: 0.064
2024-11-03 02:38 - INFO - 	 ROC-AUC: 0.987
2024-11-03 02:38 - INFO - 	 PR-AUC: 0.886
2024-11-03 02:38 - INFO - 	 Best Val. Loss: 0.062
2024-11-03 02:38 - INFO - 	 Best ROC-AUC: 0.987
2024-11-03 02:38 - INFO - 	 Best PR-AUC: 0.886
2024-11-03 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-03 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-11-03 02:38 - INFO - ---------------------------------------------
2024-11-03 02:46 - INFO - ---------------------------------------------
2024-11-03 02:46 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-03 02:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89225
2024-11-03 02:46 - INFO - 	 Train Loss: 0.054
2024-11-03 02:46 - INFO - 	 Val. Loss: 0.061
2024-11-03 02:46 - INFO - 	 ROC-AUC: 0.988
2024-11-03 02:46 - INFO - 	 PR-AUC: 0.892
2024-11-03 02:46 - INFO - 	 Best Val. Loss: 0.061
2024-11-03 02:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-03 02:46 - INFO - 	 Best PR-AUC: 0.892
2024-11-03 02:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-03 02:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-11-03 02:46 - INFO - ---------------------------------------------
