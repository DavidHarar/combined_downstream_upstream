2024-11-13 05:20 - INFO - Fit the preprocessing pipeline
2024-11-13 05:20 - INFO - Training using device: cuda
2024-11-13 05:20 - INFO - Creating generators
2024-11-13 05:20 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 05:20 - INFO - * Model:
2024-11-13 05:20 - INFO - * -----------
2024-11-13 05:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 05:20 - INFO - * -----------
2024-11-13 05:27 - INFO - ---------------------------------------------
2024-11-13 05:27 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-13 05:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34652
2024-11-13 05:27 - INFO - 	 Train Loss: 0.152
2024-11-13 05:27 - INFO - 	 Val. Loss: 0.166
2024-11-13 05:27 - INFO - 	 ROC-AUC: 0.854
2024-11-13 05:27 - INFO - 	 PR-AUC: 0.347
2024-11-13 05:27 - INFO - 	 Best Val. Loss: 0.166
2024-11-13 05:27 - INFO - 	 Best ROC-AUC: 0.854
2024-11-13 05:27 - INFO - 	 Best PR-AUC: 0.347
2024-11-13 05:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.769
2024-11-13 05:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-13 05:27 - INFO - ---------------------------------------------
2024-11-13 05:34 - INFO - ---------------------------------------------
2024-11-13 05:34 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-13 05:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38667
2024-11-13 05:34 - INFO - 	 Train Loss: 0.146
2024-11-13 05:34 - INFO - 	 Val. Loss: 0.163
2024-11-13 05:34 - INFO - 	 ROC-AUC: 0.876
2024-11-13 05:34 - INFO - 	 PR-AUC: 0.387
2024-11-13 05:34 - INFO - 	 Best Val. Loss: 0.163
2024-11-13 05:34 - INFO - 	 Best ROC-AUC: 0.876
2024-11-13 05:34 - INFO - 	 Best PR-AUC: 0.387
2024-11-13 05:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-13 05:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-13 05:34 - INFO - ---------------------------------------------
2024-11-13 05:41 - INFO - ---------------------------------------------
2024-11-13 05:41 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-13 05:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45384
2024-11-13 05:41 - INFO - 	 Train Loss: 0.131
2024-11-13 05:41 - INFO - 	 Val. Loss: 0.155
2024-11-13 05:41 - INFO - 	 ROC-AUC: 0.943
2024-11-13 05:41 - INFO - 	 PR-AUC: 0.454
2024-11-13 05:41 - INFO - 	 Best Val. Loss: 0.155
2024-11-13 05:41 - INFO - 	 Best ROC-AUC: 0.943
2024-11-13 05:41 - INFO - 	 Best PR-AUC: 0.454
2024-11-13 05:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.869
2024-11-13 05:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.235
2024-11-13 05:41 - INFO - ---------------------------------------------
2024-11-13 05:48 - INFO - ---------------------------------------------
2024-11-13 05:48 - INFO - Epoch: 04 | Time: 7m 5s
2024-11-13 05:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5191
2024-11-13 05:48 - INFO - 	 Train Loss: 0.115
2024-11-13 05:48 - INFO - 	 Val. Loss: 0.139
2024-11-13 05:48 - INFO - 	 ROC-AUC: 0.957
2024-11-13 05:48 - INFO - 	 PR-AUC: 0.519
2024-11-13 05:48 - INFO - 	 Best Val. Loss: 0.139
2024-11-13 05:48 - INFO - 	 Best ROC-AUC: 0.957
2024-11-13 05:48 - INFO - 	 Best PR-AUC: 0.519
2024-11-13 05:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-13 05:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.273
2024-11-13 05:48 - INFO - ---------------------------------------------
2024-11-13 05:55 - INFO - ---------------------------------------------
2024-11-13 05:55 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 05:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5367
2024-11-13 05:55 - INFO - 	 Train Loss: 0.108
2024-11-13 05:55 - INFO - 	 Val. Loss: 0.124
2024-11-13 05:55 - INFO - 	 ROC-AUC: 0.960
2024-11-13 05:55 - INFO - 	 PR-AUC: 0.537
2024-11-13 05:55 - INFO - 	 Best Val. Loss: 0.124
2024-11-13 05:55 - INFO - 	 Best ROC-AUC: 0.960
2024-11-13 05:55 - INFO - 	 Best PR-AUC: 0.537
2024-11-13 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-13 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.349
2024-11-13 05:55 - INFO - ---------------------------------------------
2024-11-13 06:03 - INFO - ---------------------------------------------
2024-11-13 06:03 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-13 06:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68561
2024-11-13 06:03 - INFO - 	 Train Loss: 0.104
2024-11-13 06:03 - INFO - 	 Val. Loss: 0.093
2024-11-13 06:03 - INFO - 	 ROC-AUC: 0.967
2024-11-13 06:03 - INFO - 	 PR-AUC: 0.686
2024-11-13 06:03 - INFO - 	 Best Val. Loss: 0.093
2024-11-13 06:03 - INFO - 	 Best ROC-AUC: 0.967
2024-11-13 06:03 - INFO - 	 Best PR-AUC: 0.686
2024-11-13 06:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-11-13 06:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-13 06:03 - INFO - ---------------------------------------------
2024-11-13 06:10 - INFO - ---------------------------------------------
2024-11-13 06:10 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 06:10 - INFO - 	 Train Loss: 0.103
2024-11-13 06:10 - INFO - 	 Val. Loss: 0.089
2024-11-13 06:10 - INFO - 	 ROC-AUC: 0.972
2024-11-13 06:10 - INFO - 	 PR-AUC: 0.632
2024-11-13 06:10 - INFO - 	 Best Val. Loss: 0.089
2024-11-13 06:10 - INFO - 	 Best ROC-AUC: 0.972
2024-11-13 06:10 - INFO - 	 Best PR-AUC: 0.686
2024-11-13 06:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 06:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-13 06:10 - INFO - ---------------------------------------------
2024-11-13 06:17 - INFO - ---------------------------------------------
2024-11-13 06:17 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-13 06:17 - INFO - 	 Train Loss: 0.102
2024-11-13 06:17 - INFO - 	 Val. Loss: 0.089
2024-11-13 06:17 - INFO - 	 ROC-AUC: 0.967
2024-11-13 06:17 - INFO - 	 PR-AUC: 0.658
2024-11-13 06:17 - INFO - 	 Best Val. Loss: 0.089
2024-11-13 06:17 - INFO - 	 Best ROC-AUC: 0.972
2024-11-13 06:17 - INFO - 	 Best PR-AUC: 0.686
2024-11-13 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-13 06:17 - INFO - ---------------------------------------------
2024-11-13 06:24 - INFO - ---------------------------------------------
2024-11-13 06:24 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 06:24 - INFO - 	 Train Loss: 0.100
2024-11-13 06:24 - INFO - 	 Val. Loss: 0.090
2024-11-13 06:24 - INFO - 	 ROC-AUC: 0.970
2024-11-13 06:24 - INFO - 	 PR-AUC: 0.584
2024-11-13 06:24 - INFO - 	 Best Val. Loss: 0.089
2024-11-13 06:24 - INFO - 	 Best ROC-AUC: 0.972
2024-11-13 06:24 - INFO - 	 Best PR-AUC: 0.686
2024-11-13 06:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 06:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-13 06:24 - INFO - ---------------------------------------------
2024-11-13 06:33 - INFO - Fit the preprocessing pipeline
2024-11-13 06:33 - INFO - Training using device: cuda
2024-11-13 06:33 - INFO - Creating generators
2024-11-13 06:33 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 06:33 - INFO - * Model:
2024-11-13 06:33 - INFO - * -----------
2024-11-13 06:33 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 06:33 - INFO - * -----------
2024-11-13 06:40 - INFO - ---------------------------------------------
2024-11-13 06:40 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-13 06:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31045
2024-11-13 06:40 - INFO - 	 Train Loss: 0.151
2024-11-13 06:40 - INFO - 	 Val. Loss: 0.162
2024-11-13 06:40 - INFO - 	 ROC-AUC: 0.857
2024-11-13 06:40 - INFO - 	 PR-AUC: 0.310
2024-11-13 06:40 - INFO - 	 Best Val. Loss: 0.162
2024-11-13 06:40 - INFO - 	 Best ROC-AUC: 0.857
2024-11-13 06:40 - INFO - 	 Best PR-AUC: 0.310
2024-11-13 06:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-13 06:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.148
2024-11-13 06:40 - INFO - ---------------------------------------------
2024-11-13 06:47 - INFO - ---------------------------------------------
2024-11-13 06:47 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-13 06:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43242
2024-11-13 06:47 - INFO - 	 Train Loss: 0.145
2024-11-13 06:47 - INFO - 	 Val. Loss: 0.165
2024-11-13 06:47 - INFO - 	 ROC-AUC: 0.909
2024-11-13 06:47 - INFO - 	 PR-AUC: 0.432
2024-11-13 06:47 - INFO - 	 Best Val. Loss: 0.162
2024-11-13 06:47 - INFO - 	 Best ROC-AUC: 0.909
2024-11-13 06:47 - INFO - 	 Best PR-AUC: 0.432
2024-11-13 06:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.817
2024-11-13 06:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-13 06:47 - INFO - ---------------------------------------------
2024-11-13 06:54 - INFO - ---------------------------------------------
2024-11-13 06:54 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-13 06:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49832
2024-11-13 06:54 - INFO - 	 Train Loss: 0.132
2024-11-13 06:54 - INFO - 	 Val. Loss: 0.146
2024-11-13 06:54 - INFO - 	 ROC-AUC: 0.941
2024-11-13 06:54 - INFO - 	 PR-AUC: 0.498
2024-11-13 06:54 - INFO - 	 Best Val. Loss: 0.146
2024-11-13 06:54 - INFO - 	 Best ROC-AUC: 0.941
2024-11-13 06:54 - INFO - 	 Best PR-AUC: 0.498
2024-11-13 06:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.890
2024-11-13 06:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.249
2024-11-13 06:54 - INFO - ---------------------------------------------
2024-11-13 07:01 - INFO - ---------------------------------------------
2024-11-13 07:01 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-13 07:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6116
2024-11-13 07:01 - INFO - 	 Train Loss: 0.116
2024-11-13 07:01 - INFO - 	 Val. Loss: 0.119
2024-11-13 07:01 - INFO - 	 ROC-AUC: 0.965
2024-11-13 07:01 - INFO - 	 PR-AUC: 0.612
2024-11-13 07:01 - INFO - 	 Best Val. Loss: 0.119
2024-11-13 07:01 - INFO - 	 Best ROC-AUC: 0.965
2024-11-13 07:01 - INFO - 	 Best PR-AUC: 0.612
2024-11-13 07:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-13 07:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.361
2024-11-13 07:01 - INFO - ---------------------------------------------
2024-11-13 07:08 - INFO - ---------------------------------------------
2024-11-13 07:08 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 07:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64814
2024-11-13 07:08 - INFO - 	 Train Loss: 0.108
2024-11-13 07:08 - INFO - 	 Val. Loss: 0.102
2024-11-13 07:08 - INFO - 	 ROC-AUC: 0.971
2024-11-13 07:08 - INFO - 	 PR-AUC: 0.648
2024-11-13 07:08 - INFO - 	 Best Val. Loss: 0.102
2024-11-13 07:08 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 07:08 - INFO - 	 Best PR-AUC: 0.648
2024-11-13 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-13 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-11-13 07:08 - INFO - ---------------------------------------------
2024-11-13 07:15 - INFO - ---------------------------------------------
2024-11-13 07:15 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-13 07:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68888
2024-11-13 07:15 - INFO - 	 Train Loss: 0.109
2024-11-13 07:15 - INFO - 	 Val. Loss: 0.088
2024-11-13 07:15 - INFO - 	 ROC-AUC: 0.963
2024-11-13 07:15 - INFO - 	 PR-AUC: 0.689
2024-11-13 07:15 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 07:15 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 07:15 - INFO - 	 Best PR-AUC: 0.689
2024-11-13 07:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-13 07:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.411
2024-11-13 07:15 - INFO - ---------------------------------------------
2024-11-13 07:23 - INFO - ---------------------------------------------
2024-11-13 07:23 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-13 07:23 - INFO - 	 Train Loss: 0.101
2024-11-13 07:23 - INFO - 	 Val. Loss: 0.089
2024-11-13 07:23 - INFO - 	 ROC-AUC: 0.967
2024-11-13 07:23 - INFO - 	 PR-AUC: 0.688
2024-11-13 07:23 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 07:23 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 07:23 - INFO - 	 Best PR-AUC: 0.689
2024-11-13 07:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-13 07:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.411
2024-11-13 07:23 - INFO - ---------------------------------------------
2024-11-13 07:30 - INFO - ---------------------------------------------
2024-11-13 07:30 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-13 07:30 - INFO - 	 Train Loss: 0.100
2024-11-13 07:30 - INFO - 	 Val. Loss: 0.106
2024-11-13 07:30 - INFO - 	 ROC-AUC: 0.971
2024-11-13 07:30 - INFO - 	 PR-AUC: 0.664
2024-11-13 07:30 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 07:30 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 07:30 - INFO - 	 Best PR-AUC: 0.689
2024-11-13 07:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 07:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.411
2024-11-13 07:30 - INFO - ---------------------------------------------
2024-11-13 07:37 - INFO - ---------------------------------------------
2024-11-13 07:37 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-13 07:37 - INFO - 	 Train Loss: 0.098
2024-11-13 07:37 - INFO - 	 Val. Loss: 0.097
2024-11-13 07:37 - INFO - 	 ROC-AUC: 0.958
2024-11-13 07:37 - INFO - 	 PR-AUC: 0.640
2024-11-13 07:37 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 07:37 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 07:37 - INFO - 	 Best PR-AUC: 0.689
2024-11-13 07:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 07:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.411
2024-11-13 07:37 - INFO - ---------------------------------------------
2024-11-13 07:44 - INFO - ---------------------------------------------
2024-11-13 07:44 - INFO - Epoch: 10 | Time: 7m 6s
2024-11-13 07:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70466
2024-11-13 07:44 - INFO - 	 Train Loss: 0.099
2024-11-13 07:44 - INFO - 	 Val. Loss: 0.081
2024-11-13 07:44 - INFO - 	 ROC-AUC: 0.976
2024-11-13 07:44 - INFO - 	 PR-AUC: 0.705
2024-11-13 07:44 - INFO - 	 Best Val. Loss: 0.081
2024-11-13 07:44 - INFO - 	 Best ROC-AUC: 0.976
2024-11-13 07:44 - INFO - 	 Best PR-AUC: 0.705
2024-11-13 07:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-13 07:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.554
2024-11-13 07:44 - INFO - ---------------------------------------------
2024-11-13 07:46 - INFO - Fit the preprocessing pipeline
2024-11-13 07:46 - INFO - Training using device: cuda
2024-11-13 07:46 - INFO - Creating generators
2024-11-13 07:46 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 07:46 - INFO - * Model:
2024-11-13 07:46 - INFO - * -----------
2024-11-13 07:46 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 07:46 - INFO - * -----------
2024-11-13 07:53 - INFO - ---------------------------------------------
2024-11-13 07:53 - INFO - Epoch: 01 | Time: 7m 5s
2024-11-13 07:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32958
2024-11-13 07:53 - INFO - 	 Train Loss: 0.151
2024-11-13 07:53 - INFO - 	 Val. Loss: 0.167
2024-11-13 07:53 - INFO - 	 ROC-AUC: 0.858
2024-11-13 07:53 - INFO - 	 PR-AUC: 0.330
2024-11-13 07:53 - INFO - 	 Best Val. Loss: 0.167
2024-11-13 07:53 - INFO - 	 Best ROC-AUC: 0.858
2024-11-13 07:53 - INFO - 	 Best PR-AUC: 0.330
2024-11-13 07:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-13 07:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-13 07:53 - INFO - ---------------------------------------------
2024-11-13 08:00 - INFO - ---------------------------------------------
2024-11-13 08:00 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-13 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39321
2024-11-13 08:00 - INFO - 	 Train Loss: 0.145
2024-11-13 08:00 - INFO - 	 Val. Loss: 0.150
2024-11-13 08:00 - INFO - 	 ROC-AUC: 0.904
2024-11-13 08:00 - INFO - 	 PR-AUC: 0.393
2024-11-13 08:00 - INFO - 	 Best Val. Loss: 0.150
2024-11-13 08:00 - INFO - 	 Best ROC-AUC: 0.904
2024-11-13 08:00 - INFO - 	 Best PR-AUC: 0.393
2024-11-13 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.795
2024-11-13 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-13 08:00 - INFO - ---------------------------------------------
2024-11-13 08:07 - INFO - ---------------------------------------------
2024-11-13 08:07 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-13 08:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53294
2024-11-13 08:07 - INFO - 	 Train Loss: 0.131
2024-11-13 08:07 - INFO - 	 Val. Loss: 0.132
2024-11-13 08:07 - INFO - 	 ROC-AUC: 0.936
2024-11-13 08:07 - INFO - 	 PR-AUC: 0.533
2024-11-13 08:07 - INFO - 	 Best Val. Loss: 0.132
2024-11-13 08:07 - INFO - 	 Best ROC-AUC: 0.936
2024-11-13 08:07 - INFO - 	 Best PR-AUC: 0.533
2024-11-13 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.914
2024-11-13 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.309
2024-11-13 08:07 - INFO - ---------------------------------------------
2024-11-13 08:14 - INFO - ---------------------------------------------
2024-11-13 08:14 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-13 08:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56285
2024-11-13 08:14 - INFO - 	 Train Loss: 0.117
2024-11-13 08:14 - INFO - 	 Val. Loss: 0.136
2024-11-13 08:14 - INFO - 	 ROC-AUC: 0.965
2024-11-13 08:14 - INFO - 	 PR-AUC: 0.563
2024-11-13 08:14 - INFO - 	 Best Val. Loss: 0.132
2024-11-13 08:14 - INFO - 	 Best ROC-AUC: 0.965
2024-11-13 08:14 - INFO - 	 Best PR-AUC: 0.563
2024-11-13 08:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-13 08:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-13 08:14 - INFO - ---------------------------------------------
2024-11-13 08:21 - INFO - ---------------------------------------------
2024-11-13 08:21 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-13 08:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59005
2024-11-13 08:21 - INFO - 	 Train Loss: 0.109
2024-11-13 08:21 - INFO - 	 Val. Loss: 0.130
2024-11-13 08:21 - INFO - 	 ROC-AUC: 0.969
2024-11-13 08:21 - INFO - 	 PR-AUC: 0.590
2024-11-13 08:21 - INFO - 	 Best Val. Loss: 0.130
2024-11-13 08:21 - INFO - 	 Best ROC-AUC: 0.969
2024-11-13 08:21 - INFO - 	 Best PR-AUC: 0.590
2024-11-13 08:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-13 08:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.362
2024-11-13 08:21 - INFO - ---------------------------------------------
2024-11-13 08:28 - INFO - ---------------------------------------------
2024-11-13 08:28 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-13 08:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63397
2024-11-13 08:28 - INFO - 	 Train Loss: 0.106
2024-11-13 08:28 - INFO - 	 Val. Loss: 0.111
2024-11-13 08:28 - INFO - 	 ROC-AUC: 0.967
2024-11-13 08:28 - INFO - 	 PR-AUC: 0.634
2024-11-13 08:28 - INFO - 	 Best Val. Loss: 0.111
2024-11-13 08:28 - INFO - 	 Best ROC-AUC: 0.969
2024-11-13 08:28 - INFO - 	 Best PR-AUC: 0.634
2024-11-13 08:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-13 08:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.412
2024-11-13 08:28 - INFO - ---------------------------------------------
2024-11-13 08:35 - INFO - ---------------------------------------------
2024-11-13 08:35 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 08:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6646
2024-11-13 08:35 - INFO - 	 Train Loss: 0.102
2024-11-13 08:35 - INFO - 	 Val. Loss: 0.156
2024-11-13 08:35 - INFO - 	 ROC-AUC: 0.968
2024-11-13 08:35 - INFO - 	 PR-AUC: 0.665
2024-11-13 08:35 - INFO - 	 Best Val. Loss: 0.111
2024-11-13 08:35 - INFO - 	 Best ROC-AUC: 0.969
2024-11-13 08:35 - INFO - 	 Best PR-AUC: 0.665
2024-11-13 08:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-13 08:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-11-13 08:35 - INFO - ---------------------------------------------
2024-11-13 08:43 - INFO - ---------------------------------------------
2024-11-13 08:43 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-13 08:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69803
2024-11-13 08:43 - INFO - 	 Train Loss: 0.099
2024-11-13 08:43 - INFO - 	 Val. Loss: 0.102
2024-11-13 08:43 - INFO - 	 ROC-AUC: 0.952
2024-11-13 08:43 - INFO - 	 PR-AUC: 0.698
2024-11-13 08:43 - INFO - 	 Best Val. Loss: 0.102
2024-11-13 08:43 - INFO - 	 Best ROC-AUC: 0.969
2024-11-13 08:43 - INFO - 	 Best PR-AUC: 0.698
2024-11-13 08:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-13 08:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.411
2024-11-13 08:43 - INFO - ---------------------------------------------
2024-11-13 08:50 - INFO - ---------------------------------------------
2024-11-13 08:50 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 08:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75859
2024-11-13 08:50 - INFO - 	 Train Loss: 0.099
2024-11-13 08:50 - INFO - 	 Val. Loss: 0.088
2024-11-13 08:50 - INFO - 	 ROC-AUC: 0.974
2024-11-13 08:50 - INFO - 	 PR-AUC: 0.759
2024-11-13 08:50 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 08:50 - INFO - 	 Best ROC-AUC: 0.974
2024-11-13 08:50 - INFO - 	 Best PR-AUC: 0.759
2024-11-13 08:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-13 08:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.483
2024-11-13 08:50 - INFO - ---------------------------------------------
2024-11-13 08:57 - INFO - ---------------------------------------------
2024-11-13 08:57 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 08:57 - INFO - 	 Train Loss: 0.097
2024-11-13 08:57 - INFO - 	 Val. Loss: 0.097
2024-11-13 08:57 - INFO - 	 ROC-AUC: 0.963
2024-11-13 08:57 - INFO - 	 PR-AUC: 0.662
2024-11-13 08:57 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 08:57 - INFO - 	 Best ROC-AUC: 0.974
2024-11-13 08:57 - INFO - 	 Best PR-AUC: 0.759
2024-11-13 08:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-13 08:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.483
2024-11-13 08:57 - INFO - ---------------------------------------------
2024-11-13 08:58 - INFO - Fit the preprocessing pipeline
2024-11-13 08:58 - INFO - Training using device: cuda
2024-11-13 08:58 - INFO - Creating generators
2024-11-13 08:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 08:58 - INFO - * Model:
2024-11-13 08:58 - INFO - * -----------
2024-11-13 08:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 08:58 - INFO - * -----------
2024-11-13 09:06 - INFO - ---------------------------------------------
2024-11-13 09:06 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-13 09:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33962
2024-11-13 09:06 - INFO - 	 Train Loss: 0.152
2024-11-13 09:06 - INFO - 	 Val. Loss: 0.162
2024-11-13 09:06 - INFO - 	 ROC-AUC: 0.860
2024-11-13 09:06 - INFO - 	 PR-AUC: 0.340
2024-11-13 09:06 - INFO - 	 Best Val. Loss: 0.162
2024-11-13 09:06 - INFO - 	 Best ROC-AUC: 0.860
2024-11-13 09:06 - INFO - 	 Best PR-AUC: 0.340
2024-11-13 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.782
2024-11-13 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-13 09:06 - INFO - ---------------------------------------------
2024-11-13 09:13 - INFO - ---------------------------------------------
2024-11-13 09:13 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-13 09:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38673
2024-11-13 09:13 - INFO - 	 Train Loss: 0.145
2024-11-13 09:13 - INFO - 	 Val. Loss: 0.169
2024-11-13 09:13 - INFO - 	 ROC-AUC: 0.899
2024-11-13 09:13 - INFO - 	 PR-AUC: 0.387
2024-11-13 09:13 - INFO - 	 Best Val. Loss: 0.162
2024-11-13 09:13 - INFO - 	 Best ROC-AUC: 0.899
2024-11-13 09:13 - INFO - 	 Best PR-AUC: 0.387
2024-11-13 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-13 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.187
2024-11-13 09:13 - INFO - ---------------------------------------------
2024-11-13 09:20 - INFO - ---------------------------------------------
2024-11-13 09:20 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-13 09:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46331
2024-11-13 09:20 - INFO - 	 Train Loss: 0.131
2024-11-13 09:20 - INFO - 	 Val. Loss: 0.165
2024-11-13 09:20 - INFO - 	 ROC-AUC: 0.926
2024-11-13 09:20 - INFO - 	 PR-AUC: 0.463
2024-11-13 09:20 - INFO - 	 Best Val. Loss: 0.162
2024-11-13 09:20 - INFO - 	 Best ROC-AUC: 0.926
2024-11-13 09:20 - INFO - 	 Best PR-AUC: 0.463
2024-11-13 09:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.873
2024-11-13 09:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.229
2024-11-13 09:20 - INFO - ---------------------------------------------
2024-11-13 09:27 - INFO - ---------------------------------------------
2024-11-13 09:27 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-13 09:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51875
2024-11-13 09:27 - INFO - 	 Train Loss: 0.116
2024-11-13 09:27 - INFO - 	 Val. Loss: 0.129
2024-11-13 09:27 - INFO - 	 ROC-AUC: 0.946
2024-11-13 09:27 - INFO - 	 PR-AUC: 0.519
2024-11-13 09:27 - INFO - 	 Best Val. Loss: 0.129
2024-11-13 09:27 - INFO - 	 Best ROC-AUC: 0.946
2024-11-13 09:27 - INFO - 	 Best PR-AUC: 0.519
2024-11-13 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-13 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.303
2024-11-13 09:27 - INFO - ---------------------------------------------
2024-11-13 09:34 - INFO - ---------------------------------------------
2024-11-13 09:34 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-13 09:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65446
2024-11-13 09:34 - INFO - 	 Train Loss: 0.113
2024-11-13 09:34 - INFO - 	 Val. Loss: 0.107
2024-11-13 09:34 - INFO - 	 ROC-AUC: 0.975
2024-11-13 09:34 - INFO - 	 PR-AUC: 0.654
2024-11-13 09:34 - INFO - 	 Best Val. Loss: 0.107
2024-11-13 09:34 - INFO - 	 Best ROC-AUC: 0.975
2024-11-13 09:34 - INFO - 	 Best PR-AUC: 0.654
2024-11-13 09:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 09:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-11-13 09:34 - INFO - ---------------------------------------------
2024-11-13 09:41 - INFO - ---------------------------------------------
2024-11-13 09:41 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-13 09:41 - INFO - 	 Train Loss: 0.105
2024-11-13 09:41 - INFO - 	 Val. Loss: 0.134
2024-11-13 09:41 - INFO - 	 ROC-AUC: 0.965
2024-11-13 09:41 - INFO - 	 PR-AUC: 0.597
2024-11-13 09:41 - INFO - 	 Best Val. Loss: 0.107
2024-11-13 09:41 - INFO - 	 Best ROC-AUC: 0.975
2024-11-13 09:41 - INFO - 	 Best PR-AUC: 0.654
2024-11-13 09:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 09:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-11-13 09:41 - INFO - ---------------------------------------------
2024-11-13 09:48 - INFO - ---------------------------------------------
2024-11-13 09:48 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 09:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73123
2024-11-13 09:48 - INFO - 	 Train Loss: 0.106
2024-11-13 09:48 - INFO - 	 Val. Loss: 0.088
2024-11-13 09:48 - INFO - 	 ROC-AUC: 0.978
2024-11-13 09:48 - INFO - 	 PR-AUC: 0.731
2024-11-13 09:48 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 09:48 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 09:48 - INFO - 	 Best PR-AUC: 0.731
2024-11-13 09:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-13 09:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.487
2024-11-13 09:48 - INFO - ---------------------------------------------
2024-11-13 09:55 - INFO - ---------------------------------------------
2024-11-13 09:55 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-13 09:55 - INFO - 	 Train Loss: 0.102
2024-11-13 09:55 - INFO - 	 Val. Loss: 0.094
2024-11-13 09:55 - INFO - 	 ROC-AUC: 0.978
2024-11-13 09:55 - INFO - 	 PR-AUC: 0.665
2024-11-13 09:55 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 09:55 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 09:55 - INFO - 	 Best PR-AUC: 0.731
2024-11-13 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-13 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.487
2024-11-13 09:55 - INFO - ---------------------------------------------
2024-11-13 10:03 - INFO - ---------------------------------------------
2024-11-13 10:03 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 10:03 - INFO - 	 Train Loss: 0.100
2024-11-13 10:03 - INFO - 	 Val. Loss: 0.100
2024-11-13 10:03 - INFO - 	 ROC-AUC: 0.962
2024-11-13 10:03 - INFO - 	 PR-AUC: 0.678
2024-11-13 10:03 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 10:03 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 10:03 - INFO - 	 Best PR-AUC: 0.731
2024-11-13 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-13 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.487
2024-11-13 10:03 - INFO - ---------------------------------------------
2024-11-13 10:10 - INFO - ---------------------------------------------
2024-11-13 10:10 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 10:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73999
2024-11-13 10:10 - INFO - 	 Train Loss: 0.101
2024-11-13 10:10 - INFO - 	 Val. Loss: 0.086
2024-11-13 10:10 - INFO - 	 ROC-AUC: 0.973
2024-11-13 10:10 - INFO - 	 PR-AUC: 0.740
2024-11-13 10:10 - INFO - 	 Best Val. Loss: 0.086
2024-11-13 10:10 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 10:10 - INFO - 	 Best PR-AUC: 0.740
2024-11-13 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-13 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.547
2024-11-13 10:10 - INFO - ---------------------------------------------
2024-11-13 10:11 - INFO - Fit the preprocessing pipeline
2024-11-13 10:11 - INFO - Training using device: cuda
2024-11-13 10:11 - INFO - Creating generators
2024-11-13 10:11 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 10:11 - INFO - * Model:
2024-11-13 10:11 - INFO - * -----------
2024-11-13 10:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 10:11 - INFO - * -----------
2024-11-13 10:18 - INFO - ---------------------------------------------
2024-11-13 10:18 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-13 10:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3415
2024-11-13 10:18 - INFO - 	 Train Loss: 0.152
2024-11-13 10:18 - INFO - 	 Val. Loss: 0.165
2024-11-13 10:18 - INFO - 	 ROC-AUC: 0.856
2024-11-13 10:18 - INFO - 	 PR-AUC: 0.341
2024-11-13 10:18 - INFO - 	 Best Val. Loss: 0.165
2024-11-13 10:18 - INFO - 	 Best ROC-AUC: 0.856
2024-11-13 10:18 - INFO - 	 Best PR-AUC: 0.341
2024-11-13 10:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.782
2024-11-13 10:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-13 10:18 - INFO - ---------------------------------------------
2024-11-13 10:26 - INFO - ---------------------------------------------
2024-11-13 10:26 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-13 10:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39104
2024-11-13 10:26 - INFO - 	 Train Loss: 0.147
2024-11-13 10:26 - INFO - 	 Val. Loss: 0.163
2024-11-13 10:26 - INFO - 	 ROC-AUC: 0.881
2024-11-13 10:26 - INFO - 	 PR-AUC: 0.391
2024-11-13 10:26 - INFO - 	 Best Val. Loss: 0.163
2024-11-13 10:26 - INFO - 	 Best ROC-AUC: 0.881
2024-11-13 10:26 - INFO - 	 Best PR-AUC: 0.391
2024-11-13 10:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.793
2024-11-13 10:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.145
2024-11-13 10:26 - INFO - ---------------------------------------------
2024-11-13 10:33 - INFO - ---------------------------------------------
2024-11-13 10:33 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-13 10:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48102
2024-11-13 10:33 - INFO - 	 Train Loss: 0.137
2024-11-13 10:33 - INFO - 	 Val. Loss: 0.148
2024-11-13 10:33 - INFO - 	 ROC-AUC: 0.933
2024-11-13 10:33 - INFO - 	 PR-AUC: 0.481
2024-11-13 10:33 - INFO - 	 Best Val. Loss: 0.148
2024-11-13 10:33 - INFO - 	 Best ROC-AUC: 0.933
2024-11-13 10:33 - INFO - 	 Best PR-AUC: 0.481
2024-11-13 10:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.877
2024-11-13 10:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.252
2024-11-13 10:33 - INFO - ---------------------------------------------
2024-11-13 10:40 - INFO - ---------------------------------------------
2024-11-13 10:40 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-13 10:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61233
2024-11-13 10:40 - INFO - 	 Train Loss: 0.124
2024-11-13 10:40 - INFO - 	 Val. Loss: 0.143
2024-11-13 10:40 - INFO - 	 ROC-AUC: 0.960
2024-11-13 10:40 - INFO - 	 PR-AUC: 0.612
2024-11-13 10:40 - INFO - 	 Best Val. Loss: 0.143
2024-11-13 10:40 - INFO - 	 Best ROC-AUC: 0.960
2024-11-13 10:40 - INFO - 	 Best PR-AUC: 0.612
2024-11-13 10:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-13 10:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.319
2024-11-13 10:40 - INFO - ---------------------------------------------
2024-11-13 10:47 - INFO - ---------------------------------------------
2024-11-13 10:47 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 10:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64154
2024-11-13 10:47 - INFO - 	 Train Loss: 0.113
2024-11-13 10:47 - INFO - 	 Val. Loss: 0.110
2024-11-13 10:47 - INFO - 	 ROC-AUC: 0.957
2024-11-13 10:47 - INFO - 	 PR-AUC: 0.642
2024-11-13 10:47 - INFO - 	 Best Val. Loss: 0.110
2024-11-13 10:47 - INFO - 	 Best ROC-AUC: 0.960
2024-11-13 10:47 - INFO - 	 Best PR-AUC: 0.642
2024-11-13 10:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-13 10:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.352
2024-11-13 10:47 - INFO - ---------------------------------------------
2024-11-13 10:54 - INFO - ---------------------------------------------
2024-11-13 10:54 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-13 10:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68371
2024-11-13 10:54 - INFO - 	 Train Loss: 0.108
2024-11-13 10:54 - INFO - 	 Val. Loss: 0.105
2024-11-13 10:54 - INFO - 	 ROC-AUC: 0.962
2024-11-13 10:54 - INFO - 	 PR-AUC: 0.684
2024-11-13 10:54 - INFO - 	 Best Val. Loss: 0.105
2024-11-13 10:54 - INFO - 	 Best ROC-AUC: 0.962
2024-11-13 10:54 - INFO - 	 Best PR-AUC: 0.684
2024-11-13 10:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-13 10:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.383
2024-11-13 10:54 - INFO - ---------------------------------------------
2024-11-13 11:01 - INFO - ---------------------------------------------
2024-11-13 11:01 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 11:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70762
2024-11-13 11:01 - INFO - 	 Train Loss: 0.106
2024-11-13 11:01 - INFO - 	 Val. Loss: 0.096
2024-11-13 11:01 - INFO - 	 ROC-AUC: 0.969
2024-11-13 11:01 - INFO - 	 PR-AUC: 0.708
2024-11-13 11:01 - INFO - 	 Best Val. Loss: 0.096
2024-11-13 11:01 - INFO - 	 Best ROC-AUC: 0.969
2024-11-13 11:01 - INFO - 	 Best PR-AUC: 0.708
2024-11-13 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-13 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-11-13 11:01 - INFO - ---------------------------------------------
2024-11-13 11:08 - INFO - ---------------------------------------------
2024-11-13 11:08 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-13 11:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71622
2024-11-13 11:08 - INFO - 	 Train Loss: 0.103
2024-11-13 11:08 - INFO - 	 Val. Loss: 0.095
2024-11-13 11:08 - INFO - 	 ROC-AUC: 0.967
2024-11-13 11:08 - INFO - 	 PR-AUC: 0.716
2024-11-13 11:08 - INFO - 	 Best Val. Loss: 0.095
2024-11-13 11:08 - INFO - 	 Best ROC-AUC: 0.969
2024-11-13 11:08 - INFO - 	 Best PR-AUC: 0.716
2024-11-13 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-13 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.433
2024-11-13 11:08 - INFO - ---------------------------------------------
2024-11-13 11:16 - INFO - ---------------------------------------------
2024-11-13 11:16 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-13 11:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74267
2024-11-13 11:16 - INFO - 	 Train Loss: 0.101
2024-11-13 11:16 - INFO - 	 Val. Loss: 0.078
2024-11-13 11:16 - INFO - 	 ROC-AUC: 0.983
2024-11-13 11:16 - INFO - 	 PR-AUC: 0.743
2024-11-13 11:16 - INFO - 	 Best Val. Loss: 0.078
2024-11-13 11:16 - INFO - 	 Best ROC-AUC: 0.983
2024-11-13 11:16 - INFO - 	 Best PR-AUC: 0.743
2024-11-13 11:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-13 11:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.515
2024-11-13 11:16 - INFO - ---------------------------------------------
2024-11-13 11:23 - INFO - ---------------------------------------------
2024-11-13 11:23 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 11:23 - INFO - 	 Train Loss: 0.099
2024-11-13 11:23 - INFO - 	 Val. Loss: 0.105
2024-11-13 11:23 - INFO - 	 ROC-AUC: 0.952
2024-11-13 11:23 - INFO - 	 PR-AUC: 0.602
2024-11-13 11:23 - INFO - 	 Best Val. Loss: 0.078
2024-11-13 11:23 - INFO - 	 Best ROC-AUC: 0.983
2024-11-13 11:23 - INFO - 	 Best PR-AUC: 0.743
2024-11-13 11:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-13 11:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.515
2024-11-13 11:23 - INFO - ---------------------------------------------
2024-11-13 11:24 - INFO - Fit the preprocessing pipeline
2024-11-13 11:24 - INFO - Training using device: cuda
2024-11-13 11:24 - INFO - Creating generators
2024-11-13 11:24 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 11:24 - INFO - * Model:
2024-11-13 11:24 - INFO - * -----------
2024-11-13 11:24 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 11:24 - INFO - * -----------
2024-11-13 11:31 - INFO - ---------------------------------------------
2024-11-13 11:31 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-13 11:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27322
2024-11-13 11:31 - INFO - 	 Train Loss: 0.151
2024-11-13 11:31 - INFO - 	 Val. Loss: 0.159
2024-11-13 11:31 - INFO - 	 ROC-AUC: 0.854
2024-11-13 11:31 - INFO - 	 PR-AUC: 0.273
2024-11-13 11:31 - INFO - 	 Best Val. Loss: 0.159
2024-11-13 11:31 - INFO - 	 Best ROC-AUC: 0.854
2024-11-13 11:31 - INFO - 	 Best PR-AUC: 0.273
2024-11-13 11:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.787
2024-11-13 11:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-13 11:31 - INFO - ---------------------------------------------
2024-11-13 11:39 - INFO - ---------------------------------------------
2024-11-13 11:39 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-13 11:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39677
2024-11-13 11:39 - INFO - 	 Train Loss: 0.145
2024-11-13 11:39 - INFO - 	 Val. Loss: 0.161
2024-11-13 11:39 - INFO - 	 ROC-AUC: 0.899
2024-11-13 11:39 - INFO - 	 PR-AUC: 0.397
2024-11-13 11:39 - INFO - 	 Best Val. Loss: 0.159
2024-11-13 11:39 - INFO - 	 Best ROC-AUC: 0.899
2024-11-13 11:39 - INFO - 	 Best PR-AUC: 0.397
2024-11-13 11:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.824
2024-11-13 11:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.192
2024-11-13 11:39 - INFO - ---------------------------------------------
2024-11-13 11:46 - INFO - ---------------------------------------------
2024-11-13 11:46 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-13 11:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46725
2024-11-13 11:46 - INFO - 	 Train Loss: 0.134
2024-11-13 11:46 - INFO - 	 Val. Loss: 0.161
2024-11-13 11:46 - INFO - 	 ROC-AUC: 0.945
2024-11-13 11:46 - INFO - 	 PR-AUC: 0.467
2024-11-13 11:46 - INFO - 	 Best Val. Loss: 0.159
2024-11-13 11:46 - INFO - 	 Best ROC-AUC: 0.945
2024-11-13 11:46 - INFO - 	 Best PR-AUC: 0.467
2024-11-13 11:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.884
2024-11-13 11:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.271
2024-11-13 11:46 - INFO - ---------------------------------------------
2024-11-13 11:53 - INFO - ---------------------------------------------
2024-11-13 11:53 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-13 11:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55023
2024-11-13 11:53 - INFO - 	 Train Loss: 0.120
2024-11-13 11:53 - INFO - 	 Val. Loss: 0.119
2024-11-13 11:53 - INFO - 	 ROC-AUC: 0.960
2024-11-13 11:53 - INFO - 	 PR-AUC: 0.550
2024-11-13 11:53 - INFO - 	 Best Val. Loss: 0.119
2024-11-13 11:53 - INFO - 	 Best ROC-AUC: 0.960
2024-11-13 11:53 - INFO - 	 Best PR-AUC: 0.550
2024-11-13 11:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-13 11:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-13 11:53 - INFO - ---------------------------------------------
2024-11-13 12:00 - INFO - ---------------------------------------------
2024-11-13 12:00 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 12:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68108
2024-11-13 12:00 - INFO - 	 Train Loss: 0.110
2024-11-13 12:00 - INFO - 	 Val. Loss: 0.088
2024-11-13 12:00 - INFO - 	 ROC-AUC: 0.972
2024-11-13 12:00 - INFO - 	 PR-AUC: 0.681
2024-11-13 12:00 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 12:00 - INFO - 	 Best ROC-AUC: 0.972
2024-11-13 12:00 - INFO - 	 Best PR-AUC: 0.681
2024-11-13 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-11-13 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-11-13 12:00 - INFO - ---------------------------------------------
2024-11-13 12:07 - INFO - ---------------------------------------------
2024-11-13 12:07 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-13 12:07 - INFO - 	 Train Loss: 0.106
2024-11-13 12:07 - INFO - 	 Val. Loss: 0.090
2024-11-13 12:07 - INFO - 	 ROC-AUC: 0.966
2024-11-13 12:07 - INFO - 	 PR-AUC: 0.635
2024-11-13 12:07 - INFO - 	 Best Val. Loss: 0.088
2024-11-13 12:07 - INFO - 	 Best ROC-AUC: 0.972
2024-11-13 12:07 - INFO - 	 Best PR-AUC: 0.681
2024-11-13 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-11-13 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-11-13 12:07 - INFO - ---------------------------------------------
2024-11-13 12:14 - INFO - ---------------------------------------------
2024-11-13 12:14 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 12:14 - INFO - 	 Train Loss: 0.104
2024-11-13 12:14 - INFO - 	 Val. Loss: 0.082
2024-11-13 12:14 - INFO - 	 ROC-AUC: 0.980
2024-11-13 12:14 - INFO - 	 PR-AUC: 0.659
2024-11-13 12:14 - INFO - 	 Best Val. Loss: 0.082
2024-11-13 12:14 - INFO - 	 Best ROC-AUC: 0.980
2024-11-13 12:14 - INFO - 	 Best PR-AUC: 0.681
2024-11-13 12:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-13 12:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-11-13 12:14 - INFO - ---------------------------------------------
2024-11-13 12:21 - INFO - ---------------------------------------------
2024-11-13 12:21 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-13 12:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68285
2024-11-13 12:21 - INFO - 	 Train Loss: 0.101
2024-11-13 12:21 - INFO - 	 Val. Loss: 0.083
2024-11-13 12:21 - INFO - 	 ROC-AUC: 0.975
2024-11-13 12:21 - INFO - 	 PR-AUC: 0.683
2024-11-13 12:21 - INFO - 	 Best Val. Loss: 0.082
2024-11-13 12:21 - INFO - 	 Best ROC-AUC: 0.980
2024-11-13 12:21 - INFO - 	 Best PR-AUC: 0.683
2024-11-13 12:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-13 12:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.522
2024-11-13 12:21 - INFO - ---------------------------------------------
2024-11-13 12:29 - INFO - ---------------------------------------------
2024-11-13 12:29 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-13 12:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.743
2024-11-13 12:29 - INFO - 	 Train Loss: 0.100
2024-11-13 12:29 - INFO - 	 Val. Loss: 0.082
2024-11-13 12:29 - INFO - 	 ROC-AUC: 0.982
2024-11-13 12:29 - INFO - 	 PR-AUC: 0.743
2024-11-13 12:29 - INFO - 	 Best Val. Loss: 0.082
2024-11-13 12:29 - INFO - 	 Best ROC-AUC: 0.982
2024-11-13 12:29 - INFO - 	 Best PR-AUC: 0.743
2024-11-13 12:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-13 12:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.545
2024-11-13 12:29 - INFO - ---------------------------------------------
2024-11-13 12:36 - INFO - ---------------------------------------------
2024-11-13 12:36 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 12:36 - INFO - 	 Train Loss: 0.099
2024-11-13 12:36 - INFO - 	 Val. Loss: 0.084
2024-11-13 12:36 - INFO - 	 ROC-AUC: 0.978
2024-11-13 12:36 - INFO - 	 PR-AUC: 0.718
2024-11-13 12:36 - INFO - 	 Best Val. Loss: 0.082
2024-11-13 12:36 - INFO - 	 Best ROC-AUC: 0.982
2024-11-13 12:36 - INFO - 	 Best PR-AUC: 0.743
2024-11-13 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-13 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.545
2024-11-13 12:36 - INFO - ---------------------------------------------
2024-11-13 12:37 - INFO - Fit the preprocessing pipeline
2024-11-13 12:37 - INFO - Training using device: cuda
2024-11-13 12:37 - INFO - Creating generators
2024-11-13 12:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 12:37 - INFO - * Model:
2024-11-13 12:37 - INFO - * -----------
2024-11-13 12:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 12:37 - INFO - * -----------
2024-11-13 12:44 - INFO - ---------------------------------------------
2024-11-13 12:44 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-13 12:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33485
2024-11-13 12:44 - INFO - 	 Train Loss: 0.150
2024-11-13 12:44 - INFO - 	 Val. Loss: 0.166
2024-11-13 12:44 - INFO - 	 ROC-AUC: 0.854
2024-11-13 12:44 - INFO - 	 PR-AUC: 0.335
2024-11-13 12:44 - INFO - 	 Best Val. Loss: 0.166
2024-11-13 12:44 - INFO - 	 Best ROC-AUC: 0.854
2024-11-13 12:44 - INFO - 	 Best PR-AUC: 0.335
2024-11-13 12:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-13 12:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.150
2024-11-13 12:44 - INFO - ---------------------------------------------
2024-11-13 12:52 - INFO - ---------------------------------------------
2024-11-13 12:52 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-13 12:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41115
2024-11-13 12:52 - INFO - 	 Train Loss: 0.145
2024-11-13 12:52 - INFO - 	 Val. Loss: 0.164
2024-11-13 12:52 - INFO - 	 ROC-AUC: 0.920
2024-11-13 12:52 - INFO - 	 PR-AUC: 0.411
2024-11-13 12:52 - INFO - 	 Best Val. Loss: 0.164
2024-11-13 12:52 - INFO - 	 Best ROC-AUC: 0.920
2024-11-13 12:52 - INFO - 	 Best PR-AUC: 0.411
2024-11-13 12:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.818
2024-11-13 12:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.203
2024-11-13 12:52 - INFO - ---------------------------------------------
2024-11-13 12:59 - INFO - ---------------------------------------------
2024-11-13 12:59 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-13 12:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.452
2024-11-13 12:59 - INFO - 	 Train Loss: 0.127
2024-11-13 12:59 - INFO - 	 Val. Loss: 0.158
2024-11-13 12:59 - INFO - 	 ROC-AUC: 0.948
2024-11-13 12:59 - INFO - 	 PR-AUC: 0.452
2024-11-13 12:59 - INFO - 	 Best Val. Loss: 0.158
2024-11-13 12:59 - INFO - 	 Best ROC-AUC: 0.948
2024-11-13 12:59 - INFO - 	 Best PR-AUC: 0.452
2024-11-13 12:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.880
2024-11-13 12:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.230
2024-11-13 12:59 - INFO - ---------------------------------------------
2024-11-13 13:06 - INFO - ---------------------------------------------
2024-11-13 13:06 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-13 13:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57858
2024-11-13 13:06 - INFO - 	 Train Loss: 0.113
2024-11-13 13:06 - INFO - 	 Val. Loss: 0.129
2024-11-13 13:06 - INFO - 	 ROC-AUC: 0.969
2024-11-13 13:06 - INFO - 	 PR-AUC: 0.579
2024-11-13 13:06 - INFO - 	 Best Val. Loss: 0.129
2024-11-13 13:06 - INFO - 	 Best ROC-AUC: 0.969
2024-11-13 13:06 - INFO - 	 Best PR-AUC: 0.579
2024-11-13 13:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-13 13:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-13 13:06 - INFO - ---------------------------------------------
2024-11-13 13:13 - INFO - ---------------------------------------------
2024-11-13 13:13 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-13 13:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59583
2024-11-13 13:13 - INFO - 	 Train Loss: 0.109
2024-11-13 13:13 - INFO - 	 Val. Loss: 0.112
2024-11-13 13:13 - INFO - 	 ROC-AUC: 0.974
2024-11-13 13:13 - INFO - 	 PR-AUC: 0.596
2024-11-13 13:13 - INFO - 	 Best Val. Loss: 0.112
2024-11-13 13:13 - INFO - 	 Best ROC-AUC: 0.974
2024-11-13 13:13 - INFO - 	 Best PR-AUC: 0.596
2024-11-13 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-13 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.410
2024-11-13 13:13 - INFO - ---------------------------------------------
2024-11-13 13:20 - INFO - ---------------------------------------------
2024-11-13 13:20 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-13 13:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67064
2024-11-13 13:20 - INFO - 	 Train Loss: 0.104
2024-11-13 13:20 - INFO - 	 Val. Loss: 0.089
2024-11-13 13:20 - INFO - 	 ROC-AUC: 0.972
2024-11-13 13:20 - INFO - 	 PR-AUC: 0.671
2024-11-13 13:20 - INFO - 	 Best Val. Loss: 0.089
2024-11-13 13:20 - INFO - 	 Best ROC-AUC: 0.974
2024-11-13 13:20 - INFO - 	 Best PR-AUC: 0.671
2024-11-13 13:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-13 13:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.474
2024-11-13 13:20 - INFO - ---------------------------------------------
2024-11-13 13:27 - INFO - ---------------------------------------------
2024-11-13 13:27 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 13:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69562
2024-11-13 13:27 - INFO - 	 Train Loss: 0.104
2024-11-13 13:27 - INFO - 	 Val. Loss: 0.087
2024-11-13 13:27 - INFO - 	 ROC-AUC: 0.974
2024-11-13 13:27 - INFO - 	 PR-AUC: 0.696
2024-11-13 13:27 - INFO - 	 Best Val. Loss: 0.087
2024-11-13 13:27 - INFO - 	 Best ROC-AUC: 0.974
2024-11-13 13:27 - INFO - 	 Best PR-AUC: 0.696
2024-11-13 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-11-13 13:27 - INFO - ---------------------------------------------
2024-11-13 13:34 - INFO - ---------------------------------------------
2024-11-13 13:34 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-13 13:34 - INFO - 	 Train Loss: 0.100
2024-11-13 13:34 - INFO - 	 Val. Loss: 0.097
2024-11-13 13:34 - INFO - 	 ROC-AUC: 0.977
2024-11-13 13:34 - INFO - 	 PR-AUC: 0.681
2024-11-13 13:34 - INFO - 	 Best Val. Loss: 0.087
2024-11-13 13:34 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 13:34 - INFO - 	 Best PR-AUC: 0.696
2024-11-13 13:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-13 13:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-11-13 13:34 - INFO - ---------------------------------------------
2024-11-13 13:41 - INFO - ---------------------------------------------
2024-11-13 13:41 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-13 13:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71379
2024-11-13 13:41 - INFO - 	 Train Loss: 0.099
2024-11-13 13:41 - INFO - 	 Val. Loss: 0.089
2024-11-13 13:41 - INFO - 	 ROC-AUC: 0.970
2024-11-13 13:41 - INFO - 	 PR-AUC: 0.714
2024-11-13 13:41 - INFO - 	 Best Val. Loss: 0.087
2024-11-13 13:41 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 13:41 - INFO - 	 Best PR-AUC: 0.714
2024-11-13 13:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-13 13:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.574
2024-11-13 13:41 - INFO - ---------------------------------------------
2024-11-13 13:49 - INFO - ---------------------------------------------
2024-11-13 13:49 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-13 13:49 - INFO - 	 Train Loss: 0.100
2024-11-13 13:49 - INFO - 	 Val. Loss: 0.097
2024-11-13 13:49 - INFO - 	 ROC-AUC: 0.977
2024-11-13 13:49 - INFO - 	 PR-AUC: 0.706
2024-11-13 13:49 - INFO - 	 Best Val. Loss: 0.087
2024-11-13 13:49 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 13:49 - INFO - 	 Best PR-AUC: 0.714
2024-11-13 13:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-13 13:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.574
2024-11-13 13:49 - INFO - ---------------------------------------------
2024-11-13 13:50 - INFO - Fit the preprocessing pipeline
2024-11-13 13:50 - INFO - Training using device: cuda
2024-11-13 13:50 - INFO - Creating generators
2024-11-13 13:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 13:50 - INFO - * Model:
2024-11-13 13:50 - INFO - * -----------
2024-11-13 13:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 13:50 - INFO - * -----------
2024-11-13 13:57 - INFO - ---------------------------------------------
2024-11-13 13:57 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-13 13:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30641
2024-11-13 13:57 - INFO - 	 Train Loss: 0.150
2024-11-13 13:57 - INFO - 	 Val. Loss: 0.160
2024-11-13 13:57 - INFO - 	 ROC-AUC: 0.863
2024-11-13 13:57 - INFO - 	 PR-AUC: 0.306
2024-11-13 13:57 - INFO - 	 Best Val. Loss: 0.160
2024-11-13 13:57 - INFO - 	 Best ROC-AUC: 0.863
2024-11-13 13:57 - INFO - 	 Best PR-AUC: 0.306
2024-11-13 13:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.762
2024-11-13 13:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.153
2024-11-13 13:57 - INFO - ---------------------------------------------
2024-11-13 14:05 - INFO - ---------------------------------------------
2024-11-13 14:05 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-13 14:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37423
2024-11-13 14:05 - INFO - 	 Train Loss: 0.145
2024-11-13 14:05 - INFO - 	 Val. Loss: 0.149
2024-11-13 14:05 - INFO - 	 ROC-AUC: 0.894
2024-11-13 14:05 - INFO - 	 PR-AUC: 0.374
2024-11-13 14:05 - INFO - 	 Best Val. Loss: 0.149
2024-11-13 14:05 - INFO - 	 Best ROC-AUC: 0.894
2024-11-13 14:05 - INFO - 	 Best PR-AUC: 0.374
2024-11-13 14:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.828
2024-11-13 14:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.184
2024-11-13 14:05 - INFO - ---------------------------------------------
2024-11-13 14:12 - INFO - ---------------------------------------------
2024-11-13 14:12 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-13 14:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46843
2024-11-13 14:12 - INFO - 	 Train Loss: 0.131
2024-11-13 14:12 - INFO - 	 Val. Loss: 0.152
2024-11-13 14:12 - INFO - 	 ROC-AUC: 0.939
2024-11-13 14:12 - INFO - 	 PR-AUC: 0.468
2024-11-13 14:12 - INFO - 	 Best Val. Loss: 0.149
2024-11-13 14:12 - INFO - 	 Best ROC-AUC: 0.939
2024-11-13 14:12 - INFO - 	 Best PR-AUC: 0.468
2024-11-13 14:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.872
2024-11-13 14:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.230
2024-11-13 14:12 - INFO - ---------------------------------------------
2024-11-13 14:19 - INFO - ---------------------------------------------
2024-11-13 14:19 - INFO - Epoch: 04 | Time: 7m 6s
2024-11-13 14:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49024
2024-11-13 14:19 - INFO - 	 Train Loss: 0.115
2024-11-13 14:19 - INFO - 	 Val. Loss: 0.134
2024-11-13 14:19 - INFO - 	 ROC-AUC: 0.960
2024-11-13 14:19 - INFO - 	 PR-AUC: 0.490
2024-11-13 14:19 - INFO - 	 Best Val. Loss: 0.134
2024-11-13 14:19 - INFO - 	 Best ROC-AUC: 0.960
2024-11-13 14:19 - INFO - 	 Best PR-AUC: 0.490
2024-11-13 14:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-13 14:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.299
2024-11-13 14:19 - INFO - ---------------------------------------------
2024-11-13 14:26 - INFO - ---------------------------------------------
2024-11-13 14:26 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-13 14:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54142
2024-11-13 14:26 - INFO - 	 Train Loss: 0.109
2024-11-13 14:26 - INFO - 	 Val. Loss: 0.115
2024-11-13 14:26 - INFO - 	 ROC-AUC: 0.955
2024-11-13 14:26 - INFO - 	 PR-AUC: 0.541
2024-11-13 14:26 - INFO - 	 Best Val. Loss: 0.115
2024-11-13 14:26 - INFO - 	 Best ROC-AUC: 0.960
2024-11-13 14:26 - INFO - 	 Best PR-AUC: 0.541
2024-11-13 14:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.909
2024-11-13 14:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-13 14:26 - INFO - ---------------------------------------------
2024-11-13 14:33 - INFO - ---------------------------------------------
2024-11-13 14:33 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-13 14:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6317
2024-11-13 14:33 - INFO - 	 Train Loss: 0.105
2024-11-13 14:33 - INFO - 	 Val. Loss: 0.087
2024-11-13 14:33 - INFO - 	 ROC-AUC: 0.971
2024-11-13 14:33 - INFO - 	 PR-AUC: 0.632
2024-11-13 14:33 - INFO - 	 Best Val. Loss: 0.087
2024-11-13 14:33 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 14:33 - INFO - 	 Best PR-AUC: 0.632
2024-11-13 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-13 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.424
2024-11-13 14:33 - INFO - ---------------------------------------------
2024-11-13 14:40 - INFO - ---------------------------------------------
2024-11-13 14:40 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-13 14:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65822
2024-11-13 14:40 - INFO - 	 Train Loss: 0.106
2024-11-13 14:40 - INFO - 	 Val. Loss: 0.088
2024-11-13 14:40 - INFO - 	 ROC-AUC: 0.972
2024-11-13 14:40 - INFO - 	 PR-AUC: 0.658
2024-11-13 14:40 - INFO - 	 Best Val. Loss: 0.087
2024-11-13 14:40 - INFO - 	 Best ROC-AUC: 0.972
2024-11-13 14:40 - INFO - 	 Best PR-AUC: 0.658
2024-11-13 14:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-13 14:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.467
2024-11-13 14:40 - INFO - ---------------------------------------------
2024-11-13 14:47 - INFO - ---------------------------------------------
2024-11-13 14:47 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-13 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7094
2024-11-13 14:47 - INFO - 	 Train Loss: 0.100
2024-11-13 14:47 - INFO - 	 Val. Loss: 0.074
2024-11-13 14:47 - INFO - 	 ROC-AUC: 0.981
2024-11-13 14:47 - INFO - 	 PR-AUC: 0.709
2024-11-13 14:47 - INFO - 	 Best Val. Loss: 0.074
2024-11-13 14:47 - INFO - 	 Best ROC-AUC: 0.981
2024-11-13 14:47 - INFO - 	 Best PR-AUC: 0.709
2024-11-13 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-13 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.496
2024-11-13 14:47 - INFO - ---------------------------------------------
2024-11-13 14:54 - INFO - ---------------------------------------------
2024-11-13 14:54 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 14:54 - INFO - 	 Train Loss: 0.098
2024-11-13 14:54 - INFO - 	 Val. Loss: 0.085
2024-11-13 14:54 - INFO - 	 ROC-AUC: 0.980
2024-11-13 14:54 - INFO - 	 PR-AUC: 0.685
2024-11-13 14:54 - INFO - 	 Best Val. Loss: 0.074
2024-11-13 14:54 - INFO - 	 Best ROC-AUC: 0.981
2024-11-13 14:54 - INFO - 	 Best PR-AUC: 0.709
2024-11-13 14:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-13 14:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.496
2024-11-13 14:54 - INFO - ---------------------------------------------
2024-11-13 15:02 - INFO - ---------------------------------------------
2024-11-13 15:02 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-13 15:02 - INFO - 	 Train Loss: 0.099
2024-11-13 15:02 - INFO - 	 Val. Loss: 0.081
2024-11-13 15:02 - INFO - 	 ROC-AUC: 0.980
2024-11-13 15:02 - INFO - 	 PR-AUC: 0.658
2024-11-13 15:02 - INFO - 	 Best Val. Loss: 0.074
2024-11-13 15:02 - INFO - 	 Best ROC-AUC: 0.981
2024-11-13 15:02 - INFO - 	 Best PR-AUC: 0.709
2024-11-13 15:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-13 15:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.496
2024-11-13 15:02 - INFO - ---------------------------------------------
2024-11-13 15:03 - INFO - Fit the preprocessing pipeline
2024-11-13 15:03 - INFO - Training using device: cuda
2024-11-13 15:03 - INFO - Creating generators
2024-11-13 15:03 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 15:03 - INFO - * Model:
2024-11-13 15:03 - INFO - * -----------
2024-11-13 15:03 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 15:03 - INFO - * -----------
2024-11-13 15:10 - INFO - ---------------------------------------------
2024-11-13 15:10 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-13 15:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31513
2024-11-13 15:10 - INFO - 	 Train Loss: 0.150
2024-11-13 15:10 - INFO - 	 Val. Loss: 0.163
2024-11-13 15:10 - INFO - 	 ROC-AUC: 0.874
2024-11-13 15:10 - INFO - 	 PR-AUC: 0.315
2024-11-13 15:10 - INFO - 	 Best Val. Loss: 0.163
2024-11-13 15:10 - INFO - 	 Best ROC-AUC: 0.874
2024-11-13 15:10 - INFO - 	 Best PR-AUC: 0.315
2024-11-13 15:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-13 15:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-13 15:10 - INFO - ---------------------------------------------
2024-11-13 15:18 - INFO - ---------------------------------------------
2024-11-13 15:18 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-13 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37985
2024-11-13 15:18 - INFO - 	 Train Loss: 0.147
2024-11-13 15:18 - INFO - 	 Val. Loss: 0.158
2024-11-13 15:18 - INFO - 	 ROC-AUC: 0.896
2024-11-13 15:18 - INFO - 	 PR-AUC: 0.380
2024-11-13 15:18 - INFO - 	 Best Val. Loss: 0.158
2024-11-13 15:18 - INFO - 	 Best ROC-AUC: 0.896
2024-11-13 15:18 - INFO - 	 Best PR-AUC: 0.380
2024-11-13 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.830
2024-11-13 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.175
2024-11-13 15:18 - INFO - ---------------------------------------------
2024-11-13 15:25 - INFO - ---------------------------------------------
2024-11-13 15:25 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-13 15:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41369
2024-11-13 15:25 - INFO - 	 Train Loss: 0.130
2024-11-13 15:25 - INFO - 	 Val. Loss: 0.165
2024-11-13 15:25 - INFO - 	 ROC-AUC: 0.934
2024-11-13 15:25 - INFO - 	 PR-AUC: 0.414
2024-11-13 15:25 - INFO - 	 Best Val. Loss: 0.158
2024-11-13 15:25 - INFO - 	 Best ROC-AUC: 0.934
2024-11-13 15:25 - INFO - 	 Best PR-AUC: 0.414
2024-11-13 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.858
2024-11-13 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.215
2024-11-13 15:25 - INFO - ---------------------------------------------
2024-11-13 15:32 - INFO - ---------------------------------------------
2024-11-13 15:32 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-13 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48477
2024-11-13 15:32 - INFO - 	 Train Loss: 0.115
2024-11-13 15:32 - INFO - 	 Val. Loss: 0.130
2024-11-13 15:32 - INFO - 	 ROC-AUC: 0.966
2024-11-13 15:32 - INFO - 	 PR-AUC: 0.485
2024-11-13 15:32 - INFO - 	 Best Val. Loss: 0.130
2024-11-13 15:32 - INFO - 	 Best ROC-AUC: 0.966
2024-11-13 15:32 - INFO - 	 Best PR-AUC: 0.485
2024-11-13 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-13 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.300
2024-11-13 15:32 - INFO - ---------------------------------------------
2024-11-13 15:39 - INFO - ---------------------------------------------
2024-11-13 15:39 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-13 15:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67912
2024-11-13 15:39 - INFO - 	 Train Loss: 0.107
2024-11-13 15:39 - INFO - 	 Val. Loss: 0.204
2024-11-13 15:39 - INFO - 	 ROC-AUC: 0.971
2024-11-13 15:39 - INFO - 	 PR-AUC: 0.679
2024-11-13 15:39 - INFO - 	 Best Val. Loss: 0.130
2024-11-13 15:39 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 15:39 - INFO - 	 Best PR-AUC: 0.679
2024-11-13 15:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-13 15:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.405
2024-11-13 15:39 - INFO - ---------------------------------------------
2024-11-13 15:46 - INFO - ---------------------------------------------
2024-11-13 15:46 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-13 15:46 - INFO - 	 Train Loss: 0.107
2024-11-13 15:46 - INFO - 	 Val. Loss: 0.114
2024-11-13 15:46 - INFO - 	 ROC-AUC: 0.975
2024-11-13 15:46 - INFO - 	 PR-AUC: 0.628
2024-11-13 15:46 - INFO - 	 Best Val. Loss: 0.114
2024-11-13 15:46 - INFO - 	 Best ROC-AUC: 0.975
2024-11-13 15:46 - INFO - 	 Best PR-AUC: 0.679
2024-11-13 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.405
2024-11-13 15:46 - INFO - ---------------------------------------------
2024-11-13 15:53 - INFO - ---------------------------------------------
2024-11-13 15:53 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 15:53 - INFO - 	 Train Loss: 0.102
2024-11-13 15:53 - INFO - 	 Val. Loss: 0.099
2024-11-13 15:53 - INFO - 	 ROC-AUC: 0.978
2024-11-13 15:53 - INFO - 	 PR-AUC: 0.665
2024-11-13 15:53 - INFO - 	 Best Val. Loss: 0.099
2024-11-13 15:53 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 15:53 - INFO - 	 Best PR-AUC: 0.679
2024-11-13 15:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 15:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.405
2024-11-13 15:53 - INFO - ---------------------------------------------
2024-11-13 16:00 - INFO - ---------------------------------------------
2024-11-13 16:00 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-13 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69586
2024-11-13 16:00 - INFO - 	 Train Loss: 0.104
2024-11-13 16:00 - INFO - 	 Val. Loss: 0.099
2024-11-13 16:00 - INFO - 	 ROC-AUC: 0.971
2024-11-13 16:00 - INFO - 	 PR-AUC: 0.696
2024-11-13 16:00 - INFO - 	 Best Val. Loss: 0.099
2024-11-13 16:00 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 16:00 - INFO - 	 Best PR-AUC: 0.696
2024-11-13 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.477
2024-11-13 16:00 - INFO - ---------------------------------------------
2024-11-13 16:08 - INFO - ---------------------------------------------
2024-11-13 16:08 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-13 16:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72206
2024-11-13 16:08 - INFO - 	 Train Loss: 0.099
2024-11-13 16:08 - INFO - 	 Val. Loss: 0.098
2024-11-13 16:08 - INFO - 	 ROC-AUC: 0.980
2024-11-13 16:08 - INFO - 	 PR-AUC: 0.722
2024-11-13 16:08 - INFO - 	 Best Val. Loss: 0.098
2024-11-13 16:08 - INFO - 	 Best ROC-AUC: 0.980
2024-11-13 16:08 - INFO - 	 Best PR-AUC: 0.722
2024-11-13 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-13 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.449
2024-11-13 16:08 - INFO - ---------------------------------------------
2024-11-13 16:15 - INFO - ---------------------------------------------
2024-11-13 16:15 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 16:15 - INFO - 	 Train Loss: 0.100
2024-11-13 16:15 - INFO - 	 Val. Loss: 0.116
2024-11-13 16:15 - INFO - 	 ROC-AUC: 0.968
2024-11-13 16:15 - INFO - 	 PR-AUC: 0.677
2024-11-13 16:15 - INFO - 	 Best Val. Loss: 0.098
2024-11-13 16:15 - INFO - 	 Best ROC-AUC: 0.980
2024-11-13 16:15 - INFO - 	 Best PR-AUC: 0.722
2024-11-13 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-13 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.449
2024-11-13 16:15 - INFO - ---------------------------------------------
2024-11-13 16:16 - INFO - Fit the preprocessing pipeline
2024-11-13 16:16 - INFO - Training using device: cuda
2024-11-13 16:16 - INFO - Creating generators
2024-11-13 16:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 16:16 - INFO - * Model:
2024-11-13 16:16 - INFO - * -----------
2024-11-13 16:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 16:16 - INFO - * -----------
2024-11-13 16:23 - INFO - ---------------------------------------------
2024-11-13 16:23 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-13 16:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27467
2024-11-13 16:23 - INFO - 	 Train Loss: 0.150
2024-11-13 16:23 - INFO - 	 Val. Loss: 0.165
2024-11-13 16:23 - INFO - 	 ROC-AUC: 0.847
2024-11-13 16:23 - INFO - 	 PR-AUC: 0.275
2024-11-13 16:23 - INFO - 	 Best Val. Loss: 0.165
2024-11-13 16:23 - INFO - 	 Best ROC-AUC: 0.847
2024-11-13 16:23 - INFO - 	 Best PR-AUC: 0.275
2024-11-13 16:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-13 16:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-13 16:23 - INFO - ---------------------------------------------
2024-11-13 16:31 - INFO - ---------------------------------------------
2024-11-13 16:31 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-13 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37265
2024-11-13 16:31 - INFO - 	 Train Loss: 0.147
2024-11-13 16:31 - INFO - 	 Val. Loss: 0.166
2024-11-13 16:31 - INFO - 	 ROC-AUC: 0.886
2024-11-13 16:31 - INFO - 	 PR-AUC: 0.373
2024-11-13 16:31 - INFO - 	 Best Val. Loss: 0.165
2024-11-13 16:31 - INFO - 	 Best ROC-AUC: 0.886
2024-11-13 16:31 - INFO - 	 Best PR-AUC: 0.373
2024-11-13 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-13 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-13 16:31 - INFO - ---------------------------------------------
2024-11-13 16:38 - INFO - ---------------------------------------------
2024-11-13 16:38 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-13 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48983
2024-11-13 16:38 - INFO - 	 Train Loss: 0.134
2024-11-13 16:38 - INFO - 	 Val. Loss: 0.153
2024-11-13 16:38 - INFO - 	 ROC-AUC: 0.922
2024-11-13 16:38 - INFO - 	 PR-AUC: 0.490
2024-11-13 16:38 - INFO - 	 Best Val. Loss: 0.153
2024-11-13 16:38 - INFO - 	 Best ROC-AUC: 0.922
2024-11-13 16:38 - INFO - 	 Best PR-AUC: 0.490
2024-11-13 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.860
2024-11-13 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.228
2024-11-13 16:38 - INFO - ---------------------------------------------
2024-11-13 16:45 - INFO - ---------------------------------------------
2024-11-13 16:45 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-13 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57357
2024-11-13 16:45 - INFO - 	 Train Loss: 0.120
2024-11-13 16:45 - INFO - 	 Val. Loss: 0.130
2024-11-13 16:45 - INFO - 	 ROC-AUC: 0.961
2024-11-13 16:45 - INFO - 	 PR-AUC: 0.574
2024-11-13 16:45 - INFO - 	 Best Val. Loss: 0.130
2024-11-13 16:45 - INFO - 	 Best ROC-AUC: 0.961
2024-11-13 16:45 - INFO - 	 Best PR-AUC: 0.574
2024-11-13 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-13 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.319
2024-11-13 16:45 - INFO - ---------------------------------------------
2024-11-13 16:52 - INFO - ---------------------------------------------
2024-11-13 16:52 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59188
2024-11-13 16:52 - INFO - 	 Train Loss: 0.110
2024-11-13 16:52 - INFO - 	 Val. Loss: 0.125
2024-11-13 16:52 - INFO - 	 ROC-AUC: 0.962
2024-11-13 16:52 - INFO - 	 PR-AUC: 0.592
2024-11-13 16:52 - INFO - 	 Best Val. Loss: 0.125
2024-11-13 16:52 - INFO - 	 Best ROC-AUC: 0.962
2024-11-13 16:52 - INFO - 	 Best PR-AUC: 0.592
2024-11-13 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-13 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-13 16:52 - INFO - ---------------------------------------------
2024-11-13 16:59 - INFO - ---------------------------------------------
2024-11-13 16:59 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-13 16:59 - INFO - 	 Train Loss: 0.106
2024-11-13 16:59 - INFO - 	 Val. Loss: 0.133
2024-11-13 16:59 - INFO - 	 ROC-AUC: 0.965
2024-11-13 16:59 - INFO - 	 PR-AUC: 0.574
2024-11-13 16:59 - INFO - 	 Best Val. Loss: 0.125
2024-11-13 16:59 - INFO - 	 Best ROC-AUC: 0.965
2024-11-13 16:59 - INFO - 	 Best PR-AUC: 0.592
2024-11-13 16:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-13 16:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-13 16:59 - INFO - ---------------------------------------------
2024-11-13 17:06 - INFO - ---------------------------------------------
2024-11-13 17:06 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-13 17:06 - INFO - 	 Train Loss: 0.105
2024-11-13 17:06 - INFO - 	 Val. Loss: 0.138
2024-11-13 17:06 - INFO - 	 ROC-AUC: 0.945
2024-11-13 17:06 - INFO - 	 PR-AUC: 0.550
2024-11-13 17:06 - INFO - 	 Best Val. Loss: 0.125
2024-11-13 17:06 - INFO - 	 Best ROC-AUC: 0.965
2024-11-13 17:06 - INFO - 	 Best PR-AUC: 0.592
2024-11-13 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-13 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-13 17:06 - INFO - ---------------------------------------------
2024-11-13 17:13 - INFO - ---------------------------------------------
2024-11-13 17:13 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-13 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65442
2024-11-13 17:13 - INFO - 	 Train Loss: 0.103
2024-11-13 17:13 - INFO - 	 Val. Loss: 0.115
2024-11-13 17:13 - INFO - 	 ROC-AUC: 0.966
2024-11-13 17:13 - INFO - 	 PR-AUC: 0.654
2024-11-13 17:13 - INFO - 	 Best Val. Loss: 0.115
2024-11-13 17:13 - INFO - 	 Best ROC-AUC: 0.966
2024-11-13 17:13 - INFO - 	 Best PR-AUC: 0.654
2024-11-13 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-13 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.374
2024-11-13 17:13 - INFO - ---------------------------------------------
2024-11-13 17:21 - INFO - ---------------------------------------------
2024-11-13 17:21 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71846
2024-11-13 17:21 - INFO - 	 Train Loss: 0.100
2024-11-13 17:21 - INFO - 	 Val. Loss: 0.099
2024-11-13 17:21 - INFO - 	 ROC-AUC: 0.968
2024-11-13 17:21 - INFO - 	 PR-AUC: 0.718
2024-11-13 17:21 - INFO - 	 Best Val. Loss: 0.099
2024-11-13 17:21 - INFO - 	 Best ROC-AUC: 0.968
2024-11-13 17:21 - INFO - 	 Best PR-AUC: 0.718
2024-11-13 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-13 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-11-13 17:21 - INFO - ---------------------------------------------
2024-11-13 17:28 - INFO - ---------------------------------------------
2024-11-13 17:28 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 17:28 - INFO - 	 Train Loss: 0.099
2024-11-13 17:28 - INFO - 	 Val. Loss: 0.096
2024-11-13 17:28 - INFO - 	 ROC-AUC: 0.972
2024-11-13 17:28 - INFO - 	 PR-AUC: 0.708
2024-11-13 17:28 - INFO - 	 Best Val. Loss: 0.096
2024-11-13 17:28 - INFO - 	 Best ROC-AUC: 0.972
2024-11-13 17:28 - INFO - 	 Best PR-AUC: 0.718
2024-11-13 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-13 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-11-13 17:28 - INFO - ---------------------------------------------
2024-11-13 17:29 - INFO - Fit the preprocessing pipeline
2024-11-13 17:29 - INFO - Training using device: cuda
2024-11-13 17:29 - INFO - Creating generators
2024-11-13 17:29 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 17:29 - INFO - * Model:
2024-11-13 17:29 - INFO - * -----------
2024-11-13 17:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 17:29 - INFO - * -----------
2024-11-13 17:36 - INFO - ---------------------------------------------
2024-11-13 17:36 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-13 17:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36216
2024-11-13 17:36 - INFO - 	 Train Loss: 0.151
2024-11-13 17:36 - INFO - 	 Val. Loss: 0.158
2024-11-13 17:36 - INFO - 	 ROC-AUC: 0.870
2024-11-13 17:36 - INFO - 	 PR-AUC: 0.362
2024-11-13 17:36 - INFO - 	 Best Val. Loss: 0.158
2024-11-13 17:36 - INFO - 	 Best ROC-AUC: 0.870
2024-11-13 17:36 - INFO - 	 Best PR-AUC: 0.362
2024-11-13 17:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.778
2024-11-13 17:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.128
2024-11-13 17:36 - INFO - ---------------------------------------------
2024-11-13 17:44 - INFO - ---------------------------------------------
2024-11-13 17:44 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-13 17:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39935
2024-11-13 17:44 - INFO - 	 Train Loss: 0.146
2024-11-13 17:44 - INFO - 	 Val. Loss: 0.157
2024-11-13 17:44 - INFO - 	 ROC-AUC: 0.905
2024-11-13 17:44 - INFO - 	 PR-AUC: 0.399
2024-11-13 17:44 - INFO - 	 Best Val. Loss: 0.157
2024-11-13 17:44 - INFO - 	 Best ROC-AUC: 0.905
2024-11-13 17:44 - INFO - 	 Best PR-AUC: 0.399
2024-11-13 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.836
2024-11-13 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.204
2024-11-13 17:44 - INFO - ---------------------------------------------
2024-11-13 17:51 - INFO - ---------------------------------------------
2024-11-13 17:51 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-13 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50686
2024-11-13 17:51 - INFO - 	 Train Loss: 0.132
2024-11-13 17:51 - INFO - 	 Val. Loss: 0.147
2024-11-13 17:51 - INFO - 	 ROC-AUC: 0.938
2024-11-13 17:51 - INFO - 	 PR-AUC: 0.507
2024-11-13 17:51 - INFO - 	 Best Val. Loss: 0.147
2024-11-13 17:51 - INFO - 	 Best ROC-AUC: 0.938
2024-11-13 17:51 - INFO - 	 Best PR-AUC: 0.507
2024-11-13 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.905
2024-11-13 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.281
2024-11-13 17:51 - INFO - ---------------------------------------------
2024-11-13 17:58 - INFO - ---------------------------------------------
2024-11-13 17:58 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-13 17:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62069
2024-11-13 17:58 - INFO - 	 Train Loss: 0.117
2024-11-13 17:58 - INFO - 	 Val. Loss: 0.117
2024-11-13 17:58 - INFO - 	 ROC-AUC: 0.973
2024-11-13 17:58 - INFO - 	 PR-AUC: 0.621
2024-11-13 17:58 - INFO - 	 Best Val. Loss: 0.117
2024-11-13 17:58 - INFO - 	 Best ROC-AUC: 0.973
2024-11-13 17:58 - INFO - 	 Best PR-AUC: 0.621
2024-11-13 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-13 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-13 17:58 - INFO - ---------------------------------------------
2024-11-13 18:05 - INFO - ---------------------------------------------
2024-11-13 18:05 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 18:05 - INFO - 	 Train Loss: 0.111
2024-11-13 18:05 - INFO - 	 Val. Loss: 0.106
2024-11-13 18:05 - INFO - 	 ROC-AUC: 0.970
2024-11-13 18:05 - INFO - 	 PR-AUC: 0.587
2024-11-13 18:05 - INFO - 	 Best Val. Loss: 0.106
2024-11-13 18:05 - INFO - 	 Best ROC-AUC: 0.973
2024-11-13 18:05 - INFO - 	 Best PR-AUC: 0.621
2024-11-13 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-13 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-13 18:05 - INFO - ---------------------------------------------
2024-11-13 18:12 - INFO - ---------------------------------------------
2024-11-13 18:12 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-13 18:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69195
2024-11-13 18:12 - INFO - 	 Train Loss: 0.104
2024-11-13 18:12 - INFO - 	 Val. Loss: 0.090
2024-11-13 18:12 - INFO - 	 ROC-AUC: 0.969
2024-11-13 18:12 - INFO - 	 PR-AUC: 0.692
2024-11-13 18:12 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 18:12 - INFO - 	 Best ROC-AUC: 0.973
2024-11-13 18:12 - INFO - 	 Best PR-AUC: 0.692
2024-11-13 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-13 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.454
2024-11-13 18:12 - INFO - ---------------------------------------------
2024-11-13 18:19 - INFO - ---------------------------------------------
2024-11-13 18:19 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-13 18:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7104
2024-11-13 18:19 - INFO - 	 Train Loss: 0.103
2024-11-13 18:19 - INFO - 	 Val. Loss: 0.100
2024-11-13 18:19 - INFO - 	 ROC-AUC: 0.972
2024-11-13 18:19 - INFO - 	 PR-AUC: 0.710
2024-11-13 18:19 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 18:19 - INFO - 	 Best ROC-AUC: 0.973
2024-11-13 18:19 - INFO - 	 Best PR-AUC: 0.710
2024-11-13 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-13 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-11-13 18:19 - INFO - ---------------------------------------------
2024-11-13 18:26 - INFO - ---------------------------------------------
2024-11-13 18:26 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-13 18:26 - INFO - 	 Train Loss: 0.100
2024-11-13 18:26 - INFO - 	 Val. Loss: 0.123
2024-11-13 18:26 - INFO - 	 ROC-AUC: 0.968
2024-11-13 18:26 - INFO - 	 PR-AUC: 0.679
2024-11-13 18:26 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 18:26 - INFO - 	 Best ROC-AUC: 0.973
2024-11-13 18:26 - INFO - 	 Best PR-AUC: 0.710
2024-11-13 18:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-13 18:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.438
2024-11-13 18:26 - INFO - ---------------------------------------------
2024-11-13 18:33 - INFO - ---------------------------------------------
2024-11-13 18:33 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-13 18:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72856
2024-11-13 18:33 - INFO - 	 Train Loss: 0.100
2024-11-13 18:33 - INFO - 	 Val. Loss: 0.100
2024-11-13 18:33 - INFO - 	 ROC-AUC: 0.977
2024-11-13 18:33 - INFO - 	 PR-AUC: 0.729
2024-11-13 18:33 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 18:33 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 18:33 - INFO - 	 Best PR-AUC: 0.729
2024-11-13 18:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-13 18:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.559
2024-11-13 18:33 - INFO - ---------------------------------------------
2024-11-13 18:41 - INFO - ---------------------------------------------
2024-11-13 18:41 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-13 18:41 - INFO - 	 Train Loss: 0.098
2024-11-13 18:41 - INFO - 	 Val. Loss: 0.120
2024-11-13 18:41 - INFO - 	 ROC-AUC: 0.968
2024-11-13 18:41 - INFO - 	 PR-AUC: 0.676
2024-11-13 18:41 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 18:41 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 18:41 - INFO - 	 Best PR-AUC: 0.729
2024-11-13 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-13 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.559
2024-11-13 18:41 - INFO - ---------------------------------------------
2024-11-13 18:42 - INFO - Fit the preprocessing pipeline
2024-11-13 18:42 - INFO - Training using device: cuda
2024-11-13 18:42 - INFO - Creating generators
2024-11-13 18:42 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 18:42 - INFO - * Model:
2024-11-13 18:42 - INFO - * -----------
2024-11-13 18:42 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 18:42 - INFO - * -----------
2024-11-13 18:49 - INFO - ---------------------------------------------
2024-11-13 18:49 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-13 18:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31691
2024-11-13 18:49 - INFO - 	 Train Loss: 0.151
2024-11-13 18:49 - INFO - 	 Val. Loss: 0.162
2024-11-13 18:49 - INFO - 	 ROC-AUC: 0.859
2024-11-13 18:49 - INFO - 	 PR-AUC: 0.317
2024-11-13 18:49 - INFO - 	 Best Val. Loss: 0.162
2024-11-13 18:49 - INFO - 	 Best ROC-AUC: 0.859
2024-11-13 18:49 - INFO - 	 Best PR-AUC: 0.317
2024-11-13 18:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.800
2024-11-13 18:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.179
2024-11-13 18:49 - INFO - ---------------------------------------------
2024-11-13 18:57 - INFO - ---------------------------------------------
2024-11-13 18:57 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-13 18:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42536
2024-11-13 18:57 - INFO - 	 Train Loss: 0.144
2024-11-13 18:57 - INFO - 	 Val. Loss: 0.147
2024-11-13 18:57 - INFO - 	 ROC-AUC: 0.910
2024-11-13 18:57 - INFO - 	 PR-AUC: 0.425
2024-11-13 18:57 - INFO - 	 Best Val. Loss: 0.147
2024-11-13 18:57 - INFO - 	 Best ROC-AUC: 0.910
2024-11-13 18:57 - INFO - 	 Best PR-AUC: 0.425
2024-11-13 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.868
2024-11-13 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.226
2024-11-13 18:57 - INFO - ---------------------------------------------
2024-11-13 19:04 - INFO - ---------------------------------------------
2024-11-13 19:04 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-13 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49929
2024-11-13 19:04 - INFO - 	 Train Loss: 0.130
2024-11-13 19:04 - INFO - 	 Val. Loss: 0.154
2024-11-13 19:04 - INFO - 	 ROC-AUC: 0.951
2024-11-13 19:04 - INFO - 	 PR-AUC: 0.499
2024-11-13 19:04 - INFO - 	 Best Val. Loss: 0.147
2024-11-13 19:04 - INFO - 	 Best ROC-AUC: 0.951
2024-11-13 19:04 - INFO - 	 Best PR-AUC: 0.499
2024-11-13 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-13 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.261
2024-11-13 19:04 - INFO - ---------------------------------------------
2024-11-13 19:11 - INFO - ---------------------------------------------
2024-11-13 19:11 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-13 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58894
2024-11-13 19:11 - INFO - 	 Train Loss: 0.116
2024-11-13 19:11 - INFO - 	 Val. Loss: 0.122
2024-11-13 19:11 - INFO - 	 ROC-AUC: 0.970
2024-11-13 19:11 - INFO - 	 PR-AUC: 0.589
2024-11-13 19:11 - INFO - 	 Best Val. Loss: 0.122
2024-11-13 19:11 - INFO - 	 Best ROC-AUC: 0.970
2024-11-13 19:11 - INFO - 	 Best PR-AUC: 0.589
2024-11-13 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-13 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-13 19:11 - INFO - ---------------------------------------------
2024-11-13 19:18 - INFO - ---------------------------------------------
2024-11-13 19:18 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-13 19:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64894
2024-11-13 19:18 - INFO - 	 Train Loss: 0.109
2024-11-13 19:18 - INFO - 	 Val. Loss: 0.106
2024-11-13 19:18 - INFO - 	 ROC-AUC: 0.975
2024-11-13 19:18 - INFO - 	 PR-AUC: 0.649
2024-11-13 19:18 - INFO - 	 Best Val. Loss: 0.106
2024-11-13 19:18 - INFO - 	 Best ROC-AUC: 0.975
2024-11-13 19:18 - INFO - 	 Best PR-AUC: 0.649
2024-11-13 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-13 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.393
2024-11-13 19:18 - INFO - ---------------------------------------------
2024-11-13 19:25 - INFO - ---------------------------------------------
2024-11-13 19:25 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-13 19:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66278
2024-11-13 19:25 - INFO - 	 Train Loss: 0.105
2024-11-13 19:25 - INFO - 	 Val. Loss: 0.093
2024-11-13 19:25 - INFO - 	 ROC-AUC: 0.977
2024-11-13 19:25 - INFO - 	 PR-AUC: 0.663
2024-11-13 19:25 - INFO - 	 Best Val. Loss: 0.093
2024-11-13 19:25 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 19:25 - INFO - 	 Best PR-AUC: 0.663
2024-11-13 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.422
2024-11-13 19:25 - INFO - ---------------------------------------------
2024-11-13 19:32 - INFO - ---------------------------------------------
2024-11-13 19:32 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-13 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68202
2024-11-13 19:32 - INFO - 	 Train Loss: 0.102
2024-11-13 19:32 - INFO - 	 Val. Loss: 0.090
2024-11-13 19:32 - INFO - 	 ROC-AUC: 0.973
2024-11-13 19:32 - INFO - 	 PR-AUC: 0.682
2024-11-13 19:32 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 19:32 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 19:32 - INFO - 	 Best PR-AUC: 0.682
2024-11-13 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.455
2024-11-13 19:32 - INFO - ---------------------------------------------
2024-11-13 19:39 - INFO - ---------------------------------------------
2024-11-13 19:39 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-13 19:39 - INFO - 	 Train Loss: 0.101
2024-11-13 19:39 - INFO - 	 Val. Loss: 0.113
2024-11-13 19:39 - INFO - 	 ROC-AUC: 0.960
2024-11-13 19:39 - INFO - 	 PR-AUC: 0.534
2024-11-13 19:39 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 19:39 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 19:39 - INFO - 	 Best PR-AUC: 0.682
2024-11-13 19:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 19:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.455
2024-11-13 19:39 - INFO - ---------------------------------------------
2024-11-13 19:47 - INFO - ---------------------------------------------
2024-11-13 19:47 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 19:47 - INFO - 	 Train Loss: 0.100
2024-11-13 19:47 - INFO - 	 Val. Loss: 0.125
2024-11-13 19:47 - INFO - 	 ROC-AUC: 0.950
2024-11-13 19:47 - INFO - 	 PR-AUC: 0.501
2024-11-13 19:47 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 19:47 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 19:47 - INFO - 	 Best PR-AUC: 0.682
2024-11-13 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.455
2024-11-13 19:47 - INFO - ---------------------------------------------
2024-11-13 19:54 - INFO - ---------------------------------------------
2024-11-13 19:54 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 19:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69441
2024-11-13 19:54 - INFO - 	 Train Loss: 0.101
2024-11-13 19:54 - INFO - 	 Val. Loss: 0.095
2024-11-13 19:54 - INFO - 	 ROC-AUC: 0.969
2024-11-13 19:54 - INFO - 	 PR-AUC: 0.694
2024-11-13 19:54 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 19:54 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 19:54 - INFO - 	 Best PR-AUC: 0.694
2024-11-13 19:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-13 19:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.531
2024-11-13 19:54 - INFO - ---------------------------------------------
2024-11-13 19:55 - INFO - Fit the preprocessing pipeline
2024-11-13 19:55 - INFO - Training using device: cuda
2024-11-13 19:55 - INFO - Creating generators
2024-11-13 19:55 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 19:55 - INFO - * Model:
2024-11-13 19:55 - INFO - * -----------
2024-11-13 19:55 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 19:55 - INFO - * -----------
2024-11-13 20:02 - INFO - ---------------------------------------------
2024-11-13 20:02 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-13 20:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30071
2024-11-13 20:02 - INFO - 	 Train Loss: 0.150
2024-11-13 20:02 - INFO - 	 Val. Loss: 0.164
2024-11-13 20:02 - INFO - 	 ROC-AUC: 0.836
2024-11-13 20:02 - INFO - 	 PR-AUC: 0.301
2024-11-13 20:02 - INFO - 	 Best Val. Loss: 0.164
2024-11-13 20:02 - INFO - 	 Best ROC-AUC: 0.836
2024-11-13 20:02 - INFO - 	 Best PR-AUC: 0.301
2024-11-13 20:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-13 20:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.114
2024-11-13 20:02 - INFO - ---------------------------------------------
2024-11-13 20:10 - INFO - ---------------------------------------------
2024-11-13 20:10 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-13 20:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38012
2024-11-13 20:10 - INFO - 	 Train Loss: 0.147
2024-11-13 20:10 - INFO - 	 Val. Loss: 0.152
2024-11-13 20:10 - INFO - 	 ROC-AUC: 0.902
2024-11-13 20:10 - INFO - 	 PR-AUC: 0.380
2024-11-13 20:10 - INFO - 	 Best Val. Loss: 0.152
2024-11-13 20:10 - INFO - 	 Best ROC-AUC: 0.902
2024-11-13 20:10 - INFO - 	 Best PR-AUC: 0.380
2024-11-13 20:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.807
2024-11-13 20:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.184
2024-11-13 20:10 - INFO - ---------------------------------------------
2024-11-13 20:17 - INFO - ---------------------------------------------
2024-11-13 20:17 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-13 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47901
2024-11-13 20:17 - INFO - 	 Train Loss: 0.137
2024-11-13 20:17 - INFO - 	 Val. Loss: 0.155
2024-11-13 20:17 - INFO - 	 ROC-AUC: 0.898
2024-11-13 20:17 - INFO - 	 PR-AUC: 0.479
2024-11-13 20:17 - INFO - 	 Best Val. Loss: 0.152
2024-11-13 20:17 - INFO - 	 Best ROC-AUC: 0.902
2024-11-13 20:17 - INFO - 	 Best PR-AUC: 0.479
2024-11-13 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.807
2024-11-13 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.206
2024-11-13 20:17 - INFO - ---------------------------------------------
2024-11-13 20:24 - INFO - ---------------------------------------------
2024-11-13 20:24 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-13 20:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51823
2024-11-13 20:24 - INFO - 	 Train Loss: 0.124
2024-11-13 20:24 - INFO - 	 Val. Loss: 0.137
2024-11-13 20:24 - INFO - 	 ROC-AUC: 0.953
2024-11-13 20:24 - INFO - 	 PR-AUC: 0.518
2024-11-13 20:24 - INFO - 	 Best Val. Loss: 0.137
2024-11-13 20:24 - INFO - 	 Best ROC-AUC: 0.953
2024-11-13 20:24 - INFO - 	 Best PR-AUC: 0.518
2024-11-13 20:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.915
2024-11-13 20:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.291
2024-11-13 20:24 - INFO - ---------------------------------------------
2024-11-13 20:31 - INFO - ---------------------------------------------
2024-11-13 20:31 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 20:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63556
2024-11-13 20:31 - INFO - 	 Train Loss: 0.113
2024-11-13 20:31 - INFO - 	 Val. Loss: 0.111
2024-11-13 20:31 - INFO - 	 ROC-AUC: 0.967
2024-11-13 20:31 - INFO - 	 PR-AUC: 0.636
2024-11-13 20:31 - INFO - 	 Best Val. Loss: 0.111
2024-11-13 20:31 - INFO - 	 Best ROC-AUC: 0.967
2024-11-13 20:31 - INFO - 	 Best PR-AUC: 0.636
2024-11-13 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-13 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.351
2024-11-13 20:31 - INFO - ---------------------------------------------
2024-11-13 20:38 - INFO - ---------------------------------------------
2024-11-13 20:38 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-13 20:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68649
2024-11-13 20:38 - INFO - 	 Train Loss: 0.106
2024-11-13 20:38 - INFO - 	 Val. Loss: 0.090
2024-11-13 20:38 - INFO - 	 ROC-AUC: 0.961
2024-11-13 20:38 - INFO - 	 PR-AUC: 0.686
2024-11-13 20:38 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 20:38 - INFO - 	 Best ROC-AUC: 0.967
2024-11-13 20:38 - INFO - 	 Best PR-AUC: 0.686
2024-11-13 20:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-13 20:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.410
2024-11-13 20:38 - INFO - ---------------------------------------------
2024-11-13 20:45 - INFO - ---------------------------------------------
2024-11-13 20:45 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-13 20:45 - INFO - 	 Train Loss: 0.103
2024-11-13 20:45 - INFO - 	 Val. Loss: 0.124
2024-11-13 20:45 - INFO - 	 ROC-AUC: 0.960
2024-11-13 20:45 - INFO - 	 PR-AUC: 0.629
2024-11-13 20:45 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 20:45 - INFO - 	 Best ROC-AUC: 0.967
2024-11-13 20:45 - INFO - 	 Best PR-AUC: 0.686
2024-11-13 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-13 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.410
2024-11-13 20:45 - INFO - ---------------------------------------------
2024-11-13 20:52 - INFO - ---------------------------------------------
2024-11-13 20:52 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-13 20:52 - INFO - 	 Train Loss: 0.103
2024-11-13 20:52 - INFO - 	 Val. Loss: 0.117
2024-11-13 20:52 - INFO - 	 ROC-AUC: 0.971
2024-11-13 20:52 - INFO - 	 PR-AUC: 0.666
2024-11-13 20:52 - INFO - 	 Best Val. Loss: 0.090
2024-11-13 20:52 - INFO - 	 Best ROC-AUC: 0.971
2024-11-13 20:52 - INFO - 	 Best PR-AUC: 0.686
2024-11-13 20:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-13 20:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.410
2024-11-13 20:52 - INFO - ---------------------------------------------
2024-11-13 20:59 - INFO - ---------------------------------------------
2024-11-13 20:59 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 20:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71909
2024-11-13 20:59 - INFO - 	 Train Loss: 0.099
2024-11-13 20:59 - INFO - 	 Val. Loss: 0.085
2024-11-13 20:59 - INFO - 	 ROC-AUC: 0.977
2024-11-13 20:59 - INFO - 	 PR-AUC: 0.719
2024-11-13 20:59 - INFO - 	 Best Val. Loss: 0.085
2024-11-13 20:59 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 20:59 - INFO - 	 Best PR-AUC: 0.719
2024-11-13 20:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-13 20:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.481
2024-11-13 20:59 - INFO - ---------------------------------------------
2024-11-13 21:07 - INFO - ---------------------------------------------
2024-11-13 21:07 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-13 21:07 - INFO - 	 Train Loss: 0.098
2024-11-13 21:07 - INFO - 	 Val. Loss: 0.098
2024-11-13 21:07 - INFO - 	 ROC-AUC: 0.961
2024-11-13 21:07 - INFO - 	 PR-AUC: 0.710
2024-11-13 21:07 - INFO - 	 Best Val. Loss: 0.085
2024-11-13 21:07 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 21:07 - INFO - 	 Best PR-AUC: 0.719
2024-11-13 21:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-13 21:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.481
2024-11-13 21:07 - INFO - ---------------------------------------------
2024-11-13 21:08 - INFO - Fit the preprocessing pipeline
2024-11-13 21:08 - INFO - Training using device: cuda
2024-11-13 21:08 - INFO - Creating generators
2024-11-13 21:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 21:08 - INFO - * Model:
2024-11-13 21:08 - INFO - * -----------
2024-11-13 21:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 21:08 - INFO - * -----------
2024-11-13 21:15 - INFO - ---------------------------------------------
2024-11-13 21:15 - INFO - Epoch: 01 | Time: 7m 5s
2024-11-13 21:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32001
2024-11-13 21:15 - INFO - 	 Train Loss: 0.152
2024-11-13 21:15 - INFO - 	 Val. Loss: 0.162
2024-11-13 21:15 - INFO - 	 ROC-AUC: 0.851
2024-11-13 21:15 - INFO - 	 PR-AUC: 0.320
2024-11-13 21:15 - INFO - 	 Best Val. Loss: 0.162
2024-11-13 21:15 - INFO - 	 Best ROC-AUC: 0.851
2024-11-13 21:15 - INFO - 	 Best PR-AUC: 0.320
2024-11-13 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.781
2024-11-13 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.146
2024-11-13 21:15 - INFO - ---------------------------------------------
2024-11-13 21:23 - INFO - ---------------------------------------------
2024-11-13 21:23 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-13 21:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45095
2024-11-13 21:23 - INFO - 	 Train Loss: 0.143
2024-11-13 21:23 - INFO - 	 Val. Loss: 0.153
2024-11-13 21:23 - INFO - 	 ROC-AUC: 0.922
2024-11-13 21:23 - INFO - 	 PR-AUC: 0.451
2024-11-13 21:23 - INFO - 	 Best Val. Loss: 0.153
2024-11-13 21:23 - INFO - 	 Best ROC-AUC: 0.922
2024-11-13 21:23 - INFO - 	 Best PR-AUC: 0.451
2024-11-13 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.850
2024-11-13 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.223
2024-11-13 21:23 - INFO - ---------------------------------------------
2024-11-13 21:30 - INFO - ---------------------------------------------
2024-11-13 21:30 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-13 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52082
2024-11-13 21:30 - INFO - 	 Train Loss: 0.126
2024-11-13 21:30 - INFO - 	 Val. Loss: 0.145
2024-11-13 21:30 - INFO - 	 ROC-AUC: 0.955
2024-11-13 21:30 - INFO - 	 PR-AUC: 0.521
2024-11-13 21:30 - INFO - 	 Best Val. Loss: 0.145
2024-11-13 21:30 - INFO - 	 Best ROC-AUC: 0.955
2024-11-13 21:30 - INFO - 	 Best PR-AUC: 0.521
2024-11-13 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-13 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.265
2024-11-13 21:30 - INFO - ---------------------------------------------
2024-11-13 21:37 - INFO - ---------------------------------------------
2024-11-13 21:37 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-13 21:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61873
2024-11-13 21:37 - INFO - 	 Train Loss: 0.116
2024-11-13 21:37 - INFO - 	 Val. Loss: 0.102
2024-11-13 21:37 - INFO - 	 ROC-AUC: 0.974
2024-11-13 21:37 - INFO - 	 PR-AUC: 0.619
2024-11-13 21:37 - INFO - 	 Best Val. Loss: 0.102
2024-11-13 21:37 - INFO - 	 Best ROC-AUC: 0.974
2024-11-13 21:37 - INFO - 	 Best PR-AUC: 0.619
2024-11-13 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-13 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.428
2024-11-13 21:37 - INFO - ---------------------------------------------
2024-11-13 21:44 - INFO - ---------------------------------------------
2024-11-13 21:44 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-13 21:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62198
2024-11-13 21:44 - INFO - 	 Train Loss: 0.107
2024-11-13 21:44 - INFO - 	 Val. Loss: 0.097
2024-11-13 21:44 - INFO - 	 ROC-AUC: 0.974
2024-11-13 21:44 - INFO - 	 PR-AUC: 0.622
2024-11-13 21:44 - INFO - 	 Best Val. Loss: 0.097
2024-11-13 21:44 - INFO - 	 Best ROC-AUC: 0.974
2024-11-13 21:44 - INFO - 	 Best PR-AUC: 0.622
2024-11-13 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-13 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-11-13 21:44 - INFO - ---------------------------------------------
2024-11-13 21:51 - INFO - ---------------------------------------------
2024-11-13 21:51 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-13 21:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69047
2024-11-13 21:51 - INFO - 	 Train Loss: 0.104
2024-11-13 21:51 - INFO - 	 Val. Loss: 0.092
2024-11-13 21:51 - INFO - 	 ROC-AUC: 0.978
2024-11-13 21:51 - INFO - 	 PR-AUC: 0.690
2024-11-13 21:51 - INFO - 	 Best Val. Loss: 0.092
2024-11-13 21:51 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 21:51 - INFO - 	 Best PR-AUC: 0.690
2024-11-13 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-13 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.479
2024-11-13 21:51 - INFO - ---------------------------------------------
2024-11-13 21:58 - INFO - ---------------------------------------------
2024-11-13 21:58 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-13 21:58 - INFO - 	 Train Loss: 0.100
2024-11-13 21:58 - INFO - 	 Val. Loss: 0.102
2024-11-13 21:58 - INFO - 	 ROC-AUC: 0.964
2024-11-13 21:58 - INFO - 	 PR-AUC: 0.602
2024-11-13 21:58 - INFO - 	 Best Val. Loss: 0.092
2024-11-13 21:58 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 21:58 - INFO - 	 Best PR-AUC: 0.690
2024-11-13 21:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-13 21:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.479
2024-11-13 21:58 - INFO - ---------------------------------------------
2024-11-13 22:05 - INFO - ---------------------------------------------
2024-11-13 22:05 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-13 22:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69324
2024-11-13 22:05 - INFO - 	 Train Loss: 0.100
2024-11-13 22:05 - INFO - 	 Val. Loss: 0.095
2024-11-13 22:05 - INFO - 	 ROC-AUC: 0.978
2024-11-13 22:05 - INFO - 	 PR-AUC: 0.693
2024-11-13 22:05 - INFO - 	 Best Val. Loss: 0.092
2024-11-13 22:05 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 22:05 - INFO - 	 Best PR-AUC: 0.693
2024-11-13 22:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-13 22:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.552
2024-11-13 22:05 - INFO - ---------------------------------------------
2024-11-13 22:13 - INFO - ---------------------------------------------
2024-11-13 22:13 - INFO - Epoch: 09 | Time: 7m 9s
2024-11-13 22:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70873
2024-11-13 22:13 - INFO - 	 Train Loss: 0.100
2024-11-13 22:13 - INFO - 	 Val. Loss: 0.098
2024-11-13 22:13 - INFO - 	 ROC-AUC: 0.972
2024-11-13 22:13 - INFO - 	 PR-AUC: 0.709
2024-11-13 22:13 - INFO - 	 Best Val. Loss: 0.092
2024-11-13 22:13 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 22:13 - INFO - 	 Best PR-AUC: 0.709
2024-11-13 22:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-13 22:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.552
2024-11-13 22:13 - INFO - ---------------------------------------------
2024-11-13 22:20 - INFO - ---------------------------------------------
2024-11-13 22:20 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-13 22:20 - INFO - 	 Train Loss: 0.098
2024-11-13 22:20 - INFO - 	 Val. Loss: 0.129
2024-11-13 22:20 - INFO - 	 ROC-AUC: 0.961
2024-11-13 22:20 - INFO - 	 PR-AUC: 0.579
2024-11-13 22:20 - INFO - 	 Best Val. Loss: 0.092
2024-11-13 22:20 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 22:20 - INFO - 	 Best PR-AUC: 0.709
2024-11-13 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-13 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.552
2024-11-13 22:20 - INFO - ---------------------------------------------
2024-11-13 22:21 - INFO - Fit the preprocessing pipeline
2024-11-13 22:21 - INFO - Training using device: cuda
2024-11-13 22:21 - INFO - Creating generators
2024-11-13 22:21 - INFO - The model has 2,246,929 trainable parameters
2024-11-13 22:21 - INFO - * Model:
2024-11-13 22:21 - INFO - * -----------
2024-11-13 22:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-13 22:21 - INFO - * -----------
2024-11-13 22:28 - INFO - ---------------------------------------------
2024-11-13 22:28 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-13 22:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31964
2024-11-13 22:28 - INFO - 	 Train Loss: 0.151
2024-11-13 22:28 - INFO - 	 Val. Loss: 0.159
2024-11-13 22:28 - INFO - 	 ROC-AUC: 0.867
2024-11-13 22:28 - INFO - 	 PR-AUC: 0.320
2024-11-13 22:28 - INFO - 	 Best Val. Loss: 0.159
2024-11-13 22:28 - INFO - 	 Best ROC-AUC: 0.867
2024-11-13 22:28 - INFO - 	 Best PR-AUC: 0.320
2024-11-13 22:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.796
2024-11-13 22:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-13 22:28 - INFO - ---------------------------------------------
2024-11-13 22:36 - INFO - ---------------------------------------------
2024-11-13 22:36 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-13 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38141
2024-11-13 22:36 - INFO - 	 Train Loss: 0.144
2024-11-13 22:36 - INFO - 	 Val. Loss: 0.168
2024-11-13 22:36 - INFO - 	 ROC-AUC: 0.899
2024-11-13 22:36 - INFO - 	 PR-AUC: 0.381
2024-11-13 22:36 - INFO - 	 Best Val. Loss: 0.159
2024-11-13 22:36 - INFO - 	 Best ROC-AUC: 0.899
2024-11-13 22:36 - INFO - 	 Best PR-AUC: 0.381
2024-11-13 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.836
2024-11-13 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.205
2024-11-13 22:36 - INFO - ---------------------------------------------
2024-11-13 22:43 - INFO - ---------------------------------------------
2024-11-13 22:43 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-13 22:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46039
2024-11-13 22:43 - INFO - 	 Train Loss: 0.130
2024-11-13 22:43 - INFO - 	 Val. Loss: 0.171
2024-11-13 22:43 - INFO - 	 ROC-AUC: 0.929
2024-11-13 22:43 - INFO - 	 PR-AUC: 0.460
2024-11-13 22:43 - INFO - 	 Best Val. Loss: 0.159
2024-11-13 22:43 - INFO - 	 Best ROC-AUC: 0.929
2024-11-13 22:43 - INFO - 	 Best PR-AUC: 0.460
2024-11-13 22:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.899
2024-11-13 22:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-13 22:43 - INFO - ---------------------------------------------
2024-11-13 22:50 - INFO - ---------------------------------------------
2024-11-13 22:50 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-13 22:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55335
2024-11-13 22:50 - INFO - 	 Train Loss: 0.120
2024-11-13 22:50 - INFO - 	 Val. Loss: 0.134
2024-11-13 22:50 - INFO - 	 ROC-AUC: 0.961
2024-11-13 22:50 - INFO - 	 PR-AUC: 0.553
2024-11-13 22:50 - INFO - 	 Best Val. Loss: 0.134
2024-11-13 22:50 - INFO - 	 Best ROC-AUC: 0.961
2024-11-13 22:50 - INFO - 	 Best PR-AUC: 0.553
2024-11-13 22:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-13 22:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-13 22:50 - INFO - ---------------------------------------------
2024-11-13 22:57 - INFO - ---------------------------------------------
2024-11-13 22:57 - INFO - Epoch: 05 | Time: 7m 5s
2024-11-13 22:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65563
2024-11-13 22:57 - INFO - 	 Train Loss: 0.111
2024-11-13 22:57 - INFO - 	 Val. Loss: 0.101
2024-11-13 22:57 - INFO - 	 ROC-AUC: 0.973
2024-11-13 22:57 - INFO - 	 PR-AUC: 0.656
2024-11-13 22:57 - INFO - 	 Best Val. Loss: 0.101
2024-11-13 22:57 - INFO - 	 Best ROC-AUC: 0.973
2024-11-13 22:57 - INFO - 	 Best PR-AUC: 0.656
2024-11-13 22:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-13 22:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.332
2024-11-13 22:57 - INFO - ---------------------------------------------
2024-11-13 23:04 - INFO - ---------------------------------------------
2024-11-13 23:04 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-13 23:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65742
2024-11-13 23:04 - INFO - 	 Train Loss: 0.105
2024-11-13 23:04 - INFO - 	 Val. Loss: 0.103
2024-11-13 23:04 - INFO - 	 ROC-AUC: 0.977
2024-11-13 23:04 - INFO - 	 PR-AUC: 0.657
2024-11-13 23:04 - INFO - 	 Best Val. Loss: 0.101
2024-11-13 23:04 - INFO - 	 Best ROC-AUC: 0.977
2024-11-13 23:04 - INFO - 	 Best PR-AUC: 0.657
2024-11-13 23:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-13 23:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-11-13 23:04 - INFO - ---------------------------------------------
2024-11-13 23:11 - INFO - ---------------------------------------------
2024-11-13 23:11 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-13 23:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71189
2024-11-13 23:11 - INFO - 	 Train Loss: 0.104
2024-11-13 23:11 - INFO - 	 Val. Loss: 0.087
2024-11-13 23:11 - INFO - 	 ROC-AUC: 0.978
2024-11-13 23:11 - INFO - 	 PR-AUC: 0.712
2024-11-13 23:11 - INFO - 	 Best Val. Loss: 0.087
2024-11-13 23:11 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 23:11 - INFO - 	 Best PR-AUC: 0.712
2024-11-13 23:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 23:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.452
2024-11-13 23:11 - INFO - ---------------------------------------------
2024-11-13 23:18 - INFO - ---------------------------------------------
2024-11-13 23:18 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-13 23:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74021
2024-11-13 23:18 - INFO - 	 Train Loss: 0.104
2024-11-13 23:18 - INFO - 	 Val. Loss: 0.084
2024-11-13 23:18 - INFO - 	 ROC-AUC: 0.972
2024-11-13 23:18 - INFO - 	 PR-AUC: 0.740
2024-11-13 23:18 - INFO - 	 Best Val. Loss: 0.084
2024-11-13 23:18 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 23:18 - INFO - 	 Best PR-AUC: 0.740
2024-11-13 23:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 23:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.494
2024-11-13 23:18 - INFO - ---------------------------------------------
2024-11-13 23:26 - INFO - ---------------------------------------------
2024-11-13 23:26 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-13 23:26 - INFO - 	 Train Loss: 0.101
2024-11-13 23:26 - INFO - 	 Val. Loss: 0.087
2024-11-13 23:26 - INFO - 	 ROC-AUC: 0.970
2024-11-13 23:26 - INFO - 	 PR-AUC: 0.735
2024-11-13 23:26 - INFO - 	 Best Val. Loss: 0.084
2024-11-13 23:26 - INFO - 	 Best ROC-AUC: 0.978
2024-11-13 23:26 - INFO - 	 Best PR-AUC: 0.740
2024-11-13 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-13 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.494
2024-11-13 23:26 - INFO - ---------------------------------------------
2024-11-13 23:33 - INFO - ---------------------------------------------
2024-11-13 23:33 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-13 23:33 - INFO - 	 Train Loss: 0.100
2024-11-13 23:33 - INFO - 	 Val. Loss: 0.084
2024-11-13 23:33 - INFO - 	 ROC-AUC: 0.981
2024-11-13 23:33 - INFO - 	 PR-AUC: 0.735
2024-11-13 23:33 - INFO - 	 Best Val. Loss: 0.084
2024-11-13 23:33 - INFO - 	 Best ROC-AUC: 0.981
2024-11-13 23:33 - INFO - 	 Best PR-AUC: 0.740
2024-11-13 23:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-13 23:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.494
2024-11-13 23:33 - INFO - ---------------------------------------------
