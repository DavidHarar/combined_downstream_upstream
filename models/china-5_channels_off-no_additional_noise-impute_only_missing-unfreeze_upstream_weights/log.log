2024-11-19 12:43 - INFO - Fit the preprocessing pipeline
2024-11-19 12:43 - INFO - Training using device: cuda
2024-11-19 12:43 - INFO - Creating generators
2024-11-19 12:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 12:43 - INFO - * Model:
2024-11-19 12:43 - INFO - * -----------
2024-11-19 12:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 12:43 - INFO - * -----------
2024-11-19 12:50 - INFO - ---------------------------------------------
2024-11-19 12:50 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-19 12:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34819
2024-11-19 12:50 - INFO - 	 Train Loss: 0.152
2024-11-19 12:50 - INFO - 	 Val. Loss: 0.169
2024-11-19 12:50 - INFO - 	 ROC-AUC: 0.855
2024-11-19 12:50 - INFO - 	 PR-AUC: 0.348
2024-11-19 12:50 - INFO - 	 Best Val. Loss: 0.169
2024-11-19 12:50 - INFO - 	 Best ROC-AUC: 0.855
2024-11-19 12:50 - INFO - 	 Best PR-AUC: 0.348
2024-11-19 12:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-19 12:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.135
2024-11-19 12:50 - INFO - ---------------------------------------------
2024-11-19 12:57 - INFO - ---------------------------------------------
2024-11-19 12:57 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-19 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41295
2024-11-19 12:57 - INFO - 	 Train Loss: 0.147
2024-11-19 12:57 - INFO - 	 Val. Loss: 0.153
2024-11-19 12:57 - INFO - 	 ROC-AUC: 0.896
2024-11-19 12:57 - INFO - 	 PR-AUC: 0.413
2024-11-19 12:57 - INFO - 	 Best Val. Loss: 0.153
2024-11-19 12:57 - INFO - 	 Best ROC-AUC: 0.896
2024-11-19 12:57 - INFO - 	 Best PR-AUC: 0.413
2024-11-19 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.808
2024-11-19 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.193
2024-11-19 12:57 - INFO - ---------------------------------------------
2024-11-19 13:04 - INFO - ---------------------------------------------
2024-11-19 13:04 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-19 13:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45583
2024-11-19 13:04 - INFO - 	 Train Loss: 0.131
2024-11-19 13:04 - INFO - 	 Val. Loss: 0.157
2024-11-19 13:04 - INFO - 	 ROC-AUC: 0.947
2024-11-19 13:04 - INFO - 	 PR-AUC: 0.456
2024-11-19 13:04 - INFO - 	 Best Val. Loss: 0.153
2024-11-19 13:04 - INFO - 	 Best ROC-AUC: 0.947
2024-11-19 13:04 - INFO - 	 Best PR-AUC: 0.456
2024-11-19 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.881
2024-11-19 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.244
2024-11-19 13:04 - INFO - ---------------------------------------------
2024-11-19 13:11 - INFO - ---------------------------------------------
2024-11-19 13:11 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-19 13:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60991
2024-11-19 13:11 - INFO - 	 Train Loss: 0.117
2024-11-19 13:11 - INFO - 	 Val. Loss: 0.116
2024-11-19 13:11 - INFO - 	 ROC-AUC: 0.962
2024-11-19 13:11 - INFO - 	 PR-AUC: 0.610
2024-11-19 13:11 - INFO - 	 Best Val. Loss: 0.116
2024-11-19 13:11 - INFO - 	 Best ROC-AUC: 0.962
2024-11-19 13:11 - INFO - 	 Best PR-AUC: 0.610
2024-11-19 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-19 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-19 13:11 - INFO - ---------------------------------------------
2024-11-19 13:18 - INFO - ---------------------------------------------
2024-11-19 13:18 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-19 13:18 - INFO - 	 Train Loss: 0.110
2024-11-19 13:18 - INFO - 	 Val. Loss: 0.118
2024-11-19 13:18 - INFO - 	 ROC-AUC: 0.956
2024-11-19 13:18 - INFO - 	 PR-AUC: 0.553
2024-11-19 13:18 - INFO - 	 Best Val. Loss: 0.116
2024-11-19 13:18 - INFO - 	 Best ROC-AUC: 0.962
2024-11-19 13:18 - INFO - 	 Best PR-AUC: 0.610
2024-11-19 13:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-19 13:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-19 13:18 - INFO - ---------------------------------------------
2024-11-19 13:25 - INFO - ---------------------------------------------
2024-11-19 13:25 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-19 13:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67122
2024-11-19 13:25 - INFO - 	 Train Loss: 0.105
2024-11-19 13:25 - INFO - 	 Val. Loss: 0.091
2024-11-19 13:25 - INFO - 	 ROC-AUC: 0.969
2024-11-19 13:25 - INFO - 	 PR-AUC: 0.671
2024-11-19 13:25 - INFO - 	 Best Val. Loss: 0.091
2024-11-19 13:25 - INFO - 	 Best ROC-AUC: 0.969
2024-11-19 13:25 - INFO - 	 Best PR-AUC: 0.671
2024-11-19 13:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 13:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.468
2024-11-19 13:25 - INFO - ---------------------------------------------
2024-11-19 13:33 - INFO - ---------------------------------------------
2024-11-19 13:33 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-19 13:33 - INFO - 	 Train Loss: 0.102
2024-11-19 13:33 - INFO - 	 Val. Loss: 0.094
2024-11-19 13:33 - INFO - 	 ROC-AUC: 0.972
2024-11-19 13:33 - INFO - 	 PR-AUC: 0.671
2024-11-19 13:33 - INFO - 	 Best Val. Loss: 0.091
2024-11-19 13:33 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 13:33 - INFO - 	 Best PR-AUC: 0.671
2024-11-19 13:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 13:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.468
2024-11-19 13:33 - INFO - ---------------------------------------------
2024-11-19 13:40 - INFO - ---------------------------------------------
2024-11-19 13:40 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-19 13:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71506
2024-11-19 13:40 - INFO - 	 Train Loss: 0.101
2024-11-19 13:40 - INFO - 	 Val. Loss: 0.090
2024-11-19 13:40 - INFO - 	 ROC-AUC: 0.966
2024-11-19 13:40 - INFO - 	 PR-AUC: 0.715
2024-11-19 13:40 - INFO - 	 Best Val. Loss: 0.090
2024-11-19 13:40 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 13:40 - INFO - 	 Best PR-AUC: 0.715
2024-11-19 13:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 13:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.498
2024-11-19 13:40 - INFO - ---------------------------------------------
2024-11-19 13:47 - INFO - ---------------------------------------------
2024-11-19 13:47 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-19 13:47 - INFO - 	 Train Loss: 0.103
2024-11-19 13:47 - INFO - 	 Val. Loss: 0.083
2024-11-19 13:47 - INFO - 	 ROC-AUC: 0.970
2024-11-19 13:47 - INFO - 	 PR-AUC: 0.682
2024-11-19 13:47 - INFO - 	 Best Val. Loss: 0.083
2024-11-19 13:47 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 13:47 - INFO - 	 Best PR-AUC: 0.715
2024-11-19 13:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 13:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.498
2024-11-19 13:47 - INFO - ---------------------------------------------
2024-11-19 13:54 - INFO - ---------------------------------------------
2024-11-19 13:54 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-19 13:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72644
2024-11-19 13:54 - INFO - 	 Train Loss: 0.099
2024-11-19 13:54 - INFO - 	 Val. Loss: 0.081
2024-11-19 13:54 - INFO - 	 ROC-AUC: 0.971
2024-11-19 13:54 - INFO - 	 PR-AUC: 0.726
2024-11-19 13:54 - INFO - 	 Best Val. Loss: 0.081
2024-11-19 13:54 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 13:54 - INFO - 	 Best PR-AUC: 0.726
2024-11-19 13:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 13:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.554
2024-11-19 13:54 - INFO - ---------------------------------------------
2024-11-19 13:56 - INFO - Fit the preprocessing pipeline
2024-11-19 13:56 - INFO - Training using device: cuda
2024-11-19 13:56 - INFO - Creating generators
2024-11-19 13:56 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 13:56 - INFO - * Model:
2024-11-19 13:56 - INFO - * -----------
2024-11-19 13:56 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 13:56 - INFO - * -----------
2024-11-19 14:03 - INFO - ---------------------------------------------
2024-11-19 14:03 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-19 14:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24056
2024-11-19 14:03 - INFO - 	 Train Loss: 0.153
2024-11-19 14:03 - INFO - 	 Val. Loss: 0.169
2024-11-19 14:03 - INFO - 	 ROC-AUC: 0.852
2024-11-19 14:03 - INFO - 	 PR-AUC: 0.241
2024-11-19 14:03 - INFO - 	 Best Val. Loss: 0.169
2024-11-19 14:03 - INFO - 	 Best ROC-AUC: 0.852
2024-11-19 14:03 - INFO - 	 Best PR-AUC: 0.241
2024-11-19 14:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-19 14:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.120
2024-11-19 14:03 - INFO - ---------------------------------------------
2024-11-19 14:10 - INFO - ---------------------------------------------
2024-11-19 14:10 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-19 14:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40162
2024-11-19 14:10 - INFO - 	 Train Loss: 0.148
2024-11-19 14:10 - INFO - 	 Val. Loss: 0.169
2024-11-19 14:10 - INFO - 	 ROC-AUC: 0.901
2024-11-19 14:10 - INFO - 	 PR-AUC: 0.402
2024-11-19 14:10 - INFO - 	 Best Val. Loss: 0.169
2024-11-19 14:10 - INFO - 	 Best ROC-AUC: 0.901
2024-11-19 14:10 - INFO - 	 Best PR-AUC: 0.402
2024-11-19 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.803
2024-11-19 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-19 14:10 - INFO - ---------------------------------------------
2024-11-19 14:17 - INFO - ---------------------------------------------
2024-11-19 14:17 - INFO - Epoch: 03 | Time: 7m 9s
2024-11-19 14:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.495
2024-11-19 14:17 - INFO - 	 Train Loss: 0.134
2024-11-19 14:17 - INFO - 	 Val. Loss: 0.134
2024-11-19 14:17 - INFO - 	 ROC-AUC: 0.934
2024-11-19 14:17 - INFO - 	 PR-AUC: 0.495
2024-11-19 14:17 - INFO - 	 Best Val. Loss: 0.134
2024-11-19 14:17 - INFO - 	 Best ROC-AUC: 0.934
2024-11-19 14:17 - INFO - 	 Best PR-AUC: 0.495
2024-11-19 14:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-19 14:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-19 14:17 - INFO - ---------------------------------------------
2024-11-19 14:24 - INFO - ---------------------------------------------
2024-11-19 14:24 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-19 14:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62533
2024-11-19 14:24 - INFO - 	 Train Loss: 0.116
2024-11-19 14:24 - INFO - 	 Val. Loss: 0.116
2024-11-19 14:24 - INFO - 	 ROC-AUC: 0.967
2024-11-19 14:24 - INFO - 	 PR-AUC: 0.625
2024-11-19 14:24 - INFO - 	 Best Val. Loss: 0.116
2024-11-19 14:24 - INFO - 	 Best ROC-AUC: 0.967
2024-11-19 14:24 - INFO - 	 Best PR-AUC: 0.625
2024-11-19 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-19 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.358
2024-11-19 14:24 - INFO - ---------------------------------------------
2024-11-19 14:31 - INFO - ---------------------------------------------
2024-11-19 14:31 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-19 14:31 - INFO - 	 Train Loss: 0.108
2024-11-19 14:31 - INFO - 	 Val. Loss: 0.101
2024-11-19 14:31 - INFO - 	 ROC-AUC: 0.961
2024-11-19 14:31 - INFO - 	 PR-AUC: 0.620
2024-11-19 14:31 - INFO - 	 Best Val. Loss: 0.101
2024-11-19 14:31 - INFO - 	 Best ROC-AUC: 0.967
2024-11-19 14:31 - INFO - 	 Best PR-AUC: 0.625
2024-11-19 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-19 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.358
2024-11-19 14:31 - INFO - ---------------------------------------------
2024-11-19 14:38 - INFO - ---------------------------------------------
2024-11-19 14:38 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-19 14:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69174
2024-11-19 14:38 - INFO - 	 Train Loss: 0.106
2024-11-19 14:38 - INFO - 	 Val. Loss: 0.085
2024-11-19 14:38 - INFO - 	 ROC-AUC: 0.966
2024-11-19 14:38 - INFO - 	 PR-AUC: 0.692
2024-11-19 14:38 - INFO - 	 Best Val. Loss: 0.085
2024-11-19 14:38 - INFO - 	 Best ROC-AUC: 0.967
2024-11-19 14:38 - INFO - 	 Best PR-AUC: 0.692
2024-11-19 14:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-19 14:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.459
2024-11-19 14:38 - INFO - ---------------------------------------------
2024-11-19 14:46 - INFO - ---------------------------------------------
2024-11-19 14:46 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-19 14:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73079
2024-11-19 14:46 - INFO - 	 Train Loss: 0.101
2024-11-19 14:46 - INFO - 	 Val. Loss: 0.101
2024-11-19 14:46 - INFO - 	 ROC-AUC: 0.963
2024-11-19 14:46 - INFO - 	 PR-AUC: 0.731
2024-11-19 14:46 - INFO - 	 Best Val. Loss: 0.085
2024-11-19 14:46 - INFO - 	 Best ROC-AUC: 0.967
2024-11-19 14:46 - INFO - 	 Best PR-AUC: 0.731
2024-11-19 14:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-19 14:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.458
2024-11-19 14:46 - INFO - ---------------------------------------------
2024-11-19 14:53 - INFO - ---------------------------------------------
2024-11-19 14:53 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-19 14:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7311
2024-11-19 14:53 - INFO - 	 Train Loss: 0.102
2024-11-19 14:53 - INFO - 	 Val. Loss: 0.093
2024-11-19 14:53 - INFO - 	 ROC-AUC: 0.971
2024-11-19 14:53 - INFO - 	 PR-AUC: 0.731
2024-11-19 14:53 - INFO - 	 Best Val. Loss: 0.085
2024-11-19 14:53 - INFO - 	 Best ROC-AUC: 0.971
2024-11-19 14:53 - INFO - 	 Best PR-AUC: 0.731
2024-11-19 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.477
2024-11-19 14:53 - INFO - ---------------------------------------------
2024-11-19 15:00 - INFO - ---------------------------------------------
2024-11-19 15:00 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-19 15:00 - INFO - 	 Train Loss: 0.099
2024-11-19 15:00 - INFO - 	 Val. Loss: 0.091
2024-11-19 15:00 - INFO - 	 ROC-AUC: 0.962
2024-11-19 15:00 - INFO - 	 PR-AUC: 0.713
2024-11-19 15:00 - INFO - 	 Best Val. Loss: 0.085
2024-11-19 15:00 - INFO - 	 Best ROC-AUC: 0.971
2024-11-19 15:00 - INFO - 	 Best PR-AUC: 0.731
2024-11-19 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.477
2024-11-19 15:00 - INFO - ---------------------------------------------
2024-11-19 15:07 - INFO - ---------------------------------------------
2024-11-19 15:07 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-19 15:07 - INFO - 	 Train Loss: 0.098
2024-11-19 15:07 - INFO - 	 Val. Loss: 0.097
2024-11-19 15:07 - INFO - 	 ROC-AUC: 0.975
2024-11-19 15:07 - INFO - 	 PR-AUC: 0.726
2024-11-19 15:07 - INFO - 	 Best Val. Loss: 0.085
2024-11-19 15:07 - INFO - 	 Best ROC-AUC: 0.975
2024-11-19 15:07 - INFO - 	 Best PR-AUC: 0.731
2024-11-19 15:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-19 15:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.477
2024-11-19 15:07 - INFO - ---------------------------------------------
2024-11-19 15:09 - INFO - Fit the preprocessing pipeline
2024-11-19 15:09 - INFO - Training using device: cuda
2024-11-19 15:09 - INFO - Creating generators
2024-11-19 15:09 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 15:09 - INFO - * Model:
2024-11-19 15:09 - INFO - * -----------
2024-11-19 15:09 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 15:09 - INFO - * -----------
2024-11-19 15:16 - INFO - ---------------------------------------------
2024-11-19 15:16 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-19 15:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32401
2024-11-19 15:16 - INFO - 	 Train Loss: 0.151
2024-11-19 15:16 - INFO - 	 Val. Loss: 0.162
2024-11-19 15:16 - INFO - 	 ROC-AUC: 0.858
2024-11-19 15:16 - INFO - 	 PR-AUC: 0.324
2024-11-19 15:16 - INFO - 	 Best Val. Loss: 0.162
2024-11-19 15:16 - INFO - 	 Best ROC-AUC: 0.858
2024-11-19 15:16 - INFO - 	 Best PR-AUC: 0.324
2024-11-19 15:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-19 15:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.134
2024-11-19 15:16 - INFO - ---------------------------------------------
2024-11-19 15:23 - INFO - ---------------------------------------------
2024-11-19 15:23 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-19 15:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41875
2024-11-19 15:23 - INFO - 	 Train Loss: 0.143
2024-11-19 15:23 - INFO - 	 Val. Loss: 0.140
2024-11-19 15:23 - INFO - 	 ROC-AUC: 0.912
2024-11-19 15:23 - INFO - 	 PR-AUC: 0.419
2024-11-19 15:23 - INFO - 	 Best Val. Loss: 0.140
2024-11-19 15:23 - INFO - 	 Best ROC-AUC: 0.912
2024-11-19 15:23 - INFO - 	 Best PR-AUC: 0.419
2024-11-19 15:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.811
2024-11-19 15:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.198
2024-11-19 15:23 - INFO - ---------------------------------------------
2024-11-19 15:30 - INFO - ---------------------------------------------
2024-11-19 15:30 - INFO - Epoch: 03 | Time: 7m 9s
2024-11-19 15:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48993
2024-11-19 15:30 - INFO - 	 Train Loss: 0.130
2024-11-19 15:30 - INFO - 	 Val. Loss: 0.149
2024-11-19 15:30 - INFO - 	 ROC-AUC: 0.924
2024-11-19 15:30 - INFO - 	 PR-AUC: 0.490
2024-11-19 15:30 - INFO - 	 Best Val. Loss: 0.140
2024-11-19 15:30 - INFO - 	 Best ROC-AUC: 0.924
2024-11-19 15:30 - INFO - 	 Best PR-AUC: 0.490
2024-11-19 15:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-19 15:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.250
2024-11-19 15:30 - INFO - ---------------------------------------------
2024-11-19 15:37 - INFO - ---------------------------------------------
2024-11-19 15:37 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-19 15:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60763
2024-11-19 15:37 - INFO - 	 Train Loss: 0.114
2024-11-19 15:37 - INFO - 	 Val. Loss: 0.111
2024-11-19 15:37 - INFO - 	 ROC-AUC: 0.966
2024-11-19 15:37 - INFO - 	 PR-AUC: 0.608
2024-11-19 15:37 - INFO - 	 Best Val. Loss: 0.111
2024-11-19 15:37 - INFO - 	 Best ROC-AUC: 0.966
2024-11-19 15:37 - INFO - 	 Best PR-AUC: 0.608
2024-11-19 15:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-19 15:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.372
2024-11-19 15:37 - INFO - ---------------------------------------------
2024-11-19 15:44 - INFO - ---------------------------------------------
2024-11-19 15:44 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-19 15:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61001
2024-11-19 15:44 - INFO - 	 Train Loss: 0.110
2024-11-19 15:44 - INFO - 	 Val. Loss: 0.103
2024-11-19 15:44 - INFO - 	 ROC-AUC: 0.968
2024-11-19 15:44 - INFO - 	 PR-AUC: 0.610
2024-11-19 15:44 - INFO - 	 Best Val. Loss: 0.103
2024-11-19 15:44 - INFO - 	 Best ROC-AUC: 0.968
2024-11-19 15:44 - INFO - 	 Best PR-AUC: 0.610
2024-11-19 15:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-19 15:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.359
2024-11-19 15:44 - INFO - ---------------------------------------------
2024-11-19 15:52 - INFO - ---------------------------------------------
2024-11-19 15:52 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-19 15:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63025
2024-11-19 15:52 - INFO - 	 Train Loss: 0.104
2024-11-19 15:52 - INFO - 	 Val. Loss: 0.098
2024-11-19 15:52 - INFO - 	 ROC-AUC: 0.967
2024-11-19 15:52 - INFO - 	 PR-AUC: 0.630
2024-11-19 15:52 - INFO - 	 Best Val. Loss: 0.098
2024-11-19 15:52 - INFO - 	 Best ROC-AUC: 0.968
2024-11-19 15:52 - INFO - 	 Best PR-AUC: 0.630
2024-11-19 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-19 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.366
2024-11-19 15:52 - INFO - ---------------------------------------------
2024-11-19 15:59 - INFO - ---------------------------------------------
2024-11-19 15:59 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-19 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6913
2024-11-19 15:59 - INFO - 	 Train Loss: 0.101
2024-11-19 15:59 - INFO - 	 Val. Loss: 0.090
2024-11-19 15:59 - INFO - 	 ROC-AUC: 0.964
2024-11-19 15:59 - INFO - 	 PR-AUC: 0.691
2024-11-19 15:59 - INFO - 	 Best Val. Loss: 0.090
2024-11-19 15:59 - INFO - 	 Best ROC-AUC: 0.968
2024-11-19 15:59 - INFO - 	 Best PR-AUC: 0.691
2024-11-19 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-19 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-11-19 15:59 - INFO - ---------------------------------------------
2024-11-19 16:06 - INFO - ---------------------------------------------
2024-11-19 16:06 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-19 16:06 - INFO - 	 Train Loss: 0.099
2024-11-19 16:06 - INFO - 	 Val. Loss: 0.098
2024-11-19 16:06 - INFO - 	 ROC-AUC: 0.967
2024-11-19 16:06 - INFO - 	 PR-AUC: 0.649
2024-11-19 16:06 - INFO - 	 Best Val. Loss: 0.090
2024-11-19 16:06 - INFO - 	 Best ROC-AUC: 0.968
2024-11-19 16:06 - INFO - 	 Best PR-AUC: 0.691
2024-11-19 16:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-19 16:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.430
2024-11-19 16:06 - INFO - ---------------------------------------------
2024-11-19 16:13 - INFO - ---------------------------------------------
2024-11-19 16:13 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-19 16:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72512
2024-11-19 16:13 - INFO - 	 Train Loss: 0.099
2024-11-19 16:13 - INFO - 	 Val. Loss: 0.087
2024-11-19 16:13 - INFO - 	 ROC-AUC: 0.969
2024-11-19 16:13 - INFO - 	 PR-AUC: 0.725
2024-11-19 16:13 - INFO - 	 Best Val. Loss: 0.087
2024-11-19 16:13 - INFO - 	 Best ROC-AUC: 0.969
2024-11-19 16:13 - INFO - 	 Best PR-AUC: 0.725
2024-11-19 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-19 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.471
2024-11-19 16:13 - INFO - ---------------------------------------------
2024-11-19 16:20 - INFO - ---------------------------------------------
2024-11-19 16:20 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-19 16:20 - INFO - 	 Train Loss: 0.099
2024-11-19 16:20 - INFO - 	 Val. Loss: 0.085
2024-11-19 16:20 - INFO - 	 ROC-AUC: 0.972
2024-11-19 16:20 - INFO - 	 PR-AUC: 0.686
2024-11-19 16:20 - INFO - 	 Best Val. Loss: 0.085
2024-11-19 16:20 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 16:20 - INFO - 	 Best PR-AUC: 0.725
2024-11-19 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-19 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.471
2024-11-19 16:20 - INFO - ---------------------------------------------
2024-11-19 16:22 - INFO - Fit the preprocessing pipeline
2024-11-19 16:22 - INFO - Training using device: cuda
2024-11-19 16:22 - INFO - Creating generators
2024-11-19 16:22 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 16:22 - INFO - * Model:
2024-11-19 16:22 - INFO - * -----------
2024-11-19 16:22 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 16:22 - INFO - * -----------
2024-11-19 16:29 - INFO - ---------------------------------------------
2024-11-19 16:29 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-19 16:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33898
2024-11-19 16:29 - INFO - 	 Train Loss: 0.151
2024-11-19 16:29 - INFO - 	 Val. Loss: 0.161
2024-11-19 16:29 - INFO - 	 ROC-AUC: 0.861
2024-11-19 16:29 - INFO - 	 PR-AUC: 0.339
2024-11-19 16:29 - INFO - 	 Best Val. Loss: 0.161
2024-11-19 16:29 - INFO - 	 Best ROC-AUC: 0.861
2024-11-19 16:29 - INFO - 	 Best PR-AUC: 0.339
2024-11-19 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-19 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-19 16:29 - INFO - ---------------------------------------------
2024-11-19 16:36 - INFO - ---------------------------------------------
2024-11-19 16:36 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-19 16:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40062
2024-11-19 16:36 - INFO - 	 Train Loss: 0.144
2024-11-19 16:36 - INFO - 	 Val. Loss: 0.169
2024-11-19 16:36 - INFO - 	 ROC-AUC: 0.905
2024-11-19 16:36 - INFO - 	 PR-AUC: 0.401
2024-11-19 16:36 - INFO - 	 Best Val. Loss: 0.161
2024-11-19 16:36 - INFO - 	 Best ROC-AUC: 0.905
2024-11-19 16:36 - INFO - 	 Best PR-AUC: 0.401
2024-11-19 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.798
2024-11-19 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.197
2024-11-19 16:36 - INFO - ---------------------------------------------
2024-11-19 16:43 - INFO - ---------------------------------------------
2024-11-19 16:43 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-19 16:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47723
2024-11-19 16:43 - INFO - 	 Train Loss: 0.131
2024-11-19 16:43 - INFO - 	 Val. Loss: 0.142
2024-11-19 16:43 - INFO - 	 ROC-AUC: 0.933
2024-11-19 16:43 - INFO - 	 PR-AUC: 0.477
2024-11-19 16:43 - INFO - 	 Best Val. Loss: 0.142
2024-11-19 16:43 - INFO - 	 Best ROC-AUC: 0.933
2024-11-19 16:43 - INFO - 	 Best PR-AUC: 0.477
2024-11-19 16:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.875
2024-11-19 16:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.238
2024-11-19 16:43 - INFO - ---------------------------------------------
2024-11-19 16:50 - INFO - ---------------------------------------------
2024-11-19 16:50 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-19 16:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6356
2024-11-19 16:50 - INFO - 	 Train Loss: 0.117
2024-11-19 16:50 - INFO - 	 Val. Loss: 0.114
2024-11-19 16:50 - INFO - 	 ROC-AUC: 0.972
2024-11-19 16:50 - INFO - 	 PR-AUC: 0.636
2024-11-19 16:50 - INFO - 	 Best Val. Loss: 0.114
2024-11-19 16:50 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 16:50 - INFO - 	 Best PR-AUC: 0.636
2024-11-19 16:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-19 16:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-19 16:50 - INFO - ---------------------------------------------
2024-11-19 16:57 - INFO - ---------------------------------------------
2024-11-19 16:57 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-19 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63925
2024-11-19 16:57 - INFO - 	 Train Loss: 0.110
2024-11-19 16:57 - INFO - 	 Val. Loss: 0.094
2024-11-19 16:57 - INFO - 	 ROC-AUC: 0.975
2024-11-19 16:57 - INFO - 	 PR-AUC: 0.639
2024-11-19 16:57 - INFO - 	 Best Val. Loss: 0.094
2024-11-19 16:57 - INFO - 	 Best ROC-AUC: 0.975
2024-11-19 16:57 - INFO - 	 Best PR-AUC: 0.639
2024-11-19 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-19 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.465
2024-11-19 16:57 - INFO - ---------------------------------------------
2024-11-19 17:05 - INFO - ---------------------------------------------
2024-11-19 17:05 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-19 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66163
2024-11-19 17:05 - INFO - 	 Train Loss: 0.106
2024-11-19 17:05 - INFO - 	 Val. Loss: 0.094
2024-11-19 17:05 - INFO - 	 ROC-AUC: 0.976
2024-11-19 17:05 - INFO - 	 PR-AUC: 0.662
2024-11-19 17:05 - INFO - 	 Best Val. Loss: 0.094
2024-11-19 17:05 - INFO - 	 Best ROC-AUC: 0.976
2024-11-19 17:05 - INFO - 	 Best PR-AUC: 0.662
2024-11-19 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-19 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-11-19 17:05 - INFO - ---------------------------------------------
2024-11-19 17:12 - INFO - ---------------------------------------------
2024-11-19 17:12 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-19 17:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69503
2024-11-19 17:12 - INFO - 	 Train Loss: 0.104
2024-11-19 17:12 - INFO - 	 Val. Loss: 0.097
2024-11-19 17:12 - INFO - 	 ROC-AUC: 0.976
2024-11-19 17:12 - INFO - 	 PR-AUC: 0.695
2024-11-19 17:12 - INFO - 	 Best Val. Loss: 0.094
2024-11-19 17:12 - INFO - 	 Best ROC-AUC: 0.976
2024-11-19 17:12 - INFO - 	 Best PR-AUC: 0.695
2024-11-19 17:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-19 17:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-19 17:12 - INFO - ---------------------------------------------
2024-11-19 17:19 - INFO - ---------------------------------------------
2024-11-19 17:19 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-19 17:19 - INFO - 	 Train Loss: 0.102
2024-11-19 17:19 - INFO - 	 Val. Loss: 0.097
2024-11-19 17:19 - INFO - 	 ROC-AUC: 0.979
2024-11-19 17:19 - INFO - 	 PR-AUC: 0.682
2024-11-19 17:19 - INFO - 	 Best Val. Loss: 0.094
2024-11-19 17:19 - INFO - 	 Best ROC-AUC: 0.979
2024-11-19 17:19 - INFO - 	 Best PR-AUC: 0.695
2024-11-19 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-19 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-19 17:19 - INFO - ---------------------------------------------
2024-11-19 17:26 - INFO - ---------------------------------------------
2024-11-19 17:26 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-19 17:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74336
2024-11-19 17:26 - INFO - 	 Train Loss: 0.100
2024-11-19 17:26 - INFO - 	 Val. Loss: 0.092
2024-11-19 17:26 - INFO - 	 ROC-AUC: 0.977
2024-11-19 17:26 - INFO - 	 PR-AUC: 0.743
2024-11-19 17:26 - INFO - 	 Best Val. Loss: 0.092
2024-11-19 17:26 - INFO - 	 Best ROC-AUC: 0.979
2024-11-19 17:26 - INFO - 	 Best PR-AUC: 0.743
2024-11-19 17:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-19 17:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.477
2024-11-19 17:26 - INFO - ---------------------------------------------
2024-11-19 17:33 - INFO - ---------------------------------------------
2024-11-19 17:33 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-19 17:33 - INFO - 	 Train Loss: 0.100
2024-11-19 17:33 - INFO - 	 Val. Loss: 0.093
2024-11-19 17:33 - INFO - 	 ROC-AUC: 0.973
2024-11-19 17:33 - INFO - 	 PR-AUC: 0.707
2024-11-19 17:33 - INFO - 	 Best Val. Loss: 0.092
2024-11-19 17:33 - INFO - 	 Best ROC-AUC: 0.979
2024-11-19 17:33 - INFO - 	 Best PR-AUC: 0.743
2024-11-19 17:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-19 17:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.477
2024-11-19 17:33 - INFO - ---------------------------------------------
2024-11-19 17:35 - INFO - Fit the preprocessing pipeline
2024-11-19 17:35 - INFO - Training using device: cuda
2024-11-19 17:35 - INFO - Creating generators
2024-11-19 17:35 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 17:35 - INFO - * Model:
2024-11-19 17:35 - INFO - * -----------
2024-11-19 17:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 17:35 - INFO - * -----------
2024-11-19 17:42 - INFO - ---------------------------------------------
2024-11-19 17:42 - INFO - Epoch: 01 | Time: 7m 9s
2024-11-19 17:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34405
2024-11-19 17:42 - INFO - 	 Train Loss: 0.151
2024-11-19 17:42 - INFO - 	 Val. Loss: 0.168
2024-11-19 17:42 - INFO - 	 ROC-AUC: 0.857
2024-11-19 17:42 - INFO - 	 PR-AUC: 0.344
2024-11-19 17:42 - INFO - 	 Best Val. Loss: 0.168
2024-11-19 17:42 - INFO - 	 Best ROC-AUC: 0.857
2024-11-19 17:42 - INFO - 	 Best PR-AUC: 0.344
2024-11-19 17:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-19 17:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.147
2024-11-19 17:42 - INFO - ---------------------------------------------
2024-11-19 17:49 - INFO - ---------------------------------------------
2024-11-19 17:49 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-19 17:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40209
2024-11-19 17:49 - INFO - 	 Train Loss: 0.145
2024-11-19 17:49 - INFO - 	 Val. Loss: 0.153
2024-11-19 17:49 - INFO - 	 ROC-AUC: 0.891
2024-11-19 17:49 - INFO - 	 PR-AUC: 0.402
2024-11-19 17:49 - INFO - 	 Best Val. Loss: 0.153
2024-11-19 17:49 - INFO - 	 Best ROC-AUC: 0.891
2024-11-19 17:49 - INFO - 	 Best PR-AUC: 0.402
2024-11-19 17:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.802
2024-11-19 17:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-19 17:49 - INFO - ---------------------------------------------
2024-11-19 17:56 - INFO - ---------------------------------------------
2024-11-19 17:56 - INFO - Epoch: 03 | Time: 7m 9s
2024-11-19 17:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50698
2024-11-19 17:56 - INFO - 	 Train Loss: 0.138
2024-11-19 17:56 - INFO - 	 Val. Loss: 0.150
2024-11-19 17:56 - INFO - 	 ROC-AUC: 0.936
2024-11-19 17:56 - INFO - 	 PR-AUC: 0.507
2024-11-19 17:56 - INFO - 	 Best Val. Loss: 0.150
2024-11-19 17:56 - INFO - 	 Best ROC-AUC: 0.936
2024-11-19 17:56 - INFO - 	 Best PR-AUC: 0.507
2024-11-19 17:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.874
2024-11-19 17:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.242
2024-11-19 17:56 - INFO - ---------------------------------------------
2024-11-19 18:04 - INFO - ---------------------------------------------
2024-11-19 18:04 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-19 18:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56789
2024-11-19 18:04 - INFO - 	 Train Loss: 0.126
2024-11-19 18:04 - INFO - 	 Val. Loss: 0.144
2024-11-19 18:04 - INFO - 	 ROC-AUC: 0.947
2024-11-19 18:04 - INFO - 	 PR-AUC: 0.568
2024-11-19 18:04 - INFO - 	 Best Val. Loss: 0.144
2024-11-19 18:04 - INFO - 	 Best ROC-AUC: 0.947
2024-11-19 18:04 - INFO - 	 Best PR-AUC: 0.568
2024-11-19 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-19 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.318
2024-11-19 18:04 - INFO - ---------------------------------------------
2024-11-19 18:11 - INFO - ---------------------------------------------
2024-11-19 18:11 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-19 18:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57165
2024-11-19 18:11 - INFO - 	 Train Loss: 0.115
2024-11-19 18:11 - INFO - 	 Val. Loss: 0.126
2024-11-19 18:11 - INFO - 	 ROC-AUC: 0.962
2024-11-19 18:11 - INFO - 	 PR-AUC: 0.572
2024-11-19 18:11 - INFO - 	 Best Val. Loss: 0.126
2024-11-19 18:11 - INFO - 	 Best ROC-AUC: 0.962
2024-11-19 18:11 - INFO - 	 Best PR-AUC: 0.572
2024-11-19 18:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-19 18:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.305
2024-11-19 18:11 - INFO - ---------------------------------------------
2024-11-19 18:18 - INFO - ---------------------------------------------
2024-11-19 18:18 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-19 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61009
2024-11-19 18:18 - INFO - 	 Train Loss: 0.107
2024-11-19 18:18 - INFO - 	 Val. Loss: 0.119
2024-11-19 18:18 - INFO - 	 ROC-AUC: 0.961
2024-11-19 18:18 - INFO - 	 PR-AUC: 0.610
2024-11-19 18:18 - INFO - 	 Best Val. Loss: 0.119
2024-11-19 18:18 - INFO - 	 Best ROC-AUC: 0.962
2024-11-19 18:18 - INFO - 	 Best PR-AUC: 0.610
2024-11-19 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-19 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-19 18:18 - INFO - ---------------------------------------------
2024-11-19 18:25 - INFO - ---------------------------------------------
2024-11-19 18:25 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-19 18:25 - INFO - 	 Train Loss: 0.105
2024-11-19 18:25 - INFO - 	 Val. Loss: 0.114
2024-11-19 18:25 - INFO - 	 ROC-AUC: 0.960
2024-11-19 18:25 - INFO - 	 PR-AUC: 0.603
2024-11-19 18:25 - INFO - 	 Best Val. Loss: 0.114
2024-11-19 18:25 - INFO - 	 Best ROC-AUC: 0.962
2024-11-19 18:25 - INFO - 	 Best PR-AUC: 0.610
2024-11-19 18:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-19 18:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-19 18:25 - INFO - ---------------------------------------------
2024-11-19 18:32 - INFO - ---------------------------------------------
2024-11-19 18:32 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-19 18:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63597
2024-11-19 18:32 - INFO - 	 Train Loss: 0.103
2024-11-19 18:32 - INFO - 	 Val. Loss: 0.103
2024-11-19 18:32 - INFO - 	 ROC-AUC: 0.976
2024-11-19 18:32 - INFO - 	 PR-AUC: 0.636
2024-11-19 18:32 - INFO - 	 Best Val. Loss: 0.103
2024-11-19 18:32 - INFO - 	 Best ROC-AUC: 0.976
2024-11-19 18:32 - INFO - 	 Best PR-AUC: 0.636
2024-11-19 18:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 18:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.436
2024-11-19 18:32 - INFO - ---------------------------------------------
2024-11-19 18:39 - INFO - ---------------------------------------------
2024-11-19 18:39 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-19 18:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68086
2024-11-19 18:39 - INFO - 	 Train Loss: 0.101
2024-11-19 18:39 - INFO - 	 Val. Loss: 0.095
2024-11-19 18:39 - INFO - 	 ROC-AUC: 0.972
2024-11-19 18:39 - INFO - 	 PR-AUC: 0.681
2024-11-19 18:39 - INFO - 	 Best Val. Loss: 0.095
2024-11-19 18:39 - INFO - 	 Best ROC-AUC: 0.976
2024-11-19 18:39 - INFO - 	 Best PR-AUC: 0.681
2024-11-19 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.473
2024-11-19 18:39 - INFO - ---------------------------------------------
2024-11-19 18:46 - INFO - ---------------------------------------------
2024-11-19 18:46 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-19 18:46 - INFO - 	 Train Loss: 0.099
2024-11-19 18:46 - INFO - 	 Val. Loss: 0.096
2024-11-19 18:46 - INFO - 	 ROC-AUC: 0.974
2024-11-19 18:46 - INFO - 	 PR-AUC: 0.633
2024-11-19 18:46 - INFO - 	 Best Val. Loss: 0.095
2024-11-19 18:46 - INFO - 	 Best ROC-AUC: 0.976
2024-11-19 18:46 - INFO - 	 Best PR-AUC: 0.681
2024-11-19 18:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 18:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.473
2024-11-19 18:46 - INFO - ---------------------------------------------
2024-11-19 18:48 - INFO - Fit the preprocessing pipeline
2024-11-19 18:48 - INFO - Training using device: cuda
2024-11-19 18:48 - INFO - Creating generators
2024-11-19 18:48 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 18:48 - INFO - * Model:
2024-11-19 18:48 - INFO - * -----------
2024-11-19 18:48 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 18:48 - INFO - * -----------
2024-11-19 18:55 - INFO - ---------------------------------------------
2024-11-19 18:55 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-19 18:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2578
2024-11-19 18:55 - INFO - 	 Train Loss: 0.151
2024-11-19 18:55 - INFO - 	 Val. Loss: 0.167
2024-11-19 18:55 - INFO - 	 ROC-AUC: 0.850
2024-11-19 18:55 - INFO - 	 PR-AUC: 0.258
2024-11-19 18:55 - INFO - 	 Best Val. Loss: 0.167
2024-11-19 18:55 - INFO - 	 Best ROC-AUC: 0.850
2024-11-19 18:55 - INFO - 	 Best PR-AUC: 0.258
2024-11-19 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.780
2024-11-19 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.160
2024-11-19 18:55 - INFO - ---------------------------------------------
2024-11-19 19:02 - INFO - ---------------------------------------------
2024-11-19 19:02 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-19 19:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35949
2024-11-19 19:02 - INFO - 	 Train Loss: 0.145
2024-11-19 19:02 - INFO - 	 Val. Loss: 0.142
2024-11-19 19:02 - INFO - 	 ROC-AUC: 0.896
2024-11-19 19:02 - INFO - 	 PR-AUC: 0.359
2024-11-19 19:02 - INFO - 	 Best Val. Loss: 0.142
2024-11-19 19:02 - INFO - 	 Best ROC-AUC: 0.896
2024-11-19 19:02 - INFO - 	 Best PR-AUC: 0.359
2024-11-19 19:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.816
2024-11-19 19:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.195
2024-11-19 19:02 - INFO - ---------------------------------------------
2024-11-19 19:09 - INFO - ---------------------------------------------
2024-11-19 19:09 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-19 19:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46638
2024-11-19 19:09 - INFO - 	 Train Loss: 0.133
2024-11-19 19:09 - INFO - 	 Val. Loss: 0.153
2024-11-19 19:09 - INFO - 	 ROC-AUC: 0.951
2024-11-19 19:09 - INFO - 	 PR-AUC: 0.466
2024-11-19 19:09 - INFO - 	 Best Val. Loss: 0.142
2024-11-19 19:09 - INFO - 	 Best ROC-AUC: 0.951
2024-11-19 19:09 - INFO - 	 Best PR-AUC: 0.466
2024-11-19 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.894
2024-11-19 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.292
2024-11-19 19:09 - INFO - ---------------------------------------------
2024-11-19 19:17 - INFO - ---------------------------------------------
2024-11-19 19:17 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-19 19:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5243
2024-11-19 19:17 - INFO - 	 Train Loss: 0.117
2024-11-19 19:17 - INFO - 	 Val. Loss: 0.163
2024-11-19 19:17 - INFO - 	 ROC-AUC: 0.961
2024-11-19 19:17 - INFO - 	 PR-AUC: 0.524
2024-11-19 19:17 - INFO - 	 Best Val. Loss: 0.142
2024-11-19 19:17 - INFO - 	 Best ROC-AUC: 0.961
2024-11-19 19:17 - INFO - 	 Best PR-AUC: 0.524
2024-11-19 19:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-19 19:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.345
2024-11-19 19:17 - INFO - ---------------------------------------------
2024-11-19 19:24 - INFO - ---------------------------------------------
2024-11-19 19:24 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-19 19:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66785
2024-11-19 19:24 - INFO - 	 Train Loss: 0.114
2024-11-19 19:24 - INFO - 	 Val. Loss: 0.095
2024-11-19 19:24 - INFO - 	 ROC-AUC: 0.970
2024-11-19 19:24 - INFO - 	 PR-AUC: 0.668
2024-11-19 19:24 - INFO - 	 Best Val. Loss: 0.095
2024-11-19 19:24 - INFO - 	 Best ROC-AUC: 0.970
2024-11-19 19:24 - INFO - 	 Best PR-AUC: 0.668
2024-11-19 19:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-19 19:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-11-19 19:24 - INFO - ---------------------------------------------
2024-11-19 19:31 - INFO - ---------------------------------------------
2024-11-19 19:31 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-19 19:31 - INFO - 	 Train Loss: 0.106
2024-11-19 19:31 - INFO - 	 Val. Loss: 0.109
2024-11-19 19:31 - INFO - 	 ROC-AUC: 0.930
2024-11-19 19:31 - INFO - 	 PR-AUC: 0.560
2024-11-19 19:31 - INFO - 	 Best Val. Loss: 0.095
2024-11-19 19:31 - INFO - 	 Best ROC-AUC: 0.970
2024-11-19 19:31 - INFO - 	 Best PR-AUC: 0.668
2024-11-19 19:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-19 19:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-11-19 19:31 - INFO - ---------------------------------------------
2024-11-19 19:38 - INFO - ---------------------------------------------
2024-11-19 19:38 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-19 19:38 - INFO - 	 Train Loss: 0.104
2024-11-19 19:38 - INFO - 	 Val. Loss: 0.098
2024-11-19 19:38 - INFO - 	 ROC-AUC: 0.948
2024-11-19 19:38 - INFO - 	 PR-AUC: 0.604
2024-11-19 19:38 - INFO - 	 Best Val. Loss: 0.095
2024-11-19 19:38 - INFO - 	 Best ROC-AUC: 0.970
2024-11-19 19:38 - INFO - 	 Best PR-AUC: 0.668
2024-11-19 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-19 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.445
2024-11-19 19:38 - INFO - ---------------------------------------------
2024-11-19 19:45 - INFO - ---------------------------------------------
2024-11-19 19:45 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-19 19:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68441
2024-11-19 19:45 - INFO - 	 Train Loss: 0.103
2024-11-19 19:45 - INFO - 	 Val. Loss: 0.089
2024-11-19 19:45 - INFO - 	 ROC-AUC: 0.960
2024-11-19 19:45 - INFO - 	 PR-AUC: 0.684
2024-11-19 19:45 - INFO - 	 Best Val. Loss: 0.089
2024-11-19 19:45 - INFO - 	 Best ROC-AUC: 0.970
2024-11-19 19:45 - INFO - 	 Best PR-AUC: 0.684
2024-11-19 19:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-19 19:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.530
2024-11-19 19:45 - INFO - ---------------------------------------------
2024-11-19 19:52 - INFO - ---------------------------------------------
2024-11-19 19:52 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-19 19:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72892
2024-11-19 19:52 - INFO - 	 Train Loss: 0.101
2024-11-19 19:52 - INFO - 	 Val. Loss: 0.080
2024-11-19 19:52 - INFO - 	 ROC-AUC: 0.969
2024-11-19 19:52 - INFO - 	 PR-AUC: 0.729
2024-11-19 19:52 - INFO - 	 Best Val. Loss: 0.080
2024-11-19 19:52 - INFO - 	 Best ROC-AUC: 0.970
2024-11-19 19:52 - INFO - 	 Best PR-AUC: 0.729
2024-11-19 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-19 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-19 19:52 - INFO - ---------------------------------------------
2024-11-19 20:00 - INFO - ---------------------------------------------
2024-11-19 20:00 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-19 20:00 - INFO - 	 Train Loss: 0.098
2024-11-19 20:00 - INFO - 	 Val. Loss: 0.090
2024-11-19 20:00 - INFO - 	 ROC-AUC: 0.966
2024-11-19 20:00 - INFO - 	 PR-AUC: 0.713
2024-11-19 20:00 - INFO - 	 Best Val. Loss: 0.080
2024-11-19 20:00 - INFO - 	 Best ROC-AUC: 0.970
2024-11-19 20:00 - INFO - 	 Best PR-AUC: 0.729
2024-11-19 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-19 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-19 20:00 - INFO - ---------------------------------------------
2024-11-19 20:01 - INFO - Fit the preprocessing pipeline
2024-11-19 20:01 - INFO - Training using device: cuda
2024-11-19 20:01 - INFO - Creating generators
2024-11-19 20:01 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 20:01 - INFO - * Model:
2024-11-19 20:01 - INFO - * -----------
2024-11-19 20:01 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 20:01 - INFO - * -----------
2024-11-19 20:08 - INFO - ---------------------------------------------
2024-11-19 20:08 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-19 20:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3245
2024-11-19 20:08 - INFO - 	 Train Loss: 0.149
2024-11-19 20:08 - INFO - 	 Val. Loss: 0.161
2024-11-19 20:08 - INFO - 	 ROC-AUC: 0.858
2024-11-19 20:08 - INFO - 	 PR-AUC: 0.324
2024-11-19 20:08 - INFO - 	 Best Val. Loss: 0.161
2024-11-19 20:08 - INFO - 	 Best ROC-AUC: 0.858
2024-11-19 20:08 - INFO - 	 Best PR-AUC: 0.324
2024-11-19 20:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.788
2024-11-19 20:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.152
2024-11-19 20:08 - INFO - ---------------------------------------------
2024-11-19 20:15 - INFO - ---------------------------------------------
2024-11-19 20:15 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-19 20:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40482
2024-11-19 20:15 - INFO - 	 Train Loss: 0.145
2024-11-19 20:15 - INFO - 	 Val. Loss: 0.171
2024-11-19 20:15 - INFO - 	 ROC-AUC: 0.905
2024-11-19 20:15 - INFO - 	 PR-AUC: 0.405
2024-11-19 20:15 - INFO - 	 Best Val. Loss: 0.161
2024-11-19 20:15 - INFO - 	 Best ROC-AUC: 0.905
2024-11-19 20:15 - INFO - 	 Best PR-AUC: 0.405
2024-11-19 20:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.804
2024-11-19 20:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.183
2024-11-19 20:15 - INFO - ---------------------------------------------
2024-11-19 20:23 - INFO - ---------------------------------------------
2024-11-19 20:23 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-19 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47164
2024-11-19 20:23 - INFO - 	 Train Loss: 0.128
2024-11-19 20:23 - INFO - 	 Val. Loss: 0.147
2024-11-19 20:23 - INFO - 	 ROC-AUC: 0.948
2024-11-19 20:23 - INFO - 	 PR-AUC: 0.472
2024-11-19 20:23 - INFO - 	 Best Val. Loss: 0.147
2024-11-19 20:23 - INFO - 	 Best ROC-AUC: 0.948
2024-11-19 20:23 - INFO - 	 Best PR-AUC: 0.472
2024-11-19 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.886
2024-11-19 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.257
2024-11-19 20:23 - INFO - ---------------------------------------------
2024-11-19 20:30 - INFO - ---------------------------------------------
2024-11-19 20:30 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-19 20:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54055
2024-11-19 20:30 - INFO - 	 Train Loss: 0.116
2024-11-19 20:30 - INFO - 	 Val. Loss: 0.145
2024-11-19 20:30 - INFO - 	 ROC-AUC: 0.960
2024-11-19 20:30 - INFO - 	 PR-AUC: 0.541
2024-11-19 20:30 - INFO - 	 Best Val. Loss: 0.145
2024-11-19 20:30 - INFO - 	 Best ROC-AUC: 0.960
2024-11-19 20:30 - INFO - 	 Best PR-AUC: 0.541
2024-11-19 20:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-19 20:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-19 20:30 - INFO - ---------------------------------------------
2024-11-19 20:37 - INFO - ---------------------------------------------
2024-11-19 20:37 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-19 20:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63343
2024-11-19 20:37 - INFO - 	 Train Loss: 0.108
2024-11-19 20:37 - INFO - 	 Val. Loss: 0.110
2024-11-19 20:37 - INFO - 	 ROC-AUC: 0.978
2024-11-19 20:37 - INFO - 	 PR-AUC: 0.633
2024-11-19 20:37 - INFO - 	 Best Val. Loss: 0.110
2024-11-19 20:37 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 20:37 - INFO - 	 Best PR-AUC: 0.633
2024-11-19 20:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 20:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.407
2024-11-19 20:37 - INFO - ---------------------------------------------
2024-11-19 20:44 - INFO - ---------------------------------------------
2024-11-19 20:44 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-19 20:44 - INFO - 	 Train Loss: 0.106
2024-11-19 20:44 - INFO - 	 Val. Loss: 0.108
2024-11-19 20:44 - INFO - 	 ROC-AUC: 0.975
2024-11-19 20:44 - INFO - 	 PR-AUC: 0.589
2024-11-19 20:44 - INFO - 	 Best Val. Loss: 0.108
2024-11-19 20:44 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 20:44 - INFO - 	 Best PR-AUC: 0.633
2024-11-19 20:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 20:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.407
2024-11-19 20:44 - INFO - ---------------------------------------------
2024-11-19 20:51 - INFO - ---------------------------------------------
2024-11-19 20:51 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-19 20:51 - INFO - 	 Train Loss: 0.104
2024-11-19 20:51 - INFO - 	 Val. Loss: 0.100
2024-11-19 20:51 - INFO - 	 ROC-AUC: 0.976
2024-11-19 20:51 - INFO - 	 PR-AUC: 0.631
2024-11-19 20:51 - INFO - 	 Best Val. Loss: 0.100
2024-11-19 20:51 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 20:51 - INFO - 	 Best PR-AUC: 0.633
2024-11-19 20:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 20:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.407
2024-11-19 20:51 - INFO - ---------------------------------------------
2024-11-19 20:58 - INFO - ---------------------------------------------
2024-11-19 20:58 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-19 20:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65474
2024-11-19 20:58 - INFO - 	 Train Loss: 0.102
2024-11-19 20:58 - INFO - 	 Val. Loss: 0.094
2024-11-19 20:58 - INFO - 	 ROC-AUC: 0.968
2024-11-19 20:58 - INFO - 	 PR-AUC: 0.655
2024-11-19 20:58 - INFO - 	 Best Val. Loss: 0.094
2024-11-19 20:58 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 20:58 - INFO - 	 Best PR-AUC: 0.655
2024-11-19 20:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 20:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-19 20:58 - INFO - ---------------------------------------------
2024-11-19 21:05 - INFO - ---------------------------------------------
2024-11-19 21:05 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-19 21:05 - INFO - 	 Train Loss: 0.099
2024-11-19 21:05 - INFO - 	 Val. Loss: 0.119
2024-11-19 21:05 - INFO - 	 ROC-AUC: 0.975
2024-11-19 21:05 - INFO - 	 PR-AUC: 0.652
2024-11-19 21:05 - INFO - 	 Best Val. Loss: 0.094
2024-11-19 21:05 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 21:05 - INFO - 	 Best PR-AUC: 0.655
2024-11-19 21:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 21:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-19 21:05 - INFO - ---------------------------------------------
2024-11-19 21:12 - INFO - ---------------------------------------------
2024-11-19 21:12 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-19 21:12 - INFO - 	 Train Loss: 0.099
2024-11-19 21:12 - INFO - 	 Val. Loss: 0.119
2024-11-19 21:12 - INFO - 	 ROC-AUC: 0.967
2024-11-19 21:12 - INFO - 	 PR-AUC: 0.635
2024-11-19 21:12 - INFO - 	 Best Val. Loss: 0.094
2024-11-19 21:12 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 21:12 - INFO - 	 Best PR-AUC: 0.655
2024-11-19 21:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-19 21:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-19 21:12 - INFO - ---------------------------------------------
2024-11-19 21:14 - INFO - Fit the preprocessing pipeline
2024-11-19 21:14 - INFO - Training using device: cuda
2024-11-19 21:14 - INFO - Creating generators
2024-11-19 21:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 21:14 - INFO - * Model:
2024-11-19 21:14 - INFO - * -----------
2024-11-19 21:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 21:14 - INFO - * -----------
2024-11-19 21:21 - INFO - ---------------------------------------------
2024-11-19 21:21 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-19 21:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32284
2024-11-19 21:21 - INFO - 	 Train Loss: 0.151
2024-11-19 21:21 - INFO - 	 Val. Loss: 0.156
2024-11-19 21:21 - INFO - 	 ROC-AUC: 0.869
2024-11-19 21:21 - INFO - 	 PR-AUC: 0.323
2024-11-19 21:21 - INFO - 	 Best Val. Loss: 0.156
2024-11-19 21:21 - INFO - 	 Best ROC-AUC: 0.869
2024-11-19 21:21 - INFO - 	 Best PR-AUC: 0.323
2024-11-19 21:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-19 21:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.155
2024-11-19 21:21 - INFO - ---------------------------------------------
2024-11-19 21:28 - INFO - ---------------------------------------------
2024-11-19 21:28 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-19 21:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39262
2024-11-19 21:28 - INFO - 	 Train Loss: 0.144
2024-11-19 21:28 - INFO - 	 Val. Loss: 0.162
2024-11-19 21:28 - INFO - 	 ROC-AUC: 0.904
2024-11-19 21:28 - INFO - 	 PR-AUC: 0.393
2024-11-19 21:28 - INFO - 	 Best Val. Loss: 0.156
2024-11-19 21:28 - INFO - 	 Best ROC-AUC: 0.904
2024-11-19 21:28 - INFO - 	 Best PR-AUC: 0.393
2024-11-19 21:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.838
2024-11-19 21:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.199
2024-11-19 21:28 - INFO - ---------------------------------------------
2024-11-19 21:36 - INFO - ---------------------------------------------
2024-11-19 21:36 - INFO - Epoch: 03 | Time: 7m 9s
2024-11-19 21:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50417
2024-11-19 21:36 - INFO - 	 Train Loss: 0.130
2024-11-19 21:36 - INFO - 	 Val. Loss: 0.150
2024-11-19 21:36 - INFO - 	 ROC-AUC: 0.947
2024-11-19 21:36 - INFO - 	 PR-AUC: 0.504
2024-11-19 21:36 - INFO - 	 Best Val. Loss: 0.150
2024-11-19 21:36 - INFO - 	 Best ROC-AUC: 0.947
2024-11-19 21:36 - INFO - 	 Best PR-AUC: 0.504
2024-11-19 21:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.892
2024-11-19 21:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.243
2024-11-19 21:36 - INFO - ---------------------------------------------
2024-11-19 21:43 - INFO - ---------------------------------------------
2024-11-19 21:43 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-19 21:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60126
2024-11-19 21:43 - INFO - 	 Train Loss: 0.114
2024-11-19 21:43 - INFO - 	 Val. Loss: 0.104
2024-11-19 21:43 - INFO - 	 ROC-AUC: 0.947
2024-11-19 21:43 - INFO - 	 PR-AUC: 0.601
2024-11-19 21:43 - INFO - 	 Best Val. Loss: 0.104
2024-11-19 21:43 - INFO - 	 Best ROC-AUC: 0.947
2024-11-19 21:43 - INFO - 	 Best PR-AUC: 0.601
2024-11-19 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-19 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.322
2024-11-19 21:43 - INFO - ---------------------------------------------
2024-11-19 21:50 - INFO - ---------------------------------------------
2024-11-19 21:50 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-19 21:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60906
2024-11-19 21:50 - INFO - 	 Train Loss: 0.107
2024-11-19 21:50 - INFO - 	 Val. Loss: 0.100
2024-11-19 21:50 - INFO - 	 ROC-AUC: 0.972
2024-11-19 21:50 - INFO - 	 PR-AUC: 0.609
2024-11-19 21:50 - INFO - 	 Best Val. Loss: 0.100
2024-11-19 21:50 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 21:50 - INFO - 	 Best PR-AUC: 0.609
2024-11-19 21:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-19 21:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.370
2024-11-19 21:50 - INFO - ---------------------------------------------
2024-11-19 21:57 - INFO - ---------------------------------------------
2024-11-19 21:57 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-19 21:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66417
2024-11-19 21:57 - INFO - 	 Train Loss: 0.105
2024-11-19 21:57 - INFO - 	 Val. Loss: 0.097
2024-11-19 21:57 - INFO - 	 ROC-AUC: 0.968
2024-11-19 21:57 - INFO - 	 PR-AUC: 0.664
2024-11-19 21:57 - INFO - 	 Best Val. Loss: 0.097
2024-11-19 21:57 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 21:57 - INFO - 	 Best PR-AUC: 0.664
2024-11-19 21:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-19 21:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.381
2024-11-19 21:57 - INFO - ---------------------------------------------
2024-11-19 22:04 - INFO - ---------------------------------------------
2024-11-19 22:04 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-19 22:04 - INFO - 	 Train Loss: 0.104
2024-11-19 22:04 - INFO - 	 Val. Loss: 0.116
2024-11-19 22:04 - INFO - 	 ROC-AUC: 0.955
2024-11-19 22:04 - INFO - 	 PR-AUC: 0.531
2024-11-19 22:04 - INFO - 	 Best Val. Loss: 0.097
2024-11-19 22:04 - INFO - 	 Best ROC-AUC: 0.972
2024-11-19 22:04 - INFO - 	 Best PR-AUC: 0.664
2024-11-19 22:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-19 22:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.381
2024-11-19 22:04 - INFO - ---------------------------------------------
2024-11-19 22:11 - INFO - ---------------------------------------------
2024-11-19 22:11 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-19 22:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73133
2024-11-19 22:11 - INFO - 	 Train Loss: 0.101
2024-11-19 22:11 - INFO - 	 Val. Loss: 0.088
2024-11-19 22:11 - INFO - 	 ROC-AUC: 0.981
2024-11-19 22:11 - INFO - 	 PR-AUC: 0.731
2024-11-19 22:11 - INFO - 	 Best Val. Loss: 0.088
2024-11-19 22:11 - INFO - 	 Best ROC-AUC: 0.981
2024-11-19 22:11 - INFO - 	 Best PR-AUC: 0.731
2024-11-19 22:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 22:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-19 22:11 - INFO - ---------------------------------------------
2024-11-19 22:18 - INFO - ---------------------------------------------
2024-11-19 22:18 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-19 22:18 - INFO - 	 Train Loss: 0.100
2024-11-19 22:18 - INFO - 	 Val. Loss: 0.111
2024-11-19 22:18 - INFO - 	 ROC-AUC: 0.975
2024-11-19 22:18 - INFO - 	 PR-AUC: 0.624
2024-11-19 22:18 - INFO - 	 Best Val. Loss: 0.088
2024-11-19 22:18 - INFO - 	 Best ROC-AUC: 0.981
2024-11-19 22:18 - INFO - 	 Best PR-AUC: 0.731
2024-11-19 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-19 22:18 - INFO - ---------------------------------------------
2024-11-19 22:26 - INFO - ---------------------------------------------
2024-11-19 22:26 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-19 22:26 - INFO - 	 Train Loss: 0.099
2024-11-19 22:26 - INFO - 	 Val. Loss: 0.104
2024-11-19 22:26 - INFO - 	 ROC-AUC: 0.971
2024-11-19 22:26 - INFO - 	 PR-AUC: 0.642
2024-11-19 22:26 - INFO - 	 Best Val. Loss: 0.088
2024-11-19 22:26 - INFO - 	 Best ROC-AUC: 0.981
2024-11-19 22:26 - INFO - 	 Best PR-AUC: 0.731
2024-11-19 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-19 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.469
2024-11-19 22:26 - INFO - ---------------------------------------------
2024-11-19 22:27 - INFO - Fit the preprocessing pipeline
2024-11-19 22:27 - INFO - Training using device: cuda
2024-11-19 22:27 - INFO - Creating generators
2024-11-19 22:27 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 22:27 - INFO - * Model:
2024-11-19 22:27 - INFO - * -----------
2024-11-19 22:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 22:27 - INFO - * -----------
2024-11-19 22:34 - INFO - ---------------------------------------------
2024-11-19 22:34 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-19 22:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30541
2024-11-19 22:34 - INFO - 	 Train Loss: 0.151
2024-11-19 22:34 - INFO - 	 Val. Loss: 0.165
2024-11-19 22:34 - INFO - 	 ROC-AUC: 0.873
2024-11-19 22:34 - INFO - 	 PR-AUC: 0.305
2024-11-19 22:34 - INFO - 	 Best Val. Loss: 0.165
2024-11-19 22:34 - INFO - 	 Best ROC-AUC: 0.873
2024-11-19 22:34 - INFO - 	 Best PR-AUC: 0.305
2024-11-19 22:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.787
2024-11-19 22:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-19 22:34 - INFO - ---------------------------------------------
2024-11-19 22:42 - INFO - ---------------------------------------------
2024-11-19 22:42 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-19 22:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38527
2024-11-19 22:42 - INFO - 	 Train Loss: 0.145
2024-11-19 22:42 - INFO - 	 Val. Loss: 0.159
2024-11-19 22:42 - INFO - 	 ROC-AUC: 0.886
2024-11-19 22:42 - INFO - 	 PR-AUC: 0.385
2024-11-19 22:42 - INFO - 	 Best Val. Loss: 0.159
2024-11-19 22:42 - INFO - 	 Best ROC-AUC: 0.886
2024-11-19 22:42 - INFO - 	 Best PR-AUC: 0.385
2024-11-19 22:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.837
2024-11-19 22:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.181
2024-11-19 22:42 - INFO - ---------------------------------------------
2024-11-19 22:49 - INFO - ---------------------------------------------
2024-11-19 22:49 - INFO - Epoch: 03 | Time: 7m 9s
2024-11-19 22:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47242
2024-11-19 22:49 - INFO - 	 Train Loss: 0.129
2024-11-19 22:49 - INFO - 	 Val. Loss: 0.144
2024-11-19 22:49 - INFO - 	 ROC-AUC: 0.946
2024-11-19 22:49 - INFO - 	 PR-AUC: 0.472
2024-11-19 22:49 - INFO - 	 Best Val. Loss: 0.144
2024-11-19 22:49 - INFO - 	 Best ROC-AUC: 0.946
2024-11-19 22:49 - INFO - 	 Best PR-AUC: 0.472
2024-11-19 22:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.912
2024-11-19 22:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.293
2024-11-19 22:49 - INFO - ---------------------------------------------
2024-11-19 22:56 - INFO - ---------------------------------------------
2024-11-19 22:56 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-19 22:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57814
2024-11-19 22:56 - INFO - 	 Train Loss: 0.115
2024-11-19 22:56 - INFO - 	 Val. Loss: 0.116
2024-11-19 22:56 - INFO - 	 ROC-AUC: 0.964
2024-11-19 22:56 - INFO - 	 PR-AUC: 0.578
2024-11-19 22:56 - INFO - 	 Best Val. Loss: 0.116
2024-11-19 22:56 - INFO - 	 Best ROC-AUC: 0.964
2024-11-19 22:56 - INFO - 	 Best PR-AUC: 0.578
2024-11-19 22:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-19 22:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.348
2024-11-19 22:56 - INFO - ---------------------------------------------
2024-11-19 23:03 - INFO - ---------------------------------------------
2024-11-19 23:03 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-19 23:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65411
2024-11-19 23:03 - INFO - 	 Train Loss: 0.108
2024-11-19 23:03 - INFO - 	 Val. Loss: 0.101
2024-11-19 23:03 - INFO - 	 ROC-AUC: 0.959
2024-11-19 23:03 - INFO - 	 PR-AUC: 0.654
2024-11-19 23:03 - INFO - 	 Best Val. Loss: 0.101
2024-11-19 23:03 - INFO - 	 Best ROC-AUC: 0.964
2024-11-19 23:03 - INFO - 	 Best PR-AUC: 0.654
2024-11-19 23:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-19 23:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-19 23:03 - INFO - ---------------------------------------------
2024-11-19 23:10 - INFO - ---------------------------------------------
2024-11-19 23:10 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-19 23:10 - INFO - 	 Train Loss: 0.104
2024-11-19 23:10 - INFO - 	 Val. Loss: 0.100
2024-11-19 23:10 - INFO - 	 ROC-AUC: 0.971
2024-11-19 23:10 - INFO - 	 PR-AUC: 0.626
2024-11-19 23:10 - INFO - 	 Best Val. Loss: 0.100
2024-11-19 23:10 - INFO - 	 Best ROC-AUC: 0.971
2024-11-19 23:10 - INFO - 	 Best PR-AUC: 0.654
2024-11-19 23:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-19 23:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-19 23:10 - INFO - ---------------------------------------------
2024-11-19 23:17 - INFO - ---------------------------------------------
2024-11-19 23:17 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-19 23:17 - INFO - 	 Train Loss: 0.102
2024-11-19 23:17 - INFO - 	 Val. Loss: 0.097
2024-11-19 23:17 - INFO - 	 ROC-AUC: 0.969
2024-11-19 23:17 - INFO - 	 PR-AUC: 0.651
2024-11-19 23:17 - INFO - 	 Best Val. Loss: 0.097
2024-11-19 23:17 - INFO - 	 Best ROC-AUC: 0.971
2024-11-19 23:17 - INFO - 	 Best PR-AUC: 0.654
2024-11-19 23:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-19 23:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.380
2024-11-19 23:17 - INFO - ---------------------------------------------
2024-11-19 23:24 - INFO - ---------------------------------------------
2024-11-19 23:24 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-19 23:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71318
2024-11-19 23:24 - INFO - 	 Train Loss: 0.102
2024-11-19 23:24 - INFO - 	 Val. Loss: 0.109
2024-11-19 23:24 - INFO - 	 ROC-AUC: 0.978
2024-11-19 23:24 - INFO - 	 PR-AUC: 0.713
2024-11-19 23:24 - INFO - 	 Best Val. Loss: 0.097
2024-11-19 23:24 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 23:24 - INFO - 	 Best PR-AUC: 0.713
2024-11-19 23:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-19 23:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.508
2024-11-19 23:24 - INFO - ---------------------------------------------
2024-11-19 23:32 - INFO - ---------------------------------------------
2024-11-19 23:32 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-19 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7219
2024-11-19 23:32 - INFO - 	 Train Loss: 0.099
2024-11-19 23:32 - INFO - 	 Val. Loss: 0.099
2024-11-19 23:32 - INFO - 	 ROC-AUC: 0.968
2024-11-19 23:32 - INFO - 	 PR-AUC: 0.722
2024-11-19 23:32 - INFO - 	 Best Val. Loss: 0.097
2024-11-19 23:32 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 23:32 - INFO - 	 Best PR-AUC: 0.722
2024-11-19 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-19 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-19 23:32 - INFO - ---------------------------------------------
2024-11-19 23:39 - INFO - ---------------------------------------------
2024-11-19 23:39 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-19 23:39 - INFO - 	 Train Loss: 0.103
2024-11-19 23:39 - INFO - 	 Val. Loss: 0.112
2024-11-19 23:39 - INFO - 	 ROC-AUC: 0.967
2024-11-19 23:39 - INFO - 	 PR-AUC: 0.714
2024-11-19 23:39 - INFO - 	 Best Val. Loss: 0.097
2024-11-19 23:39 - INFO - 	 Best ROC-AUC: 0.978
2024-11-19 23:39 - INFO - 	 Best PR-AUC: 0.722
2024-11-19 23:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-19 23:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-19 23:39 - INFO - ---------------------------------------------
2024-11-19 23:40 - INFO - Fit the preprocessing pipeline
2024-11-19 23:40 - INFO - Training using device: cuda
2024-11-19 23:40 - INFO - Creating generators
2024-11-19 23:40 - INFO - The model has 2,246,929 trainable parameters
2024-11-19 23:40 - INFO - * Model:
2024-11-19 23:40 - INFO - * -----------
2024-11-19 23:40 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-19 23:40 - INFO - * -----------
2024-11-19 23:48 - INFO - ---------------------------------------------
2024-11-19 23:48 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-19 23:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.27497
2024-11-19 23:48 - INFO - 	 Train Loss: 0.151
2024-11-19 23:48 - INFO - 	 Val. Loss: 0.164
2024-11-19 23:48 - INFO - 	 ROC-AUC: 0.850
2024-11-19 23:48 - INFO - 	 PR-AUC: 0.275
2024-11-19 23:48 - INFO - 	 Best Val. Loss: 0.164
2024-11-19 23:48 - INFO - 	 Best ROC-AUC: 0.850
2024-11-19 23:48 - INFO - 	 Best PR-AUC: 0.275
2024-11-19 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.787
2024-11-19 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-19 23:48 - INFO - ---------------------------------------------
2024-11-19 23:55 - INFO - ---------------------------------------------
2024-11-19 23:55 - INFO - Epoch: 02 | Time: 7m 10s
2024-11-19 23:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37826
2024-11-19 23:55 - INFO - 	 Train Loss: 0.146
2024-11-19 23:55 - INFO - 	 Val. Loss: 0.161
2024-11-19 23:55 - INFO - 	 ROC-AUC: 0.886
2024-11-19 23:55 - INFO - 	 PR-AUC: 0.378
2024-11-19 23:55 - INFO - 	 Best Val. Loss: 0.161
2024-11-19 23:55 - INFO - 	 Best ROC-AUC: 0.886
2024-11-19 23:55 - INFO - 	 Best PR-AUC: 0.378
2024-11-19 23:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.775
2024-11-19 23:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-19 23:55 - INFO - ---------------------------------------------
2024-11-20 00:02 - INFO - ---------------------------------------------
2024-11-20 00:02 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-20 00:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53205
2024-11-20 00:02 - INFO - 	 Train Loss: 0.134
2024-11-20 00:02 - INFO - 	 Val. Loss: 0.141
2024-11-20 00:02 - INFO - 	 ROC-AUC: 0.948
2024-11-20 00:02 - INFO - 	 PR-AUC: 0.532
2024-11-20 00:02 - INFO - 	 Best Val. Loss: 0.141
2024-11-20 00:02 - INFO - 	 Best ROC-AUC: 0.948
2024-11-20 00:02 - INFO - 	 Best PR-AUC: 0.532
2024-11-20 00:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.877
2024-11-20 00:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.246
2024-11-20 00:02 - INFO - ---------------------------------------------
2024-11-20 00:09 - INFO - ---------------------------------------------
2024-11-20 00:09 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-20 00:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57971
2024-11-20 00:09 - INFO - 	 Train Loss: 0.119
2024-11-20 00:09 - INFO - 	 Val. Loss: 0.127
2024-11-20 00:09 - INFO - 	 ROC-AUC: 0.966
2024-11-20 00:09 - INFO - 	 PR-AUC: 0.580
2024-11-20 00:09 - INFO - 	 Best Val. Loss: 0.127
2024-11-20 00:09 - INFO - 	 Best ROC-AUC: 0.966
2024-11-20 00:09 - INFO - 	 Best PR-AUC: 0.580
2024-11-20 00:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-20 00:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.342
2024-11-20 00:09 - INFO - ---------------------------------------------
2024-11-20 00:16 - INFO - ---------------------------------------------
2024-11-20 00:16 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-20 00:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.679
2024-11-20 00:16 - INFO - 	 Train Loss: 0.110
2024-11-20 00:16 - INFO - 	 Val. Loss: 0.108
2024-11-20 00:16 - INFO - 	 ROC-AUC: 0.970
2024-11-20 00:16 - INFO - 	 PR-AUC: 0.679
2024-11-20 00:16 - INFO - 	 Best Val. Loss: 0.108
2024-11-20 00:16 - INFO - 	 Best ROC-AUC: 0.970
2024-11-20 00:16 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-11-20 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-20 00:16 - INFO - ---------------------------------------------
2024-11-20 00:23 - INFO - ---------------------------------------------
2024-11-20 00:23 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-20 00:23 - INFO - 	 Train Loss: 0.105
2024-11-20 00:23 - INFO - 	 Val. Loss: 0.116
2024-11-20 00:23 - INFO - 	 ROC-AUC: 0.973
2024-11-20 00:23 - INFO - 	 PR-AUC: 0.645
2024-11-20 00:23 - INFO - 	 Best Val. Loss: 0.108
2024-11-20 00:23 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 00:23 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-20 00:23 - INFO - ---------------------------------------------
2024-11-20 00:30 - INFO - ---------------------------------------------
2024-11-20 00:30 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-20 00:30 - INFO - 	 Train Loss: 0.102
2024-11-20 00:30 - INFO - 	 Val. Loss: 0.124
2024-11-20 00:30 - INFO - 	 ROC-AUC: 0.970
2024-11-20 00:30 - INFO - 	 PR-AUC: 0.657
2024-11-20 00:30 - INFO - 	 Best Val. Loss: 0.108
2024-11-20 00:30 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 00:30 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-20 00:30 - INFO - ---------------------------------------------
2024-11-20 00:38 - INFO - ---------------------------------------------
2024-11-20 00:38 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-20 00:38 - INFO - 	 Train Loss: 0.100
2024-11-20 00:38 - INFO - 	 Val. Loss: 0.138
2024-11-20 00:38 - INFO - 	 ROC-AUC: 0.970
2024-11-20 00:38 - INFO - 	 PR-AUC: 0.605
2024-11-20 00:38 - INFO - 	 Best Val. Loss: 0.108
2024-11-20 00:38 - INFO - 	 Best ROC-AUC: 0.973
2024-11-20 00:38 - INFO - 	 Best PR-AUC: 0.679
2024-11-20 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-20 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.399
2024-11-20 00:38 - INFO - ---------------------------------------------
2024-11-20 00:45 - INFO - ---------------------------------------------
2024-11-20 00:45 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-20 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68742
2024-11-20 00:45 - INFO - 	 Train Loss: 0.101
2024-11-20 00:45 - INFO - 	 Val. Loss: 0.102
2024-11-20 00:45 - INFO - 	 ROC-AUC: 0.976
2024-11-20 00:45 - INFO - 	 PR-AUC: 0.687
2024-11-20 00:45 - INFO - 	 Best Val. Loss: 0.102
2024-11-20 00:45 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 00:45 - INFO - 	 Best PR-AUC: 0.687
2024-11-20 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-20 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-20 00:45 - INFO - ---------------------------------------------
2024-11-20 00:52 - INFO - ---------------------------------------------
2024-11-20 00:52 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-20 00:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72606
2024-11-20 00:52 - INFO - 	 Train Loss: 0.097
2024-11-20 00:52 - INFO - 	 Val. Loss: 0.102
2024-11-20 00:52 - INFO - 	 ROC-AUC: 0.972
2024-11-20 00:52 - INFO - 	 PR-AUC: 0.726
2024-11-20 00:52 - INFO - 	 Best Val. Loss: 0.102
2024-11-20 00:52 - INFO - 	 Best ROC-AUC: 0.976
2024-11-20 00:52 - INFO - 	 Best PR-AUC: 0.726
2024-11-20 00:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-20 00:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.522
2024-11-20 00:52 - INFO - ---------------------------------------------
