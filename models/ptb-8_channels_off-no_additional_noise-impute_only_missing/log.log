2024-10-18 20:43 - INFO - Fit the preprocessing pipeline
2024-10-18 20:43 - INFO - Training using device: cuda
2024-10-18 20:43 - INFO - Creating generators
2024-10-18 20:43 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 20:43 - INFO - * Model:
2024-10-18 20:43 - INFO - * -----------
2024-10-18 20:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 20:43 - INFO - * -----------
2024-10-18 20:51 - INFO - ---------------------------------------------
2024-10-18 20:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 20:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79002
2024-10-18 20:51 - INFO - 	 Train Loss: 0.096
2024-10-18 20:51 - INFO - 	 Val. Loss: 0.081
2024-10-18 20:51 - INFO - 	 ROC-AUC: 0.980
2024-10-18 20:51 - INFO - 	 PR-AUC: 0.790
2024-10-18 20:51 - INFO - 	 Best Val. Loss: 0.081
2024-10-18 20:51 - INFO - 	 Best ROC-AUC: 0.980
2024-10-18 20:51 - INFO - 	 Best PR-AUC: 0.790
2024-10-18 20:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-18 20:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-10-18 20:51 - INFO - ---------------------------------------------
2024-10-18 20:59 - INFO - ---------------------------------------------
2024-10-18 20:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 20:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84766
2024-10-18 20:59 - INFO - 	 Train Loss: 0.079
2024-10-18 20:59 - INFO - 	 Val. Loss: 0.069
2024-10-18 20:59 - INFO - 	 ROC-AUC: 0.985
2024-10-18 20:59 - INFO - 	 PR-AUC: 0.848
2024-10-18 20:59 - INFO - 	 Best Val. Loss: 0.069
2024-10-18 20:59 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 20:59 - INFO - 	 Best PR-AUC: 0.848
2024-10-18 20:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-18 20:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-18 20:59 - INFO - ---------------------------------------------
2024-10-18 21:07 - INFO - ---------------------------------------------
2024-10-18 21:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 21:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86029
2024-10-18 21:07 - INFO - 	 Train Loss: 0.076
2024-10-18 21:07 - INFO - 	 Val. Loss: 0.066
2024-10-18 21:07 - INFO - 	 ROC-AUC: 0.986
2024-10-18 21:07 - INFO - 	 PR-AUC: 0.860
2024-10-18 21:07 - INFO - 	 Best Val. Loss: 0.066
2024-10-18 21:07 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 21:07 - INFO - 	 Best PR-AUC: 0.860
2024-10-18 21:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 21:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-18 21:07 - INFO - ---------------------------------------------
2024-10-18 21:15 - INFO - ---------------------------------------------
2024-10-18 21:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 21:15 - INFO - 	 Train Loss: 0.074
2024-10-18 21:15 - INFO - 	 Val. Loss: 0.065
2024-10-18 21:15 - INFO - 	 ROC-AUC: 0.986
2024-10-18 21:15 - INFO - 	 PR-AUC: 0.854
2024-10-18 21:15 - INFO - 	 Best Val. Loss: 0.065
2024-10-18 21:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 21:15 - INFO - 	 Best PR-AUC: 0.860
2024-10-18 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-18 21:15 - INFO - ---------------------------------------------
2024-10-18 21:23 - INFO - ---------------------------------------------
2024-10-18 21:23 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 21:23 - INFO - 	 Train Loss: 0.072
2024-10-18 21:23 - INFO - 	 Val. Loss: 0.068
2024-10-18 21:23 - INFO - 	 ROC-AUC: 0.984
2024-10-18 21:23 - INFO - 	 PR-AUC: 0.849
2024-10-18 21:23 - INFO - 	 Best Val. Loss: 0.065
2024-10-18 21:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 21:23 - INFO - 	 Best PR-AUC: 0.860
2024-10-18 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-18 21:23 - INFO - ---------------------------------------------
2024-10-18 21:31 - INFO - ---------------------------------------------
2024-10-18 21:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 21:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86632
2024-10-18 21:31 - INFO - 	 Train Loss: 0.071
2024-10-18 21:31 - INFO - 	 Val. Loss: 0.065
2024-10-18 21:31 - INFO - 	 ROC-AUC: 0.986
2024-10-18 21:31 - INFO - 	 PR-AUC: 0.866
2024-10-18 21:31 - INFO - 	 Best Val. Loss: 0.065
2024-10-18 21:31 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 21:31 - INFO - 	 Best PR-AUC: 0.866
2024-10-18 21:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 21:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-18 21:31 - INFO - ---------------------------------------------
2024-10-18 21:39 - INFO - ---------------------------------------------
2024-10-18 21:39 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 21:39 - INFO - 	 Train Loss: 0.070
2024-10-18 21:39 - INFO - 	 Val. Loss: 0.063
2024-10-18 21:39 - INFO - 	 ROC-AUC: 0.987
2024-10-18 21:39 - INFO - 	 PR-AUC: 0.861
2024-10-18 21:39 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 21:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 21:39 - INFO - 	 Best PR-AUC: 0.866
2024-10-18 21:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 21:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-18 21:39 - INFO - ---------------------------------------------
2024-10-18 21:47 - INFO - ---------------------------------------------
2024-10-18 21:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 21:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87376
2024-10-18 21:47 - INFO - 	 Train Loss: 0.070
2024-10-18 21:47 - INFO - 	 Val. Loss: 0.062
2024-10-18 21:47 - INFO - 	 ROC-AUC: 0.987
2024-10-18 21:47 - INFO - 	 PR-AUC: 0.874
2024-10-18 21:47 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 21:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 21:47 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 21:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 21:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-18 21:47 - INFO - ---------------------------------------------
2024-10-18 21:55 - INFO - ---------------------------------------------
2024-10-18 21:55 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 21:55 - INFO - 	 Train Loss: 0.067
2024-10-18 21:55 - INFO - 	 Val. Loss: 0.062
2024-10-18 21:55 - INFO - 	 ROC-AUC: 0.987
2024-10-18 21:55 - INFO - 	 PR-AUC: 0.869
2024-10-18 21:55 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 21:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 21:55 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 21:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 21:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-18 21:55 - INFO - ---------------------------------------------
2024-10-18 22:03 - INFO - ---------------------------------------------
2024-10-18 22:03 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-18 22:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8799
2024-10-18 22:03 - INFO - 	 Train Loss: 0.067
2024-10-18 22:03 - INFO - 	 Val. Loss: 0.060
2024-10-18 22:03 - INFO - 	 ROC-AUC: 0.987
2024-10-18 22:03 - INFO - 	 PR-AUC: 0.880
2024-10-18 22:03 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 22:03 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 22:03 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 22:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 22:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-18 22:03 - INFO - ---------------------------------------------
2024-10-18 22:05 - INFO - Fit the preprocessing pipeline
2024-10-18 22:05 - INFO - Training using device: cuda
2024-10-18 22:05 - INFO - Creating generators
2024-10-18 22:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 22:05 - INFO - * Model:
2024-10-18 22:05 - INFO - * -----------
2024-10-18 22:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 22:05 - INFO - * -----------
2024-10-18 22:13 - INFO - ---------------------------------------------
2024-10-18 22:13 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 22:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82602
2024-10-18 22:13 - INFO - 	 Train Loss: 0.097
2024-10-18 22:13 - INFO - 	 Val. Loss: 0.074
2024-10-18 22:13 - INFO - 	 ROC-AUC: 0.984
2024-10-18 22:13 - INFO - 	 PR-AUC: 0.826
2024-10-18 22:13 - INFO - 	 Best Val. Loss: 0.074
2024-10-18 22:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-18 22:13 - INFO - 	 Best PR-AUC: 0.826
2024-10-18 22:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-18 22:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-10-18 22:13 - INFO - ---------------------------------------------
2024-10-18 22:21 - INFO - ---------------------------------------------
2024-10-18 22:21 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 22:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8291
2024-10-18 22:21 - INFO - 	 Train Loss: 0.082
2024-10-18 22:21 - INFO - 	 Val. Loss: 0.073
2024-10-18 22:21 - INFO - 	 ROC-AUC: 0.983
2024-10-18 22:21 - INFO - 	 PR-AUC: 0.829
2024-10-18 22:21 - INFO - 	 Best Val. Loss: 0.073
2024-10-18 22:21 - INFO - 	 Best ROC-AUC: 0.984
2024-10-18 22:21 - INFO - 	 Best PR-AUC: 0.829
2024-10-18 22:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-18 22:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-18 22:21 - INFO - ---------------------------------------------
2024-10-18 22:29 - INFO - ---------------------------------------------
2024-10-18 22:29 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8574
2024-10-18 22:29 - INFO - 	 Train Loss: 0.076
2024-10-18 22:29 - INFO - 	 Val. Loss: 0.067
2024-10-18 22:29 - INFO - 	 ROC-AUC: 0.986
2024-10-18 22:29 - INFO - 	 PR-AUC: 0.857
2024-10-18 22:29 - INFO - 	 Best Val. Loss: 0.067
2024-10-18 22:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 22:29 - INFO - 	 Best PR-AUC: 0.857
2024-10-18 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-18 22:29 - INFO - ---------------------------------------------
2024-10-18 22:37 - INFO - ---------------------------------------------
2024-10-18 22:37 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-18 22:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86749
2024-10-18 22:37 - INFO - 	 Train Loss: 0.074
2024-10-18 22:37 - INFO - 	 Val. Loss: 0.066
2024-10-18 22:37 - INFO - 	 ROC-AUC: 0.986
2024-10-18 22:37 - INFO - 	 PR-AUC: 0.867
2024-10-18 22:37 - INFO - 	 Best Val. Loss: 0.066
2024-10-18 22:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 22:37 - INFO - 	 Best PR-AUC: 0.867
2024-10-18 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-18 22:37 - INFO - ---------------------------------------------
2024-10-18 22:45 - INFO - ---------------------------------------------
2024-10-18 22:45 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 22:45 - INFO - 	 Train Loss: 0.072
2024-10-18 22:45 - INFO - 	 Val. Loss: 0.064
2024-10-18 22:45 - INFO - 	 ROC-AUC: 0.986
2024-10-18 22:45 - INFO - 	 PR-AUC: 0.861
2024-10-18 22:45 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 22:45 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 22:45 - INFO - 	 Best PR-AUC: 0.867
2024-10-18 22:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 22:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-18 22:45 - INFO - ---------------------------------------------
2024-10-18 22:53 - INFO - ---------------------------------------------
2024-10-18 22:53 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 22:53 - INFO - 	 Train Loss: 0.070
2024-10-18 22:53 - INFO - 	 Val. Loss: 0.065
2024-10-18 22:53 - INFO - 	 ROC-AUC: 0.985
2024-10-18 22:53 - INFO - 	 PR-AUC: 0.859
2024-10-18 22:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 22:53 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 22:53 - INFO - 	 Best PR-AUC: 0.867
2024-10-18 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-18 22:53 - INFO - ---------------------------------------------
2024-10-18 23:01 - INFO - ---------------------------------------------
2024-10-18 23:01 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 23:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87402
2024-10-18 23:01 - INFO - 	 Train Loss: 0.069
2024-10-18 23:01 - INFO - 	 Val. Loss: 0.063
2024-10-18 23:01 - INFO - 	 ROC-AUC: 0.986
2024-10-18 23:01 - INFO - 	 PR-AUC: 0.874
2024-10-18 23:01 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 23:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 23:01 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 23:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 23:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-18 23:01 - INFO - ---------------------------------------------
2024-10-18 23:09 - INFO - ---------------------------------------------
2024-10-18 23:09 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 23:09 - INFO - 	 Train Loss: 0.068
2024-10-18 23:09 - INFO - 	 Val. Loss: 0.062
2024-10-18 23:09 - INFO - 	 ROC-AUC: 0.987
2024-10-18 23:09 - INFO - 	 PR-AUC: 0.866
2024-10-18 23:09 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 23:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 23:09 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 23:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 23:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-18 23:09 - INFO - ---------------------------------------------
2024-10-18 23:17 - INFO - ---------------------------------------------
2024-10-18 23:17 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 23:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87828
2024-10-18 23:17 - INFO - 	 Train Loss: 0.068
2024-10-18 23:17 - INFO - 	 Val. Loss: 0.061
2024-10-18 23:17 - INFO - 	 ROC-AUC: 0.987
2024-10-18 23:17 - INFO - 	 PR-AUC: 0.878
2024-10-18 23:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 23:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 23:17 - INFO - 	 Best PR-AUC: 0.878
2024-10-18 23:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 23:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-18 23:17 - INFO - ---------------------------------------------
2024-10-18 23:26 - INFO - ---------------------------------------------
2024-10-18 23:26 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-18 23:26 - INFO - 	 Train Loss: 0.066
2024-10-18 23:26 - INFO - 	 Val. Loss: 0.064
2024-10-18 23:26 - INFO - 	 ROC-AUC: 0.986
2024-10-18 23:26 - INFO - 	 PR-AUC: 0.861
2024-10-18 23:26 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 23:26 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 23:26 - INFO - 	 Best PR-AUC: 0.878
2024-10-18 23:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 23:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-18 23:26 - INFO - ---------------------------------------------
2024-10-18 23:28 - INFO - Fit the preprocessing pipeline
2024-10-18 23:28 - INFO - Training using device: cuda
2024-10-18 23:28 - INFO - Creating generators
2024-10-18 23:28 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 23:28 - INFO - * Model:
2024-10-18 23:28 - INFO - * -----------
2024-10-18 23:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 23:28 - INFO - * -----------
2024-10-18 23:36 - INFO - ---------------------------------------------
2024-10-18 23:36 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 23:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81166
2024-10-18 23:36 - INFO - 	 Train Loss: 0.097
2024-10-18 23:36 - INFO - 	 Val. Loss: 0.076
2024-10-18 23:36 - INFO - 	 ROC-AUC: 0.982
2024-10-18 23:36 - INFO - 	 PR-AUC: 0.812
2024-10-18 23:36 - INFO - 	 Best Val. Loss: 0.076
2024-10-18 23:36 - INFO - 	 Best ROC-AUC: 0.982
2024-10-18 23:36 - INFO - 	 Best PR-AUC: 0.812
2024-10-18 23:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-18 23:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-10-18 23:36 - INFO - ---------------------------------------------
2024-10-18 23:44 - INFO - ---------------------------------------------
2024-10-18 23:44 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 23:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84823
2024-10-18 23:44 - INFO - 	 Train Loss: 0.081
2024-10-18 23:44 - INFO - 	 Val. Loss: 0.074
2024-10-18 23:44 - INFO - 	 ROC-AUC: 0.985
2024-10-18 23:44 - INFO - 	 PR-AUC: 0.848
2024-10-18 23:44 - INFO - 	 Best Val. Loss: 0.074
2024-10-18 23:44 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 23:44 - INFO - 	 Best PR-AUC: 0.848
2024-10-18 23:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-18 23:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-18 23:44 - INFO - ---------------------------------------------
2024-10-18 23:52 - INFO - ---------------------------------------------
2024-10-18 23:52 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 23:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8528
2024-10-18 23:52 - INFO - 	 Train Loss: 0.076
2024-10-18 23:52 - INFO - 	 Val. Loss: 0.065
2024-10-18 23:52 - INFO - 	 ROC-AUC: 0.986
2024-10-18 23:52 - INFO - 	 PR-AUC: 0.853
2024-10-18 23:52 - INFO - 	 Best Val. Loss: 0.065
2024-10-18 23:52 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 23:52 - INFO - 	 Best PR-AUC: 0.853
2024-10-18 23:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 23:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-18 23:52 - INFO - ---------------------------------------------
2024-10-19 00:00 - INFO - ---------------------------------------------
2024-10-19 00:00 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 00:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85979
2024-10-19 00:00 - INFO - 	 Train Loss: 0.075
2024-10-19 00:00 - INFO - 	 Val. Loss: 0.067
2024-10-19 00:00 - INFO - 	 ROC-AUC: 0.987
2024-10-19 00:00 - INFO - 	 PR-AUC: 0.860
2024-10-19 00:00 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 00:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 00:00 - INFO - 	 Best PR-AUC: 0.860
2024-10-19 00:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 00:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-19 00:00 - INFO - ---------------------------------------------
2024-10-19 00:08 - INFO - ---------------------------------------------
2024-10-19 00:08 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 00:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86066
2024-10-19 00:08 - INFO - 	 Train Loss: 0.072
2024-10-19 00:08 - INFO - 	 Val. Loss: 0.067
2024-10-19 00:08 - INFO - 	 ROC-AUC: 0.986
2024-10-19 00:08 - INFO - 	 PR-AUC: 0.861
2024-10-19 00:08 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 00:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 00:08 - INFO - 	 Best PR-AUC: 0.861
2024-10-19 00:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 00:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 00:08 - INFO - ---------------------------------------------
2024-10-19 00:16 - INFO - ---------------------------------------------
2024-10-19 00:16 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 00:16 - INFO - 	 Train Loss: 0.071
2024-10-19 00:16 - INFO - 	 Val. Loss: 0.065
2024-10-19 00:16 - INFO - 	 ROC-AUC: 0.986
2024-10-19 00:16 - INFO - 	 PR-AUC: 0.860
2024-10-19 00:16 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 00:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 00:16 - INFO - 	 Best PR-AUC: 0.861
2024-10-19 00:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 00:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 00:16 - INFO - ---------------------------------------------
2024-10-19 00:24 - INFO - ---------------------------------------------
2024-10-19 00:24 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 00:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87062
2024-10-19 00:24 - INFO - 	 Train Loss: 0.069
2024-10-19 00:24 - INFO - 	 Val. Loss: 0.062
2024-10-19 00:24 - INFO - 	 ROC-AUC: 0.987
2024-10-19 00:24 - INFO - 	 PR-AUC: 0.871
2024-10-19 00:24 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 00:24 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 00:24 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 00:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 00:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 00:24 - INFO - ---------------------------------------------
2024-10-19 00:32 - INFO - ---------------------------------------------
2024-10-19 00:32 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 00:32 - INFO - 	 Train Loss: 0.068
2024-10-19 00:32 - INFO - 	 Val. Loss: 0.063
2024-10-19 00:32 - INFO - 	 ROC-AUC: 0.986
2024-10-19 00:32 - INFO - 	 PR-AUC: 0.870
2024-10-19 00:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 00:32 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 00:32 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 00:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 00:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 00:32 - INFO - ---------------------------------------------
2024-10-19 00:40 - INFO - ---------------------------------------------
2024-10-19 00:40 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 00:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87376
2024-10-19 00:40 - INFO - 	 Train Loss: 0.068
2024-10-19 00:40 - INFO - 	 Val. Loss: 0.062
2024-10-19 00:40 - INFO - 	 ROC-AUC: 0.987
2024-10-19 00:40 - INFO - 	 PR-AUC: 0.874
2024-10-19 00:40 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 00:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 00:40 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 00:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 00:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-19 00:40 - INFO - ---------------------------------------------
2024-10-19 00:48 - INFO - ---------------------------------------------
2024-10-19 00:48 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 00:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87971
2024-10-19 00:48 - INFO - 	 Train Loss: 0.067
2024-10-19 00:48 - INFO - 	 Val. Loss: 0.060
2024-10-19 00:48 - INFO - 	 ROC-AUC: 0.988
2024-10-19 00:48 - INFO - 	 PR-AUC: 0.880
2024-10-19 00:48 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 00:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 00:48 - INFO - 	 Best PR-AUC: 0.880
2024-10-19 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-19 00:48 - INFO - ---------------------------------------------
2024-10-19 00:50 - INFO - Fit the preprocessing pipeline
2024-10-19 00:50 - INFO - Training using device: cuda
2024-10-19 00:50 - INFO - Creating generators
2024-10-19 00:50 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 00:50 - INFO - * Model:
2024-10-19 00:50 - INFO - * -----------
2024-10-19 00:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 00:50 - INFO - * -----------
2024-10-19 00:59 - INFO - ---------------------------------------------
2024-10-19 00:59 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 00:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81006
2024-10-19 00:59 - INFO - 	 Train Loss: 0.096
2024-10-19 00:59 - INFO - 	 Val. Loss: 0.078
2024-10-19 00:59 - INFO - 	 ROC-AUC: 0.981
2024-10-19 00:59 - INFO - 	 PR-AUC: 0.810
2024-10-19 00:59 - INFO - 	 Best Val. Loss: 0.078
2024-10-19 00:59 - INFO - 	 Best ROC-AUC: 0.981
2024-10-19 00:59 - INFO - 	 Best PR-AUC: 0.810
2024-10-19 00:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-19 00:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-19 00:59 - INFO - ---------------------------------------------
2024-10-19 01:07 - INFO - ---------------------------------------------
2024-10-19 01:07 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 01:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85201
2024-10-19 01:07 - INFO - 	 Train Loss: 0.081
2024-10-19 01:07 - INFO - 	 Val. Loss: 0.069
2024-10-19 01:07 - INFO - 	 ROC-AUC: 0.985
2024-10-19 01:07 - INFO - 	 PR-AUC: 0.852
2024-10-19 01:07 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 01:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 01:07 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 01:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 01:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-19 01:07 - INFO - ---------------------------------------------
2024-10-19 01:15 - INFO - ---------------------------------------------
2024-10-19 01:15 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 01:15 - INFO - 	 Train Loss: 0.077
2024-10-19 01:15 - INFO - 	 Val. Loss: 0.069
2024-10-19 01:15 - INFO - 	 ROC-AUC: 0.985
2024-10-19 01:15 - INFO - 	 PR-AUC: 0.851
2024-10-19 01:15 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 01:15 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 01:15 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-19 01:15 - INFO - ---------------------------------------------
2024-10-19 01:23 - INFO - ---------------------------------------------
2024-10-19 01:23 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 01:23 - INFO - 	 Train Loss: 0.074
2024-10-19 01:23 - INFO - 	 Val. Loss: 0.069
2024-10-19 01:23 - INFO - 	 ROC-AUC: 0.984
2024-10-19 01:23 - INFO - 	 PR-AUC: 0.852
2024-10-19 01:23 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 01:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 01:23 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-19 01:23 - INFO - ---------------------------------------------
2024-10-19 01:31 - INFO - ---------------------------------------------
2024-10-19 01:31 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 01:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88101
2024-10-19 01:31 - INFO - 	 Train Loss: 0.072
2024-10-19 01:31 - INFO - 	 Val. Loss: 0.060
2024-10-19 01:31 - INFO - 	 ROC-AUC: 0.987
2024-10-19 01:31 - INFO - 	 PR-AUC: 0.881
2024-10-19 01:31 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 01:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 01:31 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-19 01:31 - INFO - ---------------------------------------------
2024-10-19 01:39 - INFO - ---------------------------------------------
2024-10-19 01:39 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 01:39 - INFO - 	 Train Loss: 0.071
2024-10-19 01:39 - INFO - 	 Val. Loss: 0.067
2024-10-19 01:39 - INFO - 	 ROC-AUC: 0.985
2024-10-19 01:39 - INFO - 	 PR-AUC: 0.839
2024-10-19 01:39 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 01:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 01:39 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-19 01:39 - INFO - ---------------------------------------------
2024-10-19 01:47 - INFO - ---------------------------------------------
2024-10-19 01:47 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 01:47 - INFO - 	 Train Loss: 0.070
2024-10-19 01:47 - INFO - 	 Val. Loss: 0.065
2024-10-19 01:47 - INFO - 	 ROC-AUC: 0.986
2024-10-19 01:47 - INFO - 	 PR-AUC: 0.860
2024-10-19 01:47 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 01:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 01:47 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 01:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 01:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-19 01:47 - INFO - ---------------------------------------------
2024-10-19 01:55 - INFO - ---------------------------------------------
2024-10-19 01:55 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 01:55 - INFO - 	 Train Loss: 0.068
2024-10-19 01:55 - INFO - 	 Val. Loss: 0.065
2024-10-19 01:55 - INFO - 	 ROC-AUC: 0.986
2024-10-19 01:55 - INFO - 	 PR-AUC: 0.864
2024-10-19 01:55 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 01:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 01:55 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-19 01:55 - INFO - ---------------------------------------------
2024-10-19 02:05 - INFO - Fit the preprocessing pipeline
2024-10-19 02:05 - INFO - Training using device: cuda
2024-10-19 02:05 - INFO - Creating generators
2024-10-19 02:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 02:05 - INFO - * Model:
2024-10-19 02:05 - INFO - * -----------
2024-10-19 02:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 02:05 - INFO - * -----------
2024-10-19 02:13 - INFO - ---------------------------------------------
2024-10-19 02:13 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 02:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8263
2024-10-19 02:13 - INFO - 	 Train Loss: 0.095
2024-10-19 02:13 - INFO - 	 Val. Loss: 0.073
2024-10-19 02:13 - INFO - 	 ROC-AUC: 0.983
2024-10-19 02:13 - INFO - 	 PR-AUC: 0.826
2024-10-19 02:13 - INFO - 	 Best Val. Loss: 0.073
2024-10-19 02:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 02:13 - INFO - 	 Best PR-AUC: 0.826
2024-10-19 02:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 02:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-19 02:13 - INFO - ---------------------------------------------
2024-10-19 02:21 - INFO - ---------------------------------------------
2024-10-19 02:21 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 02:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8401
2024-10-19 02:21 - INFO - 	 Train Loss: 0.080
2024-10-19 02:21 - INFO - 	 Val. Loss: 0.072
2024-10-19 02:21 - INFO - 	 ROC-AUC: 0.984
2024-10-19 02:21 - INFO - 	 PR-AUC: 0.840
2024-10-19 02:21 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 02:21 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 02:21 - INFO - 	 Best PR-AUC: 0.840
2024-10-19 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-19 02:21 - INFO - ---------------------------------------------
2024-10-19 02:29 - INFO - ---------------------------------------------
2024-10-19 02:29 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 02:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84487
2024-10-19 02:29 - INFO - 	 Train Loss: 0.076
2024-10-19 02:29 - INFO - 	 Val. Loss: 0.069
2024-10-19 02:29 - INFO - 	 ROC-AUC: 0.984
2024-10-19 02:29 - INFO - 	 PR-AUC: 0.845
2024-10-19 02:29 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 02:29 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 02:29 - INFO - 	 Best PR-AUC: 0.845
2024-10-19 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-19 02:29 - INFO - ---------------------------------------------
2024-10-19 02:37 - INFO - ---------------------------------------------
2024-10-19 02:37 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 02:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86751
2024-10-19 02:37 - INFO - 	 Train Loss: 0.075
2024-10-19 02:37 - INFO - 	 Val. Loss: 0.064
2024-10-19 02:37 - INFO - 	 ROC-AUC: 0.986
2024-10-19 02:37 - INFO - 	 PR-AUC: 0.868
2024-10-19 02:37 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 02:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 02:37 - INFO - 	 Best PR-AUC: 0.868
2024-10-19 02:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 02:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-19 02:37 - INFO - ---------------------------------------------
2024-10-19 02:45 - INFO - ---------------------------------------------
2024-10-19 02:45 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 02:45 - INFO - 	 Train Loss: 0.073
2024-10-19 02:45 - INFO - 	 Val. Loss: 0.064
2024-10-19 02:45 - INFO - 	 ROC-AUC: 0.985
2024-10-19 02:45 - INFO - 	 PR-AUC: 0.862
2024-10-19 02:45 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 02:45 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 02:45 - INFO - 	 Best PR-AUC: 0.868
2024-10-19 02:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 02:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-19 02:45 - INFO - ---------------------------------------------
2024-10-19 02:53 - INFO - ---------------------------------------------
2024-10-19 02:53 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 02:53 - INFO - 	 Train Loss: 0.071
2024-10-19 02:53 - INFO - 	 Val. Loss: 0.066
2024-10-19 02:53 - INFO - 	 ROC-AUC: 0.985
2024-10-19 02:53 - INFO - 	 PR-AUC: 0.855
2024-10-19 02:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 02:53 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 02:53 - INFO - 	 Best PR-AUC: 0.868
2024-10-19 02:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 02:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-19 02:53 - INFO - ---------------------------------------------
2024-10-19 03:01 - INFO - ---------------------------------------------
2024-10-19 03:01 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 03:01 - INFO - 	 Train Loss: 0.070
2024-10-19 03:01 - INFO - 	 Val. Loss: 0.063
2024-10-19 03:01 - INFO - 	 ROC-AUC: 0.986
2024-10-19 03:01 - INFO - 	 PR-AUC: 0.856
2024-10-19 03:01 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 03:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 03:01 - INFO - 	 Best PR-AUC: 0.868
2024-10-19 03:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 03:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-19 03:01 - INFO - ---------------------------------------------
2024-10-19 03:09 - INFO - ---------------------------------------------
2024-10-19 03:09 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 03:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87239
2024-10-19 03:09 - INFO - 	 Train Loss: 0.069
2024-10-19 03:09 - INFO - 	 Val. Loss: 0.064
2024-10-19 03:09 - INFO - 	 ROC-AUC: 0.985
2024-10-19 03:09 - INFO - 	 PR-AUC: 0.872
2024-10-19 03:09 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 03:09 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 03:09 - INFO - 	 Best PR-AUC: 0.872
2024-10-19 03:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 03:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-19 03:09 - INFO - ---------------------------------------------
2024-10-19 03:17 - INFO - ---------------------------------------------
2024-10-19 03:17 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 03:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87636
2024-10-19 03:17 - INFO - 	 Train Loss: 0.068
2024-10-19 03:17 - INFO - 	 Val. Loss: 0.061
2024-10-19 03:17 - INFO - 	 ROC-AUC: 0.988
2024-10-19 03:17 - INFO - 	 PR-AUC: 0.876
2024-10-19 03:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 03:17 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 03:17 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 03:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 03:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-19 03:17 - INFO - ---------------------------------------------
2024-10-19 03:25 - INFO - ---------------------------------------------
2024-10-19 03:25 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 03:25 - INFO - 	 Train Loss: 0.066
2024-10-19 03:25 - INFO - 	 Val. Loss: 0.062
2024-10-19 03:25 - INFO - 	 ROC-AUC: 0.986
2024-10-19 03:25 - INFO - 	 PR-AUC: 0.868
2024-10-19 03:25 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 03:25 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 03:25 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 03:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 03:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-19 03:25 - INFO - ---------------------------------------------
2024-10-19 03:28 - INFO - Fit the preprocessing pipeline
2024-10-19 03:28 - INFO - Training using device: cuda
2024-10-19 03:28 - INFO - Creating generators
2024-10-19 03:28 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 03:28 - INFO - * Model:
2024-10-19 03:28 - INFO - * -----------
2024-10-19 03:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 03:28 - INFO - * -----------
2024-10-19 03:36 - INFO - ---------------------------------------------
2024-10-19 03:36 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 03:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81759
2024-10-19 03:36 - INFO - 	 Train Loss: 0.096
2024-10-19 03:36 - INFO - 	 Val. Loss: 0.074
2024-10-19 03:36 - INFO - 	 ROC-AUC: 0.983
2024-10-19 03:36 - INFO - 	 PR-AUC: 0.818
2024-10-19 03:36 - INFO - 	 Best Val. Loss: 0.074
2024-10-19 03:36 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 03:36 - INFO - 	 Best PR-AUC: 0.818
2024-10-19 03:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 03:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-19 03:36 - INFO - ---------------------------------------------
2024-10-19 03:44 - INFO - ---------------------------------------------
2024-10-19 03:44 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 03:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84359
2024-10-19 03:44 - INFO - 	 Train Loss: 0.081
2024-10-19 03:44 - INFO - 	 Val. Loss: 0.070
2024-10-19 03:44 - INFO - 	 ROC-AUC: 0.985
2024-10-19 03:44 - INFO - 	 PR-AUC: 0.844
2024-10-19 03:44 - INFO - 	 Best Val. Loss: 0.070
2024-10-19 03:44 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 03:44 - INFO - 	 Best PR-AUC: 0.844
2024-10-19 03:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 03:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-19 03:44 - INFO - ---------------------------------------------
2024-10-19 03:52 - INFO - ---------------------------------------------
2024-10-19 03:52 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 03:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86158
2024-10-19 03:52 - INFO - 	 Train Loss: 0.077
2024-10-19 03:52 - INFO - 	 Val. Loss: 0.065
2024-10-19 03:52 - INFO - 	 ROC-AUC: 0.987
2024-10-19 03:52 - INFO - 	 PR-AUC: 0.862
2024-10-19 03:52 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 03:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 03:52 - INFO - 	 Best PR-AUC: 0.862
2024-10-19 03:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 03:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-19 03:52 - INFO - ---------------------------------------------
2024-10-19 04:00 - INFO - ---------------------------------------------
2024-10-19 04:00 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 04:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87082
2024-10-19 04:00 - INFO - 	 Train Loss: 0.074
2024-10-19 04:00 - INFO - 	 Val. Loss: 0.063
2024-10-19 04:00 - INFO - 	 ROC-AUC: 0.987
2024-10-19 04:00 - INFO - 	 PR-AUC: 0.871
2024-10-19 04:00 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 04:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 04:00 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 04:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 04:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-19 04:00 - INFO - ---------------------------------------------
2024-10-19 04:08 - INFO - ---------------------------------------------
2024-10-19 04:08 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 04:08 - INFO - 	 Train Loss: 0.073
2024-10-19 04:08 - INFO - 	 Val. Loss: 0.066
2024-10-19 04:08 - INFO - 	 ROC-AUC: 0.985
2024-10-19 04:08 - INFO - 	 PR-AUC: 0.851
2024-10-19 04:08 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 04:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 04:08 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 04:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 04:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-19 04:08 - INFO - ---------------------------------------------
2024-10-19 04:16 - INFO - ---------------------------------------------
2024-10-19 04:16 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 04:16 - INFO - 	 Train Loss: 0.071
2024-10-19 04:16 - INFO - 	 Val. Loss: 0.062
2024-10-19 04:16 - INFO - 	 ROC-AUC: 0.988
2024-10-19 04:16 - INFO - 	 PR-AUC: 0.864
2024-10-19 04:16 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 04:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 04:16 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 04:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 04:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-19 04:16 - INFO - ---------------------------------------------
2024-10-19 04:24 - INFO - ---------------------------------------------
2024-10-19 04:24 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 04:24 - INFO - 	 Train Loss: 0.069
2024-10-19 04:24 - INFO - 	 Val. Loss: 0.062
2024-10-19 04:24 - INFO - 	 ROC-AUC: 0.987
2024-10-19 04:24 - INFO - 	 PR-AUC: 0.867
2024-10-19 04:24 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 04:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 04:24 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 04:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 04:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-19 04:24 - INFO - ---------------------------------------------
2024-10-19 04:34 - INFO - Fit the preprocessing pipeline
2024-10-19 04:34 - INFO - Training using device: cuda
2024-10-19 04:34 - INFO - Creating generators
2024-10-19 04:34 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 04:34 - INFO - * Model:
2024-10-19 04:34 - INFO - * -----------
2024-10-19 04:34 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 04:34 - INFO - * -----------
2024-10-19 04:42 - INFO - ---------------------------------------------
2024-10-19 04:42 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 04:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82147
2024-10-19 04:42 - INFO - 	 Train Loss: 0.095
2024-10-19 04:42 - INFO - 	 Val. Loss: 0.075
2024-10-19 04:42 - INFO - 	 ROC-AUC: 0.982
2024-10-19 04:42 - INFO - 	 PR-AUC: 0.821
2024-10-19 04:42 - INFO - 	 Best Val. Loss: 0.075
2024-10-19 04:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 04:42 - INFO - 	 Best PR-AUC: 0.821
2024-10-19 04:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 04:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-19 04:42 - INFO - ---------------------------------------------
2024-10-19 04:50 - INFO - ---------------------------------------------
2024-10-19 04:50 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 04:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84575
2024-10-19 04:50 - INFO - 	 Train Loss: 0.081
2024-10-19 04:50 - INFO - 	 Val. Loss: 0.069
2024-10-19 04:50 - INFO - 	 ROC-AUC: 0.985
2024-10-19 04:50 - INFO - 	 PR-AUC: 0.846
2024-10-19 04:50 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 04:50 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 04:50 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 04:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 04:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-19 04:50 - INFO - ---------------------------------------------
2024-10-19 04:58 - INFO - ---------------------------------------------
2024-10-19 04:58 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 04:58 - INFO - 	 Train Loss: 0.076
2024-10-19 04:58 - INFO - 	 Val. Loss: 0.072
2024-10-19 04:58 - INFO - 	 ROC-AUC: 0.985
2024-10-19 04:58 - INFO - 	 PR-AUC: 0.845
2024-10-19 04:58 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 04:58 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 04:58 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 04:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 04:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-19 04:58 - INFO - ---------------------------------------------
2024-10-19 05:06 - INFO - ---------------------------------------------
2024-10-19 05:06 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 05:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85858
2024-10-19 05:06 - INFO - 	 Train Loss: 0.075
2024-10-19 05:06 - INFO - 	 Val. Loss: 0.065
2024-10-19 05:06 - INFO - 	 ROC-AUC: 0.986
2024-10-19 05:06 - INFO - 	 PR-AUC: 0.859
2024-10-19 05:06 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 05:06 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 05:06 - INFO - 	 Best PR-AUC: 0.859
2024-10-19 05:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 05:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-19 05:06 - INFO - ---------------------------------------------
2024-10-19 05:15 - INFO - ---------------------------------------------
2024-10-19 05:15 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 05:15 - INFO - 	 Train Loss: 0.072
2024-10-19 05:15 - INFO - 	 Val. Loss: 0.064
2024-10-19 05:15 - INFO - 	 ROC-AUC: 0.986
2024-10-19 05:15 - INFO - 	 PR-AUC: 0.856
2024-10-19 05:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 05:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 05:15 - INFO - 	 Best PR-AUC: 0.859
2024-10-19 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-19 05:15 - INFO - ---------------------------------------------
2024-10-19 05:23 - INFO - ---------------------------------------------
2024-10-19 05:23 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 05:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86637
2024-10-19 05:23 - INFO - 	 Train Loss: 0.071
2024-10-19 05:23 - INFO - 	 Val. Loss: 0.063
2024-10-19 05:23 - INFO - 	 ROC-AUC: 0.986
2024-10-19 05:23 - INFO - 	 PR-AUC: 0.866
2024-10-19 05:23 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 05:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 05:23 - INFO - 	 Best PR-AUC: 0.866
2024-10-19 05:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 05:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-10-19 05:23 - INFO - ---------------------------------------------
2024-10-19 05:31 - INFO - ---------------------------------------------
2024-10-19 05:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 05:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87298
2024-10-19 05:31 - INFO - 	 Train Loss: 0.070
2024-10-19 05:31 - INFO - 	 Val. Loss: 0.063
2024-10-19 05:31 - INFO - 	 ROC-AUC: 0.986
2024-10-19 05:31 - INFO - 	 PR-AUC: 0.873
2024-10-19 05:31 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 05:31 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 05:31 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 05:31 - INFO - ---------------------------------------------
2024-10-19 05:39 - INFO - ---------------------------------------------
2024-10-19 05:39 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-19 05:39 - INFO - 	 Train Loss: 0.068
2024-10-19 05:39 - INFO - 	 Val. Loss: 0.064
2024-10-19 05:39 - INFO - 	 ROC-AUC: 0.987
2024-10-19 05:39 - INFO - 	 PR-AUC: 0.869
2024-10-19 05:39 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 05:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 05:39 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 05:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 05:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 05:39 - INFO - ---------------------------------------------
2024-10-19 05:47 - INFO - ---------------------------------------------
2024-10-19 05:47 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-19 05:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87444
2024-10-19 05:47 - INFO - 	 Train Loss: 0.068
2024-10-19 05:47 - INFO - 	 Val. Loss: 0.061
2024-10-19 05:47 - INFO - 	 ROC-AUC: 0.986
2024-10-19 05:47 - INFO - 	 PR-AUC: 0.874
2024-10-19 05:47 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 05:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 05:47 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 05:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 05:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-19 05:47 - INFO - ---------------------------------------------
2024-10-19 05:55 - INFO - ---------------------------------------------
2024-10-19 05:55 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-19 05:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88329
2024-10-19 05:55 - INFO - 	 Train Loss: 0.066
2024-10-19 05:55 - INFO - 	 Val. Loss: 0.060
2024-10-19 05:55 - INFO - 	 ROC-AUC: 0.988
2024-10-19 05:55 - INFO - 	 PR-AUC: 0.883
2024-10-19 05:55 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 05:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 05:55 - INFO - 	 Best PR-AUC: 0.883
2024-10-19 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-19 05:55 - INFO - ---------------------------------------------
2024-10-19 05:57 - INFO - Fit the preprocessing pipeline
2024-10-19 05:57 - INFO - Training using device: cuda
2024-10-19 05:57 - INFO - Creating generators
2024-10-19 05:57 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 05:57 - INFO - * Model:
2024-10-19 05:57 - INFO - * -----------
2024-10-19 05:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 05:57 - INFO - * -----------
2024-10-19 06:05 - INFO - ---------------------------------------------
2024-10-19 06:05 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-19 06:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82909
2024-10-19 06:05 - INFO - 	 Train Loss: 0.098
2024-10-19 06:05 - INFO - 	 Val. Loss: 0.074
2024-10-19 06:05 - INFO - 	 ROC-AUC: 0.982
2024-10-19 06:05 - INFO - 	 PR-AUC: 0.829
2024-10-19 06:05 - INFO - 	 Best Val. Loss: 0.074
2024-10-19 06:05 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 06:05 - INFO - 	 Best PR-AUC: 0.829
2024-10-19 06:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-19 06:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-10-19 06:05 - INFO - ---------------------------------------------
2024-10-19 06:13 - INFO - ---------------------------------------------
2024-10-19 06:13 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-19 06:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84877
2024-10-19 06:13 - INFO - 	 Train Loss: 0.081
2024-10-19 06:13 - INFO - 	 Val. Loss: 0.069
2024-10-19 06:13 - INFO - 	 ROC-AUC: 0.984
2024-10-19 06:13 - INFO - 	 PR-AUC: 0.849
2024-10-19 06:13 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 06:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 06:13 - INFO - 	 Best PR-AUC: 0.849
2024-10-19 06:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 06:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-19 06:13 - INFO - ---------------------------------------------
2024-10-19 06:21 - INFO - ---------------------------------------------
2024-10-19 06:21 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 06:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85594
2024-10-19 06:21 - INFO - 	 Train Loss: 0.077
2024-10-19 06:21 - INFO - 	 Val. Loss: 0.066
2024-10-19 06:21 - INFO - 	 ROC-AUC: 0.986
2024-10-19 06:21 - INFO - 	 PR-AUC: 0.856
2024-10-19 06:21 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 06:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 06:21 - INFO - 	 Best PR-AUC: 0.856
2024-10-19 06:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 06:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-19 06:21 - INFO - ---------------------------------------------
2024-10-19 06:29 - INFO - ---------------------------------------------
2024-10-19 06:29 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-19 06:29 - INFO - 	 Train Loss: 0.073
2024-10-19 06:29 - INFO - 	 Val. Loss: 0.066
2024-10-19 06:29 - INFO - 	 ROC-AUC: 0.986
2024-10-19 06:29 - INFO - 	 PR-AUC: 0.853
2024-10-19 06:29 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 06:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 06:29 - INFO - 	 Best PR-AUC: 0.856
2024-10-19 06:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 06:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-19 06:29 - INFO - ---------------------------------------------
2024-10-19 06:37 - INFO - ---------------------------------------------
2024-10-19 06:37 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-19 06:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8627
2024-10-19 06:37 - INFO - 	 Train Loss: 0.073
2024-10-19 06:37 - INFO - 	 Val. Loss: 0.065
2024-10-19 06:37 - INFO - 	 ROC-AUC: 0.986
2024-10-19 06:37 - INFO - 	 PR-AUC: 0.863
2024-10-19 06:37 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 06:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 06:37 - INFO - 	 Best PR-AUC: 0.863
2024-10-19 06:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 06:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-19 06:37 - INFO - ---------------------------------------------
2024-10-19 06:45 - INFO - ---------------------------------------------
2024-10-19 06:45 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-19 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87406
2024-10-19 06:45 - INFO - 	 Train Loss: 0.072
2024-10-19 06:45 - INFO - 	 Val. Loss: 0.062
2024-10-19 06:45 - INFO - 	 ROC-AUC: 0.987
2024-10-19 06:45 - INFO - 	 PR-AUC: 0.874
2024-10-19 06:45 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 06:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 06:45 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-19 06:45 - INFO - ---------------------------------------------
2024-10-19 06:53 - INFO - ---------------------------------------------
2024-10-19 06:53 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-19 06:53 - INFO - 	 Train Loss: 0.068
2024-10-19 06:53 - INFO - 	 Val. Loss: 0.063
2024-10-19 06:53 - INFO - 	 ROC-AUC: 0.986
2024-10-19 06:53 - INFO - 	 PR-AUC: 0.867
2024-10-19 06:53 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 06:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 06:53 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-19 06:53 - INFO - ---------------------------------------------
2024-10-19 07:01 - INFO - ---------------------------------------------
2024-10-19 07:01 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-19 07:01 - INFO - 	 Train Loss: 0.068
2024-10-19 07:01 - INFO - 	 Val. Loss: 0.063
2024-10-19 07:01 - INFO - 	 ROC-AUC: 0.986
2024-10-19 07:01 - INFO - 	 PR-AUC: 0.873
2024-10-19 07:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 07:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 07:01 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 07:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 07:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-19 07:01 - INFO - ---------------------------------------------
2024-10-19 07:09 - INFO - ---------------------------------------------
2024-10-19 07:09 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-19 07:09 - INFO - 	 Train Loss: 0.067
2024-10-19 07:09 - INFO - 	 Val. Loss: 0.062
2024-10-19 07:09 - INFO - 	 ROC-AUC: 0.986
2024-10-19 07:09 - INFO - 	 PR-AUC: 0.873
2024-10-19 07:09 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 07:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 07:09 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 07:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 07:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-19 07:09 - INFO - ---------------------------------------------
2024-10-19 07:17 - INFO - ---------------------------------------------
2024-10-19 07:17 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-19 07:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87634
2024-10-19 07:17 - INFO - 	 Train Loss: 0.068
2024-10-19 07:17 - INFO - 	 Val. Loss: 0.062
2024-10-19 07:17 - INFO - 	 ROC-AUC: 0.986
2024-10-19 07:17 - INFO - 	 PR-AUC: 0.876
2024-10-19 07:17 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 07:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 07:17 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 07:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 07:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 07:17 - INFO - ---------------------------------------------
2024-10-19 07:19 - INFO - Fit the preprocessing pipeline
2024-10-19 07:19 - INFO - Training using device: cuda
2024-10-19 07:19 - INFO - Creating generators
2024-10-19 07:19 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 07:19 - INFO - * Model:
2024-10-19 07:19 - INFO - * -----------
2024-10-19 07:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 07:19 - INFO - * -----------
2024-10-19 07:27 - INFO - ---------------------------------------------
2024-10-19 07:27 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 07:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81938
2024-10-19 07:27 - INFO - 	 Train Loss: 0.097
2024-10-19 07:27 - INFO - 	 Val. Loss: 0.076
2024-10-19 07:27 - INFO - 	 ROC-AUC: 0.981
2024-10-19 07:27 - INFO - 	 PR-AUC: 0.819
2024-10-19 07:27 - INFO - 	 Best Val. Loss: 0.076
2024-10-19 07:27 - INFO - 	 Best ROC-AUC: 0.981
2024-10-19 07:27 - INFO - 	 Best PR-AUC: 0.819
2024-10-19 07:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 07:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-19 07:27 - INFO - ---------------------------------------------
2024-10-19 07:35 - INFO - ---------------------------------------------
2024-10-19 07:35 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 07:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84589
2024-10-19 07:35 - INFO - 	 Train Loss: 0.082
2024-10-19 07:35 - INFO - 	 Val. Loss: 0.071
2024-10-19 07:35 - INFO - 	 ROC-AUC: 0.983
2024-10-19 07:35 - INFO - 	 PR-AUC: 0.846
2024-10-19 07:35 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 07:35 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 07:35 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 07:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 07:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-19 07:35 - INFO - ---------------------------------------------
2024-10-19 07:43 - INFO - ---------------------------------------------
2024-10-19 07:43 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 07:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85432
2024-10-19 07:43 - INFO - 	 Train Loss: 0.077
2024-10-19 07:43 - INFO - 	 Val. Loss: 0.066
2024-10-19 07:43 - INFO - 	 ROC-AUC: 0.986
2024-10-19 07:43 - INFO - 	 PR-AUC: 0.854
2024-10-19 07:43 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 07:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 07:43 - INFO - 	 Best PR-AUC: 0.854
2024-10-19 07:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 07:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-19 07:43 - INFO - ---------------------------------------------
2024-10-19 07:51 - INFO - ---------------------------------------------
2024-10-19 07:51 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-19 07:51 - INFO - 	 Train Loss: 0.074
2024-10-19 07:51 - INFO - 	 Val. Loss: 0.070
2024-10-19 07:51 - INFO - 	 ROC-AUC: 0.984
2024-10-19 07:51 - INFO - 	 PR-AUC: 0.845
2024-10-19 07:51 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 07:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 07:51 - INFO - 	 Best PR-AUC: 0.854
2024-10-19 07:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 07:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-19 07:51 - INFO - ---------------------------------------------
2024-10-19 08:00 - INFO - ---------------------------------------------
2024-10-19 08:00 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 08:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86246
2024-10-19 08:00 - INFO - 	 Train Loss: 0.073
2024-10-19 08:00 - INFO - 	 Val. Loss: 0.065
2024-10-19 08:00 - INFO - 	 ROC-AUC: 0.986
2024-10-19 08:00 - INFO - 	 PR-AUC: 0.862
2024-10-19 08:00 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 08:00 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 08:00 - INFO - 	 Best PR-AUC: 0.862
2024-10-19 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-19 08:00 - INFO - ---------------------------------------------
2024-10-19 08:08 - INFO - ---------------------------------------------
2024-10-19 08:08 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-19 08:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86734
2024-10-19 08:08 - INFO - 	 Train Loss: 0.071
2024-10-19 08:08 - INFO - 	 Val. Loss: 0.063
2024-10-19 08:08 - INFO - 	 ROC-AUC: 0.986
2024-10-19 08:08 - INFO - 	 PR-AUC: 0.867
2024-10-19 08:08 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 08:08 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 08:08 - INFO - 	 Best PR-AUC: 0.867
2024-10-19 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-19 08:08 - INFO - ---------------------------------------------
2024-10-19 08:16 - INFO - ---------------------------------------------
2024-10-19 08:16 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-19 08:16 - INFO - 	 Train Loss: 0.069
2024-10-19 08:16 - INFO - 	 Val. Loss: 0.064
2024-10-19 08:16 - INFO - 	 ROC-AUC: 0.986
2024-10-19 08:16 - INFO - 	 PR-AUC: 0.863
2024-10-19 08:16 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 08:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 08:16 - INFO - 	 Best PR-AUC: 0.867
2024-10-19 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-19 08:16 - INFO - ---------------------------------------------
2024-10-19 08:24 - INFO - ---------------------------------------------
2024-10-19 08:24 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-19 08:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87562
2024-10-19 08:24 - INFO - 	 Train Loss: 0.068
2024-10-19 08:24 - INFO - 	 Val. Loss: 0.062
2024-10-19 08:24 - INFO - 	 ROC-AUC: 0.987
2024-10-19 08:24 - INFO - 	 PR-AUC: 0.876
2024-10-19 08:24 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 08:24 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 08:24 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 08:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 08:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-19 08:24 - INFO - ---------------------------------------------
2024-10-19 08:32 - INFO - ---------------------------------------------
2024-10-19 08:32 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 08:32 - INFO - 	 Train Loss: 0.067
2024-10-19 08:32 - INFO - 	 Val. Loss: 0.062
2024-10-19 08:32 - INFO - 	 ROC-AUC: 0.987
2024-10-19 08:32 - INFO - 	 PR-AUC: 0.864
2024-10-19 08:32 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 08:32 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 08:32 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-19 08:32 - INFO - ---------------------------------------------
2024-10-19 08:40 - INFO - ---------------------------------------------
2024-10-19 08:40 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 08:40 - INFO - 	 Train Loss: 0.066
2024-10-19 08:40 - INFO - 	 Val. Loss: 0.061
2024-10-19 08:40 - INFO - 	 ROC-AUC: 0.986
2024-10-19 08:40 - INFO - 	 PR-AUC: 0.870
2024-10-19 08:40 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 08:40 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 08:40 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 08:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 08:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.882
2024-10-19 08:40 - INFO - ---------------------------------------------
2024-10-19 08:42 - INFO - Fit the preprocessing pipeline
2024-10-19 08:42 - INFO - Training using device: cuda
2024-10-19 08:42 - INFO - Creating generators
2024-10-19 08:42 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 08:42 - INFO - * Model:
2024-10-19 08:42 - INFO - * -----------
2024-10-19 08:42 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 08:42 - INFO - * -----------
2024-10-19 08:50 - INFO - ---------------------------------------------
2024-10-19 08:50 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-19 08:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83576
2024-10-19 08:50 - INFO - 	 Train Loss: 0.097
2024-10-19 08:50 - INFO - 	 Val. Loss: 0.073
2024-10-19 08:50 - INFO - 	 ROC-AUC: 0.983
2024-10-19 08:50 - INFO - 	 PR-AUC: 0.836
2024-10-19 08:50 - INFO - 	 Best Val. Loss: 0.073
2024-10-19 08:50 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 08:50 - INFO - 	 Best PR-AUC: 0.836
2024-10-19 08:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 08:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-10-19 08:50 - INFO - ---------------------------------------------
2024-10-19 08:58 - INFO - ---------------------------------------------
2024-10-19 08:58 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-19 08:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84197
2024-10-19 08:58 - INFO - 	 Train Loss: 0.081
2024-10-19 08:58 - INFO - 	 Val. Loss: 0.073
2024-10-19 08:58 - INFO - 	 ROC-AUC: 0.984
2024-10-19 08:58 - INFO - 	 PR-AUC: 0.842
2024-10-19 08:58 - INFO - 	 Best Val. Loss: 0.073
2024-10-19 08:58 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 08:58 - INFO - 	 Best PR-AUC: 0.842
2024-10-19 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-19 08:58 - INFO - ---------------------------------------------
2024-10-19 09:06 - INFO - ---------------------------------------------
2024-10-19 09:06 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-19 09:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85292
2024-10-19 09:06 - INFO - 	 Train Loss: 0.077
2024-10-19 09:06 - INFO - 	 Val. Loss: 0.068
2024-10-19 09:06 - INFO - 	 ROC-AUC: 0.985
2024-10-19 09:06 - INFO - 	 PR-AUC: 0.853
2024-10-19 09:06 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 09:06 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 09:06 - INFO - 	 Best PR-AUC: 0.853
2024-10-19 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-19 09:06 - INFO - ---------------------------------------------
2024-10-19 09:14 - INFO - ---------------------------------------------
2024-10-19 09:14 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-19 09:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85579
2024-10-19 09:14 - INFO - 	 Train Loss: 0.073
2024-10-19 09:14 - INFO - 	 Val. Loss: 0.064
2024-10-19 09:14 - INFO - 	 ROC-AUC: 0.986
2024-10-19 09:14 - INFO - 	 PR-AUC: 0.856
2024-10-19 09:14 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 09:14 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 09:14 - INFO - 	 Best PR-AUC: 0.856
2024-10-19 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-19 09:14 - INFO - ---------------------------------------------
2024-10-19 09:22 - INFO - ---------------------------------------------
2024-10-19 09:22 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 09:22 - INFO - 	 Train Loss: 0.073
2024-10-19 09:22 - INFO - 	 Val. Loss: 0.068
2024-10-19 09:22 - INFO - 	 ROC-AUC: 0.986
2024-10-19 09:22 - INFO - 	 PR-AUC: 0.854
2024-10-19 09:22 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 09:22 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 09:22 - INFO - 	 Best PR-AUC: 0.856
2024-10-19 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-19 09:22 - INFO - ---------------------------------------------
2024-10-19 09:30 - INFO - ---------------------------------------------
2024-10-19 09:30 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-19 09:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87235
2024-10-19 09:30 - INFO - 	 Train Loss: 0.071
2024-10-19 09:30 - INFO - 	 Val. Loss: 0.062
2024-10-19 09:30 - INFO - 	 ROC-AUC: 0.987
2024-10-19 09:30 - INFO - 	 PR-AUC: 0.872
2024-10-19 09:30 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 09:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 09:30 - INFO - 	 Best PR-AUC: 0.872
2024-10-19 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-19 09:30 - INFO - ---------------------------------------------
2024-10-19 09:38 - INFO - ---------------------------------------------
2024-10-19 09:38 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 09:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87606
2024-10-19 09:38 - INFO - 	 Train Loss: 0.069
2024-10-19 09:38 - INFO - 	 Val. Loss: 0.060
2024-10-19 09:38 - INFO - 	 ROC-AUC: 0.988
2024-10-19 09:38 - INFO - 	 PR-AUC: 0.876
2024-10-19 09:38 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 09:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 09:38 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 09:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 09:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-19 09:38 - INFO - ---------------------------------------------
2024-10-19 09:46 - INFO - ---------------------------------------------
2024-10-19 09:46 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 09:46 - INFO - 	 Train Loss: 0.068
2024-10-19 09:46 - INFO - 	 Val. Loss: 0.063
2024-10-19 09:46 - INFO - 	 ROC-AUC: 0.987
2024-10-19 09:46 - INFO - 	 PR-AUC: 0.864
2024-10-19 09:46 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 09:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 09:46 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 09:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 09:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-19 09:46 - INFO - ---------------------------------------------
2024-10-19 09:54 - INFO - ---------------------------------------------
2024-10-19 09:54 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-19 09:54 - INFO - 	 Train Loss: 0.067
2024-10-19 09:54 - INFO - 	 Val. Loss: 0.064
2024-10-19 09:54 - INFO - 	 ROC-AUC: 0.987
2024-10-19 09:54 - INFO - 	 PR-AUC: 0.871
2024-10-19 09:54 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 09:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 09:54 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 09:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 09:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-19 09:54 - INFO - ---------------------------------------------
2024-10-19 10:02 - INFO - ---------------------------------------------
2024-10-19 10:02 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 10:02 - INFO - 	 Train Loss: 0.067
2024-10-19 10:02 - INFO - 	 Val. Loss: 0.064
2024-10-19 10:02 - INFO - 	 ROC-AUC: 0.986
2024-10-19 10:02 - INFO - 	 PR-AUC: 0.867
2024-10-19 10:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 10:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 10:02 - INFO - 	 Best PR-AUC: 0.876
2024-10-19 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-10-19 10:02 - INFO - ---------------------------------------------
2024-10-19 10:04 - INFO - Fit the preprocessing pipeline
2024-10-19 10:04 - INFO - Training using device: cuda
2024-10-19 10:04 - INFO - Creating generators
2024-10-19 10:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 10:05 - INFO - * Model:
2024-10-19 10:05 - INFO - * -----------
2024-10-19 10:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 10:05 - INFO - * -----------
2024-10-19 10:13 - INFO - ---------------------------------------------
2024-10-19 10:13 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-19 10:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81938
2024-10-19 10:13 - INFO - 	 Train Loss: 0.098
2024-10-19 10:13 - INFO - 	 Val. Loss: 0.073
2024-10-19 10:13 - INFO - 	 ROC-AUC: 0.983
2024-10-19 10:13 - INFO - 	 PR-AUC: 0.819
2024-10-19 10:13 - INFO - 	 Best Val. Loss: 0.073
2024-10-19 10:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 10:13 - INFO - 	 Best PR-AUC: 0.819
2024-10-19 10:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 10:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-19 10:13 - INFO - ---------------------------------------------
2024-10-19 10:21 - INFO - ---------------------------------------------
2024-10-19 10:21 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 10:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84617
2024-10-19 10:21 - INFO - 	 Train Loss: 0.080
2024-10-19 10:21 - INFO - 	 Val. Loss: 0.069
2024-10-19 10:21 - INFO - 	 ROC-AUC: 0.984
2024-10-19 10:21 - INFO - 	 PR-AUC: 0.846
2024-10-19 10:21 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 10:21 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 10:21 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 10:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 10:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-19 10:21 - INFO - ---------------------------------------------
2024-10-19 10:29 - INFO - ---------------------------------------------
2024-10-19 10:29 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 10:29 - INFO - 	 Train Loss: 0.077
2024-10-19 10:29 - INFO - 	 Val. Loss: 0.069
2024-10-19 10:29 - INFO - 	 ROC-AUC: 0.985
2024-10-19 10:29 - INFO - 	 PR-AUC: 0.833
2024-10-19 10:29 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 10:29 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 10:29 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-19 10:29 - INFO - ---------------------------------------------
2024-10-19 10:37 - INFO - ---------------------------------------------
2024-10-19 10:37 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 10:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85849
2024-10-19 10:37 - INFO - 	 Train Loss: 0.074
2024-10-19 10:37 - INFO - 	 Val. Loss: 0.066
2024-10-19 10:37 - INFO - 	 ROC-AUC: 0.985
2024-10-19 10:37 - INFO - 	 PR-AUC: 0.858
2024-10-19 10:37 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 10:37 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 10:37 - INFO - 	 Best PR-AUC: 0.858
2024-10-19 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 10:37 - INFO - ---------------------------------------------
2024-10-19 10:45 - INFO - ---------------------------------------------
2024-10-19 10:45 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 10:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86947
2024-10-19 10:45 - INFO - 	 Train Loss: 0.072
2024-10-19 10:45 - INFO - 	 Val. Loss: 0.063
2024-10-19 10:45 - INFO - 	 ROC-AUC: 0.986
2024-10-19 10:45 - INFO - 	 PR-AUC: 0.869
2024-10-19 10:45 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 10:45 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 10:45 - INFO - 	 Best PR-AUC: 0.869
2024-10-19 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-19 10:45 - INFO - ---------------------------------------------
2024-10-19 10:53 - INFO - ---------------------------------------------
2024-10-19 10:53 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-19 10:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87145
2024-10-19 10:53 - INFO - 	 Train Loss: 0.071
2024-10-19 10:53 - INFO - 	 Val. Loss: 0.063
2024-10-19 10:53 - INFO - 	 ROC-AUC: 0.987
2024-10-19 10:53 - INFO - 	 PR-AUC: 0.871
2024-10-19 10:53 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 10:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 10:53 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 10:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 10:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 10:53 - INFO - ---------------------------------------------
2024-10-19 11:01 - INFO - ---------------------------------------------
2024-10-19 11:01 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-19 11:01 - INFO - 	 Train Loss: 0.069
2024-10-19 11:01 - INFO - 	 Val. Loss: 0.065
2024-10-19 11:01 - INFO - 	 ROC-AUC: 0.987
2024-10-19 11:01 - INFO - 	 PR-AUC: 0.871
2024-10-19 11:01 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 11:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 11:01 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 11:01 - INFO - ---------------------------------------------
2024-10-19 11:09 - INFO - ---------------------------------------------
2024-10-19 11:09 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-19 11:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87162
2024-10-19 11:09 - INFO - 	 Train Loss: 0.068
2024-10-19 11:09 - INFO - 	 Val. Loss: 0.063
2024-10-19 11:09 - INFO - 	 ROC-AUC: 0.987
2024-10-19 11:09 - INFO - 	 PR-AUC: 0.872
2024-10-19 11:09 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 11:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 11:09 - INFO - 	 Best PR-AUC: 0.872
2024-10-19 11:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 11:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 11:09 - INFO - ---------------------------------------------
2024-10-19 11:17 - INFO - ---------------------------------------------
2024-10-19 11:17 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 11:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8815
2024-10-19 11:17 - INFO - 	 Train Loss: 0.068
2024-10-19 11:17 - INFO - 	 Val. Loss: 0.061
2024-10-19 11:17 - INFO - 	 ROC-AUC: 0.987
2024-10-19 11:17 - INFO - 	 PR-AUC: 0.881
2024-10-19 11:17 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 11:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 11:17 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 11:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 11:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-19 11:17 - INFO - ---------------------------------------------
2024-10-19 11:25 - INFO - ---------------------------------------------
2024-10-19 11:25 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 11:25 - INFO - 	 Train Loss: 0.067
2024-10-19 11:25 - INFO - 	 Val. Loss: 0.063
2024-10-19 11:25 - INFO - 	 ROC-AUC: 0.987
2024-10-19 11:25 - INFO - 	 PR-AUC: 0.874
2024-10-19 11:25 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 11:25 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 11:25 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 11:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 11:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-19 11:25 - INFO - ---------------------------------------------
2024-10-19 11:27 - INFO - Fit the preprocessing pipeline
2024-10-19 11:27 - INFO - Training using device: cuda
2024-10-19 11:27 - INFO - Creating generators
2024-10-19 11:27 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 11:27 - INFO - * Model:
2024-10-19 11:27 - INFO - * -----------
2024-10-19 11:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 11:27 - INFO - * -----------
2024-10-19 11:35 - INFO - ---------------------------------------------
2024-10-19 11:35 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 11:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83053
2024-10-19 11:35 - INFO - 	 Train Loss: 0.097
2024-10-19 11:35 - INFO - 	 Val. Loss: 0.074
2024-10-19 11:35 - INFO - 	 ROC-AUC: 0.982
2024-10-19 11:35 - INFO - 	 PR-AUC: 0.831
2024-10-19 11:35 - INFO - 	 Best Val. Loss: 0.074
2024-10-19 11:35 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 11:35 - INFO - 	 Best PR-AUC: 0.831
2024-10-19 11:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 11:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-19 11:35 - INFO - ---------------------------------------------
2024-10-19 11:43 - INFO - ---------------------------------------------
2024-10-19 11:43 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 11:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85188
2024-10-19 11:43 - INFO - 	 Train Loss: 0.080
2024-10-19 11:43 - INFO - 	 Val. Loss: 0.066
2024-10-19 11:43 - INFO - 	 ROC-AUC: 0.986
2024-10-19 11:43 - INFO - 	 PR-AUC: 0.852
2024-10-19 11:43 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 11:43 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 11:43 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 11:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 11:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-19 11:43 - INFO - ---------------------------------------------
2024-10-19 11:51 - INFO - ---------------------------------------------
2024-10-19 11:51 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-19 11:51 - INFO - 	 Train Loss: 0.077
2024-10-19 11:51 - INFO - 	 Val. Loss: 0.065
2024-10-19 11:51 - INFO - 	 ROC-AUC: 0.986
2024-10-19 11:51 - INFO - 	 PR-AUC: 0.849
2024-10-19 11:51 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 11:51 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 11:51 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 11:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 11:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-19 11:51 - INFO - ---------------------------------------------
2024-10-19 11:59 - INFO - ---------------------------------------------
2024-10-19 11:59 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-19 11:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87013
2024-10-19 11:59 - INFO - 	 Train Loss: 0.074
2024-10-19 11:59 - INFO - 	 Val. Loss: 0.065
2024-10-19 11:59 - INFO - 	 ROC-AUC: 0.986
2024-10-19 11:59 - INFO - 	 PR-AUC: 0.870
2024-10-19 11:59 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 11:59 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 11:59 - INFO - 	 Best PR-AUC: 0.870
2024-10-19 11:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 11:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 11:59 - INFO - ---------------------------------------------
2024-10-19 12:07 - INFO - ---------------------------------------------
2024-10-19 12:07 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-19 12:07 - INFO - 	 Train Loss: 0.072
2024-10-19 12:07 - INFO - 	 Val. Loss: 0.064
2024-10-19 12:07 - INFO - 	 ROC-AUC: 0.986
2024-10-19 12:07 - INFO - 	 PR-AUC: 0.862
2024-10-19 12:07 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 12:07 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 12:07 - INFO - 	 Best PR-AUC: 0.870
2024-10-19 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 12:07 - INFO - ---------------------------------------------
2024-10-19 12:15 - INFO - ---------------------------------------------
2024-10-19 12:15 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 12:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8733
2024-10-19 12:15 - INFO - 	 Train Loss: 0.072
2024-10-19 12:15 - INFO - 	 Val. Loss: 0.062
2024-10-19 12:15 - INFO - 	 ROC-AUC: 0.986
2024-10-19 12:15 - INFO - 	 PR-AUC: 0.873
2024-10-19 12:15 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 12:15 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 12:15 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 12:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 12:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 12:15 - INFO - ---------------------------------------------
2024-10-19 12:23 - INFO - ---------------------------------------------
2024-10-19 12:23 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 12:23 - INFO - 	 Train Loss: 0.070
2024-10-19 12:23 - INFO - 	 Val. Loss: 0.065
2024-10-19 12:23 - INFO - 	 ROC-AUC: 0.985
2024-10-19 12:23 - INFO - 	 PR-AUC: 0.869
2024-10-19 12:23 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 12:23 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 12:23 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 12:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 12:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 12:23 - INFO - ---------------------------------------------
2024-10-19 12:31 - INFO - ---------------------------------------------
2024-10-19 12:31 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-19 12:31 - INFO - 	 Train Loss: 0.069
2024-10-19 12:31 - INFO - 	 Val. Loss: 0.064
2024-10-19 12:31 - INFO - 	 ROC-AUC: 0.986
2024-10-19 12:31 - INFO - 	 PR-AUC: 0.866
2024-10-19 12:31 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 12:31 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 12:31 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 12:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 12:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 12:31 - INFO - ---------------------------------------------
2024-10-19 12:39 - INFO - ---------------------------------------------
2024-10-19 12:39 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 12:39 - INFO - 	 Train Loss: 0.068
2024-10-19 12:39 - INFO - 	 Val. Loss: 0.064
2024-10-19 12:39 - INFO - 	 ROC-AUC: 0.985
2024-10-19 12:39 - INFO - 	 PR-AUC: 0.869
2024-10-19 12:39 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 12:39 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 12:39 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 12:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 12:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 12:39 - INFO - ---------------------------------------------
2024-10-19 12:50 - INFO - Fit the preprocessing pipeline
2024-10-19 12:50 - INFO - Training using device: cuda
2024-10-19 12:50 - INFO - Creating generators
2024-10-19 12:50 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 12:50 - INFO - * Model:
2024-10-19 12:50 - INFO - * -----------
2024-10-19 12:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 12:50 - INFO - * -----------
2024-10-19 12:58 - INFO - ---------------------------------------------
2024-10-19 12:58 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 12:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84628
2024-10-19 12:58 - INFO - 	 Train Loss: 0.096
2024-10-19 12:58 - INFO - 	 Val. Loss: 0.072
2024-10-19 12:58 - INFO - 	 ROC-AUC: 0.983
2024-10-19 12:58 - INFO - 	 PR-AUC: 0.846
2024-10-19 12:58 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 12:58 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 12:58 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-19 12:58 - INFO - ---------------------------------------------
2024-10-19 13:06 - INFO - ---------------------------------------------
2024-10-19 13:06 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 13:06 - INFO - 	 Train Loss: 0.079
2024-10-19 13:06 - INFO - 	 Val. Loss: 0.075
2024-10-19 13:06 - INFO - 	 ROC-AUC: 0.983
2024-10-19 13:06 - INFO - 	 PR-AUC: 0.833
2024-10-19 13:06 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 13:06 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 13:06 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 13:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 13:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-19 13:06 - INFO - ---------------------------------------------
2024-10-19 13:14 - INFO - ---------------------------------------------
2024-10-19 13:14 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 13:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84863
2024-10-19 13:14 - INFO - 	 Train Loss: 0.077
2024-10-19 13:14 - INFO - 	 Val. Loss: 0.067
2024-10-19 13:14 - INFO - 	 ROC-AUC: 0.985
2024-10-19 13:14 - INFO - 	 PR-AUC: 0.849
2024-10-19 13:14 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 13:14 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 13:14 - INFO - 	 Best PR-AUC: 0.849
2024-10-19 13:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 13:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-19 13:14 - INFO - ---------------------------------------------
2024-10-19 13:22 - INFO - ---------------------------------------------
2024-10-19 13:22 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 13:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85134
2024-10-19 13:22 - INFO - 	 Train Loss: 0.074
2024-10-19 13:22 - INFO - 	 Val. Loss: 0.066
2024-10-19 13:22 - INFO - 	 ROC-AUC: 0.985
2024-10-19 13:22 - INFO - 	 PR-AUC: 0.851
2024-10-19 13:22 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 13:22 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 13:22 - INFO - 	 Best PR-AUC: 0.851
2024-10-19 13:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 13:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-19 13:22 - INFO - ---------------------------------------------
2024-10-19 13:30 - INFO - ---------------------------------------------
2024-10-19 13:30 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 13:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85816
2024-10-19 13:30 - INFO - 	 Train Loss: 0.072
2024-10-19 13:30 - INFO - 	 Val. Loss: 0.067
2024-10-19 13:30 - INFO - 	 ROC-AUC: 0.986
2024-10-19 13:30 - INFO - 	 PR-AUC: 0.858
2024-10-19 13:30 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 13:30 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 13:30 - INFO - 	 Best PR-AUC: 0.858
2024-10-19 13:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 13:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-19 13:30 - INFO - ---------------------------------------------
2024-10-19 13:38 - INFO - ---------------------------------------------
2024-10-19 13:38 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 13:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86527
2024-10-19 13:38 - INFO - 	 Train Loss: 0.071
2024-10-19 13:38 - INFO - 	 Val. Loss: 0.064
2024-10-19 13:38 - INFO - 	 ROC-AUC: 0.986
2024-10-19 13:38 - INFO - 	 PR-AUC: 0.865
2024-10-19 13:38 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 13:38 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 13:38 - INFO - 	 Best PR-AUC: 0.865
2024-10-19 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-19 13:38 - INFO - ---------------------------------------------
2024-10-19 13:46 - INFO - ---------------------------------------------
2024-10-19 13:46 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 13:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86865
2024-10-19 13:46 - INFO - 	 Train Loss: 0.070
2024-10-19 13:46 - INFO - 	 Val. Loss: 0.063
2024-10-19 13:46 - INFO - 	 ROC-AUC: 0.986
2024-10-19 13:46 - INFO - 	 PR-AUC: 0.869
2024-10-19 13:46 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 13:46 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 13:46 - INFO - 	 Best PR-AUC: 0.869
2024-10-19 13:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 13:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 13:46 - INFO - ---------------------------------------------
2024-10-19 13:54 - INFO - ---------------------------------------------
2024-10-19 13:54 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 13:54 - INFO - 	 Train Loss: 0.068
2024-10-19 13:54 - INFO - 	 Val. Loss: 0.064
2024-10-19 13:54 - INFO - 	 ROC-AUC: 0.986
2024-10-19 13:54 - INFO - 	 PR-AUC: 0.868
2024-10-19 13:54 - INFO - 	 Best Val. Loss: 0.063
2024-10-19 13:54 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 13:54 - INFO - 	 Best PR-AUC: 0.869
2024-10-19 13:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-19 13:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 13:54 - INFO - ---------------------------------------------
2024-10-19 14:02 - INFO - ---------------------------------------------
2024-10-19 14:02 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 14:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88068
2024-10-19 14:02 - INFO - 	 Train Loss: 0.068
2024-10-19 14:02 - INFO - 	 Val. Loss: 0.060
2024-10-19 14:02 - INFO - 	 ROC-AUC: 0.988
2024-10-19 14:02 - INFO - 	 PR-AUC: 0.881
2024-10-19 14:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 14:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 14:02 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 14:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 14:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-19 14:02 - INFO - ---------------------------------------------
2024-10-19 14:10 - INFO - ---------------------------------------------
2024-10-19 14:10 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 14:10 - INFO - 	 Train Loss: 0.065
2024-10-19 14:10 - INFO - 	 Val. Loss: 0.063
2024-10-19 14:10 - INFO - 	 ROC-AUC: 0.986
2024-10-19 14:10 - INFO - 	 PR-AUC: 0.861
2024-10-19 14:10 - INFO - 	 Best Val. Loss: 0.060
2024-10-19 14:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-19 14:10 - INFO - 	 Best PR-AUC: 0.881
2024-10-19 14:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 14:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-19 14:10 - INFO - ---------------------------------------------
2024-10-19 14:12 - INFO - Fit the preprocessing pipeline
2024-10-19 14:12 - INFO - Training using device: cuda
2024-10-19 14:12 - INFO - Creating generators
2024-10-19 14:12 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 14:12 - INFO - * Model:
2024-10-19 14:12 - INFO - * -----------
2024-10-19 14:12 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 14:12 - INFO - * -----------
2024-10-19 14:20 - INFO - ---------------------------------------------
2024-10-19 14:20 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 14:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82273
2024-10-19 14:20 - INFO - 	 Train Loss: 0.098
2024-10-19 14:20 - INFO - 	 Val. Loss: 0.075
2024-10-19 14:20 - INFO - 	 ROC-AUC: 0.982
2024-10-19 14:20 - INFO - 	 PR-AUC: 0.823
2024-10-19 14:20 - INFO - 	 Best Val. Loss: 0.075
2024-10-19 14:20 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 14:20 - INFO - 	 Best PR-AUC: 0.823
2024-10-19 14:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 14:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-19 14:20 - INFO - ---------------------------------------------
2024-10-19 14:28 - INFO - ---------------------------------------------
2024-10-19 14:28 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 14:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84572
2024-10-19 14:28 - INFO - 	 Train Loss: 0.081
2024-10-19 14:28 - INFO - 	 Val. Loss: 0.067
2024-10-19 14:28 - INFO - 	 ROC-AUC: 0.985
2024-10-19 14:28 - INFO - 	 PR-AUC: 0.846
2024-10-19 14:28 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 14:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 14:28 - INFO - 	 Best PR-AUC: 0.846
2024-10-19 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-19 14:28 - INFO - ---------------------------------------------
2024-10-19 14:37 - INFO - ---------------------------------------------
2024-10-19 14:37 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 14:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8641
2024-10-19 14:37 - INFO - 	 Train Loss: 0.077
2024-10-19 14:37 - INFO - 	 Val. Loss: 0.065
2024-10-19 14:37 - INFO - 	 ROC-AUC: 0.986
2024-10-19 14:37 - INFO - 	 PR-AUC: 0.864
2024-10-19 14:37 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 14:37 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 14:37 - INFO - 	 Best PR-AUC: 0.864
2024-10-19 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-19 14:37 - INFO - ---------------------------------------------
2024-10-19 14:45 - INFO - ---------------------------------------------
2024-10-19 14:45 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 14:45 - INFO - 	 Train Loss: 0.073
2024-10-19 14:45 - INFO - 	 Val. Loss: 0.065
2024-10-19 14:45 - INFO - 	 ROC-AUC: 0.986
2024-10-19 14:45 - INFO - 	 PR-AUC: 0.851
2024-10-19 14:45 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 14:45 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 14:45 - INFO - 	 Best PR-AUC: 0.864
2024-10-19 14:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 14:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-19 14:45 - INFO - ---------------------------------------------
2024-10-19 14:53 - INFO - ---------------------------------------------
2024-10-19 14:53 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 14:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86448
2024-10-19 14:53 - INFO - 	 Train Loss: 0.071
2024-10-19 14:53 - INFO - 	 Val. Loss: 0.064
2024-10-19 14:53 - INFO - 	 ROC-AUC: 0.987
2024-10-19 14:53 - INFO - 	 PR-AUC: 0.864
2024-10-19 14:53 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 14:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 14:53 - INFO - 	 Best PR-AUC: 0.864
2024-10-19 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-19 14:53 - INFO - ---------------------------------------------
2024-10-19 15:01 - INFO - ---------------------------------------------
2024-10-19 15:01 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 15:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8662
2024-10-19 15:01 - INFO - 	 Train Loss: 0.071
2024-10-19 15:01 - INFO - 	 Val. Loss: 0.062
2024-10-19 15:01 - INFO - 	 ROC-AUC: 0.987
2024-10-19 15:01 - INFO - 	 PR-AUC: 0.866
2024-10-19 15:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 15:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 15:01 - INFO - 	 Best PR-AUC: 0.866
2024-10-19 15:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 15:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-19 15:01 - INFO - ---------------------------------------------
2024-10-19 15:09 - INFO - ---------------------------------------------
2024-10-19 15:09 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 15:09 - INFO - 	 Train Loss: 0.070
2024-10-19 15:09 - INFO - 	 Val. Loss: 0.066
2024-10-19 15:09 - INFO - 	 ROC-AUC: 0.986
2024-10-19 15:09 - INFO - 	 PR-AUC: 0.847
2024-10-19 15:09 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 15:09 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 15:09 - INFO - 	 Best PR-AUC: 0.866
2024-10-19 15:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 15:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-19 15:09 - INFO - ---------------------------------------------
2024-10-19 15:17 - INFO - ---------------------------------------------
2024-10-19 15:17 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 15:17 - INFO - 	 Train Loss: 0.068
2024-10-19 15:17 - INFO - 	 Val. Loss: 0.064
2024-10-19 15:17 - INFO - 	 ROC-AUC: 0.986
2024-10-19 15:17 - INFO - 	 PR-AUC: 0.859
2024-10-19 15:17 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 15:17 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 15:17 - INFO - 	 Best PR-AUC: 0.866
2024-10-19 15:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 15:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-19 15:17 - INFO - ---------------------------------------------
2024-10-19 15:25 - INFO - ---------------------------------------------
2024-10-19 15:25 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 15:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8734
2024-10-19 15:25 - INFO - 	 Train Loss: 0.067
2024-10-19 15:25 - INFO - 	 Val. Loss: 0.061
2024-10-19 15:25 - INFO - 	 ROC-AUC: 0.987
2024-10-19 15:25 - INFO - 	 PR-AUC: 0.873
2024-10-19 15:25 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 15:25 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 15:25 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 15:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 15:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-19 15:25 - INFO - ---------------------------------------------
2024-10-19 15:33 - INFO - ---------------------------------------------
2024-10-19 15:33 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 15:33 - INFO - 	 Train Loss: 0.066
2024-10-19 15:33 - INFO - 	 Val. Loss: 0.063
2024-10-19 15:33 - INFO - 	 ROC-AUC: 0.987
2024-10-19 15:33 - INFO - 	 PR-AUC: 0.863
2024-10-19 15:33 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 15:33 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 15:33 - INFO - 	 Best PR-AUC: 0.873
2024-10-19 15:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-19 15:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-10-19 15:33 - INFO - ---------------------------------------------
2024-10-19 15:35 - INFO - Fit the preprocessing pipeline
2024-10-19 15:35 - INFO - Training using device: cuda
2024-10-19 15:35 - INFO - Creating generators
2024-10-19 15:35 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 15:35 - INFO - * Model:
2024-10-19 15:35 - INFO - * -----------
2024-10-19 15:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 15:35 - INFO - * -----------
2024-10-19 15:43 - INFO - ---------------------------------------------
2024-10-19 15:43 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 15:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8242
2024-10-19 15:43 - INFO - 	 Train Loss: 0.096
2024-10-19 15:43 - INFO - 	 Val. Loss: 0.074
2024-10-19 15:43 - INFO - 	 ROC-AUC: 0.982
2024-10-19 15:43 - INFO - 	 PR-AUC: 0.824
2024-10-19 15:43 - INFO - 	 Best Val. Loss: 0.074
2024-10-19 15:43 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 15:43 - INFO - 	 Best PR-AUC: 0.824
2024-10-19 15:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 15:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-19 15:43 - INFO - ---------------------------------------------
2024-10-19 15:51 - INFO - ---------------------------------------------
2024-10-19 15:51 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 15:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83021
2024-10-19 15:51 - INFO - 	 Train Loss: 0.081
2024-10-19 15:51 - INFO - 	 Val. Loss: 0.071
2024-10-19 15:51 - INFO - 	 ROC-AUC: 0.984
2024-10-19 15:51 - INFO - 	 PR-AUC: 0.830
2024-10-19 15:51 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 15:51 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 15:51 - INFO - 	 Best PR-AUC: 0.830
2024-10-19 15:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 15:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-19 15:51 - INFO - ---------------------------------------------
2024-10-19 15:59 - INFO - ---------------------------------------------
2024-10-19 15:59 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85429
2024-10-19 15:59 - INFO - 	 Train Loss: 0.076
2024-10-19 15:59 - INFO - 	 Val. Loss: 0.067
2024-10-19 15:59 - INFO - 	 ROC-AUC: 0.985
2024-10-19 15:59 - INFO - 	 PR-AUC: 0.854
2024-10-19 15:59 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 15:59 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 15:59 - INFO - 	 Best PR-AUC: 0.854
2024-10-19 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-19 15:59 - INFO - ---------------------------------------------
2024-10-19 16:07 - INFO - ---------------------------------------------
2024-10-19 16:07 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 16:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86367
2024-10-19 16:07 - INFO - 	 Train Loss: 0.074
2024-10-19 16:07 - INFO - 	 Val. Loss: 0.065
2024-10-19 16:07 - INFO - 	 ROC-AUC: 0.987
2024-10-19 16:07 - INFO - 	 PR-AUC: 0.864
2024-10-19 16:07 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 16:07 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 16:07 - INFO - 	 Best PR-AUC: 0.864
2024-10-19 16:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 16:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-10-19 16:07 - INFO - ---------------------------------------------
2024-10-19 16:15 - INFO - ---------------------------------------------
2024-10-19 16:15 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 16:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86612
2024-10-19 16:15 - INFO - 	 Train Loss: 0.071
2024-10-19 16:15 - INFO - 	 Val. Loss: 0.064
2024-10-19 16:15 - INFO - 	 ROC-AUC: 0.986
2024-10-19 16:15 - INFO - 	 PR-AUC: 0.866
2024-10-19 16:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 16:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 16:15 - INFO - 	 Best PR-AUC: 0.866
2024-10-19 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-19 16:15 - INFO - ---------------------------------------------
2024-10-19 16:23 - INFO - ---------------------------------------------
2024-10-19 16:23 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 16:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87099
2024-10-19 16:23 - INFO - 	 Train Loss: 0.070
2024-10-19 16:23 - INFO - 	 Val. Loss: 0.064
2024-10-19 16:23 - INFO - 	 ROC-AUC: 0.986
2024-10-19 16:23 - INFO - 	 PR-AUC: 0.871
2024-10-19 16:23 - INFO - 	 Best Val. Loss: 0.064
2024-10-19 16:23 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 16:23 - INFO - 	 Best PR-AUC: 0.871
2024-10-19 16:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 16:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-19 16:23 - INFO - ---------------------------------------------
2024-10-19 16:31 - INFO - ---------------------------------------------
2024-10-19 16:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87418
2024-10-19 16:31 - INFO - 	 Train Loss: 0.071
2024-10-19 16:31 - INFO - 	 Val. Loss: 0.062
2024-10-19 16:31 - INFO - 	 ROC-AUC: 0.986
2024-10-19 16:31 - INFO - 	 PR-AUC: 0.874
2024-10-19 16:31 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 16:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 16:31 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-19 16:31 - INFO - ---------------------------------------------
2024-10-19 16:39 - INFO - ---------------------------------------------
2024-10-19 16:39 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-19 16:39 - INFO - 	 Train Loss: 0.068
2024-10-19 16:39 - INFO - 	 Val. Loss: 0.064
2024-10-19 16:39 - INFO - 	 ROC-AUC: 0.986
2024-10-19 16:39 - INFO - 	 PR-AUC: 0.863
2024-10-19 16:39 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 16:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 16:39 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 16:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 16:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-19 16:39 - INFO - ---------------------------------------------
2024-10-19 16:47 - INFO - ---------------------------------------------
2024-10-19 16:47 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 16:47 - INFO - 	 Train Loss: 0.067
2024-10-19 16:47 - INFO - 	 Val. Loss: 0.063
2024-10-19 16:47 - INFO - 	 ROC-AUC: 0.987
2024-10-19 16:47 - INFO - 	 PR-AUC: 0.867
2024-10-19 16:47 - INFO - 	 Best Val. Loss: 0.062
2024-10-19 16:47 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 16:47 - INFO - 	 Best PR-AUC: 0.874
2024-10-19 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-19 16:47 - INFO - ---------------------------------------------
2024-10-19 16:55 - INFO - ---------------------------------------------
2024-10-19 16:55 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-19 16:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87812
2024-10-19 16:55 - INFO - 	 Train Loss: 0.066
2024-10-19 16:55 - INFO - 	 Val. Loss: 0.061
2024-10-19 16:55 - INFO - 	 ROC-AUC: 0.986
2024-10-19 16:55 - INFO - 	 PR-AUC: 0.878
2024-10-19 16:55 - INFO - 	 Best Val. Loss: 0.061
2024-10-19 16:55 - INFO - 	 Best ROC-AUC: 0.987
2024-10-19 16:55 - INFO - 	 Best PR-AUC: 0.878
2024-10-19 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-10-19 16:55 - INFO - ---------------------------------------------
