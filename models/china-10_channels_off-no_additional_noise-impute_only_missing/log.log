2024-11-16 16:31 - INFO - Fit the preprocessing pipeline
2024-11-16 16:31 - INFO - Training using device: cuda
2024-11-16 16:31 - INFO - Creating generators
2024-11-16 16:31 - INFO - The model has 2,246,929 trainable parameters
2024-11-16 16:31 - INFO - * Model:
2024-11-16 16:31 - INFO - * -----------
2024-11-16 16:31 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-16 16:31 - INFO - * -----------
2024-11-16 16:38 - INFO - ---------------------------------------------
2024-11-16 16:38 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-16 16:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33713
2024-11-16 16:38 - INFO - 	 Train Loss: 0.154
2024-11-16 16:38 - INFO - 	 Val. Loss: 0.171
2024-11-16 16:38 - INFO - 	 ROC-AUC: 0.903
2024-11-16 16:38 - INFO - 	 PR-AUC: 0.337
2024-11-16 16:38 - INFO - 	 Best Val. Loss: 0.171
2024-11-16 16:38 - INFO - 	 Best ROC-AUC: 0.903
2024-11-16 16:38 - INFO - 	 Best PR-AUC: 0.337
2024-11-16 16:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.849
2024-11-16 16:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.174
2024-11-16 16:38 - INFO - ---------------------------------------------
2024-11-16 16:45 - INFO - ---------------------------------------------
2024-11-16 16:45 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-16 16:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35201
2024-11-16 16:45 - INFO - 	 Train Loss: 0.137
2024-11-16 16:45 - INFO - 	 Val. Loss: 0.152
2024-11-16 16:45 - INFO - 	 ROC-AUC: 0.938
2024-11-16 16:45 - INFO - 	 PR-AUC: 0.352
2024-11-16 16:45 - INFO - 	 Best Val. Loss: 0.152
2024-11-16 16:45 - INFO - 	 Best ROC-AUC: 0.938
2024-11-16 16:45 - INFO - 	 Best PR-AUC: 0.352
2024-11-16 16:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-16 16:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-16 16:45 - INFO - ---------------------------------------------
2024-11-16 16:52 - INFO - ---------------------------------------------
2024-11-16 16:52 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-16 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44719
2024-11-16 16:52 - INFO - 	 Train Loss: 0.126
2024-11-16 16:52 - INFO - 	 Val. Loss: 0.139
2024-11-16 16:52 - INFO - 	 ROC-AUC: 0.945
2024-11-16 16:52 - INFO - 	 PR-AUC: 0.447
2024-11-16 16:52 - INFO - 	 Best Val. Loss: 0.139
2024-11-16 16:52 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 16:52 - INFO - 	 Best PR-AUC: 0.447
2024-11-16 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-16 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.250
2024-11-16 16:52 - INFO - ---------------------------------------------
2024-11-16 16:59 - INFO - ---------------------------------------------
2024-11-16 16:59 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-16 16:59 - INFO - 	 Train Loss: 0.121
2024-11-16 16:59 - INFO - 	 Val. Loss: 0.147
2024-11-16 16:59 - INFO - 	 ROC-AUC: 0.935
2024-11-16 16:59 - INFO - 	 PR-AUC: 0.419
2024-11-16 16:59 - INFO - 	 Best Val. Loss: 0.139
2024-11-16 16:59 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 16:59 - INFO - 	 Best PR-AUC: 0.447
2024-11-16 16:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-16 16:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.250
2024-11-16 16:59 - INFO - ---------------------------------------------
2024-11-16 17:06 - INFO - ---------------------------------------------
2024-11-16 17:06 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-16 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46514
2024-11-16 17:06 - INFO - 	 Train Loss: 0.119
2024-11-16 17:06 - INFO - 	 Val. Loss: 0.124
2024-11-16 17:06 - INFO - 	 ROC-AUC: 0.944
2024-11-16 17:06 - INFO - 	 PR-AUC: 0.465
2024-11-16 17:06 - INFO - 	 Best Val. Loss: 0.124
2024-11-16 17:06 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 17:06 - INFO - 	 Best PR-AUC: 0.465
2024-11-16 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-16 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.283
2024-11-16 17:06 - INFO - ---------------------------------------------
2024-11-16 17:14 - INFO - ---------------------------------------------
2024-11-16 17:14 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-16 17:14 - INFO - 	 Train Loss: 0.116
2024-11-16 17:14 - INFO - 	 Val. Loss: 0.134
2024-11-16 17:14 - INFO - 	 ROC-AUC: 0.935
2024-11-16 17:14 - INFO - 	 PR-AUC: 0.451
2024-11-16 17:14 - INFO - 	 Best Val. Loss: 0.124
2024-11-16 17:14 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 17:14 - INFO - 	 Best PR-AUC: 0.465
2024-11-16 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-16 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.283
2024-11-16 17:14 - INFO - ---------------------------------------------
2024-11-16 17:21 - INFO - ---------------------------------------------
2024-11-16 17:21 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-16 17:21 - INFO - 	 Train Loss: 0.114
2024-11-16 17:21 - INFO - 	 Val. Loss: 0.159
2024-11-16 17:21 - INFO - 	 ROC-AUC: 0.919
2024-11-16 17:21 - INFO - 	 PR-AUC: 0.365
2024-11-16 17:21 - INFO - 	 Best Val. Loss: 0.124
2024-11-16 17:21 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 17:21 - INFO - 	 Best PR-AUC: 0.465
2024-11-16 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-16 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.283
2024-11-16 17:21 - INFO - ---------------------------------------------
2024-11-16 17:28 - INFO - ---------------------------------------------
2024-11-16 17:28 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-16 17:28 - INFO - 	 Train Loss: 0.115
2024-11-16 17:28 - INFO - 	 Val. Loss: 0.141
2024-11-16 17:28 - INFO - 	 ROC-AUC: 0.937
2024-11-16 17:28 - INFO - 	 PR-AUC: 0.433
2024-11-16 17:28 - INFO - 	 Best Val. Loss: 0.124
2024-11-16 17:28 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 17:28 - INFO - 	 Best PR-AUC: 0.465
2024-11-16 17:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-16 17:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.283
2024-11-16 17:28 - INFO - ---------------------------------------------
2024-11-16 17:37 - INFO - Fit the preprocessing pipeline
2024-11-16 17:37 - INFO - Training using device: cuda
2024-11-16 17:37 - INFO - Creating generators
2024-11-16 17:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-16 17:37 - INFO - * Model:
2024-11-16 17:37 - INFO - * -----------
2024-11-16 17:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-16 17:37 - INFO - * -----------
2024-11-16 17:44 - INFO - ---------------------------------------------
2024-11-16 17:44 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-16 17:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28182
2024-11-16 17:44 - INFO - 	 Train Loss: 0.161
2024-11-16 17:44 - INFO - 	 Val. Loss: 0.207
2024-11-16 17:44 - INFO - 	 ROC-AUC: 0.867
2024-11-16 17:44 - INFO - 	 PR-AUC: 0.282
2024-11-16 17:44 - INFO - 	 Best Val. Loss: 0.207
2024-11-16 17:44 - INFO - 	 Best ROC-AUC: 0.867
2024-11-16 17:44 - INFO - 	 Best PR-AUC: 0.282
2024-11-16 17:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.797
2024-11-16 17:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-16 17:44 - INFO - ---------------------------------------------
2024-11-16 17:51 - INFO - ---------------------------------------------
2024-11-16 17:51 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-16 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42389
2024-11-16 17:51 - INFO - 	 Train Loss: 0.137
2024-11-16 17:51 - INFO - 	 Val. Loss: 0.158
2024-11-16 17:51 - INFO - 	 ROC-AUC: 0.919
2024-11-16 17:51 - INFO - 	 PR-AUC: 0.424
2024-11-16 17:51 - INFO - 	 Best Val. Loss: 0.158
2024-11-16 17:51 - INFO - 	 Best ROC-AUC: 0.919
2024-11-16 17:51 - INFO - 	 Best PR-AUC: 0.424
2024-11-16 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-16 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-16 17:51 - INFO - ---------------------------------------------
2024-11-16 17:58 - INFO - ---------------------------------------------
2024-11-16 17:58 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-16 17:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45341
2024-11-16 17:58 - INFO - 	 Train Loss: 0.129
2024-11-16 17:58 - INFO - 	 Val. Loss: 0.205
2024-11-16 17:58 - INFO - 	 ROC-AUC: 0.947
2024-11-16 17:58 - INFO - 	 PR-AUC: 0.453
2024-11-16 17:58 - INFO - 	 Best Val. Loss: 0.158
2024-11-16 17:58 - INFO - 	 Best ROC-AUC: 0.947
2024-11-16 17:58 - INFO - 	 Best PR-AUC: 0.453
2024-11-16 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-16 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.317
2024-11-16 17:58 - INFO - ---------------------------------------------
2024-11-16 18:05 - INFO - ---------------------------------------------
2024-11-16 18:05 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-16 18:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46993
2024-11-16 18:05 - INFO - 	 Train Loss: 0.123
2024-11-16 18:05 - INFO - 	 Val. Loss: 0.150
2024-11-16 18:05 - INFO - 	 ROC-AUC: 0.953
2024-11-16 18:05 - INFO - 	 PR-AUC: 0.470
2024-11-16 18:05 - INFO - 	 Best Val. Loss: 0.150
2024-11-16 18:05 - INFO - 	 Best ROC-AUC: 0.953
2024-11-16 18:05 - INFO - 	 Best PR-AUC: 0.470
2024-11-16 18:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 18:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.292
2024-11-16 18:05 - INFO - ---------------------------------------------
2024-11-16 18:12 - INFO - ---------------------------------------------
2024-11-16 18:12 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-16 18:12 - INFO - 	 Train Loss: 0.120
2024-11-16 18:12 - INFO - 	 Val. Loss: 0.189
2024-11-16 18:12 - INFO - 	 ROC-AUC: 0.873
2024-11-16 18:12 - INFO - 	 PR-AUC: 0.277
2024-11-16 18:12 - INFO - 	 Best Val. Loss: 0.150
2024-11-16 18:12 - INFO - 	 Best ROC-AUC: 0.953
2024-11-16 18:12 - INFO - 	 Best PR-AUC: 0.470
2024-11-16 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.292
2024-11-16 18:12 - INFO - ---------------------------------------------
2024-11-16 18:19 - INFO - ---------------------------------------------
2024-11-16 18:19 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-16 18:19 - INFO - 	 Train Loss: 0.117
2024-11-16 18:19 - INFO - 	 Val. Loss: 0.161
2024-11-16 18:19 - INFO - 	 ROC-AUC: 0.932
2024-11-16 18:19 - INFO - 	 PR-AUC: 0.391
2024-11-16 18:19 - INFO - 	 Best Val. Loss: 0.150
2024-11-16 18:19 - INFO - 	 Best ROC-AUC: 0.953
2024-11-16 18:19 - INFO - 	 Best PR-AUC: 0.470
2024-11-16 18:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 18:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.292
2024-11-16 18:19 - INFO - ---------------------------------------------
2024-11-16 18:27 - INFO - ---------------------------------------------
2024-11-16 18:27 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-16 18:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52086
2024-11-16 18:27 - INFO - 	 Train Loss: 0.115
2024-11-16 18:27 - INFO - 	 Val. Loss: 0.123
2024-11-16 18:27 - INFO - 	 ROC-AUC: 0.950
2024-11-16 18:27 - INFO - 	 PR-AUC: 0.521
2024-11-16 18:27 - INFO - 	 Best Val. Loss: 0.123
2024-11-16 18:27 - INFO - 	 Best ROC-AUC: 0.953
2024-11-16 18:27 - INFO - 	 Best PR-AUC: 0.521
2024-11-16 18:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 18:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-16 18:27 - INFO - ---------------------------------------------
2024-11-16 18:34 - INFO - ---------------------------------------------
2024-11-16 18:34 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-16 18:34 - INFO - 	 Train Loss: 0.115
2024-11-16 18:34 - INFO - 	 Val. Loss: 0.147
2024-11-16 18:34 - INFO - 	 ROC-AUC: 0.942
2024-11-16 18:34 - INFO - 	 PR-AUC: 0.423
2024-11-16 18:34 - INFO - 	 Best Val. Loss: 0.123
2024-11-16 18:34 - INFO - 	 Best ROC-AUC: 0.953
2024-11-16 18:34 - INFO - 	 Best PR-AUC: 0.521
2024-11-16 18:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 18:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-16 18:34 - INFO - ---------------------------------------------
2024-11-16 18:41 - INFO - ---------------------------------------------
2024-11-16 18:41 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-16 18:41 - INFO - 	 Train Loss: 0.112
2024-11-16 18:41 - INFO - 	 Val. Loss: 0.148
2024-11-16 18:41 - INFO - 	 ROC-AUC: 0.940
2024-11-16 18:41 - INFO - 	 PR-AUC: 0.444
2024-11-16 18:41 - INFO - 	 Best Val. Loss: 0.123
2024-11-16 18:41 - INFO - 	 Best ROC-AUC: 0.953
2024-11-16 18:41 - INFO - 	 Best PR-AUC: 0.521
2024-11-16 18:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 18:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-16 18:41 - INFO - ---------------------------------------------
2024-11-16 18:48 - INFO - ---------------------------------------------
2024-11-16 18:48 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-16 18:48 - INFO - 	 Train Loss: 0.112
2024-11-16 18:48 - INFO - 	 Val. Loss: 0.165
2024-11-16 18:48 - INFO - 	 ROC-AUC: 0.919
2024-11-16 18:48 - INFO - 	 PR-AUC: 0.411
2024-11-16 18:48 - INFO - 	 Best Val. Loss: 0.123
2024-11-16 18:48 - INFO - 	 Best ROC-AUC: 0.953
2024-11-16 18:48 - INFO - 	 Best PR-AUC: 0.521
2024-11-16 18:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 18:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.321
2024-11-16 18:48 - INFO - ---------------------------------------------
2024-11-16 18:50 - INFO - Fit the preprocessing pipeline
2024-11-16 18:50 - INFO - Training using device: cuda
2024-11-16 18:50 - INFO - Creating generators
2024-11-16 18:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-16 18:50 - INFO - * Model:
2024-11-16 18:50 - INFO - * -----------
2024-11-16 18:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-16 18:50 - INFO - * -----------
2024-11-16 18:57 - INFO - ---------------------------------------------
2024-11-16 18:57 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-16 18:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31543
2024-11-16 18:57 - INFO - 	 Train Loss: 0.157
2024-11-16 18:57 - INFO - 	 Val. Loss: 0.175
2024-11-16 18:57 - INFO - 	 ROC-AUC: 0.909
2024-11-16 18:57 - INFO - 	 PR-AUC: 0.315
2024-11-16 18:57 - INFO - 	 Best Val. Loss: 0.175
2024-11-16 18:57 - INFO - 	 Best ROC-AUC: 0.909
2024-11-16 18:57 - INFO - 	 Best PR-AUC: 0.315
2024-11-16 18:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.858
2024-11-16 18:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.190
2024-11-16 18:57 - INFO - ---------------------------------------------
2024-11-16 19:04 - INFO - ---------------------------------------------
2024-11-16 19:04 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-16 19:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34717
2024-11-16 19:04 - INFO - 	 Train Loss: 0.135
2024-11-16 19:04 - INFO - 	 Val. Loss: 0.175
2024-11-16 19:04 - INFO - 	 ROC-AUC: 0.899
2024-11-16 19:04 - INFO - 	 PR-AUC: 0.347
2024-11-16 19:04 - INFO - 	 Best Val. Loss: 0.175
2024-11-16 19:04 - INFO - 	 Best ROC-AUC: 0.909
2024-11-16 19:04 - INFO - 	 Best PR-AUC: 0.347
2024-11-16 19:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.858
2024-11-16 19:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.202
2024-11-16 19:04 - INFO - ---------------------------------------------
2024-11-16 19:11 - INFO - ---------------------------------------------
2024-11-16 19:11 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-16 19:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43503
2024-11-16 19:11 - INFO - 	 Train Loss: 0.128
2024-11-16 19:11 - INFO - 	 Val. Loss: 0.137
2024-11-16 19:11 - INFO - 	 ROC-AUC: 0.941
2024-11-16 19:11 - INFO - 	 PR-AUC: 0.435
2024-11-16 19:11 - INFO - 	 Best Val. Loss: 0.137
2024-11-16 19:11 - INFO - 	 Best ROC-AUC: 0.941
2024-11-16 19:11 - INFO - 	 Best PR-AUC: 0.435
2024-11-16 19:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-16 19:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.260
2024-11-16 19:11 - INFO - ---------------------------------------------
2024-11-16 19:18 - INFO - ---------------------------------------------
2024-11-16 19:18 - INFO - Epoch: 04 | Time: 7m 6s
2024-11-16 19:18 - INFO - 	 Train Loss: 0.124
2024-11-16 19:18 - INFO - 	 Val. Loss: 0.233
2024-11-16 19:18 - INFO - 	 ROC-AUC: 0.842
2024-11-16 19:18 - INFO - 	 PR-AUC: 0.211
2024-11-16 19:18 - INFO - 	 Best Val. Loss: 0.137
2024-11-16 19:18 - INFO - 	 Best ROC-AUC: 0.941
2024-11-16 19:18 - INFO - 	 Best PR-AUC: 0.435
2024-11-16 19:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-16 19:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.260
2024-11-16 19:18 - INFO - ---------------------------------------------
2024-11-16 19:25 - INFO - ---------------------------------------------
2024-11-16 19:25 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-16 19:25 - INFO - 	 Train Loss: 0.119
2024-11-16 19:25 - INFO - 	 Val. Loss: 0.156
2024-11-16 19:25 - INFO - 	 ROC-AUC: 0.924
2024-11-16 19:25 - INFO - 	 PR-AUC: 0.382
2024-11-16 19:25 - INFO - 	 Best Val. Loss: 0.137
2024-11-16 19:25 - INFO - 	 Best ROC-AUC: 0.941
2024-11-16 19:25 - INFO - 	 Best PR-AUC: 0.435
2024-11-16 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-16 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.260
2024-11-16 19:25 - INFO - ---------------------------------------------
2024-11-16 19:32 - INFO - ---------------------------------------------
2024-11-16 19:32 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-16 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53638
2024-11-16 19:32 - INFO - 	 Train Loss: 0.117
2024-11-16 19:32 - INFO - 	 Val. Loss: 0.121
2024-11-16 19:32 - INFO - 	 ROC-AUC: 0.945
2024-11-16 19:32 - INFO - 	 PR-AUC: 0.536
2024-11-16 19:32 - INFO - 	 Best Val. Loss: 0.121
2024-11-16 19:32 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 19:32 - INFO - 	 Best PR-AUC: 0.536
2024-11-16 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-16 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.310
2024-11-16 19:32 - INFO - ---------------------------------------------
2024-11-16 19:40 - INFO - ---------------------------------------------
2024-11-16 19:40 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-16 19:40 - INFO - 	 Train Loss: 0.114
2024-11-16 19:40 - INFO - 	 Val. Loss: 0.155
2024-11-16 19:40 - INFO - 	 ROC-AUC: 0.926
2024-11-16 19:40 - INFO - 	 PR-AUC: 0.418
2024-11-16 19:40 - INFO - 	 Best Val. Loss: 0.121
2024-11-16 19:40 - INFO - 	 Best ROC-AUC: 0.945
2024-11-16 19:40 - INFO - 	 Best PR-AUC: 0.536
2024-11-16 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-16 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.310
2024-11-16 19:40 - INFO - ---------------------------------------------
2024-11-16 19:47 - INFO - ---------------------------------------------
2024-11-16 19:47 - INFO - Epoch: 08 | Time: 7m 9s
2024-11-16 19:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57755
2024-11-16 19:47 - INFO - 	 Train Loss: 0.117
2024-11-16 19:47 - INFO - 	 Val. Loss: 0.113
2024-11-16 19:47 - INFO - 	 ROC-AUC: 0.964
2024-11-16 19:47 - INFO - 	 PR-AUC: 0.578
2024-11-16 19:47 - INFO - 	 Best Val. Loss: 0.113
2024-11-16 19:47 - INFO - 	 Best ROC-AUC: 0.964
2024-11-16 19:47 - INFO - 	 Best PR-AUC: 0.578
2024-11-16 19:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-16 19:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-16 19:47 - INFO - ---------------------------------------------
2024-11-16 19:54 - INFO - ---------------------------------------------
2024-11-16 19:54 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-16 19:54 - INFO - 	 Train Loss: 0.114
2024-11-16 19:54 - INFO - 	 Val. Loss: 0.154
2024-11-16 19:54 - INFO - 	 ROC-AUC: 0.929
2024-11-16 19:54 - INFO - 	 PR-AUC: 0.452
2024-11-16 19:54 - INFO - 	 Best Val. Loss: 0.113
2024-11-16 19:54 - INFO - 	 Best ROC-AUC: 0.964
2024-11-16 19:54 - INFO - 	 Best PR-AUC: 0.578
2024-11-16 19:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-16 19:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-16 19:54 - INFO - ---------------------------------------------
2024-11-16 20:01 - INFO - ---------------------------------------------
2024-11-16 20:01 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-16 20:01 - INFO - 	 Train Loss: 0.114
2024-11-16 20:01 - INFO - 	 Val. Loss: 0.129
2024-11-16 20:01 - INFO - 	 ROC-AUC: 0.956
2024-11-16 20:01 - INFO - 	 PR-AUC: 0.525
2024-11-16 20:01 - INFO - 	 Best Val. Loss: 0.113
2024-11-16 20:01 - INFO - 	 Best ROC-AUC: 0.964
2024-11-16 20:01 - INFO - 	 Best PR-AUC: 0.578
2024-11-16 20:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-16 20:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.334
2024-11-16 20:01 - INFO - ---------------------------------------------
2024-11-16 20:03 - INFO - Fit the preprocessing pipeline
2024-11-16 20:03 - INFO - Training using device: cuda
2024-11-16 20:03 - INFO - Creating generators
2024-11-16 20:03 - INFO - The model has 2,246,929 trainable parameters
2024-11-16 20:03 - INFO - * Model:
2024-11-16 20:03 - INFO - * -----------
2024-11-16 20:03 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-16 20:03 - INFO - * -----------
2024-11-16 20:10 - INFO - ---------------------------------------------
2024-11-16 20:10 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-16 20:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29379
2024-11-16 20:10 - INFO - 	 Train Loss: 0.155
2024-11-16 20:10 - INFO - 	 Val. Loss: 0.206
2024-11-16 20:10 - INFO - 	 ROC-AUC: 0.902
2024-11-16 20:10 - INFO - 	 PR-AUC: 0.294
2024-11-16 20:10 - INFO - 	 Best Val. Loss: 0.206
2024-11-16 20:10 - INFO - 	 Best ROC-AUC: 0.902
2024-11-16 20:10 - INFO - 	 Best PR-AUC: 0.294
2024-11-16 20:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.860
2024-11-16 20:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.187
2024-11-16 20:10 - INFO - ---------------------------------------------
2024-11-16 20:17 - INFO - ---------------------------------------------
2024-11-16 20:17 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-16 20:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37633
2024-11-16 20:17 - INFO - 	 Train Loss: 0.136
2024-11-16 20:17 - INFO - 	 Val. Loss: 0.155
2024-11-16 20:17 - INFO - 	 ROC-AUC: 0.934
2024-11-16 20:17 - INFO - 	 PR-AUC: 0.376
2024-11-16 20:17 - INFO - 	 Best Val. Loss: 0.155
2024-11-16 20:17 - INFO - 	 Best ROC-AUC: 0.934
2024-11-16 20:17 - INFO - 	 Best PR-AUC: 0.376
2024-11-16 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.882
2024-11-16 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.211
2024-11-16 20:17 - INFO - ---------------------------------------------
2024-11-16 20:24 - INFO - ---------------------------------------------
2024-11-16 20:24 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-16 20:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41088
2024-11-16 20:24 - INFO - 	 Train Loss: 0.126
2024-11-16 20:24 - INFO - 	 Val. Loss: 0.148
2024-11-16 20:24 - INFO - 	 ROC-AUC: 0.923
2024-11-16 20:24 - INFO - 	 PR-AUC: 0.411
2024-11-16 20:24 - INFO - 	 Best Val. Loss: 0.148
2024-11-16 20:24 - INFO - 	 Best ROC-AUC: 0.934
2024-11-16 20:24 - INFO - 	 Best PR-AUC: 0.411
2024-11-16 20:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.882
2024-11-16 20:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-16 20:24 - INFO - ---------------------------------------------
2024-11-16 20:31 - INFO - ---------------------------------------------
2024-11-16 20:31 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-16 20:31 - INFO - 	 Train Loss: 0.122
2024-11-16 20:31 - INFO - 	 Val. Loss: 0.163
2024-11-16 20:31 - INFO - 	 ROC-AUC: 0.925
2024-11-16 20:31 - INFO - 	 PR-AUC: 0.334
2024-11-16 20:31 - INFO - 	 Best Val. Loss: 0.148
2024-11-16 20:31 - INFO - 	 Best ROC-AUC: 0.934
2024-11-16 20:31 - INFO - 	 Best PR-AUC: 0.411
2024-11-16 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.882
2024-11-16 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-16 20:31 - INFO - ---------------------------------------------
2024-11-16 20:38 - INFO - ---------------------------------------------
2024-11-16 20:38 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-16 20:38 - INFO - 	 Train Loss: 0.122
2024-11-16 20:38 - INFO - 	 Val. Loss: 0.183
2024-11-16 20:38 - INFO - 	 ROC-AUC: 0.894
2024-11-16 20:38 - INFO - 	 PR-AUC: 0.374
2024-11-16 20:38 - INFO - 	 Best Val. Loss: 0.148
2024-11-16 20:38 - INFO - 	 Best ROC-AUC: 0.934
2024-11-16 20:38 - INFO - 	 Best PR-AUC: 0.411
2024-11-16 20:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.882
2024-11-16 20:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-16 20:38 - INFO - ---------------------------------------------
2024-11-16 20:46 - INFO - ---------------------------------------------
2024-11-16 20:46 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-16 20:46 - INFO - 	 Train Loss: 0.118
2024-11-16 20:46 - INFO - 	 Val. Loss: 0.174
2024-11-16 20:46 - INFO - 	 ROC-AUC: 0.893
2024-11-16 20:46 - INFO - 	 PR-AUC: 0.332
2024-11-16 20:46 - INFO - 	 Best Val. Loss: 0.148
2024-11-16 20:46 - INFO - 	 Best ROC-AUC: 0.934
2024-11-16 20:46 - INFO - 	 Best PR-AUC: 0.411
2024-11-16 20:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.882
2024-11-16 20:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-16 20:46 - INFO - ---------------------------------------------
2024-11-16 20:54 - INFO - Fit the preprocessing pipeline
2024-11-16 20:54 - INFO - Training using device: cuda
2024-11-16 20:54 - INFO - Creating generators
2024-11-16 20:54 - INFO - The model has 2,246,929 trainable parameters
2024-11-16 20:54 - INFO - * Model:
2024-11-16 20:54 - INFO - * -----------
2024-11-16 20:54 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-16 20:54 - INFO - * -----------
2024-11-16 21:02 - INFO - ---------------------------------------------
2024-11-16 21:02 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-16 21:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34618
2024-11-16 21:02 - INFO - 	 Train Loss: 0.155
2024-11-16 21:02 - INFO - 	 Val. Loss: 0.172
2024-11-16 21:02 - INFO - 	 ROC-AUC: 0.914
2024-11-16 21:02 - INFO - 	 PR-AUC: 0.346
2024-11-16 21:02 - INFO - 	 Best Val. Loss: 0.172
2024-11-16 21:02 - INFO - 	 Best ROC-AUC: 0.914
2024-11-16 21:02 - INFO - 	 Best PR-AUC: 0.346
2024-11-16 21:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.851
2024-11-16 21:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-16 21:02 - INFO - ---------------------------------------------
2024-11-16 21:09 - INFO - ---------------------------------------------
2024-11-16 21:09 - INFO - Epoch: 02 | Time: 7m 9s
2024-11-16 21:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39382
2024-11-16 21:09 - INFO - 	 Train Loss: 0.136
2024-11-16 21:09 - INFO - 	 Val. Loss: 0.136
2024-11-16 21:09 - INFO - 	 ROC-AUC: 0.933
2024-11-16 21:09 - INFO - 	 PR-AUC: 0.394
2024-11-16 21:09 - INFO - 	 Best Val. Loss: 0.136
2024-11-16 21:09 - INFO - 	 Best ROC-AUC: 0.933
2024-11-16 21:09 - INFO - 	 Best PR-AUC: 0.394
2024-11-16 21:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.896
2024-11-16 21:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-16 21:09 - INFO - ---------------------------------------------
2024-11-16 21:16 - INFO - ---------------------------------------------
2024-11-16 21:16 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-16 21:16 - INFO - 	 Train Loss: 0.127
2024-11-16 21:16 - INFO - 	 Val. Loss: 0.212
2024-11-16 21:16 - INFO - 	 ROC-AUC: 0.850
2024-11-16 21:16 - INFO - 	 PR-AUC: 0.247
2024-11-16 21:16 - INFO - 	 Best Val. Loss: 0.136
2024-11-16 21:16 - INFO - 	 Best ROC-AUC: 0.933
2024-11-16 21:16 - INFO - 	 Best PR-AUC: 0.394
2024-11-16 21:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.896
2024-11-16 21:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-16 21:16 - INFO - ---------------------------------------------
2024-11-16 21:23 - INFO - ---------------------------------------------
2024-11-16 21:23 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-16 21:23 - INFO - 	 Train Loss: 0.123
2024-11-16 21:23 - INFO - 	 Val. Loss: 0.176
2024-11-16 21:23 - INFO - 	 ROC-AUC: 0.898
2024-11-16 21:23 - INFO - 	 PR-AUC: 0.310
2024-11-16 21:23 - INFO - 	 Best Val. Loss: 0.136
2024-11-16 21:23 - INFO - 	 Best ROC-AUC: 0.933
2024-11-16 21:23 - INFO - 	 Best PR-AUC: 0.394
2024-11-16 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.896
2024-11-16 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-16 21:23 - INFO - ---------------------------------------------
2024-11-16 21:30 - INFO - ---------------------------------------------
2024-11-16 21:30 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-16 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41319
2024-11-16 21:30 - INFO - 	 Train Loss: 0.120
2024-11-16 21:30 - INFO - 	 Val. Loss: 0.151
2024-11-16 21:30 - INFO - 	 ROC-AUC: 0.928
2024-11-16 21:30 - INFO - 	 PR-AUC: 0.413
2024-11-16 21:30 - INFO - 	 Best Val. Loss: 0.136
2024-11-16 21:30 - INFO - 	 Best ROC-AUC: 0.933
2024-11-16 21:30 - INFO - 	 Best PR-AUC: 0.413
2024-11-16 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.896
2024-11-16 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.257
2024-11-16 21:30 - INFO - ---------------------------------------------
2024-11-16 21:37 - INFO - ---------------------------------------------
2024-11-16 21:37 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-16 21:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50697
2024-11-16 21:37 - INFO - 	 Train Loss: 0.119
2024-11-16 21:37 - INFO - 	 Val. Loss: 0.134
2024-11-16 21:37 - INFO - 	 ROC-AUC: 0.956
2024-11-16 21:37 - INFO - 	 PR-AUC: 0.507
2024-11-16 21:37 - INFO - 	 Best Val. Loss: 0.134
2024-11-16 21:37 - INFO - 	 Best ROC-AUC: 0.956
2024-11-16 21:37 - INFO - 	 Best PR-AUC: 0.507
2024-11-16 21:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 21:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-16 21:37 - INFO - ---------------------------------------------
2024-11-16 21:44 - INFO - ---------------------------------------------
2024-11-16 21:44 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-16 21:44 - INFO - 	 Train Loss: 0.119
2024-11-16 21:44 - INFO - 	 Val. Loss: 0.147
2024-11-16 21:44 - INFO - 	 ROC-AUC: 0.915
2024-11-16 21:44 - INFO - 	 PR-AUC: 0.371
2024-11-16 21:44 - INFO - 	 Best Val. Loss: 0.134
2024-11-16 21:44 - INFO - 	 Best ROC-AUC: 0.956
2024-11-16 21:44 - INFO - 	 Best PR-AUC: 0.507
2024-11-16 21:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 21:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-16 21:44 - INFO - ---------------------------------------------
2024-11-16 21:52 - INFO - ---------------------------------------------
2024-11-16 21:52 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-16 21:52 - INFO - 	 Train Loss: 0.115
2024-11-16 21:52 - INFO - 	 Val. Loss: 0.145
2024-11-16 21:52 - INFO - 	 ROC-AUC: 0.934
2024-11-16 21:52 - INFO - 	 PR-AUC: 0.453
2024-11-16 21:52 - INFO - 	 Best Val. Loss: 0.134
2024-11-16 21:52 - INFO - 	 Best ROC-AUC: 0.956
2024-11-16 21:52 - INFO - 	 Best PR-AUC: 0.507
2024-11-16 21:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 21:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-16 21:52 - INFO - ---------------------------------------------
2024-11-16 21:59 - INFO - ---------------------------------------------
2024-11-16 21:59 - INFO - Epoch: 09 | Time: 7m 9s
2024-11-16 21:59 - INFO - 	 Train Loss: 0.115
2024-11-16 21:59 - INFO - 	 Val. Loss: 0.138
2024-11-16 21:59 - INFO - 	 ROC-AUC: 0.935
2024-11-16 21:59 - INFO - 	 PR-AUC: 0.458
2024-11-16 21:59 - INFO - 	 Best Val. Loss: 0.134
2024-11-16 21:59 - INFO - 	 Best ROC-AUC: 0.956
2024-11-16 21:59 - INFO - 	 Best PR-AUC: 0.507
2024-11-16 21:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-16 21:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.288
2024-11-16 21:59 - INFO - ---------------------------------------------
2024-11-16 22:08 - INFO - Fit the preprocessing pipeline
2024-11-16 22:08 - INFO - Training using device: cuda
2024-11-16 22:08 - INFO - Creating generators
2024-11-16 22:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-16 22:08 - INFO - * Model:
2024-11-16 22:08 - INFO - * -----------
2024-11-16 22:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-16 22:08 - INFO - * -----------
2024-11-16 22:15 - INFO - ---------------------------------------------
2024-11-16 22:15 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-16 22:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.36145
2024-11-16 22:15 - INFO - 	 Train Loss: 0.156
2024-11-16 22:15 - INFO - 	 Val. Loss: 0.163
2024-11-16 22:15 - INFO - 	 ROC-AUC: 0.923
2024-11-16 22:15 - INFO - 	 PR-AUC: 0.361
2024-11-16 22:15 - INFO - 	 Best Val. Loss: 0.163
2024-11-16 22:15 - INFO - 	 Best ROC-AUC: 0.923
2024-11-16 22:15 - INFO - 	 Best PR-AUC: 0.361
2024-11-16 22:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.874
2024-11-16 22:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.206
2024-11-16 22:15 - INFO - ---------------------------------------------
2024-11-16 22:22 - INFO - ---------------------------------------------
2024-11-16 22:22 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-16 22:22 - INFO - 	 Train Loss: 0.133
2024-11-16 22:22 - INFO - 	 Val. Loss: 0.156
2024-11-16 22:22 - INFO - 	 ROC-AUC: 0.926
2024-11-16 22:22 - INFO - 	 PR-AUC: 0.348
2024-11-16 22:22 - INFO - 	 Best Val. Loss: 0.156
2024-11-16 22:22 - INFO - 	 Best ROC-AUC: 0.926
2024-11-16 22:22 - INFO - 	 Best PR-AUC: 0.361
2024-11-16 22:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.881
2024-11-16 22:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.206
2024-11-16 22:22 - INFO - ---------------------------------------------
2024-11-16 22:29 - INFO - ---------------------------------------------
2024-11-16 22:29 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-16 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43102
2024-11-16 22:29 - INFO - 	 Train Loss: 0.125
2024-11-16 22:29 - INFO - 	 Val. Loss: 0.131
2024-11-16 22:29 - INFO - 	 ROC-AUC: 0.936
2024-11-16 22:29 - INFO - 	 PR-AUC: 0.431
2024-11-16 22:29 - INFO - 	 Best Val. Loss: 0.131
2024-11-16 22:29 - INFO - 	 Best ROC-AUC: 0.936
2024-11-16 22:29 - INFO - 	 Best PR-AUC: 0.431
2024-11-16 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.901
2024-11-16 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.256
2024-11-16 22:29 - INFO - ---------------------------------------------
2024-11-16 22:36 - INFO - ---------------------------------------------
2024-11-16 22:36 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-16 22:36 - INFO - 	 Train Loss: 0.122
2024-11-16 22:36 - INFO - 	 Val. Loss: 0.144
2024-11-16 22:36 - INFO - 	 ROC-AUC: 0.927
2024-11-16 22:36 - INFO - 	 PR-AUC: 0.427
2024-11-16 22:36 - INFO - 	 Best Val. Loss: 0.131
2024-11-16 22:36 - INFO - 	 Best ROC-AUC: 0.936
2024-11-16 22:36 - INFO - 	 Best PR-AUC: 0.431
2024-11-16 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.901
2024-11-16 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.256
2024-11-16 22:36 - INFO - ---------------------------------------------
2024-11-16 22:43 - INFO - ---------------------------------------------
2024-11-16 22:43 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-16 22:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49216
2024-11-16 22:43 - INFO - 	 Train Loss: 0.120
2024-11-16 22:43 - INFO - 	 Val. Loss: 0.127
2024-11-16 22:43 - INFO - 	 ROC-AUC: 0.949
2024-11-16 22:43 - INFO - 	 PR-AUC: 0.492
2024-11-16 22:43 - INFO - 	 Best Val. Loss: 0.127
2024-11-16 22:43 - INFO - 	 Best ROC-AUC: 0.949
2024-11-16 22:43 - INFO - 	 Best PR-AUC: 0.492
2024-11-16 22:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-16 22:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.291
2024-11-16 22:43 - INFO - ---------------------------------------------
2024-11-16 22:50 - INFO - ---------------------------------------------
2024-11-16 22:50 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-16 22:50 - INFO - 	 Train Loss: 0.117
2024-11-16 22:50 - INFO - 	 Val. Loss: 0.140
2024-11-16 22:50 - INFO - 	 ROC-AUC: 0.930
2024-11-16 22:50 - INFO - 	 PR-AUC: 0.403
2024-11-16 22:50 - INFO - 	 Best Val. Loss: 0.127
2024-11-16 22:50 - INFO - 	 Best ROC-AUC: 0.949
2024-11-16 22:50 - INFO - 	 Best PR-AUC: 0.492
2024-11-16 22:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-16 22:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.291
2024-11-16 22:50 - INFO - ---------------------------------------------
2024-11-16 22:58 - INFO - ---------------------------------------------
2024-11-16 22:58 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-16 22:58 - INFO - 	 Train Loss: 0.115
2024-11-16 22:58 - INFO - 	 Val. Loss: 0.136
2024-11-16 22:58 - INFO - 	 ROC-AUC: 0.944
2024-11-16 22:58 - INFO - 	 PR-AUC: 0.465
2024-11-16 22:58 - INFO - 	 Best Val. Loss: 0.127
2024-11-16 22:58 - INFO - 	 Best ROC-AUC: 0.949
2024-11-16 22:58 - INFO - 	 Best PR-AUC: 0.492
2024-11-16 22:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-16 22:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.291
2024-11-16 22:58 - INFO - ---------------------------------------------
2024-11-16 23:05 - INFO - ---------------------------------------------
2024-11-16 23:05 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-16 23:05 - INFO - 	 Train Loss: 0.115
2024-11-16 23:05 - INFO - 	 Val. Loss: 0.135
2024-11-16 23:05 - INFO - 	 ROC-AUC: 0.943
2024-11-16 23:05 - INFO - 	 PR-AUC: 0.405
2024-11-16 23:05 - INFO - 	 Best Val. Loss: 0.127
2024-11-16 23:05 - INFO - 	 Best ROC-AUC: 0.949
2024-11-16 23:05 - INFO - 	 Best PR-AUC: 0.492
2024-11-16 23:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-16 23:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.291
2024-11-16 23:05 - INFO - ---------------------------------------------
2024-11-16 23:13 - INFO - Fit the preprocessing pipeline
2024-11-16 23:13 - INFO - Training using device: cuda
2024-11-16 23:13 - INFO - Creating generators
2024-11-16 23:13 - INFO - The model has 2,246,929 trainable parameters
2024-11-16 23:13 - INFO - * Model:
2024-11-16 23:13 - INFO - * -----------
2024-11-16 23:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-16 23:13 - INFO - * -----------
2024-11-16 23:21 - INFO - ---------------------------------------------
2024-11-16 23:21 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-16 23:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30654
2024-11-16 23:21 - INFO - 	 Train Loss: 0.154
2024-11-16 23:21 - INFO - 	 Val. Loss: 0.188
2024-11-16 23:21 - INFO - 	 ROC-AUC: 0.890
2024-11-16 23:21 - INFO - 	 PR-AUC: 0.307
2024-11-16 23:21 - INFO - 	 Best Val. Loss: 0.188
2024-11-16 23:21 - INFO - 	 Best ROC-AUC: 0.890
2024-11-16 23:21 - INFO - 	 Best PR-AUC: 0.307
2024-11-16 23:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.833
2024-11-16 23:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-16 23:21 - INFO - ---------------------------------------------
2024-11-16 23:28 - INFO - ---------------------------------------------
2024-11-16 23:28 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-16 23:28 - INFO - 	 Train Loss: 0.135
2024-11-16 23:28 - INFO - 	 Val. Loss: 0.260
2024-11-16 23:28 - INFO - 	 ROC-AUC: 0.864
2024-11-16 23:28 - INFO - 	 PR-AUC: 0.193
2024-11-16 23:28 - INFO - 	 Best Val. Loss: 0.188
2024-11-16 23:28 - INFO - 	 Best ROC-AUC: 0.890
2024-11-16 23:28 - INFO - 	 Best PR-AUC: 0.307
2024-11-16 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.833
2024-11-16 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.168
2024-11-16 23:28 - INFO - ---------------------------------------------
2024-11-16 23:35 - INFO - ---------------------------------------------
2024-11-16 23:35 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-16 23:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40372
2024-11-16 23:35 - INFO - 	 Train Loss: 0.134
2024-11-16 23:35 - INFO - 	 Val. Loss: 0.157
2024-11-16 23:35 - INFO - 	 ROC-AUC: 0.925
2024-11-16 23:35 - INFO - 	 PR-AUC: 0.404
2024-11-16 23:35 - INFO - 	 Best Val. Loss: 0.157
2024-11-16 23:35 - INFO - 	 Best ROC-AUC: 0.925
2024-11-16 23:35 - INFO - 	 Best PR-AUC: 0.404
2024-11-16 23:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.905
2024-11-16 23:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-16 23:35 - INFO - ---------------------------------------------
2024-11-16 23:42 - INFO - ---------------------------------------------
2024-11-16 23:42 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-16 23:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47589
2024-11-16 23:42 - INFO - 	 Train Loss: 0.123
2024-11-16 23:42 - INFO - 	 Val. Loss: 0.125
2024-11-16 23:42 - INFO - 	 ROC-AUC: 0.943
2024-11-16 23:42 - INFO - 	 PR-AUC: 0.476
2024-11-16 23:42 - INFO - 	 Best Val. Loss: 0.125
2024-11-16 23:42 - INFO - 	 Best ROC-AUC: 0.943
2024-11-16 23:42 - INFO - 	 Best PR-AUC: 0.476
2024-11-16 23:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-16 23:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.297
2024-11-16 23:42 - INFO - ---------------------------------------------
2024-11-16 23:49 - INFO - ---------------------------------------------
2024-11-16 23:49 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-16 23:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50049
2024-11-16 23:49 - INFO - 	 Train Loss: 0.119
2024-11-16 23:49 - INFO - 	 Val. Loss: 0.117
2024-11-16 23:49 - INFO - 	 ROC-AUC: 0.951
2024-11-16 23:49 - INFO - 	 PR-AUC: 0.500
2024-11-16 23:49 - INFO - 	 Best Val. Loss: 0.117
2024-11-16 23:49 - INFO - 	 Best ROC-AUC: 0.951
2024-11-16 23:49 - INFO - 	 Best PR-AUC: 0.500
2024-11-16 23:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-16 23:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-16 23:49 - INFO - ---------------------------------------------
2024-11-16 23:56 - INFO - ---------------------------------------------
2024-11-16 23:56 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-16 23:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50188
2024-11-16 23:56 - INFO - 	 Train Loss: 0.119
2024-11-16 23:56 - INFO - 	 Val. Loss: 0.122
2024-11-16 23:56 - INFO - 	 ROC-AUC: 0.954
2024-11-16 23:56 - INFO - 	 PR-AUC: 0.502
2024-11-16 23:56 - INFO - 	 Best Val. Loss: 0.117
2024-11-16 23:56 - INFO - 	 Best ROC-AUC: 0.954
2024-11-16 23:56 - INFO - 	 Best PR-AUC: 0.502
2024-11-16 23:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-16 23:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-16 23:56 - INFO - ---------------------------------------------
2024-11-17 00:03 - INFO - ---------------------------------------------
2024-11-17 00:03 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-17 00:03 - INFO - 	 Train Loss: 0.115
2024-11-17 00:03 - INFO - 	 Val. Loss: 0.170
2024-11-17 00:03 - INFO - 	 ROC-AUC: 0.890
2024-11-17 00:03 - INFO - 	 PR-AUC: 0.350
2024-11-17 00:03 - INFO - 	 Best Val. Loss: 0.117
2024-11-17 00:03 - INFO - 	 Best ROC-AUC: 0.954
2024-11-17 00:03 - INFO - 	 Best PR-AUC: 0.502
2024-11-17 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-17 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-17 00:03 - INFO - ---------------------------------------------
2024-11-17 00:11 - INFO - ---------------------------------------------
2024-11-17 00:11 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-17 00:11 - INFO - 	 Train Loss: 0.114
2024-11-17 00:11 - INFO - 	 Val. Loss: 0.142
2024-11-17 00:11 - INFO - 	 ROC-AUC: 0.928
2024-11-17 00:11 - INFO - 	 PR-AUC: 0.421
2024-11-17 00:11 - INFO - 	 Best Val. Loss: 0.117
2024-11-17 00:11 - INFO - 	 Best ROC-AUC: 0.954
2024-11-17 00:11 - INFO - 	 Best PR-AUC: 0.502
2024-11-17 00:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-17 00:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-17 00:11 - INFO - ---------------------------------------------
2024-11-17 00:18 - INFO - ---------------------------------------------
2024-11-17 00:18 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-17 00:18 - INFO - 	 Train Loss: 0.115
2024-11-17 00:18 - INFO - 	 Val. Loss: 0.126
2024-11-17 00:18 - INFO - 	 ROC-AUC: 0.953
2024-11-17 00:18 - INFO - 	 PR-AUC: 0.501
2024-11-17 00:18 - INFO - 	 Best Val. Loss: 0.117
2024-11-17 00:18 - INFO - 	 Best ROC-AUC: 0.954
2024-11-17 00:18 - INFO - 	 Best PR-AUC: 0.502
2024-11-17 00:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-17 00:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-17 00:18 - INFO - ---------------------------------------------
2024-11-17 00:26 - INFO - Fit the preprocessing pipeline
2024-11-17 00:26 - INFO - Training using device: cuda
2024-11-17 00:26 - INFO - Creating generators
2024-11-17 00:26 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 00:26 - INFO - * Model:
2024-11-17 00:26 - INFO - * -----------
2024-11-17 00:26 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 00:26 - INFO - * -----------
2024-11-17 00:34 - INFO - ---------------------------------------------
2024-11-17 00:34 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-17 00:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31853
2024-11-17 00:34 - INFO - 	 Train Loss: 0.155
2024-11-17 00:34 - INFO - 	 Val. Loss: 0.246
2024-11-17 00:34 - INFO - 	 ROC-AUC: 0.913
2024-11-17 00:34 - INFO - 	 PR-AUC: 0.319
2024-11-17 00:34 - INFO - 	 Best Val. Loss: 0.246
2024-11-17 00:34 - INFO - 	 Best ROC-AUC: 0.913
2024-11-17 00:34 - INFO - 	 Best PR-AUC: 0.319
2024-11-17 00:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.875
2024-11-17 00:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.206
2024-11-17 00:34 - INFO - ---------------------------------------------
2024-11-17 00:41 - INFO - ---------------------------------------------
2024-11-17 00:41 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-17 00:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35462
2024-11-17 00:41 - INFO - 	 Train Loss: 0.144
2024-11-17 00:41 - INFO - 	 Val. Loss: 0.206
2024-11-17 00:41 - INFO - 	 ROC-AUC: 0.908
2024-11-17 00:41 - INFO - 	 PR-AUC: 0.355
2024-11-17 00:41 - INFO - 	 Best Val. Loss: 0.206
2024-11-17 00:41 - INFO - 	 Best ROC-AUC: 0.913
2024-11-17 00:41 - INFO - 	 Best PR-AUC: 0.355
2024-11-17 00:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.875
2024-11-17 00:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.209
2024-11-17 00:41 - INFO - ---------------------------------------------
2024-11-17 00:48 - INFO - ---------------------------------------------
2024-11-17 00:48 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 00:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48079
2024-11-17 00:48 - INFO - 	 Train Loss: 0.131
2024-11-17 00:48 - INFO - 	 Val. Loss: 0.135
2024-11-17 00:48 - INFO - 	 ROC-AUC: 0.950
2024-11-17 00:48 - INFO - 	 PR-AUC: 0.481
2024-11-17 00:48 - INFO - 	 Best Val. Loss: 0.135
2024-11-17 00:48 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 00:48 - INFO - 	 Best PR-AUC: 0.481
2024-11-17 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-17 00:48 - INFO - ---------------------------------------------
2024-11-17 00:55 - INFO - ---------------------------------------------
2024-11-17 00:55 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 00:55 - INFO - 	 Train Loss: 0.123
2024-11-17 00:55 - INFO - 	 Val. Loss: 0.154
2024-11-17 00:55 - INFO - 	 ROC-AUC: 0.921
2024-11-17 00:55 - INFO - 	 PR-AUC: 0.395
2024-11-17 00:55 - INFO - 	 Best Val. Loss: 0.135
2024-11-17 00:55 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 00:55 - INFO - 	 Best PR-AUC: 0.481
2024-11-17 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-17 00:55 - INFO - ---------------------------------------------
2024-11-17 01:02 - INFO - ---------------------------------------------
2024-11-17 01:02 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-17 01:02 - INFO - 	 Train Loss: 0.120
2024-11-17 01:02 - INFO - 	 Val. Loss: 0.148
2024-11-17 01:02 - INFO - 	 ROC-AUC: 0.930
2024-11-17 01:02 - INFO - 	 PR-AUC: 0.384
2024-11-17 01:02 - INFO - 	 Best Val. Loss: 0.135
2024-11-17 01:02 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 01:02 - INFO - 	 Best PR-AUC: 0.481
2024-11-17 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.323
2024-11-17 01:02 - INFO - ---------------------------------------------
2024-11-17 01:09 - INFO - ---------------------------------------------
2024-11-17 01:09 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-17 01:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49347
2024-11-17 01:09 - INFO - 	 Train Loss: 0.116
2024-11-17 01:09 - INFO - 	 Val. Loss: 0.123
2024-11-17 01:09 - INFO - 	 ROC-AUC: 0.945
2024-11-17 01:09 - INFO - 	 PR-AUC: 0.493
2024-11-17 01:09 - INFO - 	 Best Val. Loss: 0.123
2024-11-17 01:09 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 01:09 - INFO - 	 Best PR-AUC: 0.493
2024-11-17 01:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 01:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-17 01:09 - INFO - ---------------------------------------------
2024-11-17 01:16 - INFO - ---------------------------------------------
2024-11-17 01:16 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-17 01:16 - INFO - 	 Train Loss: 0.116
2024-11-17 01:16 - INFO - 	 Val. Loss: 0.160
2024-11-17 01:16 - INFO - 	 ROC-AUC: 0.920
2024-11-17 01:16 - INFO - 	 PR-AUC: 0.350
2024-11-17 01:16 - INFO - 	 Best Val. Loss: 0.123
2024-11-17 01:16 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 01:16 - INFO - 	 Best PR-AUC: 0.493
2024-11-17 01:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 01:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-17 01:16 - INFO - ---------------------------------------------
2024-11-17 01:23 - INFO - ---------------------------------------------
2024-11-17 01:23 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 01:23 - INFO - 	 Train Loss: 0.114
2024-11-17 01:23 - INFO - 	 Val. Loss: 0.143
2024-11-17 01:23 - INFO - 	 ROC-AUC: 0.934
2024-11-17 01:23 - INFO - 	 PR-AUC: 0.407
2024-11-17 01:23 - INFO - 	 Best Val. Loss: 0.123
2024-11-17 01:23 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 01:23 - INFO - 	 Best PR-AUC: 0.493
2024-11-17 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-17 01:23 - INFO - ---------------------------------------------
2024-11-17 01:31 - INFO - ---------------------------------------------
2024-11-17 01:31 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-17 01:31 - INFO - 	 Train Loss: 0.115
2024-11-17 01:31 - INFO - 	 Val. Loss: 0.162
2024-11-17 01:31 - INFO - 	 ROC-AUC: 0.890
2024-11-17 01:31 - INFO - 	 PR-AUC: 0.371
2024-11-17 01:31 - INFO - 	 Best Val. Loss: 0.123
2024-11-17 01:31 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 01:31 - INFO - 	 Best PR-AUC: 0.493
2024-11-17 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-17 01:31 - INFO - ---------------------------------------------
2024-11-17 01:39 - INFO - Fit the preprocessing pipeline
2024-11-17 01:39 - INFO - Training using device: cuda
2024-11-17 01:39 - INFO - Creating generators
2024-11-17 01:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 01:39 - INFO - * Model:
2024-11-17 01:39 - INFO - * -----------
2024-11-17 01:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 01:39 - INFO - * -----------
2024-11-17 01:47 - INFO - ---------------------------------------------
2024-11-17 01:47 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-17 01:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31777
2024-11-17 01:47 - INFO - 	 Train Loss: 0.155
2024-11-17 01:47 - INFO - 	 Val. Loss: 0.189
2024-11-17 01:47 - INFO - 	 ROC-AUC: 0.899
2024-11-17 01:47 - INFO - 	 PR-AUC: 0.318
2024-11-17 01:47 - INFO - 	 Best Val. Loss: 0.189
2024-11-17 01:47 - INFO - 	 Best ROC-AUC: 0.899
2024-11-17 01:47 - INFO - 	 Best PR-AUC: 0.318
2024-11-17 01:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.855
2024-11-17 01:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.211
2024-11-17 01:47 - INFO - ---------------------------------------------
2024-11-17 01:54 - INFO - ---------------------------------------------
2024-11-17 01:54 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-17 01:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33421
2024-11-17 01:54 - INFO - 	 Train Loss: 0.136
2024-11-17 01:54 - INFO - 	 Val. Loss: 0.185
2024-11-17 01:54 - INFO - 	 ROC-AUC: 0.900
2024-11-17 01:54 - INFO - 	 PR-AUC: 0.334
2024-11-17 01:54 - INFO - 	 Best Val. Loss: 0.185
2024-11-17 01:54 - INFO - 	 Best ROC-AUC: 0.900
2024-11-17 01:54 - INFO - 	 Best PR-AUC: 0.334
2024-11-17 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.868
2024-11-17 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.210
2024-11-17 01:54 - INFO - ---------------------------------------------
2024-11-17 02:01 - INFO - ---------------------------------------------
2024-11-17 02:01 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 02:01 - INFO - 	 Train Loss: 0.126
2024-11-17 02:01 - INFO - 	 Val. Loss: 0.245
2024-11-17 02:01 - INFO - 	 ROC-AUC: 0.785
2024-11-17 02:01 - INFO - 	 PR-AUC: 0.194
2024-11-17 02:01 - INFO - 	 Best Val. Loss: 0.185
2024-11-17 02:01 - INFO - 	 Best ROC-AUC: 0.900
2024-11-17 02:01 - INFO - 	 Best PR-AUC: 0.334
2024-11-17 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.868
2024-11-17 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.210
2024-11-17 02:01 - INFO - ---------------------------------------------
2024-11-17 02:08 - INFO - ---------------------------------------------
2024-11-17 02:08 - INFO - Epoch: 04 | Time: 7m 5s
2024-11-17 02:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43865
2024-11-17 02:08 - INFO - 	 Train Loss: 0.125
2024-11-17 02:08 - INFO - 	 Val. Loss: 0.148
2024-11-17 02:08 - INFO - 	 ROC-AUC: 0.930
2024-11-17 02:08 - INFO - 	 PR-AUC: 0.439
2024-11-17 02:08 - INFO - 	 Best Val. Loss: 0.148
2024-11-17 02:08 - INFO - 	 Best ROC-AUC: 0.930
2024-11-17 02:08 - INFO - 	 Best PR-AUC: 0.439
2024-11-17 02:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.886
2024-11-17 02:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.231
2024-11-17 02:08 - INFO - ---------------------------------------------
2024-11-17 02:15 - INFO - ---------------------------------------------
2024-11-17 02:15 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-17 02:15 - INFO - 	 Train Loss: 0.120
2024-11-17 02:15 - INFO - 	 Val. Loss: 0.144
2024-11-17 02:15 - INFO - 	 ROC-AUC: 0.947
2024-11-17 02:15 - INFO - 	 PR-AUC: 0.413
2024-11-17 02:15 - INFO - 	 Best Val. Loss: 0.144
2024-11-17 02:15 - INFO - 	 Best ROC-AUC: 0.947
2024-11-17 02:15 - INFO - 	 Best PR-AUC: 0.439
2024-11-17 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-17 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.231
2024-11-17 02:15 - INFO - ---------------------------------------------
2024-11-17 02:22 - INFO - ---------------------------------------------
2024-11-17 02:22 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-17 02:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4539
2024-11-17 02:22 - INFO - 	 Train Loss: 0.117
2024-11-17 02:22 - INFO - 	 Val. Loss: 0.127
2024-11-17 02:22 - INFO - 	 ROC-AUC: 0.941
2024-11-17 02:22 - INFO - 	 PR-AUC: 0.454
2024-11-17 02:22 - INFO - 	 Best Val. Loss: 0.127
2024-11-17 02:22 - INFO - 	 Best ROC-AUC: 0.947
2024-11-17 02:22 - INFO - 	 Best PR-AUC: 0.454
2024-11-17 02:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-17 02:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.255
2024-11-17 02:22 - INFO - ---------------------------------------------
2024-11-17 02:29 - INFO - ---------------------------------------------
2024-11-17 02:29 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-17 02:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47088
2024-11-17 02:29 - INFO - 	 Train Loss: 0.116
2024-11-17 02:29 - INFO - 	 Val. Loss: 0.140
2024-11-17 02:29 - INFO - 	 ROC-AUC: 0.944
2024-11-17 02:29 - INFO - 	 PR-AUC: 0.471
2024-11-17 02:29 - INFO - 	 Best Val. Loss: 0.127
2024-11-17 02:29 - INFO - 	 Best ROC-AUC: 0.947
2024-11-17 02:29 - INFO - 	 Best PR-AUC: 0.471
2024-11-17 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-17 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.312
2024-11-17 02:29 - INFO - ---------------------------------------------
2024-11-17 02:36 - INFO - ---------------------------------------------
2024-11-17 02:36 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-17 02:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53369
2024-11-17 02:36 - INFO - 	 Train Loss: 0.116
2024-11-17 02:36 - INFO - 	 Val. Loss: 0.116
2024-11-17 02:36 - INFO - 	 ROC-AUC: 0.952
2024-11-17 02:36 - INFO - 	 PR-AUC: 0.534
2024-11-17 02:36 - INFO - 	 Best Val. Loss: 0.116
2024-11-17 02:36 - INFO - 	 Best ROC-AUC: 0.952
2024-11-17 02:36 - INFO - 	 Best PR-AUC: 0.534
2024-11-17 02:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-17 02:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-17 02:36 - INFO - ---------------------------------------------
2024-11-17 02:44 - INFO - ---------------------------------------------
2024-11-17 02:44 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-17 02:44 - INFO - 	 Train Loss: 0.113
2024-11-17 02:44 - INFO - 	 Val. Loss: 0.129
2024-11-17 02:44 - INFO - 	 ROC-AUC: 0.950
2024-11-17 02:44 - INFO - 	 PR-AUC: 0.480
2024-11-17 02:44 - INFO - 	 Best Val. Loss: 0.116
2024-11-17 02:44 - INFO - 	 Best ROC-AUC: 0.952
2024-11-17 02:44 - INFO - 	 Best PR-AUC: 0.534
2024-11-17 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-17 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-17 02:44 - INFO - ---------------------------------------------
2024-11-17 02:51 - INFO - ---------------------------------------------
2024-11-17 02:51 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-17 02:51 - INFO - 	 Train Loss: 0.114
2024-11-17 02:51 - INFO - 	 Val. Loss: 0.120
2024-11-17 02:51 - INFO - 	 ROC-AUC: 0.961
2024-11-17 02:51 - INFO - 	 PR-AUC: 0.508
2024-11-17 02:51 - INFO - 	 Best Val. Loss: 0.116
2024-11-17 02:51 - INFO - 	 Best ROC-AUC: 0.961
2024-11-17 02:51 - INFO - 	 Best PR-AUC: 0.534
2024-11-17 02:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-17 02:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.329
2024-11-17 02:51 - INFO - ---------------------------------------------
2024-11-17 02:52 - INFO - Fit the preprocessing pipeline
2024-11-17 02:52 - INFO - Training using device: cuda
2024-11-17 02:52 - INFO - Creating generators
2024-11-17 02:52 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 02:52 - INFO - * Model:
2024-11-17 02:52 - INFO - * -----------
2024-11-17 02:52 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 02:52 - INFO - * -----------
2024-11-17 02:59 - INFO - ---------------------------------------------
2024-11-17 02:59 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-17 02:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.29619
2024-11-17 02:59 - INFO - 	 Train Loss: 0.155
2024-11-17 02:59 - INFO - 	 Val. Loss: 0.199
2024-11-17 02:59 - INFO - 	 ROC-AUC: 0.904
2024-11-17 02:59 - INFO - 	 PR-AUC: 0.296
2024-11-17 02:59 - INFO - 	 Best Val. Loss: 0.199
2024-11-17 02:59 - INFO - 	 Best ROC-AUC: 0.904
2024-11-17 02:59 - INFO - 	 Best PR-AUC: 0.296
2024-11-17 02:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.868
2024-11-17 02:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.200
2024-11-17 02:59 - INFO - ---------------------------------------------
2024-11-17 03:07 - INFO - ---------------------------------------------
2024-11-17 03:07 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-17 03:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33939
2024-11-17 03:07 - INFO - 	 Train Loss: 0.142
2024-11-17 03:07 - INFO - 	 Val. Loss: 0.173
2024-11-17 03:07 - INFO - 	 ROC-AUC: 0.900
2024-11-17 03:07 - INFO - 	 PR-AUC: 0.339
2024-11-17 03:07 - INFO - 	 Best Val. Loss: 0.173
2024-11-17 03:07 - INFO - 	 Best ROC-AUC: 0.904
2024-11-17 03:07 - INFO - 	 Best PR-AUC: 0.339
2024-11-17 03:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.868
2024-11-17 03:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.183
2024-11-17 03:07 - INFO - ---------------------------------------------
2024-11-17 03:14 - INFO - ---------------------------------------------
2024-11-17 03:14 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 03:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45772
2024-11-17 03:14 - INFO - 	 Train Loss: 0.128
2024-11-17 03:14 - INFO - 	 Val. Loss: 0.132
2024-11-17 03:14 - INFO - 	 ROC-AUC: 0.946
2024-11-17 03:14 - INFO - 	 PR-AUC: 0.458
2024-11-17 03:14 - INFO - 	 Best Val. Loss: 0.132
2024-11-17 03:14 - INFO - 	 Best ROC-AUC: 0.946
2024-11-17 03:14 - INFO - 	 Best PR-AUC: 0.458
2024-11-17 03:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-17 03:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.273
2024-11-17 03:14 - INFO - ---------------------------------------------
2024-11-17 03:21 - INFO - ---------------------------------------------
2024-11-17 03:21 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-17 03:21 - INFO - 	 Train Loss: 0.123
2024-11-17 03:21 - INFO - 	 Val. Loss: 0.145
2024-11-17 03:21 - INFO - 	 ROC-AUC: 0.934
2024-11-17 03:21 - INFO - 	 PR-AUC: 0.421
2024-11-17 03:21 - INFO - 	 Best Val. Loss: 0.132
2024-11-17 03:21 - INFO - 	 Best ROC-AUC: 0.946
2024-11-17 03:21 - INFO - 	 Best PR-AUC: 0.458
2024-11-17 03:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-17 03:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.273
2024-11-17 03:21 - INFO - ---------------------------------------------
2024-11-17 03:28 - INFO - ---------------------------------------------
2024-11-17 03:28 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-17 03:28 - INFO - 	 Train Loss: 0.120
2024-11-17 03:28 - INFO - 	 Val. Loss: 0.142
2024-11-17 03:28 - INFO - 	 ROC-AUC: 0.924
2024-11-17 03:28 - INFO - 	 PR-AUC: 0.397
2024-11-17 03:28 - INFO - 	 Best Val. Loss: 0.132
2024-11-17 03:28 - INFO - 	 Best ROC-AUC: 0.946
2024-11-17 03:28 - INFO - 	 Best PR-AUC: 0.458
2024-11-17 03:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-17 03:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.273
2024-11-17 03:28 - INFO - ---------------------------------------------
2024-11-17 03:35 - INFO - ---------------------------------------------
2024-11-17 03:35 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-17 03:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51861
2024-11-17 03:35 - INFO - 	 Train Loss: 0.117
2024-11-17 03:35 - INFO - 	 Val. Loss: 0.117
2024-11-17 03:35 - INFO - 	 ROC-AUC: 0.950
2024-11-17 03:35 - INFO - 	 PR-AUC: 0.519
2024-11-17 03:35 - INFO - 	 Best Val. Loss: 0.117
2024-11-17 03:35 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 03:35 - INFO - 	 Best PR-AUC: 0.519
2024-11-17 03:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 03:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-17 03:35 - INFO - ---------------------------------------------
2024-11-17 03:42 - INFO - ---------------------------------------------
2024-11-17 03:42 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-17 03:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53396
2024-11-17 03:42 - INFO - 	 Train Loss: 0.115
2024-11-17 03:42 - INFO - 	 Val. Loss: 0.115
2024-11-17 03:42 - INFO - 	 ROC-AUC: 0.952
2024-11-17 03:42 - INFO - 	 PR-AUC: 0.534
2024-11-17 03:42 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 03:42 - INFO - 	 Best ROC-AUC: 0.952
2024-11-17 03:42 - INFO - 	 Best PR-AUC: 0.534
2024-11-17 03:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-17 03:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.344
2024-11-17 03:42 - INFO - ---------------------------------------------
2024-11-17 03:49 - INFO - ---------------------------------------------
2024-11-17 03:49 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 03:49 - INFO - 	 Train Loss: 0.116
2024-11-17 03:49 - INFO - 	 Val. Loss: 0.149
2024-11-17 03:49 - INFO - 	 ROC-AUC: 0.931
2024-11-17 03:49 - INFO - 	 PR-AUC: 0.408
2024-11-17 03:49 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 03:49 - INFO - 	 Best ROC-AUC: 0.952
2024-11-17 03:49 - INFO - 	 Best PR-AUC: 0.534
2024-11-17 03:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-17 03:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.344
2024-11-17 03:49 - INFO - ---------------------------------------------
2024-11-17 03:57 - INFO - ---------------------------------------------
2024-11-17 03:57 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-17 03:57 - INFO - 	 Train Loss: 0.114
2024-11-17 03:57 - INFO - 	 Val. Loss: 0.121
2024-11-17 03:57 - INFO - 	 ROC-AUC: 0.953
2024-11-17 03:57 - INFO - 	 PR-AUC: 0.526
2024-11-17 03:57 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 03:57 - INFO - 	 Best ROC-AUC: 0.953
2024-11-17 03:57 - INFO - 	 Best PR-AUC: 0.534
2024-11-17 03:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-17 03:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.344
2024-11-17 03:57 - INFO - ---------------------------------------------
2024-11-17 04:04 - INFO - ---------------------------------------------
2024-11-17 04:04 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-17 04:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5638
2024-11-17 04:04 - INFO - 	 Train Loss: 0.115
2024-11-17 04:04 - INFO - 	 Val. Loss: 0.113
2024-11-17 04:04 - INFO - 	 ROC-AUC: 0.954
2024-11-17 04:04 - INFO - 	 PR-AUC: 0.564
2024-11-17 04:04 - INFO - 	 Best Val. Loss: 0.113
2024-11-17 04:04 - INFO - 	 Best ROC-AUC: 0.954
2024-11-17 04:04 - INFO - 	 Best PR-AUC: 0.564
2024-11-17 04:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-17 04:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.344
2024-11-17 04:04 - INFO - ---------------------------------------------
2024-11-17 04:05 - INFO - Fit the preprocessing pipeline
2024-11-17 04:05 - INFO - Training using device: cuda
2024-11-17 04:05 - INFO - Creating generators
2024-11-17 04:05 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 04:05 - INFO - * Model:
2024-11-17 04:05 - INFO - * -----------
2024-11-17 04:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 04:05 - INFO - * -----------
2024-11-17 04:12 - INFO - ---------------------------------------------
2024-11-17 04:12 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-17 04:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.2519
2024-11-17 04:12 - INFO - 	 Train Loss: 0.154
2024-11-17 04:12 - INFO - 	 Val. Loss: 0.205
2024-11-17 04:12 - INFO - 	 ROC-AUC: 0.883
2024-11-17 04:12 - INFO - 	 PR-AUC: 0.252
2024-11-17 04:12 - INFO - 	 Best Val. Loss: 0.205
2024-11-17 04:12 - INFO - 	 Best ROC-AUC: 0.883
2024-11-17 04:12 - INFO - 	 Best PR-AUC: 0.252
2024-11-17 04:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.820
2024-11-17 04:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-17 04:12 - INFO - ---------------------------------------------
2024-11-17 04:20 - INFO - ---------------------------------------------
2024-11-17 04:20 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-17 04:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40645
2024-11-17 04:20 - INFO - 	 Train Loss: 0.139
2024-11-17 04:20 - INFO - 	 Val. Loss: 0.142
2024-11-17 04:20 - INFO - 	 ROC-AUC: 0.933
2024-11-17 04:20 - INFO - 	 PR-AUC: 0.406
2024-11-17 04:20 - INFO - 	 Best Val. Loss: 0.142
2024-11-17 04:20 - INFO - 	 Best ROC-AUC: 0.933
2024-11-17 04:20 - INFO - 	 Best PR-AUC: 0.406
2024-11-17 04:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-17 04:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.241
2024-11-17 04:20 - INFO - ---------------------------------------------
2024-11-17 04:27 - INFO - ---------------------------------------------
2024-11-17 04:27 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 04:27 - INFO - 	 Train Loss: 0.126
2024-11-17 04:27 - INFO - 	 Val. Loss: 0.203
2024-11-17 04:27 - INFO - 	 ROC-AUC: 0.867
2024-11-17 04:27 - INFO - 	 PR-AUC: 0.287
2024-11-17 04:27 - INFO - 	 Best Val. Loss: 0.142
2024-11-17 04:27 - INFO - 	 Best ROC-AUC: 0.933
2024-11-17 04:27 - INFO - 	 Best PR-AUC: 0.406
2024-11-17 04:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-17 04:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.241
2024-11-17 04:27 - INFO - ---------------------------------------------
2024-11-17 04:34 - INFO - ---------------------------------------------
2024-11-17 04:34 - INFO - Epoch: 04 | Time: 7m 4s
2024-11-17 04:34 - INFO - 	 Train Loss: 0.123
2024-11-17 04:34 - INFO - 	 Val. Loss: 0.142
2024-11-17 04:34 - INFO - 	 ROC-AUC: 0.940
2024-11-17 04:34 - INFO - 	 PR-AUC: 0.403
2024-11-17 04:34 - INFO - 	 Best Val. Loss: 0.142
2024-11-17 04:34 - INFO - 	 Best ROC-AUC: 0.940
2024-11-17 04:34 - INFO - 	 Best PR-AUC: 0.406
2024-11-17 04:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.905
2024-11-17 04:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.241
2024-11-17 04:34 - INFO - ---------------------------------------------
2024-11-17 04:41 - INFO - ---------------------------------------------
2024-11-17 04:41 - INFO - Epoch: 05 | Time: 7m 5s
2024-11-17 04:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48116
2024-11-17 04:41 - INFO - 	 Train Loss: 0.120
2024-11-17 04:41 - INFO - 	 Val. Loss: 0.136
2024-11-17 04:41 - INFO - 	 ROC-AUC: 0.945
2024-11-17 04:41 - INFO - 	 PR-AUC: 0.481
2024-11-17 04:41 - INFO - 	 Best Val. Loss: 0.136
2024-11-17 04:41 - INFO - 	 Best ROC-AUC: 0.945
2024-11-17 04:41 - INFO - 	 Best PR-AUC: 0.481
2024-11-17 04:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-17 04:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-17 04:41 - INFO - ---------------------------------------------
2024-11-17 04:48 - INFO - ---------------------------------------------
2024-11-17 04:48 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-17 04:48 - INFO - 	 Train Loss: 0.116
2024-11-17 04:48 - INFO - 	 Val. Loss: 0.152
2024-11-17 04:48 - INFO - 	 ROC-AUC: 0.922
2024-11-17 04:48 - INFO - 	 PR-AUC: 0.396
2024-11-17 04:48 - INFO - 	 Best Val. Loss: 0.136
2024-11-17 04:48 - INFO - 	 Best ROC-AUC: 0.945
2024-11-17 04:48 - INFO - 	 Best PR-AUC: 0.481
2024-11-17 04:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-17 04:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-17 04:48 - INFO - ---------------------------------------------
2024-11-17 04:55 - INFO - ---------------------------------------------
2024-11-17 04:55 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-17 04:55 - INFO - 	 Train Loss: 0.115
2024-11-17 04:55 - INFO - 	 Val. Loss: 0.129
2024-11-17 04:55 - INFO - 	 ROC-AUC: 0.934
2024-11-17 04:55 - INFO - 	 PR-AUC: 0.441
2024-11-17 04:55 - INFO - 	 Best Val. Loss: 0.129
2024-11-17 04:55 - INFO - 	 Best ROC-AUC: 0.945
2024-11-17 04:55 - INFO - 	 Best PR-AUC: 0.481
2024-11-17 04:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-17 04:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-17 04:55 - INFO - ---------------------------------------------
2024-11-17 05:02 - INFO - ---------------------------------------------
2024-11-17 05:02 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 05:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53939
2024-11-17 05:02 - INFO - 	 Train Loss: 0.113
2024-11-17 05:02 - INFO - 	 Val. Loss: 0.115
2024-11-17 05:02 - INFO - 	 ROC-AUC: 0.957
2024-11-17 05:02 - INFO - 	 PR-AUC: 0.539
2024-11-17 05:02 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 05:02 - INFO - 	 Best ROC-AUC: 0.957
2024-11-17 05:02 - INFO - 	 Best PR-AUC: 0.539
2024-11-17 05:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-17 05:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-17 05:02 - INFO - ---------------------------------------------
2024-11-17 05:09 - INFO - ---------------------------------------------
2024-11-17 05:09 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-17 05:09 - INFO - 	 Train Loss: 0.113
2024-11-17 05:09 - INFO - 	 Val. Loss: 0.155
2024-11-17 05:09 - INFO - 	 ROC-AUC: 0.924
2024-11-17 05:09 - INFO - 	 PR-AUC: 0.391
2024-11-17 05:09 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 05:09 - INFO - 	 Best ROC-AUC: 0.957
2024-11-17 05:09 - INFO - 	 Best PR-AUC: 0.539
2024-11-17 05:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-17 05:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-17 05:09 - INFO - ---------------------------------------------
2024-11-17 05:17 - INFO - ---------------------------------------------
2024-11-17 05:17 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-17 05:17 - INFO - 	 Train Loss: 0.113
2024-11-17 05:17 - INFO - 	 Val. Loss: 0.130
2024-11-17 05:17 - INFO - 	 ROC-AUC: 0.956
2024-11-17 05:17 - INFO - 	 PR-AUC: 0.514
2024-11-17 05:17 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 05:17 - INFO - 	 Best ROC-AUC: 0.957
2024-11-17 05:17 - INFO - 	 Best PR-AUC: 0.539
2024-11-17 05:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-17 05:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.387
2024-11-17 05:17 - INFO - ---------------------------------------------
2024-11-17 05:18 - INFO - Fit the preprocessing pipeline
2024-11-17 05:18 - INFO - Training using device: cuda
2024-11-17 05:18 - INFO - Creating generators
2024-11-17 05:18 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 05:18 - INFO - * Model:
2024-11-17 05:18 - INFO - * -----------
2024-11-17 05:18 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 05:18 - INFO - * -----------
2024-11-17 05:25 - INFO - ---------------------------------------------
2024-11-17 05:25 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-17 05:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25964
2024-11-17 05:25 - INFO - 	 Train Loss: 0.154
2024-11-17 05:25 - INFO - 	 Val. Loss: 0.213
2024-11-17 05:25 - INFO - 	 ROC-AUC: 0.889
2024-11-17 05:25 - INFO - 	 PR-AUC: 0.260
2024-11-17 05:25 - INFO - 	 Best Val. Loss: 0.213
2024-11-17 05:25 - INFO - 	 Best ROC-AUC: 0.889
2024-11-17 05:25 - INFO - 	 Best PR-AUC: 0.260
2024-11-17 05:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.823
2024-11-17 05:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.143
2024-11-17 05:25 - INFO - ---------------------------------------------
2024-11-17 05:32 - INFO - ---------------------------------------------
2024-11-17 05:32 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-17 05:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3229
2024-11-17 05:32 - INFO - 	 Train Loss: 0.137
2024-11-17 05:32 - INFO - 	 Val. Loss: 0.169
2024-11-17 05:32 - INFO - 	 ROC-AUC: 0.923
2024-11-17 05:32 - INFO - 	 PR-AUC: 0.323
2024-11-17 05:32 - INFO - 	 Best Val. Loss: 0.169
2024-11-17 05:32 - INFO - 	 Best ROC-AUC: 0.923
2024-11-17 05:32 - INFO - 	 Best PR-AUC: 0.323
2024-11-17 05:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.877
2024-11-17 05:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.205
2024-11-17 05:32 - INFO - ---------------------------------------------
2024-11-17 05:40 - INFO - ---------------------------------------------
2024-11-17 05:40 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 05:40 - INFO - 	 Train Loss: 0.129
2024-11-17 05:40 - INFO - 	 Val. Loss: 0.177
2024-11-17 05:40 - INFO - 	 ROC-AUC: 0.894
2024-11-17 05:40 - INFO - 	 PR-AUC: 0.293
2024-11-17 05:40 - INFO - 	 Best Val. Loss: 0.169
2024-11-17 05:40 - INFO - 	 Best ROC-AUC: 0.923
2024-11-17 05:40 - INFO - 	 Best PR-AUC: 0.323
2024-11-17 05:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.877
2024-11-17 05:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.205
2024-11-17 05:40 - INFO - ---------------------------------------------
2024-11-17 05:47 - INFO - ---------------------------------------------
2024-11-17 05:47 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 05:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43268
2024-11-17 05:47 - INFO - 	 Train Loss: 0.124
2024-11-17 05:47 - INFO - 	 Val. Loss: 0.139
2024-11-17 05:47 - INFO - 	 ROC-AUC: 0.942
2024-11-17 05:47 - INFO - 	 PR-AUC: 0.433
2024-11-17 05:47 - INFO - 	 Best Val. Loss: 0.139
2024-11-17 05:47 - INFO - 	 Best ROC-AUC: 0.942
2024-11-17 05:47 - INFO - 	 Best PR-AUC: 0.433
2024-11-17 05:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-17 05:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-17 05:47 - INFO - ---------------------------------------------
2024-11-17 05:54 - INFO - ---------------------------------------------
2024-11-17 05:54 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-17 05:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4965
2024-11-17 05:54 - INFO - 	 Train Loss: 0.119
2024-11-17 05:54 - INFO - 	 Val. Loss: 0.119
2024-11-17 05:54 - INFO - 	 ROC-AUC: 0.956
2024-11-17 05:54 - INFO - 	 PR-AUC: 0.496
2024-11-17 05:54 - INFO - 	 Best Val. Loss: 0.119
2024-11-17 05:54 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 05:54 - INFO - 	 Best PR-AUC: 0.496
2024-11-17 05:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 05:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-17 05:54 - INFO - ---------------------------------------------
2024-11-17 06:01 - INFO - ---------------------------------------------
2024-11-17 06:01 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-17 06:01 - INFO - 	 Train Loss: 0.118
2024-11-17 06:01 - INFO - 	 Val. Loss: 0.146
2024-11-17 06:01 - INFO - 	 ROC-AUC: 0.943
2024-11-17 06:01 - INFO - 	 PR-AUC: 0.438
2024-11-17 06:01 - INFO - 	 Best Val. Loss: 0.119
2024-11-17 06:01 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 06:01 - INFO - 	 Best PR-AUC: 0.496
2024-11-17 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-17 06:01 - INFO - ---------------------------------------------
2024-11-17 06:08 - INFO - ---------------------------------------------
2024-11-17 06:08 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-17 06:08 - INFO - 	 Train Loss: 0.115
2024-11-17 06:08 - INFO - 	 Val. Loss: 0.163
2024-11-17 06:08 - INFO - 	 ROC-AUC: 0.922
2024-11-17 06:08 - INFO - 	 PR-AUC: 0.364
2024-11-17 06:08 - INFO - 	 Best Val. Loss: 0.119
2024-11-17 06:08 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 06:08 - INFO - 	 Best PR-AUC: 0.496
2024-11-17 06:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 06:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-17 06:08 - INFO - ---------------------------------------------
2024-11-17 06:15 - INFO - ---------------------------------------------
2024-11-17 06:15 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-17 06:15 - INFO - 	 Train Loss: 0.114
2024-11-17 06:15 - INFO - 	 Val. Loss: 0.163
2024-11-17 06:15 - INFO - 	 ROC-AUC: 0.911
2024-11-17 06:15 - INFO - 	 PR-AUC: 0.364
2024-11-17 06:15 - INFO - 	 Best Val. Loss: 0.119
2024-11-17 06:15 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 06:15 - INFO - 	 Best PR-AUC: 0.496
2024-11-17 06:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 06:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.326
2024-11-17 06:15 - INFO - ---------------------------------------------
2024-11-17 06:24 - INFO - Fit the preprocessing pipeline
2024-11-17 06:24 - INFO - Training using device: cuda
2024-11-17 06:24 - INFO - Creating generators
2024-11-17 06:24 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 06:24 - INFO - * Model:
2024-11-17 06:24 - INFO - * -----------
2024-11-17 06:24 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 06:24 - INFO - * -----------
2024-11-17 06:31 - INFO - ---------------------------------------------
2024-11-17 06:31 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-17 06:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16168
2024-11-17 06:31 - INFO - 	 Train Loss: 0.154
2024-11-17 06:31 - INFO - 	 Val. Loss: 0.288
2024-11-17 06:31 - INFO - 	 ROC-AUC: 0.853
2024-11-17 06:31 - INFO - 	 PR-AUC: 0.162
2024-11-17 06:31 - INFO - 	 Best Val. Loss: 0.288
2024-11-17 06:31 - INFO - 	 Best ROC-AUC: 0.853
2024-11-17 06:31 - INFO - 	 Best PR-AUC: 0.162
2024-11-17 06:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-17 06:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.121
2024-11-17 06:31 - INFO - ---------------------------------------------
2024-11-17 06:38 - INFO - ---------------------------------------------
2024-11-17 06:38 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-17 06:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38553
2024-11-17 06:38 - INFO - 	 Train Loss: 0.140
2024-11-17 06:38 - INFO - 	 Val. Loss: 0.153
2024-11-17 06:38 - INFO - 	 ROC-AUC: 0.926
2024-11-17 06:38 - INFO - 	 PR-AUC: 0.386
2024-11-17 06:38 - INFO - 	 Best Val. Loss: 0.153
2024-11-17 06:38 - INFO - 	 Best ROC-AUC: 0.926
2024-11-17 06:38 - INFO - 	 Best PR-AUC: 0.386
2024-11-17 06:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.883
2024-11-17 06:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.217
2024-11-17 06:38 - INFO - ---------------------------------------------
2024-11-17 06:45 - INFO - ---------------------------------------------
2024-11-17 06:45 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-17 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46304
2024-11-17 06:45 - INFO - 	 Train Loss: 0.128
2024-11-17 06:45 - INFO - 	 Val. Loss: 0.121
2024-11-17 06:45 - INFO - 	 ROC-AUC: 0.950
2024-11-17 06:45 - INFO - 	 PR-AUC: 0.463
2024-11-17 06:45 - INFO - 	 Best Val. Loss: 0.121
2024-11-17 06:45 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 06:45 - INFO - 	 Best PR-AUC: 0.463
2024-11-17 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-17 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.274
2024-11-17 06:45 - INFO - ---------------------------------------------
2024-11-17 06:53 - INFO - ---------------------------------------------
2024-11-17 06:53 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-17 06:53 - INFO - 	 Train Loss: 0.122
2024-11-17 06:53 - INFO - 	 Val. Loss: 0.155
2024-11-17 06:53 - INFO - 	 ROC-AUC: 0.922
2024-11-17 06:53 - INFO - 	 PR-AUC: 0.374
2024-11-17 06:53 - INFO - 	 Best Val. Loss: 0.121
2024-11-17 06:53 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 06:53 - INFO - 	 Best PR-AUC: 0.463
2024-11-17 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-17 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.274
2024-11-17 06:53 - INFO - ---------------------------------------------
2024-11-17 07:00 - INFO - ---------------------------------------------
2024-11-17 07:00 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-17 07:00 - INFO - 	 Train Loss: 0.117
2024-11-17 07:00 - INFO - 	 Val. Loss: 0.157
2024-11-17 07:00 - INFO - 	 ROC-AUC: 0.923
2024-11-17 07:00 - INFO - 	 PR-AUC: 0.410
2024-11-17 07:00 - INFO - 	 Best Val. Loss: 0.121
2024-11-17 07:00 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 07:00 - INFO - 	 Best PR-AUC: 0.463
2024-11-17 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-17 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.274
2024-11-17 07:00 - INFO - ---------------------------------------------
2024-11-17 07:07 - INFO - ---------------------------------------------
2024-11-17 07:07 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-17 07:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50929
2024-11-17 07:07 - INFO - 	 Train Loss: 0.117
2024-11-17 07:07 - INFO - 	 Val. Loss: 0.124
2024-11-17 07:07 - INFO - 	 ROC-AUC: 0.943
2024-11-17 07:07 - INFO - 	 PR-AUC: 0.509
2024-11-17 07:07 - INFO - 	 Best Val. Loss: 0.121
2024-11-17 07:07 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 07:07 - INFO - 	 Best PR-AUC: 0.509
2024-11-17 07:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-17 07:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.303
2024-11-17 07:07 - INFO - ---------------------------------------------
2024-11-17 07:14 - INFO - ---------------------------------------------
2024-11-17 07:14 - INFO - Epoch: 07 | Time: 7m 9s
2024-11-17 07:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51473
2024-11-17 07:14 - INFO - 	 Train Loss: 0.115
2024-11-17 07:14 - INFO - 	 Val. Loss: 0.112
2024-11-17 07:14 - INFO - 	 ROC-AUC: 0.956
2024-11-17 07:14 - INFO - 	 PR-AUC: 0.515
2024-11-17 07:14 - INFO - 	 Best Val. Loss: 0.112
2024-11-17 07:14 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 07:14 - INFO - 	 Best PR-AUC: 0.515
2024-11-17 07:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 07:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-17 07:14 - INFO - ---------------------------------------------
2024-11-17 07:21 - INFO - ---------------------------------------------
2024-11-17 07:21 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 07:21 - INFO - 	 Train Loss: 0.115
2024-11-17 07:21 - INFO - 	 Val. Loss: 0.126
2024-11-17 07:21 - INFO - 	 ROC-AUC: 0.942
2024-11-17 07:21 - INFO - 	 PR-AUC: 0.498
2024-11-17 07:21 - INFO - 	 Best Val. Loss: 0.112
2024-11-17 07:21 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 07:21 - INFO - 	 Best PR-AUC: 0.515
2024-11-17 07:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 07:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-17 07:21 - INFO - ---------------------------------------------
2024-11-17 07:28 - INFO - ---------------------------------------------
2024-11-17 07:28 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-17 07:28 - INFO - 	 Train Loss: 0.113
2024-11-17 07:28 - INFO - 	 Val. Loss: 0.152
2024-11-17 07:28 - INFO - 	 ROC-AUC: 0.938
2024-11-17 07:28 - INFO - 	 PR-AUC: 0.431
2024-11-17 07:28 - INFO - 	 Best Val. Loss: 0.112
2024-11-17 07:28 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 07:28 - INFO - 	 Best PR-AUC: 0.515
2024-11-17 07:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 07:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-17 07:28 - INFO - ---------------------------------------------
2024-11-17 07:35 - INFO - ---------------------------------------------
2024-11-17 07:35 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-17 07:35 - INFO - 	 Train Loss: 0.114
2024-11-17 07:35 - INFO - 	 Val. Loss: 0.158
2024-11-17 07:35 - INFO - 	 ROC-AUC: 0.931
2024-11-17 07:35 - INFO - 	 PR-AUC: 0.412
2024-11-17 07:35 - INFO - 	 Best Val. Loss: 0.112
2024-11-17 07:35 - INFO - 	 Best ROC-AUC: 0.956
2024-11-17 07:35 - INFO - 	 Best PR-AUC: 0.515
2024-11-17 07:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-17 07:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-17 07:35 - INFO - ---------------------------------------------
2024-11-17 07:37 - INFO - Fit the preprocessing pipeline
2024-11-17 07:37 - INFO - Training using device: cuda
2024-11-17 07:37 - INFO - Creating generators
2024-11-17 07:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 07:37 - INFO - * Model:
2024-11-17 07:37 - INFO - * -----------
2024-11-17 07:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 07:37 - INFO - * -----------
2024-11-17 07:44 - INFO - ---------------------------------------------
2024-11-17 07:44 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-17 07:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13958
2024-11-17 07:44 - INFO - 	 Train Loss: 0.156
2024-11-17 07:44 - INFO - 	 Val. Loss: 0.237
2024-11-17 07:44 - INFO - 	 ROC-AUC: 0.771
2024-11-17 07:44 - INFO - 	 PR-AUC: 0.140
2024-11-17 07:44 - INFO - 	 Best Val. Loss: 0.237
2024-11-17 07:44 - INFO - 	 Best ROC-AUC: 0.771
2024-11-17 07:44 - INFO - 	 Best PR-AUC: 0.140
2024-11-17 07:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.713
2024-11-17 07:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.086
2024-11-17 07:44 - INFO - ---------------------------------------------
2024-11-17 07:51 - INFO - ---------------------------------------------
2024-11-17 07:51 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-17 07:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38185
2024-11-17 07:51 - INFO - 	 Train Loss: 0.140
2024-11-17 07:51 - INFO - 	 Val. Loss: 0.153
2024-11-17 07:51 - INFO - 	 ROC-AUC: 0.928
2024-11-17 07:51 - INFO - 	 PR-AUC: 0.382
2024-11-17 07:51 - INFO - 	 Best Val. Loss: 0.153
2024-11-17 07:51 - INFO - 	 Best ROC-AUC: 0.928
2024-11-17 07:51 - INFO - 	 Best PR-AUC: 0.382
2024-11-17 07:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.879
2024-11-17 07:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.202
2024-11-17 07:51 - INFO - ---------------------------------------------
2024-11-17 07:59 - INFO - ---------------------------------------------
2024-11-17 07:59 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 07:59 - INFO - 	 Train Loss: 0.127
2024-11-17 07:59 - INFO - 	 Val. Loss: 0.185
2024-11-17 07:59 - INFO - 	 ROC-AUC: 0.898
2024-11-17 07:59 - INFO - 	 PR-AUC: 0.321
2024-11-17 07:59 - INFO - 	 Best Val. Loss: 0.153
2024-11-17 07:59 - INFO - 	 Best ROC-AUC: 0.928
2024-11-17 07:59 - INFO - 	 Best PR-AUC: 0.382
2024-11-17 07:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.879
2024-11-17 07:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.202
2024-11-17 07:59 - INFO - ---------------------------------------------
2024-11-17 08:06 - INFO - ---------------------------------------------
2024-11-17 08:06 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-17 08:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38881
2024-11-17 08:06 - INFO - 	 Train Loss: 0.124
2024-11-17 08:06 - INFO - 	 Val. Loss: 0.150
2024-11-17 08:06 - INFO - 	 ROC-AUC: 0.920
2024-11-17 08:06 - INFO - 	 PR-AUC: 0.389
2024-11-17 08:06 - INFO - 	 Best Val. Loss: 0.150
2024-11-17 08:06 - INFO - 	 Best ROC-AUC: 0.928
2024-11-17 08:06 - INFO - 	 Best PR-AUC: 0.389
2024-11-17 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.879
2024-11-17 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.251
2024-11-17 08:06 - INFO - ---------------------------------------------
2024-11-17 08:13 - INFO - ---------------------------------------------
2024-11-17 08:13 - INFO - Epoch: 05 | Time: 7m 10s
2024-11-17 08:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43051
2024-11-17 08:13 - INFO - 	 Train Loss: 0.118
2024-11-17 08:13 - INFO - 	 Val. Loss: 0.140
2024-11-17 08:13 - INFO - 	 ROC-AUC: 0.946
2024-11-17 08:13 - INFO - 	 PR-AUC: 0.431
2024-11-17 08:13 - INFO - 	 Best Val. Loss: 0.140
2024-11-17 08:13 - INFO - 	 Best ROC-AUC: 0.946
2024-11-17 08:13 - INFO - 	 Best PR-AUC: 0.431
2024-11-17 08:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-17 08:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.266
2024-11-17 08:13 - INFO - ---------------------------------------------
2024-11-17 08:20 - INFO - ---------------------------------------------
2024-11-17 08:20 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-17 08:20 - INFO - 	 Train Loss: 0.117
2024-11-17 08:20 - INFO - 	 Val. Loss: 0.132
2024-11-17 08:20 - INFO - 	 ROC-AUC: 0.939
2024-11-17 08:20 - INFO - 	 PR-AUC: 0.421
2024-11-17 08:20 - INFO - 	 Best Val. Loss: 0.132
2024-11-17 08:20 - INFO - 	 Best ROC-AUC: 0.946
2024-11-17 08:20 - INFO - 	 Best PR-AUC: 0.431
2024-11-17 08:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-17 08:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.266
2024-11-17 08:20 - INFO - ---------------------------------------------
2024-11-17 08:27 - INFO - ---------------------------------------------
2024-11-17 08:27 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-17 08:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47585
2024-11-17 08:27 - INFO - 	 Train Loss: 0.116
2024-11-17 08:27 - INFO - 	 Val. Loss: 0.128
2024-11-17 08:27 - INFO - 	 ROC-AUC: 0.941
2024-11-17 08:27 - INFO - 	 PR-AUC: 0.476
2024-11-17 08:27 - INFO - 	 Best Val. Loss: 0.128
2024-11-17 08:27 - INFO - 	 Best ROC-AUC: 0.946
2024-11-17 08:27 - INFO - 	 Best PR-AUC: 0.476
2024-11-17 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-17 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.284
2024-11-17 08:27 - INFO - ---------------------------------------------
2024-11-17 08:34 - INFO - ---------------------------------------------
2024-11-17 08:34 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-17 08:34 - INFO - 	 Train Loss: 0.114
2024-11-17 08:34 - INFO - 	 Val. Loss: 0.134
2024-11-17 08:34 - INFO - 	 ROC-AUC: 0.938
2024-11-17 08:34 - INFO - 	 PR-AUC: 0.432
2024-11-17 08:34 - INFO - 	 Best Val. Loss: 0.128
2024-11-17 08:34 - INFO - 	 Best ROC-AUC: 0.946
2024-11-17 08:34 - INFO - 	 Best PR-AUC: 0.476
2024-11-17 08:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-17 08:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.284
2024-11-17 08:34 - INFO - ---------------------------------------------
2024-11-17 08:41 - INFO - ---------------------------------------------
2024-11-17 08:41 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-17 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51937
2024-11-17 08:41 - INFO - 	 Train Loss: 0.115
2024-11-17 08:41 - INFO - 	 Val. Loss: 0.122
2024-11-17 08:41 - INFO - 	 ROC-AUC: 0.949
2024-11-17 08:41 - INFO - 	 PR-AUC: 0.519
2024-11-17 08:41 - INFO - 	 Best Val. Loss: 0.122
2024-11-17 08:41 - INFO - 	 Best ROC-AUC: 0.949
2024-11-17 08:41 - INFO - 	 Best PR-AUC: 0.519
2024-11-17 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-17 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-17 08:41 - INFO - ---------------------------------------------
2024-11-17 08:49 - INFO - ---------------------------------------------
2024-11-17 08:49 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-17 08:49 - INFO - 	 Train Loss: 0.114
2024-11-17 08:49 - INFO - 	 Val. Loss: 0.133
2024-11-17 08:49 - INFO - 	 ROC-AUC: 0.949
2024-11-17 08:49 - INFO - 	 PR-AUC: 0.448
2024-11-17 08:49 - INFO - 	 Best Val. Loss: 0.122
2024-11-17 08:49 - INFO - 	 Best ROC-AUC: 0.949
2024-11-17 08:49 - INFO - 	 Best PR-AUC: 0.519
2024-11-17 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-17 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.315
2024-11-17 08:49 - INFO - ---------------------------------------------
2024-11-17 08:50 - INFO - Fit the preprocessing pipeline
2024-11-17 08:50 - INFO - Training using device: cuda
2024-11-17 08:50 - INFO - Creating generators
2024-11-17 08:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-17 08:50 - INFO - * Model:
2024-11-17 08:50 - INFO - * -----------
2024-11-17 08:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-17 08:50 - INFO - * -----------
2024-11-17 08:57 - INFO - ---------------------------------------------
2024-11-17 08:57 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-17 08:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30967
2024-11-17 08:57 - INFO - 	 Train Loss: 0.156
2024-11-17 08:57 - INFO - 	 Val. Loss: 0.186
2024-11-17 08:57 - INFO - 	 ROC-AUC: 0.891
2024-11-17 08:57 - INFO - 	 PR-AUC: 0.310
2024-11-17 08:57 - INFO - 	 Best Val. Loss: 0.186
2024-11-17 08:57 - INFO - 	 Best ROC-AUC: 0.891
2024-11-17 08:57 - INFO - 	 Best PR-AUC: 0.310
2024-11-17 08:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.833
2024-11-17 08:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.164
2024-11-17 08:57 - INFO - ---------------------------------------------
2024-11-17 09:05 - INFO - ---------------------------------------------
2024-11-17 09:05 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-17 09:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42598
2024-11-17 09:05 - INFO - 	 Train Loss: 0.134
2024-11-17 09:05 - INFO - 	 Val. Loss: 0.141
2024-11-17 09:05 - INFO - 	 ROC-AUC: 0.935
2024-11-17 09:05 - INFO - 	 PR-AUC: 0.426
2024-11-17 09:05 - INFO - 	 Best Val. Loss: 0.141
2024-11-17 09:05 - INFO - 	 Best ROC-AUC: 0.935
2024-11-17 09:05 - INFO - 	 Best PR-AUC: 0.426
2024-11-17 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-17 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.227
2024-11-17 09:05 - INFO - ---------------------------------------------
2024-11-17 09:12 - INFO - ---------------------------------------------
2024-11-17 09:12 - INFO - Epoch: 03 | Time: 7m 8s
2024-11-17 09:12 - INFO - 	 Train Loss: 0.127
2024-11-17 09:12 - INFO - 	 Val. Loss: 0.163
2024-11-17 09:12 - INFO - 	 ROC-AUC: 0.910
2024-11-17 09:12 - INFO - 	 PR-AUC: 0.329
2024-11-17 09:12 - INFO - 	 Best Val. Loss: 0.141
2024-11-17 09:12 - INFO - 	 Best ROC-AUC: 0.935
2024-11-17 09:12 - INFO - 	 Best PR-AUC: 0.426
2024-11-17 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-17 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.227
2024-11-17 09:12 - INFO - ---------------------------------------------
2024-11-17 09:19 - INFO - ---------------------------------------------
2024-11-17 09:19 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-17 09:19 - INFO - 	 Train Loss: 0.122
2024-11-17 09:19 - INFO - 	 Val. Loss: 0.141
2024-11-17 09:19 - INFO - 	 ROC-AUC: 0.939
2024-11-17 09:19 - INFO - 	 PR-AUC: 0.414
2024-11-17 09:19 - INFO - 	 Best Val. Loss: 0.141
2024-11-17 09:19 - INFO - 	 Best ROC-AUC: 0.939
2024-11-17 09:19 - INFO - 	 Best PR-AUC: 0.426
2024-11-17 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.895
2024-11-17 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.227
2024-11-17 09:19 - INFO - ---------------------------------------------
2024-11-17 09:26 - INFO - ---------------------------------------------
2024-11-17 09:26 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-17 09:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43503
2024-11-17 09:26 - INFO - 	 Train Loss: 0.119
2024-11-17 09:26 - INFO - 	 Val. Loss: 0.123
2024-11-17 09:26 - INFO - 	 ROC-AUC: 0.943
2024-11-17 09:26 - INFO - 	 PR-AUC: 0.435
2024-11-17 09:26 - INFO - 	 Best Val. Loss: 0.123
2024-11-17 09:26 - INFO - 	 Best ROC-AUC: 0.943
2024-11-17 09:26 - INFO - 	 Best PR-AUC: 0.435
2024-11-17 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-17 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.301
2024-11-17 09:26 - INFO - ---------------------------------------------
2024-11-17 09:33 - INFO - ---------------------------------------------
2024-11-17 09:33 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-17 09:33 - INFO - 	 Train Loss: 0.116
2024-11-17 09:33 - INFO - 	 Val. Loss: 0.167
2024-11-17 09:33 - INFO - 	 ROC-AUC: 0.910
2024-11-17 09:33 - INFO - 	 PR-AUC: 0.388
2024-11-17 09:33 - INFO - 	 Best Val. Loss: 0.123
2024-11-17 09:33 - INFO - 	 Best ROC-AUC: 0.943
2024-11-17 09:33 - INFO - 	 Best PR-AUC: 0.435
2024-11-17 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-17 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.301
2024-11-17 09:33 - INFO - ---------------------------------------------
2024-11-17 09:40 - INFO - ---------------------------------------------
2024-11-17 09:40 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-17 09:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51445
2024-11-17 09:40 - INFO - 	 Train Loss: 0.115
2024-11-17 09:40 - INFO - 	 Val. Loss: 0.115
2024-11-17 09:40 - INFO - 	 ROC-AUC: 0.941
2024-11-17 09:40 - INFO - 	 PR-AUC: 0.514
2024-11-17 09:40 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 09:40 - INFO - 	 Best ROC-AUC: 0.943
2024-11-17 09:40 - INFO - 	 Best PR-AUC: 0.514
2024-11-17 09:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-17 09:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.328
2024-11-17 09:40 - INFO - ---------------------------------------------
2024-11-17 09:47 - INFO - ---------------------------------------------
2024-11-17 09:47 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-17 09:47 - INFO - 	 Train Loss: 0.113
2024-11-17 09:47 - INFO - 	 Val. Loss: 0.178
2024-11-17 09:47 - INFO - 	 ROC-AUC: 0.883
2024-11-17 09:47 - INFO - 	 PR-AUC: 0.292
2024-11-17 09:47 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 09:47 - INFO - 	 Best ROC-AUC: 0.943
2024-11-17 09:47 - INFO - 	 Best PR-AUC: 0.514
2024-11-17 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-17 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.328
2024-11-17 09:47 - INFO - ---------------------------------------------
2024-11-17 09:55 - INFO - ---------------------------------------------
2024-11-17 09:55 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-17 09:55 - INFO - 	 Train Loss: 0.116
2024-11-17 09:55 - INFO - 	 Val. Loss: 0.143
2024-11-17 09:55 - INFO - 	 ROC-AUC: 0.950
2024-11-17 09:55 - INFO - 	 PR-AUC: 0.447
2024-11-17 09:55 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 09:55 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 09:55 - INFO - 	 Best PR-AUC: 0.514
2024-11-17 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-17 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.328
2024-11-17 09:55 - INFO - ---------------------------------------------
2024-11-17 10:02 - INFO - ---------------------------------------------
2024-11-17 10:02 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-17 10:02 - INFO - 	 Train Loss: 0.114
2024-11-17 10:02 - INFO - 	 Val. Loss: 0.141
2024-11-17 10:02 - INFO - 	 ROC-AUC: 0.926
2024-11-17 10:02 - INFO - 	 PR-AUC: 0.448
2024-11-17 10:02 - INFO - 	 Best Val. Loss: 0.115
2024-11-17 10:02 - INFO - 	 Best ROC-AUC: 0.950
2024-11-17 10:02 - INFO - 	 Best PR-AUC: 0.514
2024-11-17 10:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-17 10:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.328
2024-11-17 10:02 - INFO - ---------------------------------------------
