2024-10-30 00:40 - INFO - Fit the preprocessing pipeline
2024-10-30 00:40 - INFO - Training using device: cuda
2024-10-30 00:40 - INFO - Creating generators
2024-10-30 00:40 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 00:40 - INFO - * Model:
2024-10-30 00:40 - INFO - * -----------
2024-10-30 00:40 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 00:40 - INFO - * -----------
2024-10-30 00:48 - INFO - ---------------------------------------------
2024-10-30 00:48 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 00:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82533
2024-10-30 00:48 - INFO - 	 Train Loss: 0.098
2024-10-30 00:48 - INFO - 	 Val. Loss: 0.072
2024-10-30 00:48 - INFO - 	 ROC-AUC: 0.983
2024-10-30 00:48 - INFO - 	 PR-AUC: 0.825
2024-10-30 00:48 - INFO - 	 Best Val. Loss: 0.072
2024-10-30 00:48 - INFO - 	 Best ROC-AUC: 0.983
2024-10-30 00:48 - INFO - 	 Best PR-AUC: 0.825
2024-10-30 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-30 00:48 - INFO - ---------------------------------------------
2024-10-30 00:56 - INFO - ---------------------------------------------
2024-10-30 00:56 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 00:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84063
2024-10-30 00:56 - INFO - 	 Train Loss: 0.080
2024-10-30 00:56 - INFO - 	 Val. Loss: 0.071
2024-10-30 00:56 - INFO - 	 ROC-AUC: 0.984
2024-10-30 00:56 - INFO - 	 PR-AUC: 0.841
2024-10-30 00:56 - INFO - 	 Best Val. Loss: 0.071
2024-10-30 00:56 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 00:56 - INFO - 	 Best PR-AUC: 0.841
2024-10-30 00:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 00:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-30 00:56 - INFO - ---------------------------------------------
2024-10-30 01:04 - INFO - ---------------------------------------------
2024-10-30 01:04 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 01:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84603
2024-10-30 01:04 - INFO - 	 Train Loss: 0.076
2024-10-30 01:04 - INFO - 	 Val. Loss: 0.067
2024-10-30 01:04 - INFO - 	 ROC-AUC: 0.986
2024-10-30 01:04 - INFO - 	 PR-AUC: 0.846
2024-10-30 01:04 - INFO - 	 Best Val. Loss: 0.067
2024-10-30 01:04 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 01:04 - INFO - 	 Best PR-AUC: 0.846
2024-10-30 01:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 01:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-30 01:04 - INFO - ---------------------------------------------
2024-10-30 01:12 - INFO - ---------------------------------------------
2024-10-30 01:12 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 01:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86053
2024-10-30 01:12 - INFO - 	 Train Loss: 0.074
2024-10-30 01:12 - INFO - 	 Val. Loss: 0.065
2024-10-30 01:12 - INFO - 	 ROC-AUC: 0.985
2024-10-30 01:12 - INFO - 	 PR-AUC: 0.861
2024-10-30 01:12 - INFO - 	 Best Val. Loss: 0.065
2024-10-30 01:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 01:12 - INFO - 	 Best PR-AUC: 0.861
2024-10-30 01:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 01:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-30 01:12 - INFO - ---------------------------------------------
2024-10-30 01:20 - INFO - ---------------------------------------------
2024-10-30 01:20 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 01:20 - INFO - 	 Train Loss: 0.072
2024-10-30 01:20 - INFO - 	 Val. Loss: 0.064
2024-10-30 01:20 - INFO - 	 ROC-AUC: 0.986
2024-10-30 01:20 - INFO - 	 PR-AUC: 0.859
2024-10-30 01:20 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 01:20 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 01:20 - INFO - 	 Best PR-AUC: 0.861
2024-10-30 01:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-30 01:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-30 01:20 - INFO - ---------------------------------------------
2024-10-30 01:29 - INFO - ---------------------------------------------
2024-10-30 01:29 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 01:29 - INFO - 	 Train Loss: 0.071
2024-10-30 01:29 - INFO - 	 Val. Loss: 0.066
2024-10-30 01:29 - INFO - 	 ROC-AUC: 0.985
2024-10-30 01:29 - INFO - 	 PR-AUC: 0.860
2024-10-30 01:29 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 01:29 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 01:29 - INFO - 	 Best PR-AUC: 0.861
2024-10-30 01:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-30 01:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-10-30 01:29 - INFO - ---------------------------------------------
2024-10-30 01:37 - INFO - ---------------------------------------------
2024-10-30 01:37 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 01:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86995
2024-10-30 01:37 - INFO - 	 Train Loss: 0.069
2024-10-30 01:37 - INFO - 	 Val. Loss: 0.065
2024-10-30 01:37 - INFO - 	 ROC-AUC: 0.987
2024-10-30 01:37 - INFO - 	 PR-AUC: 0.870
2024-10-30 01:37 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 01:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-30 01:37 - INFO - 	 Best PR-AUC: 0.870
2024-10-30 01:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-30 01:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-30 01:37 - INFO - ---------------------------------------------
2024-10-30 01:45 - INFO - ---------------------------------------------
2024-10-30 01:45 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 01:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8724
2024-10-30 01:45 - INFO - 	 Train Loss: 0.068
2024-10-30 01:45 - INFO - 	 Val. Loss: 0.063
2024-10-30 01:45 - INFO - 	 ROC-AUC: 0.987
2024-10-30 01:45 - INFO - 	 PR-AUC: 0.872
2024-10-30 01:45 - INFO - 	 Best Val. Loss: 0.063
2024-10-30 01:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-30 01:45 - INFO - 	 Best PR-AUC: 0.872
2024-10-30 01:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-30 01:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-30 01:45 - INFO - ---------------------------------------------
2024-10-30 01:53 - INFO - ---------------------------------------------
2024-10-30 01:53 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 01:53 - INFO - 	 Train Loss: 0.067
2024-10-30 01:53 - INFO - 	 Val. Loss: 0.062
2024-10-30 01:53 - INFO - 	 ROC-AUC: 0.986
2024-10-30 01:53 - INFO - 	 PR-AUC: 0.872
2024-10-30 01:53 - INFO - 	 Best Val. Loss: 0.062
2024-10-30 01:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-30 01:53 - INFO - 	 Best PR-AUC: 0.872
2024-10-30 01:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-30 01:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-30 01:53 - INFO - ---------------------------------------------
2024-10-30 02:01 - INFO - ---------------------------------------------
2024-10-30 02:01 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 02:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8757
2024-10-30 02:01 - INFO - 	 Train Loss: 0.067
2024-10-30 02:01 - INFO - 	 Val. Loss: 0.063
2024-10-30 02:01 - INFO - 	 ROC-AUC: 0.987
2024-10-30 02:01 - INFO - 	 PR-AUC: 0.876
2024-10-30 02:01 - INFO - 	 Best Val. Loss: 0.062
2024-10-30 02:01 - INFO - 	 Best ROC-AUC: 0.987
2024-10-30 02:01 - INFO - 	 Best PR-AUC: 0.876
2024-10-30 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-30 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-30 02:01 - INFO - ---------------------------------------------
2024-10-30 02:03 - INFO - Fit the preprocessing pipeline
2024-10-30 02:03 - INFO - Training using device: cuda
2024-10-30 02:03 - INFO - Creating generators
2024-10-30 02:03 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 02:03 - INFO - * Model:
2024-10-30 02:03 - INFO - * -----------
2024-10-30 02:03 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 02:03 - INFO - * -----------
2024-10-30 02:11 - INFO - ---------------------------------------------
2024-10-30 02:11 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 02:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76993
2024-10-30 02:11 - INFO - 	 Train Loss: 0.109
2024-10-30 02:11 - INFO - 	 Val. Loss: 0.081
2024-10-30 02:11 - INFO - 	 ROC-AUC: 0.979
2024-10-30 02:11 - INFO - 	 PR-AUC: 0.770
2024-10-30 02:11 - INFO - 	 Best Val. Loss: 0.081
2024-10-30 02:11 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 02:11 - INFO - 	 Best PR-AUC: 0.770
2024-10-30 02:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 02:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-30 02:11 - INFO - ---------------------------------------------
2024-10-30 02:19 - INFO - ---------------------------------------------
2024-10-30 02:19 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 02:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80214
2024-10-30 02:19 - INFO - 	 Train Loss: 0.081
2024-10-30 02:19 - INFO - 	 Val. Loss: 0.071
2024-10-30 02:19 - INFO - 	 ROC-AUC: 0.981
2024-10-30 02:19 - INFO - 	 PR-AUC: 0.802
2024-10-30 02:19 - INFO - 	 Best Val. Loss: 0.071
2024-10-30 02:19 - INFO - 	 Best ROC-AUC: 0.981
2024-10-30 02:19 - INFO - 	 Best PR-AUC: 0.802
2024-10-30 02:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 02:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-30 02:19 - INFO - ---------------------------------------------
2024-10-30 02:27 - INFO - ---------------------------------------------
2024-10-30 02:27 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 02:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83621
2024-10-30 02:27 - INFO - 	 Train Loss: 0.077
2024-10-30 02:27 - INFO - 	 Val. Loss: 0.065
2024-10-30 02:27 - INFO - 	 ROC-AUC: 0.984
2024-10-30 02:27 - INFO - 	 PR-AUC: 0.836
2024-10-30 02:27 - INFO - 	 Best Val. Loss: 0.065
2024-10-30 02:27 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 02:27 - INFO - 	 Best PR-AUC: 0.836
2024-10-30 02:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 02:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-30 02:27 - INFO - ---------------------------------------------
2024-10-30 02:35 - INFO - ---------------------------------------------
2024-10-30 02:35 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 02:35 - INFO - 	 Train Loss: 0.076
2024-10-30 02:35 - INFO - 	 Val. Loss: 0.070
2024-10-30 02:35 - INFO - 	 ROC-AUC: 0.983
2024-10-30 02:35 - INFO - 	 PR-AUC: 0.820
2024-10-30 02:35 - INFO - 	 Best Val. Loss: 0.065
2024-10-30 02:35 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 02:35 - INFO - 	 Best PR-AUC: 0.836
2024-10-30 02:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 02:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-30 02:35 - INFO - ---------------------------------------------
2024-10-30 02:43 - INFO - ---------------------------------------------
2024-10-30 02:43 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 02:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83962
2024-10-30 02:43 - INFO - 	 Train Loss: 0.072
2024-10-30 02:43 - INFO - 	 Val. Loss: 0.064
2024-10-30 02:43 - INFO - 	 ROC-AUC: 0.984
2024-10-30 02:43 - INFO - 	 PR-AUC: 0.840
2024-10-30 02:43 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 02:43 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 02:43 - INFO - 	 Best PR-AUC: 0.840
2024-10-30 02:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 02:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-30 02:43 - INFO - ---------------------------------------------
2024-10-30 02:51 - INFO - ---------------------------------------------
2024-10-30 02:51 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 02:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84113
2024-10-30 02:51 - INFO - 	 Train Loss: 0.072
2024-10-30 02:51 - INFO - 	 Val. Loss: 0.066
2024-10-30 02:51 - INFO - 	 ROC-AUC: 0.984
2024-10-30 02:51 - INFO - 	 PR-AUC: 0.841
2024-10-30 02:51 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 02:51 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 02:51 - INFO - 	 Best PR-AUC: 0.841
2024-10-30 02:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 02:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-30 02:51 - INFO - ---------------------------------------------
2024-10-30 02:59 - INFO - ---------------------------------------------
2024-10-30 02:59 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 02:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85006
2024-10-30 02:59 - INFO - 	 Train Loss: 0.070
2024-10-30 02:59 - INFO - 	 Val. Loss: 0.064
2024-10-30 02:59 - INFO - 	 ROC-AUC: 0.985
2024-10-30 02:59 - INFO - 	 PR-AUC: 0.850
2024-10-30 02:59 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 02:59 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 02:59 - INFO - 	 Best PR-AUC: 0.850
2024-10-30 02:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 02:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-30 02:59 - INFO - ---------------------------------------------
2024-10-30 03:07 - INFO - ---------------------------------------------
2024-10-30 03:07 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 03:07 - INFO - 	 Train Loss: 0.069
2024-10-30 03:07 - INFO - 	 Val. Loss: 0.065
2024-10-30 03:07 - INFO - 	 ROC-AUC: 0.984
2024-10-30 03:07 - INFO - 	 PR-AUC: 0.843
2024-10-30 03:07 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 03:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 03:07 - INFO - 	 Best PR-AUC: 0.850
2024-10-30 03:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 03:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-30 03:07 - INFO - ---------------------------------------------
2024-10-30 03:15 - INFO - ---------------------------------------------
2024-10-30 03:15 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 03:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85239
2024-10-30 03:15 - INFO - 	 Train Loss: 0.067
2024-10-30 03:15 - INFO - 	 Val. Loss: 0.064
2024-10-30 03:15 - INFO - 	 ROC-AUC: 0.984
2024-10-30 03:15 - INFO - 	 PR-AUC: 0.852
2024-10-30 03:15 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 03:15 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 03:15 - INFO - 	 Best PR-AUC: 0.852
2024-10-30 03:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 03:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-30 03:15 - INFO - ---------------------------------------------
2024-10-30 03:24 - INFO - ---------------------------------------------
2024-10-30 03:24 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 03:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8659
2024-10-30 03:24 - INFO - 	 Train Loss: 0.066
2024-10-30 03:24 - INFO - 	 Val. Loss: 0.058
2024-10-30 03:24 - INFO - 	 ROC-AUC: 0.985
2024-10-30 03:24 - INFO - 	 PR-AUC: 0.866
2024-10-30 03:24 - INFO - 	 Best Val. Loss: 0.058
2024-10-30 03:24 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 03:24 - INFO - 	 Best PR-AUC: 0.866
2024-10-30 03:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 03:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-30 03:24 - INFO - ---------------------------------------------
2024-10-30 03:26 - INFO - Fit the preprocessing pipeline
2024-10-30 03:26 - INFO - Training using device: cuda
2024-10-30 03:26 - INFO - Creating generators
2024-10-30 03:26 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 03:26 - INFO - * Model:
2024-10-30 03:26 - INFO - * -----------
2024-10-30 03:26 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 03:26 - INFO - * -----------
2024-10-30 03:34 - INFO - ---------------------------------------------
2024-10-30 03:34 - INFO - Epoch: 01 | Time: 8m 3s
2024-10-30 03:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76704
2024-10-30 03:34 - INFO - 	 Train Loss: 0.098
2024-10-30 03:34 - INFO - 	 Val. Loss: 0.075
2024-10-30 03:34 - INFO - 	 ROC-AUC: 0.979
2024-10-30 03:34 - INFO - 	 PR-AUC: 0.767
2024-10-30 03:34 - INFO - 	 Best Val. Loss: 0.075
2024-10-30 03:34 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 03:34 - INFO - 	 Best PR-AUC: 0.767
2024-10-30 03:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-30 03:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-10-30 03:34 - INFO - ---------------------------------------------
2024-10-30 03:42 - INFO - ---------------------------------------------
2024-10-30 03:42 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 03:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7963
2024-10-30 03:42 - INFO - 	 Train Loss: 0.072
2024-10-30 03:42 - INFO - 	 Val. Loss: 0.064
2024-10-30 03:42 - INFO - 	 ROC-AUC: 0.981
2024-10-30 03:42 - INFO - 	 PR-AUC: 0.796
2024-10-30 03:42 - INFO - 	 Best Val. Loss: 0.064
2024-10-30 03:42 - INFO - 	 Best ROC-AUC: 0.981
2024-10-30 03:42 - INFO - 	 Best PR-AUC: 0.796
2024-10-30 03:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 03:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-30 03:42 - INFO - ---------------------------------------------
2024-10-30 03:50 - INFO - ---------------------------------------------
2024-10-30 03:50 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 03:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83893
2024-10-30 03:50 - INFO - 	 Train Loss: 0.069
2024-10-30 03:50 - INFO - 	 Val. Loss: 0.058
2024-10-30 03:50 - INFO - 	 ROC-AUC: 0.984
2024-10-30 03:50 - INFO - 	 PR-AUC: 0.839
2024-10-30 03:50 - INFO - 	 Best Val. Loss: 0.058
2024-10-30 03:50 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 03:50 - INFO - 	 Best PR-AUC: 0.839
2024-10-30 03:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 03:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-30 03:50 - INFO - ---------------------------------------------
2024-10-30 03:58 - INFO - ---------------------------------------------
2024-10-30 03:58 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 03:58 - INFO - 	 Train Loss: 0.067
2024-10-30 03:58 - INFO - 	 Val. Loss: 0.061
2024-10-30 03:58 - INFO - 	 ROC-AUC: 0.983
2024-10-30 03:58 - INFO - 	 PR-AUC: 0.822
2024-10-30 03:58 - INFO - 	 Best Val. Loss: 0.058
2024-10-30 03:58 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 03:58 - INFO - 	 Best PR-AUC: 0.839
2024-10-30 03:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 03:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-30 03:58 - INFO - ---------------------------------------------
2024-10-30 04:06 - INFO - ---------------------------------------------
2024-10-30 04:06 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 04:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85356
2024-10-30 04:06 - INFO - 	 Train Loss: 0.063
2024-10-30 04:06 - INFO - 	 Val. Loss: 0.055
2024-10-30 04:06 - INFO - 	 ROC-AUC: 0.984
2024-10-30 04:06 - INFO - 	 PR-AUC: 0.854
2024-10-30 04:06 - INFO - 	 Best Val. Loss: 0.055
2024-10-30 04:06 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 04:06 - INFO - 	 Best PR-AUC: 0.854
2024-10-30 04:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 04:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 04:06 - INFO - ---------------------------------------------
2024-10-30 04:14 - INFO - ---------------------------------------------
2024-10-30 04:14 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 04:14 - INFO - 	 Train Loss: 0.064
2024-10-30 04:14 - INFO - 	 Val. Loss: 0.074
2024-10-30 04:14 - INFO - 	 ROC-AUC: 0.978
2024-10-30 04:14 - INFO - 	 PR-AUC: 0.793
2024-10-30 04:14 - INFO - 	 Best Val. Loss: 0.055
2024-10-30 04:14 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 04:14 - INFO - 	 Best PR-AUC: 0.854
2024-10-30 04:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 04:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 04:14 - INFO - ---------------------------------------------
2024-10-30 04:22 - INFO - ---------------------------------------------
2024-10-30 04:22 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 04:22 - INFO - 	 Train Loss: 0.061
2024-10-30 04:22 - INFO - 	 Val. Loss: 0.056
2024-10-30 04:22 - INFO - 	 ROC-AUC: 0.985
2024-10-30 04:22 - INFO - 	 PR-AUC: 0.847
2024-10-30 04:22 - INFO - 	 Best Val. Loss: 0.055
2024-10-30 04:22 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 04:22 - INFO - 	 Best PR-AUC: 0.854
2024-10-30 04:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 04:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 04:22 - INFO - ---------------------------------------------
2024-10-30 04:30 - INFO - ---------------------------------------------
2024-10-30 04:30 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 04:30 - INFO - 	 Train Loss: 0.061
2024-10-30 04:30 - INFO - 	 Val. Loss: 0.056
2024-10-30 04:30 - INFO - 	 ROC-AUC: 0.985
2024-10-30 04:30 - INFO - 	 PR-AUC: 0.852
2024-10-30 04:30 - INFO - 	 Best Val. Loss: 0.055
2024-10-30 04:30 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 04:30 - INFO - 	 Best PR-AUC: 0.854
2024-10-30 04:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 04:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 04:30 - INFO - ---------------------------------------------
2024-10-30 04:41 - INFO - Fit the preprocessing pipeline
2024-10-30 04:41 - INFO - Training using device: cuda
2024-10-30 04:41 - INFO - Creating generators
2024-10-30 04:41 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 04:41 - INFO - * Model:
2024-10-30 04:41 - INFO - * -----------
2024-10-30 04:41 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 04:41 - INFO - * -----------
2024-10-30 04:49 - INFO - ---------------------------------------------
2024-10-30 04:49 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 04:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76601
2024-10-30 04:49 - INFO - 	 Train Loss: 0.087
2024-10-30 04:49 - INFO - 	 Val. Loss: 0.069
2024-10-30 04:49 - INFO - 	 ROC-AUC: 0.979
2024-10-30 04:49 - INFO - 	 PR-AUC: 0.766
2024-10-30 04:49 - INFO - 	 Best Val. Loss: 0.069
2024-10-30 04:49 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 04:49 - INFO - 	 Best PR-AUC: 0.766
2024-10-30 04:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 04:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-30 04:49 - INFO - ---------------------------------------------
2024-10-30 04:57 - INFO - ---------------------------------------------
2024-10-30 04:57 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 04:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81037
2024-10-30 04:57 - INFO - 	 Train Loss: 0.063
2024-10-30 04:57 - INFO - 	 Val. Loss: 0.056
2024-10-30 04:57 - INFO - 	 ROC-AUC: 0.982
2024-10-30 04:57 - INFO - 	 PR-AUC: 0.810
2024-10-30 04:57 - INFO - 	 Best Val. Loss: 0.056
2024-10-30 04:57 - INFO - 	 Best ROC-AUC: 0.982
2024-10-30 04:57 - INFO - 	 Best PR-AUC: 0.810
2024-10-30 04:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 04:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-30 04:57 - INFO - ---------------------------------------------
2024-10-30 05:05 - INFO - ---------------------------------------------
2024-10-30 05:05 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 05:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83479
2024-10-30 05:05 - INFO - 	 Train Loss: 0.060
2024-10-30 05:05 - INFO - 	 Val. Loss: 0.051
2024-10-30 05:05 - INFO - 	 ROC-AUC: 0.984
2024-10-30 05:05 - INFO - 	 PR-AUC: 0.835
2024-10-30 05:05 - INFO - 	 Best Val. Loss: 0.051
2024-10-30 05:05 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 05:05 - INFO - 	 Best PR-AUC: 0.835
2024-10-30 05:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 05:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-30 05:05 - INFO - ---------------------------------------------
2024-10-30 05:13 - INFO - ---------------------------------------------
2024-10-30 05:13 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 05:13 - INFO - 	 Train Loss: 0.058
2024-10-30 05:13 - INFO - 	 Val. Loss: 0.053
2024-10-30 05:13 - INFO - 	 ROC-AUC: 0.983
2024-10-30 05:13 - INFO - 	 PR-AUC: 0.817
2024-10-30 05:13 - INFO - 	 Best Val. Loss: 0.051
2024-10-30 05:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 05:13 - INFO - 	 Best PR-AUC: 0.835
2024-10-30 05:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 05:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-30 05:13 - INFO - ---------------------------------------------
2024-10-30 05:21 - INFO - ---------------------------------------------
2024-10-30 05:21 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 05:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84124
2024-10-30 05:21 - INFO - 	 Train Loss: 0.055
2024-10-30 05:21 - INFO - 	 Val. Loss: 0.053
2024-10-30 05:21 - INFO - 	 ROC-AUC: 0.982
2024-10-30 05:21 - INFO - 	 PR-AUC: 0.841
2024-10-30 05:21 - INFO - 	 Best Val. Loss: 0.051
2024-10-30 05:21 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 05:21 - INFO - 	 Best PR-AUC: 0.841
2024-10-30 05:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 05:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-30 05:21 - INFO - ---------------------------------------------
2024-10-30 05:29 - INFO - ---------------------------------------------
2024-10-30 05:29 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 05:29 - INFO - 	 Train Loss: 0.055
2024-10-30 05:29 - INFO - 	 Val. Loss: 0.052
2024-10-30 05:29 - INFO - 	 ROC-AUC: 0.983
2024-10-30 05:29 - INFO - 	 PR-AUC: 0.835
2024-10-30 05:29 - INFO - 	 Best Val. Loss: 0.051
2024-10-30 05:29 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 05:29 - INFO - 	 Best PR-AUC: 0.841
2024-10-30 05:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 05:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-30 05:29 - INFO - ---------------------------------------------
2024-10-30 05:37 - INFO - ---------------------------------------------
2024-10-30 05:37 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 05:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8514
2024-10-30 05:37 - INFO - 	 Train Loss: 0.053
2024-10-30 05:37 - INFO - 	 Val. Loss: 0.048
2024-10-30 05:37 - INFO - 	 ROC-AUC: 0.985
2024-10-30 05:37 - INFO - 	 PR-AUC: 0.851
2024-10-30 05:37 - INFO - 	 Best Val. Loss: 0.048
2024-10-30 05:37 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 05:37 - INFO - 	 Best PR-AUC: 0.851
2024-10-30 05:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 05:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-30 05:37 - INFO - ---------------------------------------------
2024-10-30 05:45 - INFO - ---------------------------------------------
2024-10-30 05:45 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 05:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85748
2024-10-30 05:45 - INFO - 	 Train Loss: 0.053
2024-10-30 05:45 - INFO - 	 Val. Loss: 0.048
2024-10-30 05:45 - INFO - 	 ROC-AUC: 0.985
2024-10-30 05:45 - INFO - 	 PR-AUC: 0.857
2024-10-30 05:45 - INFO - 	 Best Val. Loss: 0.048
2024-10-30 05:45 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 05:45 - INFO - 	 Best PR-AUC: 0.857
2024-10-30 05:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 05:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-30 05:45 - INFO - ---------------------------------------------
2024-10-30 05:53 - INFO - ---------------------------------------------
2024-10-30 05:53 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 05:53 - INFO - 	 Train Loss: 0.052
2024-10-30 05:53 - INFO - 	 Val. Loss: 0.046
2024-10-30 05:53 - INFO - 	 ROC-AUC: 0.985
2024-10-30 05:53 - INFO - 	 PR-AUC: 0.857
2024-10-30 05:53 - INFO - 	 Best Val. Loss: 0.046
2024-10-30 05:53 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 05:53 - INFO - 	 Best PR-AUC: 0.857
2024-10-30 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-30 05:53 - INFO - ---------------------------------------------
2024-10-30 06:01 - INFO - ---------------------------------------------
2024-10-30 06:01 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86158
2024-10-30 06:01 - INFO - 	 Train Loss: 0.052
2024-10-30 06:01 - INFO - 	 Val. Loss: 0.045
2024-10-30 06:01 - INFO - 	 ROC-AUC: 0.986
2024-10-30 06:01 - INFO - 	 PR-AUC: 0.862
2024-10-30 06:01 - INFO - 	 Best Val. Loss: 0.045
2024-10-30 06:01 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 06:01 - INFO - 	 Best PR-AUC: 0.862
2024-10-30 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-30 06:01 - INFO - ---------------------------------------------
2024-10-30 06:04 - INFO - Fit the preprocessing pipeline
2024-10-30 06:04 - INFO - Training using device: cuda
2024-10-30 06:04 - INFO - Creating generators
2024-10-30 06:04 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 06:04 - INFO - * Model:
2024-10-30 06:04 - INFO - * -----------
2024-10-30 06:04 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 06:04 - INFO - * -----------
2024-10-30 06:12 - INFO - ---------------------------------------------
2024-10-30 06:12 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 06:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76983
2024-10-30 06:12 - INFO - 	 Train Loss: 0.076
2024-10-30 06:12 - INFO - 	 Val. Loss: 0.062
2024-10-30 06:12 - INFO - 	 ROC-AUC: 0.979
2024-10-30 06:12 - INFO - 	 PR-AUC: 0.770
2024-10-30 06:12 - INFO - 	 Best Val. Loss: 0.062
2024-10-30 06:12 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 06:12 - INFO - 	 Best PR-AUC: 0.770
2024-10-30 06:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 06:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-30 06:12 - INFO - ---------------------------------------------
2024-10-30 06:20 - INFO - ---------------------------------------------
2024-10-30 06:20 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 06:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79778
2024-10-30 06:20 - INFO - 	 Train Loss: 0.053
2024-10-30 06:20 - INFO - 	 Val. Loss: 0.051
2024-10-30 06:20 - INFO - 	 ROC-AUC: 0.981
2024-10-30 06:20 - INFO - 	 PR-AUC: 0.798
2024-10-30 06:20 - INFO - 	 Best Val. Loss: 0.051
2024-10-30 06:20 - INFO - 	 Best ROC-AUC: 0.981
2024-10-30 06:20 - INFO - 	 Best PR-AUC: 0.798
2024-10-30 06:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 06:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.832
2024-10-30 06:20 - INFO - ---------------------------------------------
2024-10-30 06:28 - INFO - ---------------------------------------------
2024-10-30 06:28 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 06:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82993
2024-10-30 06:28 - INFO - 	 Train Loss: 0.051
2024-10-30 06:28 - INFO - 	 Val. Loss: 0.044
2024-10-30 06:28 - INFO - 	 ROC-AUC: 0.983
2024-10-30 06:28 - INFO - 	 PR-AUC: 0.830
2024-10-30 06:28 - INFO - 	 Best Val. Loss: 0.044
2024-10-30 06:28 - INFO - 	 Best ROC-AUC: 0.983
2024-10-30 06:28 - INFO - 	 Best PR-AUC: 0.830
2024-10-30 06:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 06:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-30 06:28 - INFO - ---------------------------------------------
2024-10-30 06:36 - INFO - ---------------------------------------------
2024-10-30 06:36 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 06:36 - INFO - 	 Train Loss: 0.050
2024-10-30 06:36 - INFO - 	 Val. Loss: 0.045
2024-10-30 06:36 - INFO - 	 ROC-AUC: 0.983
2024-10-30 06:36 - INFO - 	 PR-AUC: 0.826
2024-10-30 06:36 - INFO - 	 Best Val. Loss: 0.044
2024-10-30 06:36 - INFO - 	 Best ROC-AUC: 0.983
2024-10-30 06:36 - INFO - 	 Best PR-AUC: 0.830
2024-10-30 06:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 06:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-30 06:36 - INFO - ---------------------------------------------
2024-10-30 06:44 - INFO - ---------------------------------------------
2024-10-30 06:44 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 06:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85069
2024-10-30 06:44 - INFO - 	 Train Loss: 0.047
2024-10-30 06:44 - INFO - 	 Val. Loss: 0.041
2024-10-30 06:44 - INFO - 	 ROC-AUC: 0.984
2024-10-30 06:44 - INFO - 	 PR-AUC: 0.851
2024-10-30 06:44 - INFO - 	 Best Val. Loss: 0.041
2024-10-30 06:44 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 06:44 - INFO - 	 Best PR-AUC: 0.851
2024-10-30 06:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 06:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 06:44 - INFO - ---------------------------------------------
2024-10-30 06:52 - INFO - ---------------------------------------------
2024-10-30 06:52 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 06:52 - INFO - 	 Train Loss: 0.047
2024-10-30 06:52 - INFO - 	 Val. Loss: 0.043
2024-10-30 06:52 - INFO - 	 ROC-AUC: 0.982
2024-10-30 06:52 - INFO - 	 PR-AUC: 0.830
2024-10-30 06:52 - INFO - 	 Best Val. Loss: 0.041
2024-10-30 06:52 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 06:52 - INFO - 	 Best PR-AUC: 0.851
2024-10-30 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 06:52 - INFO - ---------------------------------------------
2024-10-30 07:00 - INFO - ---------------------------------------------
2024-10-30 07:00 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 07:00 - INFO - 	 Train Loss: 0.045
2024-10-30 07:00 - INFO - 	 Val. Loss: 0.040
2024-10-30 07:00 - INFO - 	 ROC-AUC: 0.985
2024-10-30 07:00 - INFO - 	 PR-AUC: 0.850
2024-10-30 07:00 - INFO - 	 Best Val. Loss: 0.040
2024-10-30 07:00 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 07:00 - INFO - 	 Best PR-AUC: 0.851
2024-10-30 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 07:00 - INFO - ---------------------------------------------
2024-10-30 07:08 - INFO - ---------------------------------------------
2024-10-30 07:08 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 07:08 - INFO - 	 Train Loss: 0.045
2024-10-30 07:08 - INFO - 	 Val. Loss: 0.043
2024-10-30 07:08 - INFO - 	 ROC-AUC: 0.984
2024-10-30 07:08 - INFO - 	 PR-AUC: 0.846
2024-10-30 07:08 - INFO - 	 Best Val. Loss: 0.040
2024-10-30 07:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 07:08 - INFO - 	 Best PR-AUC: 0.851
2024-10-30 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-30 07:08 - INFO - ---------------------------------------------
2024-10-30 07:16 - INFO - ---------------------------------------------
2024-10-30 07:16 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 07:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85804
2024-10-30 07:16 - INFO - 	 Train Loss: 0.043
2024-10-30 07:16 - INFO - 	 Val. Loss: 0.039
2024-10-30 07:16 - INFO - 	 ROC-AUC: 0.985
2024-10-30 07:16 - INFO - 	 PR-AUC: 0.858
2024-10-30 07:16 - INFO - 	 Best Val. Loss: 0.039
2024-10-30 07:16 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 07:16 - INFO - 	 Best PR-AUC: 0.858
2024-10-30 07:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 07:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-30 07:16 - INFO - ---------------------------------------------
2024-10-30 07:24 - INFO - ---------------------------------------------
2024-10-30 07:24 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 07:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86311
2024-10-30 07:24 - INFO - 	 Train Loss: 0.043
2024-10-30 07:24 - INFO - 	 Val. Loss: 0.037
2024-10-30 07:24 - INFO - 	 ROC-AUC: 0.985
2024-10-30 07:24 - INFO - 	 PR-AUC: 0.863
2024-10-30 07:24 - INFO - 	 Best Val. Loss: 0.037
2024-10-30 07:24 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 07:24 - INFO - 	 Best PR-AUC: 0.863
2024-10-30 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-30 07:24 - INFO - ---------------------------------------------
2024-10-30 07:26 - INFO - Fit the preprocessing pipeline
2024-10-30 07:26 - INFO - Training using device: cuda
2024-10-30 07:26 - INFO - Creating generators
2024-10-30 07:26 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 07:26 - INFO - * Model:
2024-10-30 07:26 - INFO - * -----------
2024-10-30 07:26 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 07:26 - INFO - * -----------
2024-10-30 07:34 - INFO - ---------------------------------------------
2024-10-30 07:34 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77455
2024-10-30 07:34 - INFO - 	 Train Loss: 0.064
2024-10-30 07:34 - INFO - 	 Val. Loss: 0.055
2024-10-30 07:34 - INFO - 	 ROC-AUC: 0.979
2024-10-30 07:34 - INFO - 	 PR-AUC: 0.775
2024-10-30 07:34 - INFO - 	 Best Val. Loss: 0.055
2024-10-30 07:34 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 07:34 - INFO - 	 Best PR-AUC: 0.775
2024-10-30 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-10-30 07:34 - INFO - ---------------------------------------------
2024-10-30 07:42 - INFO - ---------------------------------------------
2024-10-30 07:42 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 07:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80448
2024-10-30 07:42 - INFO - 	 Train Loss: 0.044
2024-10-30 07:42 - INFO - 	 Val. Loss: 0.043
2024-10-30 07:42 - INFO - 	 ROC-AUC: 0.982
2024-10-30 07:42 - INFO - 	 PR-AUC: 0.804
2024-10-30 07:42 - INFO - 	 Best Val. Loss: 0.043
2024-10-30 07:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-30 07:42 - INFO - 	 Best PR-AUC: 0.804
2024-10-30 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-10-30 07:42 - INFO - ---------------------------------------------
2024-10-30 07:51 - INFO - ---------------------------------------------
2024-10-30 07:51 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 07:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84575
2024-10-30 07:51 - INFO - 	 Train Loss: 0.042
2024-10-30 07:51 - INFO - 	 Val. Loss: 0.036
2024-10-30 07:51 - INFO - 	 ROC-AUC: 0.984
2024-10-30 07:51 - INFO - 	 PR-AUC: 0.846
2024-10-30 07:51 - INFO - 	 Best Val. Loss: 0.036
2024-10-30 07:51 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 07:51 - INFO - 	 Best PR-AUC: 0.846
2024-10-30 07:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 07:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-30 07:51 - INFO - ---------------------------------------------
2024-10-30 07:59 - INFO - ---------------------------------------------
2024-10-30 07:59 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 07:59 - INFO - 	 Train Loss: 0.041
2024-10-30 07:59 - INFO - 	 Val. Loss: 0.037
2024-10-30 07:59 - INFO - 	 ROC-AUC: 0.983
2024-10-30 07:59 - INFO - 	 PR-AUC: 0.826
2024-10-30 07:59 - INFO - 	 Best Val. Loss: 0.036
2024-10-30 07:59 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 07:59 - INFO - 	 Best PR-AUC: 0.846
2024-10-30 07:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 07:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-30 07:59 - INFO - ---------------------------------------------
2024-10-30 08:07 - INFO - ---------------------------------------------
2024-10-30 08:07 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 08:07 - INFO - 	 Train Loss: 0.038
2024-10-30 08:07 - INFO - 	 Val. Loss: 0.038
2024-10-30 08:07 - INFO - 	 ROC-AUC: 0.982
2024-10-30 08:07 - INFO - 	 PR-AUC: 0.831
2024-10-30 08:07 - INFO - 	 Best Val. Loss: 0.036
2024-10-30 08:07 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 08:07 - INFO - 	 Best PR-AUC: 0.846
2024-10-30 08:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 08:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-30 08:07 - INFO - ---------------------------------------------
2024-10-30 08:15 - INFO - ---------------------------------------------
2024-10-30 08:15 - INFO - Epoch: 06 | Time: 8m 3s
2024-10-30 08:15 - INFO - 	 Train Loss: 0.038
2024-10-30 08:15 - INFO - 	 Val. Loss: 0.036
2024-10-30 08:15 - INFO - 	 ROC-AUC: 0.982
2024-10-30 08:15 - INFO - 	 PR-AUC: 0.826
2024-10-30 08:15 - INFO - 	 Best Val. Loss: 0.036
2024-10-30 08:15 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 08:15 - INFO - 	 Best PR-AUC: 0.846
2024-10-30 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-30 08:15 - INFO - ---------------------------------------------
2024-10-30 08:25 - INFO - Fit the preprocessing pipeline
2024-10-30 08:25 - INFO - Training using device: cuda
2024-10-30 08:25 - INFO - Creating generators
2024-10-30 08:25 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 08:25 - INFO - * Model:
2024-10-30 08:25 - INFO - * -----------
2024-10-30 08:25 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 08:25 - INFO - * -----------
2024-10-30 08:33 - INFO - ---------------------------------------------
2024-10-30 08:33 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 08:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76267
2024-10-30 08:33 - INFO - 	 Train Loss: 0.053
2024-10-30 08:33 - INFO - 	 Val. Loss: 0.048
2024-10-30 08:33 - INFO - 	 ROC-AUC: 0.979
2024-10-30 08:33 - INFO - 	 PR-AUC: 0.763
2024-10-30 08:33 - INFO - 	 Best Val. Loss: 0.048
2024-10-30 08:33 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 08:33 - INFO - 	 Best PR-AUC: 0.763
2024-10-30 08:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 08:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-30 08:33 - INFO - ---------------------------------------------
2024-10-30 08:41 - INFO - ---------------------------------------------
2024-10-30 08:41 - INFO - Epoch: 02 | Time: 8m 3s
2024-10-30 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80639
2024-10-30 08:41 - INFO - 	 Train Loss: 0.035
2024-10-30 08:41 - INFO - 	 Val. Loss: 0.037
2024-10-30 08:41 - INFO - 	 ROC-AUC: 0.982
2024-10-30 08:41 - INFO - 	 PR-AUC: 0.806
2024-10-30 08:41 - INFO - 	 Best Val. Loss: 0.037
2024-10-30 08:41 - INFO - 	 Best ROC-AUC: 0.982
2024-10-30 08:41 - INFO - 	 Best PR-AUC: 0.806
2024-10-30 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-30 08:41 - INFO - ---------------------------------------------
2024-10-30 08:49 - INFO - ---------------------------------------------
2024-10-30 08:49 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 08:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83204
2024-10-30 08:49 - INFO - 	 Train Loss: 0.034
2024-10-30 08:49 - INFO - 	 Val. Loss: 0.030
2024-10-30 08:49 - INFO - 	 ROC-AUC: 0.984
2024-10-30 08:49 - INFO - 	 PR-AUC: 0.832
2024-10-30 08:49 - INFO - 	 Best Val. Loss: 0.030
2024-10-30 08:49 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 08:49 - INFO - 	 Best PR-AUC: 0.832
2024-10-30 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-30 08:49 - INFO - ---------------------------------------------
2024-10-30 08:57 - INFO - ---------------------------------------------
2024-10-30 08:57 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 08:57 - INFO - 	 Train Loss: 0.032
2024-10-30 08:57 - INFO - 	 Val. Loss: 0.029
2024-10-30 08:57 - INFO - 	 ROC-AUC: 0.983
2024-10-30 08:57 - INFO - 	 PR-AUC: 0.827
2024-10-30 08:57 - INFO - 	 Best Val. Loss: 0.029
2024-10-30 08:57 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 08:57 - INFO - 	 Best PR-AUC: 0.832
2024-10-30 08:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 08:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-30 08:57 - INFO - ---------------------------------------------
2024-10-30 09:05 - INFO - ---------------------------------------------
2024-10-30 09:05 - INFO - Epoch: 05 | Time: 8m 3s
2024-10-30 09:05 - INFO - 	 Train Loss: 0.030
2024-10-30 09:05 - INFO - 	 Val. Loss: 0.028
2024-10-30 09:05 - INFO - 	 ROC-AUC: 0.983
2024-10-30 09:05 - INFO - 	 PR-AUC: 0.831
2024-10-30 09:05 - INFO - 	 Best Val. Loss: 0.028
2024-10-30 09:05 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 09:05 - INFO - 	 Best PR-AUC: 0.832
2024-10-30 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-30 09:05 - INFO - ---------------------------------------------
2024-10-30 09:13 - INFO - ---------------------------------------------
2024-10-30 09:13 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 09:13 - INFO - 	 Train Loss: 0.030
2024-10-30 09:13 - INFO - 	 Val. Loss: 0.029
2024-10-30 09:13 - INFO - 	 ROC-AUC: 0.981
2024-10-30 09:13 - INFO - 	 PR-AUC: 0.815
2024-10-30 09:13 - INFO - 	 Best Val. Loss: 0.028
2024-10-30 09:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 09:13 - INFO - 	 Best PR-AUC: 0.832
2024-10-30 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-30 09:13 - INFO - ---------------------------------------------
2024-10-30 09:21 - INFO - ---------------------------------------------
2024-10-30 09:21 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 09:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85044
2024-10-30 09:21 - INFO - 	 Train Loss: 0.029
2024-10-30 09:21 - INFO - 	 Val. Loss: 0.027
2024-10-30 09:21 - INFO - 	 ROC-AUC: 0.985
2024-10-30 09:21 - INFO - 	 PR-AUC: 0.850
2024-10-30 09:21 - INFO - 	 Best Val. Loss: 0.027
2024-10-30 09:21 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 09:21 - INFO - 	 Best PR-AUC: 0.850
2024-10-30 09:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 09:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-30 09:21 - INFO - ---------------------------------------------
2024-10-30 09:30 - INFO - ---------------------------------------------
2024-10-30 09:30 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 09:30 - INFO - 	 Train Loss: 0.029
2024-10-30 09:30 - INFO - 	 Val. Loss: 0.028
2024-10-30 09:30 - INFO - 	 ROC-AUC: 0.984
2024-10-30 09:30 - INFO - 	 PR-AUC: 0.841
2024-10-30 09:30 - INFO - 	 Best Val. Loss: 0.027
2024-10-30 09:30 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 09:30 - INFO - 	 Best PR-AUC: 0.850
2024-10-30 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-30 09:30 - INFO - ---------------------------------------------
2024-10-30 09:38 - INFO - ---------------------------------------------
2024-10-30 09:38 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 09:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8533
2024-10-30 09:38 - INFO - 	 Train Loss: 0.028
2024-10-30 09:38 - INFO - 	 Val. Loss: 0.025
2024-10-30 09:38 - INFO - 	 ROC-AUC: 0.984
2024-10-30 09:38 - INFO - 	 PR-AUC: 0.853
2024-10-30 09:38 - INFO - 	 Best Val. Loss: 0.025
2024-10-30 09:38 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 09:38 - INFO - 	 Best PR-AUC: 0.853
2024-10-30 09:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 09:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-30 09:38 - INFO - ---------------------------------------------
2024-10-30 09:46 - INFO - ---------------------------------------------
2024-10-30 09:46 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 09:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86657
2024-10-30 09:46 - INFO - 	 Train Loss: 0.027
2024-10-30 09:46 - INFO - 	 Val. Loss: 0.023
2024-10-30 09:46 - INFO - 	 ROC-AUC: 0.986
2024-10-30 09:46 - INFO - 	 PR-AUC: 0.867
2024-10-30 09:46 - INFO - 	 Best Val. Loss: 0.023
2024-10-30 09:46 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 09:46 - INFO - 	 Best PR-AUC: 0.867
2024-10-30 09:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 09:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-30 09:46 - INFO - ---------------------------------------------
2024-10-30 09:48 - INFO - Fit the preprocessing pipeline
2024-10-30 09:48 - INFO - Training using device: cuda
2024-10-30 09:48 - INFO - Creating generators
2024-10-30 09:48 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 09:48 - INFO - * Model:
2024-10-30 09:48 - INFO - * -----------
2024-10-30 09:48 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 09:48 - INFO - * -----------
2024-10-30 09:56 - INFO - ---------------------------------------------
2024-10-30 09:56 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 09:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76865
2024-10-30 09:56 - INFO - 	 Train Loss: 0.042
2024-10-30 09:56 - INFO - 	 Val. Loss: 0.041
2024-10-30 09:56 - INFO - 	 ROC-AUC: 0.979
2024-10-30 09:56 - INFO - 	 PR-AUC: 0.769
2024-10-30 09:56 - INFO - 	 Best Val. Loss: 0.041
2024-10-30 09:56 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 09:56 - INFO - 	 Best PR-AUC: 0.769
2024-10-30 09:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 09:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-30 09:56 - INFO - ---------------------------------------------
2024-10-30 10:04 - INFO - ---------------------------------------------
2024-10-30 10:04 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 10:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80072
2024-10-30 10:04 - INFO - 	 Train Loss: 0.026
2024-10-30 10:04 - INFO - 	 Val. Loss: 0.030
2024-10-30 10:04 - INFO - 	 ROC-AUC: 0.981
2024-10-30 10:04 - INFO - 	 PR-AUC: 0.801
2024-10-30 10:04 - INFO - 	 Best Val. Loss: 0.030
2024-10-30 10:04 - INFO - 	 Best ROC-AUC: 0.981
2024-10-30 10:04 - INFO - 	 Best PR-AUC: 0.801
2024-10-30 10:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 10:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-30 10:04 - INFO - ---------------------------------------------
2024-10-30 10:12 - INFO - ---------------------------------------------
2024-10-30 10:12 - INFO - Epoch: 03 | Time: 8m 3s
2024-10-30 10:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82977
2024-10-30 10:12 - INFO - 	 Train Loss: 0.025
2024-10-30 10:12 - INFO - 	 Val. Loss: 0.023
2024-10-30 10:12 - INFO - 	 ROC-AUC: 0.983
2024-10-30 10:12 - INFO - 	 PR-AUC: 0.830
2024-10-30 10:12 - INFO - 	 Best Val. Loss: 0.023
2024-10-30 10:12 - INFO - 	 Best ROC-AUC: 0.983
2024-10-30 10:12 - INFO - 	 Best PR-AUC: 0.830
2024-10-30 10:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 10:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-30 10:12 - INFO - ---------------------------------------------
2024-10-30 10:20 - INFO - ---------------------------------------------
2024-10-30 10:20 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 10:20 - INFO - 	 Train Loss: 0.023
2024-10-30 10:20 - INFO - 	 Val. Loss: 0.022
2024-10-30 10:20 - INFO - 	 ROC-AUC: 0.983
2024-10-30 10:20 - INFO - 	 PR-AUC: 0.823
2024-10-30 10:20 - INFO - 	 Best Val. Loss: 0.022
2024-10-30 10:20 - INFO - 	 Best ROC-AUC: 0.983
2024-10-30 10:20 - INFO - 	 Best PR-AUC: 0.830
2024-10-30 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-30 10:20 - INFO - ---------------------------------------------
2024-10-30 10:28 - INFO - ---------------------------------------------
2024-10-30 10:28 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 10:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84396
2024-10-30 10:28 - INFO - 	 Train Loss: 0.021
2024-10-30 10:28 - INFO - 	 Val. Loss: 0.019
2024-10-30 10:28 - INFO - 	 ROC-AUC: 0.984
2024-10-30 10:28 - INFO - 	 PR-AUC: 0.844
2024-10-30 10:28 - INFO - 	 Best Val. Loss: 0.019
2024-10-30 10:28 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 10:28 - INFO - 	 Best PR-AUC: 0.844
2024-10-30 10:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 10:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-30 10:28 - INFO - ---------------------------------------------
2024-10-30 10:36 - INFO - ---------------------------------------------
2024-10-30 10:36 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 10:36 - INFO - 	 Train Loss: 0.021
2024-10-30 10:36 - INFO - 	 Val. Loss: 0.021
2024-10-30 10:36 - INFO - 	 ROC-AUC: 0.982
2024-10-30 10:36 - INFO - 	 PR-AUC: 0.825
2024-10-30 10:36 - INFO - 	 Best Val. Loss: 0.019
2024-10-30 10:36 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 10:36 - INFO - 	 Best PR-AUC: 0.844
2024-10-30 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-30 10:36 - INFO - ---------------------------------------------
2024-10-30 10:44 - INFO - ---------------------------------------------
2024-10-30 10:44 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 10:44 - INFO - 	 Train Loss: 0.021
2024-10-30 10:44 - INFO - 	 Val. Loss: 0.020
2024-10-30 10:44 - INFO - 	 ROC-AUC: 0.985
2024-10-30 10:44 - INFO - 	 PR-AUC: 0.842
2024-10-30 10:44 - INFO - 	 Best Val. Loss: 0.019
2024-10-30 10:44 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 10:44 - INFO - 	 Best PR-AUC: 0.844
2024-10-30 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-30 10:44 - INFO - ---------------------------------------------
2024-10-30 10:52 - INFO - ---------------------------------------------
2024-10-30 10:52 - INFO - Epoch: 08 | Time: 8m 3s
2024-10-30 10:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84681
2024-10-30 10:52 - INFO - 	 Train Loss: 0.021
2024-10-30 10:52 - INFO - 	 Val. Loss: 0.019
2024-10-30 10:52 - INFO - 	 ROC-AUC: 0.984
2024-10-30 10:52 - INFO - 	 PR-AUC: 0.847
2024-10-30 10:52 - INFO - 	 Best Val. Loss: 0.019
2024-10-30 10:52 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 10:52 - INFO - 	 Best PR-AUC: 0.847
2024-10-30 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-30 10:52 - INFO - ---------------------------------------------
2024-10-30 11:00 - INFO - ---------------------------------------------
2024-10-30 11:00 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 11:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85488
2024-10-30 11:00 - INFO - 	 Train Loss: 0.020
2024-10-30 11:00 - INFO - 	 Val. Loss: 0.017
2024-10-30 11:00 - INFO - 	 ROC-AUC: 0.984
2024-10-30 11:00 - INFO - 	 PR-AUC: 0.855
2024-10-30 11:00 - INFO - 	 Best Val. Loss: 0.017
2024-10-30 11:00 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 11:00 - INFO - 	 Best PR-AUC: 0.855
2024-10-30 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-30 11:00 - INFO - ---------------------------------------------
2024-10-30 11:08 - INFO - ---------------------------------------------
2024-10-30 11:08 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 11:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85874
2024-10-30 11:08 - INFO - 	 Train Loss: 0.019
2024-10-30 11:08 - INFO - 	 Val. Loss: 0.017
2024-10-30 11:08 - INFO - 	 ROC-AUC: 0.985
2024-10-30 11:08 - INFO - 	 PR-AUC: 0.859
2024-10-30 11:08 - INFO - 	 Best Val. Loss: 0.017
2024-10-30 11:08 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 11:08 - INFO - 	 Best PR-AUC: 0.859
2024-10-30 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-30 11:08 - INFO - ---------------------------------------------
2024-10-30 11:11 - INFO - Fit the preprocessing pipeline
2024-10-30 11:11 - INFO - Training using device: cuda
2024-10-30 11:11 - INFO - Creating generators
2024-10-30 11:11 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 11:11 - INFO - * Model:
2024-10-30 11:11 - INFO - * -----------
2024-10-30 11:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 11:11 - INFO - * -----------
2024-10-30 11:19 - INFO - ---------------------------------------------
2024-10-30 11:19 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 11:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77043
2024-10-30 11:19 - INFO - 	 Train Loss: 0.031
2024-10-30 11:19 - INFO - 	 Val. Loss: 0.035
2024-10-30 11:19 - INFO - 	 ROC-AUC: 0.979
2024-10-30 11:19 - INFO - 	 PR-AUC: 0.770
2024-10-30 11:19 - INFO - 	 Best Val. Loss: 0.035
2024-10-30 11:19 - INFO - 	 Best ROC-AUC: 0.979
2024-10-30 11:19 - INFO - 	 Best PR-AUC: 0.770
2024-10-30 11:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-30 11:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-10-30 11:19 - INFO - ---------------------------------------------
2024-10-30 11:27 - INFO - ---------------------------------------------
2024-10-30 11:27 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 11:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80127
2024-10-30 11:27 - INFO - 	 Train Loss: 0.017
2024-10-30 11:27 - INFO - 	 Val. Loss: 0.023
2024-10-30 11:27 - INFO - 	 ROC-AUC: 0.981
2024-10-30 11:27 - INFO - 	 PR-AUC: 0.801
2024-10-30 11:27 - INFO - 	 Best Val. Loss: 0.023
2024-10-30 11:27 - INFO - 	 Best ROC-AUC: 0.981
2024-10-30 11:27 - INFO - 	 Best PR-AUC: 0.801
2024-10-30 11:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-30 11:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-30 11:27 - INFO - ---------------------------------------------
2024-10-30 11:35 - INFO - ---------------------------------------------
2024-10-30 11:35 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 11:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83458
2024-10-30 11:35 - INFO - 	 Train Loss: 0.016
2024-10-30 11:35 - INFO - 	 Val. Loss: 0.016
2024-10-30 11:35 - INFO - 	 ROC-AUC: 0.984
2024-10-30 11:35 - INFO - 	 PR-AUC: 0.835
2024-10-30 11:35 - INFO - 	 Best Val. Loss: 0.016
2024-10-30 11:35 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 11:35 - INFO - 	 Best PR-AUC: 0.835
2024-10-30 11:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 11:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-30 11:35 - INFO - ---------------------------------------------
2024-10-30 11:43 - INFO - ---------------------------------------------
2024-10-30 11:43 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 11:43 - INFO - 	 Train Loss: 0.015
2024-10-30 11:43 - INFO - 	 Val. Loss: 0.014
2024-10-30 11:43 - INFO - 	 ROC-AUC: 0.982
2024-10-30 11:43 - INFO - 	 PR-AUC: 0.812
2024-10-30 11:43 - INFO - 	 Best Val. Loss: 0.014
2024-10-30 11:43 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 11:43 - INFO - 	 Best PR-AUC: 0.835
2024-10-30 11:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 11:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-30 11:43 - INFO - ---------------------------------------------
2024-10-30 11:51 - INFO - ---------------------------------------------
2024-10-30 11:51 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 11:51 - INFO - 	 Train Loss: 0.013
2024-10-30 11:51 - INFO - 	 Val. Loss: 0.012
2024-10-30 11:51 - INFO - 	 ROC-AUC: 0.983
2024-10-30 11:51 - INFO - 	 PR-AUC: 0.833
2024-10-30 11:51 - INFO - 	 Best Val. Loss: 0.012
2024-10-30 11:51 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 11:51 - INFO - 	 Best PR-AUC: 0.835
2024-10-30 11:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 11:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-30 11:51 - INFO - ---------------------------------------------
2024-10-30 11:59 - INFO - ---------------------------------------------
2024-10-30 11:59 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 11:59 - INFO - 	 Train Loss: 0.013
2024-10-30 11:59 - INFO - 	 Val. Loss: 0.013
2024-10-30 11:59 - INFO - 	 ROC-AUC: 0.981
2024-10-30 11:59 - INFO - 	 PR-AUC: 0.821
2024-10-30 11:59 - INFO - 	 Best Val. Loss: 0.012
2024-10-30 11:59 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 11:59 - INFO - 	 Best PR-AUC: 0.835
2024-10-30 11:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 11:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-30 11:59 - INFO - ---------------------------------------------
2024-10-30 12:07 - INFO - ---------------------------------------------
2024-10-30 12:07 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 12:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8424
2024-10-30 12:07 - INFO - 	 Train Loss: 0.012
2024-10-30 12:07 - INFO - 	 Val. Loss: 0.012
2024-10-30 12:07 - INFO - 	 ROC-AUC: 0.985
2024-10-30 12:07 - INFO - 	 PR-AUC: 0.842
2024-10-30 12:07 - INFO - 	 Best Val. Loss: 0.012
2024-10-30 12:07 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 12:07 - INFO - 	 Best PR-AUC: 0.842
2024-10-30 12:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 12:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-30 12:07 - INFO - ---------------------------------------------
2024-10-30 12:15 - INFO - ---------------------------------------------
2024-10-30 12:15 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 12:15 - INFO - 	 Train Loss: 0.013
2024-10-30 12:15 - INFO - 	 Val. Loss: 0.011
2024-10-30 12:15 - INFO - 	 ROC-AUC: 0.984
2024-10-30 12:15 - INFO - 	 PR-AUC: 0.842
2024-10-30 12:15 - INFO - 	 Best Val. Loss: 0.011
2024-10-30 12:15 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 12:15 - INFO - 	 Best PR-AUC: 0.842
2024-10-30 12:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 12:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-30 12:15 - INFO - ---------------------------------------------
2024-10-30 12:23 - INFO - ---------------------------------------------
2024-10-30 12:23 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 12:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86073
2024-10-30 12:23 - INFO - 	 Train Loss: 0.011
2024-10-30 12:23 - INFO - 	 Val. Loss: 0.009
2024-10-30 12:23 - INFO - 	 ROC-AUC: 0.985
2024-10-30 12:23 - INFO - 	 PR-AUC: 0.861
2024-10-30 12:23 - INFO - 	 Best Val. Loss: 0.009
2024-10-30 12:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 12:23 - INFO - 	 Best PR-AUC: 0.861
2024-10-30 12:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 12:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-30 12:23 - INFO - ---------------------------------------------
2024-10-30 12:31 - INFO - ---------------------------------------------
2024-10-30 12:31 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 12:31 - INFO - 	 Train Loss: 0.011
2024-10-30 12:31 - INFO - 	 Val. Loss: 0.010
2024-10-30 12:31 - INFO - 	 ROC-AUC: 0.985
2024-10-30 12:31 - INFO - 	 PR-AUC: 0.858
2024-10-30 12:31 - INFO - 	 Best Val. Loss: 0.009
2024-10-30 12:31 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 12:31 - INFO - 	 Best PR-AUC: 0.861
2024-10-30 12:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-30 12:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-30 12:31 - INFO - ---------------------------------------------
2024-10-30 12:34 - INFO - Fit the preprocessing pipeline
2024-10-30 12:34 - INFO - Training using device: cuda
2024-10-30 12:34 - INFO - Creating generators
2024-10-30 12:34 - INFO - The model has 2,246,929 trainable parameters
2024-10-30 12:34 - INFO - * Model:
2024-10-30 12:34 - INFO - * -----------
2024-10-30 12:34 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-30 12:34 - INFO - * -----------
2024-10-30 12:42 - INFO - ---------------------------------------------
2024-10-30 12:42 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-30 12:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81563
2024-10-30 12:42 - INFO - 	 Train Loss: 0.019
2024-10-30 12:42 - INFO - 	 Val. Loss: 0.028
2024-10-30 12:42 - INFO - 	 ROC-AUC: 0.982
2024-10-30 12:42 - INFO - 	 PR-AUC: 0.816
2024-10-30 12:42 - INFO - 	 Best Val. Loss: 0.028
2024-10-30 12:42 - INFO - 	 Best ROC-AUC: 0.982
2024-10-30 12:42 - INFO - 	 Best PR-AUC: 0.816
2024-10-30 12:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 12:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-30 12:42 - INFO - ---------------------------------------------
2024-10-30 12:50 - INFO - ---------------------------------------------
2024-10-30 12:50 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-30 12:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8386
2024-10-30 12:50 - INFO - 	 Train Loss: 0.008
2024-10-30 12:50 - INFO - 	 Val. Loss: 0.017
2024-10-30 12:50 - INFO - 	 ROC-AUC: 0.984
2024-10-30 12:50 - INFO - 	 PR-AUC: 0.839
2024-10-30 12:50 - INFO - 	 Best Val. Loss: 0.017
2024-10-30 12:50 - INFO - 	 Best ROC-AUC: 0.984
2024-10-30 12:50 - INFO - 	 Best PR-AUC: 0.839
2024-10-30 12:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-30 12:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-30 12:50 - INFO - ---------------------------------------------
2024-10-30 12:58 - INFO - ---------------------------------------------
2024-10-30 12:58 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-30 12:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85249
2024-10-30 12:58 - INFO - 	 Train Loss: 0.007
2024-10-30 12:58 - INFO - 	 Val. Loss: 0.009
2024-10-30 12:58 - INFO - 	 ROC-AUC: 0.985
2024-10-30 12:58 - INFO - 	 PR-AUC: 0.852
2024-10-30 12:58 - INFO - 	 Best Val. Loss: 0.009
2024-10-30 12:58 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 12:58 - INFO - 	 Best PR-AUC: 0.852
2024-10-30 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-30 12:58 - INFO - ---------------------------------------------
2024-10-30 13:06 - INFO - ---------------------------------------------
2024-10-30 13:06 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-30 13:06 - INFO - 	 Train Loss: 0.006
2024-10-30 13:06 - INFO - 	 Val. Loss: 0.007
2024-10-30 13:06 - INFO - 	 ROC-AUC: 0.985
2024-10-30 13:06 - INFO - 	 PR-AUC: 0.848
2024-10-30 13:06 - INFO - 	 Best Val. Loss: 0.007
2024-10-30 13:06 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 13:06 - INFO - 	 Best PR-AUC: 0.852
2024-10-30 13:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 13:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-30 13:06 - INFO - ---------------------------------------------
2024-10-30 13:14 - INFO - ---------------------------------------------
2024-10-30 13:14 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-30 13:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86727
2024-10-30 13:14 - INFO - 	 Train Loss: 0.004
2024-10-30 13:14 - INFO - 	 Val. Loss: 0.004
2024-10-30 13:14 - INFO - 	 ROC-AUC: 0.985
2024-10-30 13:14 - INFO - 	 PR-AUC: 0.867
2024-10-30 13:14 - INFO - 	 Best Val. Loss: 0.004
2024-10-30 13:14 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 13:14 - INFO - 	 Best PR-AUC: 0.867
2024-10-30 13:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-30 13:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-30 13:14 - INFO - ---------------------------------------------
2024-10-30 13:22 - INFO - ---------------------------------------------
2024-10-30 13:22 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-30 13:22 - INFO - 	 Train Loss: 0.004
2024-10-30 13:22 - INFO - 	 Val. Loss: 0.004
2024-10-30 13:22 - INFO - 	 ROC-AUC: 0.985
2024-10-30 13:22 - INFO - 	 PR-AUC: 0.867
2024-10-30 13:22 - INFO - 	 Best Val. Loss: 0.004
2024-10-30 13:22 - INFO - 	 Best ROC-AUC: 0.985
2024-10-30 13:22 - INFO - 	 Best PR-AUC: 0.867
2024-10-30 13:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 13:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-10-30 13:22 - INFO - ---------------------------------------------
2024-10-30 13:30 - INFO - ---------------------------------------------
2024-10-30 13:30 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-30 13:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86955
2024-10-30 13:30 - INFO - 	 Train Loss: 0.004
2024-10-30 13:30 - INFO - 	 Val. Loss: 0.005
2024-10-30 13:30 - INFO - 	 ROC-AUC: 0.986
2024-10-30 13:30 - INFO - 	 PR-AUC: 0.870
2024-10-30 13:30 - INFO - 	 Best Val. Loss: 0.004
2024-10-30 13:30 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 13:30 - INFO - 	 Best PR-AUC: 0.870
2024-10-30 13:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 13:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-30 13:30 - INFO - ---------------------------------------------
2024-10-30 13:38 - INFO - ---------------------------------------------
2024-10-30 13:38 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-30 13:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87843
2024-10-30 13:38 - INFO - 	 Train Loss: 0.005
2024-10-30 13:38 - INFO - 	 Val. Loss: 0.003
2024-10-30 13:38 - INFO - 	 ROC-AUC: 0.986
2024-10-30 13:38 - INFO - 	 PR-AUC: 0.878
2024-10-30 13:38 - INFO - 	 Best Val. Loss: 0.003
2024-10-30 13:38 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 13:38 - INFO - 	 Best PR-AUC: 0.878
2024-10-30 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-30 13:38 - INFO - ---------------------------------------------
2024-10-30 13:46 - INFO - ---------------------------------------------
2024-10-30 13:46 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-30 13:46 - INFO - 	 Train Loss: 0.004
2024-10-30 13:46 - INFO - 	 Val. Loss: 0.002
2024-10-30 13:46 - INFO - 	 ROC-AUC: 0.986
2024-10-30 13:46 - INFO - 	 PR-AUC: 0.869
2024-10-30 13:46 - INFO - 	 Best Val. Loss: 0.002
2024-10-30 13:46 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 13:46 - INFO - 	 Best PR-AUC: 0.878
2024-10-30 13:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 13:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-30 13:46 - INFO - ---------------------------------------------
2024-10-30 13:54 - INFO - ---------------------------------------------
2024-10-30 13:54 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-30 13:54 - INFO - 	 Train Loss: 0.003
2024-10-30 13:54 - INFO - 	 Val. Loss: 0.003
2024-10-30 13:54 - INFO - 	 ROC-AUC: 0.985
2024-10-30 13:54 - INFO - 	 PR-AUC: 0.869
2024-10-30 13:54 - INFO - 	 Best Val. Loss: 0.002
2024-10-30 13:54 - INFO - 	 Best ROC-AUC: 0.986
2024-10-30 13:54 - INFO - 	 Best PR-AUC: 0.878
2024-10-30 13:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-30 13:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-30 13:54 - INFO - ---------------------------------------------
