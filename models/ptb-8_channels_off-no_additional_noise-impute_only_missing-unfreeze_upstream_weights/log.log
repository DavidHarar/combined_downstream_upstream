2024-11-29 15:16 - INFO - Fit the preprocessing pipeline
2024-11-29 15:16 - INFO - Training using device: cuda
2024-11-29 15:16 - INFO - Creating generators
2024-11-29 15:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 15:16 - INFO - * Model:
2024-11-29 15:16 - INFO - * -----------
2024-11-29 15:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 15:16 - INFO - * -----------
2024-11-29 15:24 - INFO - ---------------------------------------------
2024-11-29 15:24 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 15:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81744
2024-11-29 15:24 - INFO - 	 Train Loss: 0.096
2024-11-29 15:24 - INFO - 	 Val. Loss: 0.074
2024-11-29 15:24 - INFO - 	 ROC-AUC: 0.983
2024-11-29 15:24 - INFO - 	 PR-AUC: 0.817
2024-11-29 15:24 - INFO - 	 Best Val. Loss: 0.074
2024-11-29 15:24 - INFO - 	 Best ROC-AUC: 0.983
2024-11-29 15:24 - INFO - 	 Best PR-AUC: 0.817
2024-11-29 15:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 15:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-29 15:24 - INFO - ---------------------------------------------
2024-11-29 15:32 - INFO - ---------------------------------------------
2024-11-29 15:32 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 15:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84658
2024-11-29 15:32 - INFO - 	 Train Loss: 0.080
2024-11-29 15:32 - INFO - 	 Val. Loss: 0.069
2024-11-29 15:32 - INFO - 	 ROC-AUC: 0.985
2024-11-29 15:32 - INFO - 	 PR-AUC: 0.847
2024-11-29 15:32 - INFO - 	 Best Val. Loss: 0.069
2024-11-29 15:32 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 15:32 - INFO - 	 Best PR-AUC: 0.847
2024-11-29 15:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 15:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-29 15:32 - INFO - ---------------------------------------------
2024-11-29 15:40 - INFO - ---------------------------------------------
2024-11-29 15:40 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 15:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84942
2024-11-29 15:40 - INFO - 	 Train Loss: 0.076
2024-11-29 15:40 - INFO - 	 Val. Loss: 0.068
2024-11-29 15:40 - INFO - 	 ROC-AUC: 0.985
2024-11-29 15:40 - INFO - 	 PR-AUC: 0.849
2024-11-29 15:40 - INFO - 	 Best Val. Loss: 0.068
2024-11-29 15:40 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 15:40 - INFO - 	 Best PR-AUC: 0.849
2024-11-29 15:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 15:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-29 15:40 - INFO - ---------------------------------------------
2024-11-29 15:48 - INFO - ---------------------------------------------
2024-11-29 15:48 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 15:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84964
2024-11-29 15:48 - INFO - 	 Train Loss: 0.075
2024-11-29 15:48 - INFO - 	 Val. Loss: 0.066
2024-11-29 15:48 - INFO - 	 ROC-AUC: 0.986
2024-11-29 15:48 - INFO - 	 PR-AUC: 0.850
2024-11-29 15:48 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 15:48 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 15:48 - INFO - 	 Best PR-AUC: 0.850
2024-11-29 15:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 15:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-29 15:48 - INFO - ---------------------------------------------
2024-11-29 15:56 - INFO - ---------------------------------------------
2024-11-29 15:56 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 15:56 - INFO - 	 Train Loss: 0.072
2024-11-29 15:56 - INFO - 	 Val. Loss: 0.068
2024-11-29 15:56 - INFO - 	 ROC-AUC: 0.985
2024-11-29 15:56 - INFO - 	 PR-AUC: 0.839
2024-11-29 15:56 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 15:56 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 15:56 - INFO - 	 Best PR-AUC: 0.850
2024-11-29 15:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 15:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-29 15:56 - INFO - ---------------------------------------------
2024-11-29 16:04 - INFO - ---------------------------------------------
2024-11-29 16:04 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 16:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85533
2024-11-29 16:04 - INFO - 	 Train Loss: 0.071
2024-11-29 16:04 - INFO - 	 Val. Loss: 0.065
2024-11-29 16:04 - INFO - 	 ROC-AUC: 0.986
2024-11-29 16:04 - INFO - 	 PR-AUC: 0.855
2024-11-29 16:04 - INFO - 	 Best Val. Loss: 0.065
2024-11-29 16:04 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 16:04 - INFO - 	 Best PR-AUC: 0.855
2024-11-29 16:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 16:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-29 16:04 - INFO - ---------------------------------------------
2024-11-29 16:13 - INFO - ---------------------------------------------
2024-11-29 16:13 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 16:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86553
2024-11-29 16:13 - INFO - 	 Train Loss: 0.070
2024-11-29 16:13 - INFO - 	 Val. Loss: 0.063
2024-11-29 16:13 - INFO - 	 ROC-AUC: 0.987
2024-11-29 16:13 - INFO - 	 PR-AUC: 0.866
2024-11-29 16:13 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 16:13 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 16:13 - INFO - 	 Best PR-AUC: 0.866
2024-11-29 16:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 16:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-11-29 16:13 - INFO - ---------------------------------------------
2024-11-29 16:21 - INFO - ---------------------------------------------
2024-11-29 16:21 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 16:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87978
2024-11-29 16:21 - INFO - 	 Train Loss: 0.069
2024-11-29 16:21 - INFO - 	 Val. Loss: 0.060
2024-11-29 16:21 - INFO - 	 ROC-AUC: 0.988
2024-11-29 16:21 - INFO - 	 PR-AUC: 0.880
2024-11-29 16:21 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 16:21 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 16:21 - INFO - 	 Best PR-AUC: 0.880
2024-11-29 16:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 16:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-29 16:21 - INFO - ---------------------------------------------
2024-11-29 16:29 - INFO - ---------------------------------------------
2024-11-29 16:29 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 16:29 - INFO - 	 Train Loss: 0.067
2024-11-29 16:29 - INFO - 	 Val. Loss: 0.061
2024-11-29 16:29 - INFO - 	 ROC-AUC: 0.987
2024-11-29 16:29 - INFO - 	 PR-AUC: 0.877
2024-11-29 16:29 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 16:29 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 16:29 - INFO - 	 Best PR-AUC: 0.880
2024-11-29 16:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 16:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-29 16:29 - INFO - ---------------------------------------------
2024-11-29 16:37 - INFO - ---------------------------------------------
2024-11-29 16:37 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 16:37 - INFO - 	 Train Loss: 0.067
2024-11-29 16:37 - INFO - 	 Val. Loss: 0.060
2024-11-29 16:37 - INFO - 	 ROC-AUC: 0.988
2024-11-29 16:37 - INFO - 	 PR-AUC: 0.879
2024-11-29 16:37 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 16:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 16:37 - INFO - 	 Best PR-AUC: 0.880
2024-11-29 16:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 16:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-29 16:37 - INFO - ---------------------------------------------
2024-11-29 16:39 - INFO - Fit the preprocessing pipeline
2024-11-29 16:39 - INFO - Training using device: cuda
2024-11-29 16:39 - INFO - Creating generators
2024-11-29 16:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 16:39 - INFO - * Model:
2024-11-29 16:39 - INFO - * -----------
2024-11-29 16:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 16:39 - INFO - * -----------
2024-11-29 16:47 - INFO - ---------------------------------------------
2024-11-29 16:47 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 16:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83814
2024-11-29 16:47 - INFO - 	 Train Loss: 0.097
2024-11-29 16:47 - INFO - 	 Val. Loss: 0.071
2024-11-29 16:47 - INFO - 	 ROC-AUC: 0.984
2024-11-29 16:47 - INFO - 	 PR-AUC: 0.838
2024-11-29 16:47 - INFO - 	 Best Val. Loss: 0.071
2024-11-29 16:47 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 16:47 - INFO - 	 Best PR-AUC: 0.838
2024-11-29 16:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-29 16:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-29 16:47 - INFO - ---------------------------------------------
2024-11-29 16:55 - INFO - ---------------------------------------------
2024-11-29 16:55 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 16:55 - INFO - 	 Train Loss: 0.082
2024-11-29 16:55 - INFO - 	 Val. Loss: 0.071
2024-11-29 16:55 - INFO - 	 ROC-AUC: 0.984
2024-11-29 16:55 - INFO - 	 PR-AUC: 0.835
2024-11-29 16:55 - INFO - 	 Best Val. Loss: 0.071
2024-11-29 16:55 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 16:55 - INFO - 	 Best PR-AUC: 0.838
2024-11-29 16:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 16:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-29 16:55 - INFO - ---------------------------------------------
2024-11-29 17:03 - INFO - ---------------------------------------------
2024-11-29 17:03 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 17:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86076
2024-11-29 17:03 - INFO - 	 Train Loss: 0.076
2024-11-29 17:03 - INFO - 	 Val. Loss: 0.066
2024-11-29 17:03 - INFO - 	 ROC-AUC: 0.985
2024-11-29 17:03 - INFO - 	 PR-AUC: 0.861
2024-11-29 17:03 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 17:03 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 17:03 - INFO - 	 Best PR-AUC: 0.861
2024-11-29 17:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 17:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-29 17:03 - INFO - ---------------------------------------------
2024-11-29 17:11 - INFO - ---------------------------------------------
2024-11-29 17:11 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 17:11 - INFO - 	 Train Loss: 0.074
2024-11-29 17:11 - INFO - 	 Val. Loss: 0.066
2024-11-29 17:11 - INFO - 	 ROC-AUC: 0.986
2024-11-29 17:11 - INFO - 	 PR-AUC: 0.857
2024-11-29 17:11 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 17:11 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 17:11 - INFO - 	 Best PR-AUC: 0.861
2024-11-29 17:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 17:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-29 17:11 - INFO - ---------------------------------------------
2024-11-29 17:19 - INFO - ---------------------------------------------
2024-11-29 17:19 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 17:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86574
2024-11-29 17:19 - INFO - 	 Train Loss: 0.072
2024-11-29 17:19 - INFO - 	 Val. Loss: 0.063
2024-11-29 17:19 - INFO - 	 ROC-AUC: 0.987
2024-11-29 17:19 - INFO - 	 PR-AUC: 0.866
2024-11-29 17:19 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 17:19 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 17:19 - INFO - 	 Best PR-AUC: 0.866
2024-11-29 17:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 17:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-29 17:19 - INFO - ---------------------------------------------
2024-11-29 17:27 - INFO - ---------------------------------------------
2024-11-29 17:27 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 17:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86767
2024-11-29 17:27 - INFO - 	 Train Loss: 0.070
2024-11-29 17:27 - INFO - 	 Val. Loss: 0.066
2024-11-29 17:27 - INFO - 	 ROC-AUC: 0.985
2024-11-29 17:27 - INFO - 	 PR-AUC: 0.868
2024-11-29 17:27 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 17:27 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 17:27 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 17:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 17:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-29 17:27 - INFO - ---------------------------------------------
2024-11-29 17:35 - INFO - ---------------------------------------------
2024-11-29 17:35 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 17:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86978
2024-11-29 17:35 - INFO - 	 Train Loss: 0.070
2024-11-29 17:35 - INFO - 	 Val. Loss: 0.063
2024-11-29 17:35 - INFO - 	 ROC-AUC: 0.986
2024-11-29 17:35 - INFO - 	 PR-AUC: 0.870
2024-11-29 17:35 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 17:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 17:35 - INFO - 	 Best PR-AUC: 0.870
2024-11-29 17:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 17:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-29 17:35 - INFO - ---------------------------------------------
2024-11-29 17:43 - INFO - ---------------------------------------------
2024-11-29 17:43 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87096
2024-11-29 17:43 - INFO - 	 Train Loss: 0.069
2024-11-29 17:43 - INFO - 	 Val. Loss: 0.063
2024-11-29 17:43 - INFO - 	 ROC-AUC: 0.987
2024-11-29 17:43 - INFO - 	 PR-AUC: 0.871
2024-11-29 17:43 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 17:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 17:43 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-11-29 17:43 - INFO - ---------------------------------------------
2024-11-29 17:51 - INFO - ---------------------------------------------
2024-11-29 17:51 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87912
2024-11-29 17:51 - INFO - 	 Train Loss: 0.067
2024-11-29 17:51 - INFO - 	 Val. Loss: 0.061
2024-11-29 17:51 - INFO - 	 ROC-AUC: 0.987
2024-11-29 17:51 - INFO - 	 PR-AUC: 0.879
2024-11-29 17:51 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 17:51 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 17:51 - INFO - 	 Best PR-AUC: 0.879
2024-11-29 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-29 17:51 - INFO - ---------------------------------------------
2024-11-29 17:59 - INFO - ---------------------------------------------
2024-11-29 17:59 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 17:59 - INFO - 	 Train Loss: 0.067
2024-11-29 17:59 - INFO - 	 Val. Loss: 0.063
2024-11-29 17:59 - INFO - 	 ROC-AUC: 0.987
2024-11-29 17:59 - INFO - 	 PR-AUC: 0.868
2024-11-29 17:59 - INFO - 	 Best Val. Loss: 0.061
2024-11-29 17:59 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 17:59 - INFO - 	 Best PR-AUC: 0.879
2024-11-29 17:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 17:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.875
2024-11-29 17:59 - INFO - ---------------------------------------------
2024-11-29 18:02 - INFO - Fit the preprocessing pipeline
2024-11-29 18:02 - INFO - Training using device: cuda
2024-11-29 18:02 - INFO - Creating generators
2024-11-29 18:02 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 18:02 - INFO - * Model:
2024-11-29 18:02 - INFO - * -----------
2024-11-29 18:02 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 18:02 - INFO - * -----------
2024-11-29 18:10 - INFO - ---------------------------------------------
2024-11-29 18:10 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 18:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79916
2024-11-29 18:10 - INFO - 	 Train Loss: 0.097
2024-11-29 18:10 - INFO - 	 Val. Loss: 0.080
2024-11-29 18:10 - INFO - 	 ROC-AUC: 0.980
2024-11-29 18:10 - INFO - 	 PR-AUC: 0.799
2024-11-29 18:10 - INFO - 	 Best Val. Loss: 0.080
2024-11-29 18:10 - INFO - 	 Best ROC-AUC: 0.980
2024-11-29 18:10 - INFO - 	 Best PR-AUC: 0.799
2024-11-29 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-29 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-11-29 18:10 - INFO - ---------------------------------------------
2024-11-29 18:18 - INFO - ---------------------------------------------
2024-11-29 18:18 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84923
2024-11-29 18:18 - INFO - 	 Train Loss: 0.080
2024-11-29 18:18 - INFO - 	 Val. Loss: 0.071
2024-11-29 18:18 - INFO - 	 ROC-AUC: 0.985
2024-11-29 18:18 - INFO - 	 PR-AUC: 0.849
2024-11-29 18:18 - INFO - 	 Best Val. Loss: 0.071
2024-11-29 18:18 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 18:18 - INFO - 	 Best PR-AUC: 0.849
2024-11-29 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-29 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-29 18:18 - INFO - ---------------------------------------------
2024-11-29 18:26 - INFO - ---------------------------------------------
2024-11-29 18:26 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 18:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85334
2024-11-29 18:26 - INFO - 	 Train Loss: 0.076
2024-11-29 18:26 - INFO - 	 Val. Loss: 0.067
2024-11-29 18:26 - INFO - 	 ROC-AUC: 0.986
2024-11-29 18:26 - INFO - 	 PR-AUC: 0.853
2024-11-29 18:26 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 18:26 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 18:26 - INFO - 	 Best PR-AUC: 0.853
2024-11-29 18:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 18:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-29 18:26 - INFO - ---------------------------------------------
2024-11-29 18:34 - INFO - ---------------------------------------------
2024-11-29 18:34 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-29 18:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86176
2024-11-29 18:34 - INFO - 	 Train Loss: 0.074
2024-11-29 18:34 - INFO - 	 Val. Loss: 0.069
2024-11-29 18:34 - INFO - 	 ROC-AUC: 0.986
2024-11-29 18:34 - INFO - 	 PR-AUC: 0.862
2024-11-29 18:34 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 18:34 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 18:34 - INFO - 	 Best PR-AUC: 0.862
2024-11-29 18:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-29 18:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-29 18:34 - INFO - ---------------------------------------------
2024-11-29 18:42 - INFO - ---------------------------------------------
2024-11-29 18:42 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 18:42 - INFO - 	 Train Loss: 0.072
2024-11-29 18:42 - INFO - 	 Val. Loss: 0.066
2024-11-29 18:42 - INFO - 	 ROC-AUC: 0.985
2024-11-29 18:42 - INFO - 	 PR-AUC: 0.854
2024-11-29 18:42 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 18:42 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 18:42 - INFO - 	 Best PR-AUC: 0.862
2024-11-29 18:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-29 18:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-29 18:42 - INFO - ---------------------------------------------
2024-11-29 18:50 - INFO - ---------------------------------------------
2024-11-29 18:50 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-29 18:50 - INFO - 	 Train Loss: 0.070
2024-11-29 18:50 - INFO - 	 Val. Loss: 0.070
2024-11-29 18:50 - INFO - 	 ROC-AUC: 0.986
2024-11-29 18:50 - INFO - 	 PR-AUC: 0.854
2024-11-29 18:50 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 18:50 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 18:50 - INFO - 	 Best PR-AUC: 0.862
2024-11-29 18:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-29 18:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-29 18:50 - INFO - ---------------------------------------------
2024-11-29 18:58 - INFO - ---------------------------------------------
2024-11-29 18:58 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-29 18:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86322
2024-11-29 18:58 - INFO - 	 Train Loss: 0.069
2024-11-29 18:58 - INFO - 	 Val. Loss: 0.064
2024-11-29 18:58 - INFO - 	 ROC-AUC: 0.987
2024-11-29 18:58 - INFO - 	 PR-AUC: 0.863
2024-11-29 18:58 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 18:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 18:58 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 18:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 18:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-11-29 18:58 - INFO - ---------------------------------------------
2024-11-29 19:06 - INFO - ---------------------------------------------
2024-11-29 19:06 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-29 19:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8652
2024-11-29 19:06 - INFO - 	 Train Loss: 0.069
2024-11-29 19:06 - INFO - 	 Val. Loss: 0.064
2024-11-29 19:06 - INFO - 	 ROC-AUC: 0.986
2024-11-29 19:06 - INFO - 	 PR-AUC: 0.865
2024-11-29 19:06 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 19:06 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 19:06 - INFO - 	 Best PR-AUC: 0.865
2024-11-29 19:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 19:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-29 19:06 - INFO - ---------------------------------------------
2024-11-29 19:14 - INFO - ---------------------------------------------
2024-11-29 19:14 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-29 19:14 - INFO - 	 Train Loss: 0.068
2024-11-29 19:14 - INFO - 	 Val. Loss: 0.062
2024-11-29 19:14 - INFO - 	 ROC-AUC: 0.987
2024-11-29 19:14 - INFO - 	 PR-AUC: 0.865
2024-11-29 19:14 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 19:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 19:14 - INFO - 	 Best PR-AUC: 0.865
2024-11-29 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-29 19:14 - INFO - ---------------------------------------------
2024-11-29 19:22 - INFO - ---------------------------------------------
2024-11-29 19:22 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 19:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8789
2024-11-29 19:22 - INFO - 	 Train Loss: 0.068
2024-11-29 19:22 - INFO - 	 Val. Loss: 0.060
2024-11-29 19:22 - INFO - 	 ROC-AUC: 0.988
2024-11-29 19:22 - INFO - 	 PR-AUC: 0.879
2024-11-29 19:22 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 19:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 19:22 - INFO - 	 Best PR-AUC: 0.879
2024-11-29 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-29 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-11-29 19:22 - INFO - ---------------------------------------------
2024-11-29 19:24 - INFO - Fit the preprocessing pipeline
2024-11-29 19:24 - INFO - Training using device: cuda
2024-11-29 19:24 - INFO - Creating generators
2024-11-29 19:24 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 19:24 - INFO - * Model:
2024-11-29 19:24 - INFO - * -----------
2024-11-29 19:24 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 19:24 - INFO - * -----------
2024-11-29 19:32 - INFO - ---------------------------------------------
2024-11-29 19:32 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 19:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82199
2024-11-29 19:32 - INFO - 	 Train Loss: 0.096
2024-11-29 19:32 - INFO - 	 Val. Loss: 0.074
2024-11-29 19:32 - INFO - 	 ROC-AUC: 0.983
2024-11-29 19:32 - INFO - 	 PR-AUC: 0.822
2024-11-29 19:32 - INFO - 	 Best Val. Loss: 0.074
2024-11-29 19:32 - INFO - 	 Best ROC-AUC: 0.983
2024-11-29 19:32 - INFO - 	 Best PR-AUC: 0.822
2024-11-29 19:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-29 19:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-11-29 19:32 - INFO - ---------------------------------------------
2024-11-29 19:40 - INFO - ---------------------------------------------
2024-11-29 19:40 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-29 19:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8497
2024-11-29 19:40 - INFO - 	 Train Loss: 0.080
2024-11-29 19:40 - INFO - 	 Val. Loss: 0.067
2024-11-29 19:40 - INFO - 	 ROC-AUC: 0.986
2024-11-29 19:40 - INFO - 	 PR-AUC: 0.850
2024-11-29 19:40 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 19:40 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 19:40 - INFO - 	 Best PR-AUC: 0.850
2024-11-29 19:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 19:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-29 19:40 - INFO - ---------------------------------------------
2024-11-29 19:48 - INFO - ---------------------------------------------
2024-11-29 19:48 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 19:48 - INFO - 	 Train Loss: 0.076
2024-11-29 19:48 - INFO - 	 Val. Loss: 0.070
2024-11-29 19:48 - INFO - 	 ROC-AUC: 0.984
2024-11-29 19:48 - INFO - 	 PR-AUC: 0.842
2024-11-29 19:48 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 19:48 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 19:48 - INFO - 	 Best PR-AUC: 0.850
2024-11-29 19:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 19:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-29 19:48 - INFO - ---------------------------------------------
2024-11-29 19:56 - INFO - ---------------------------------------------
2024-11-29 19:56 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-29 19:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85434
2024-11-29 19:56 - INFO - 	 Train Loss: 0.075
2024-11-29 19:56 - INFO - 	 Val. Loss: 0.068
2024-11-29 19:56 - INFO - 	 ROC-AUC: 0.985
2024-11-29 19:56 - INFO - 	 PR-AUC: 0.854
2024-11-29 19:56 - INFO - 	 Best Val. Loss: 0.067
2024-11-29 19:56 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 19:56 - INFO - 	 Best PR-AUC: 0.854
2024-11-29 19:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 19:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-29 19:56 - INFO - ---------------------------------------------
2024-11-29 20:04 - INFO - ---------------------------------------------
2024-11-29 20:04 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87144
2024-11-29 20:04 - INFO - 	 Train Loss: 0.072
2024-11-29 20:04 - INFO - 	 Val. Loss: 0.063
2024-11-29 20:04 - INFO - 	 ROC-AUC: 0.986
2024-11-29 20:04 - INFO - 	 PR-AUC: 0.871
2024-11-29 20:04 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 20:04 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 20:04 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-29 20:04 - INFO - ---------------------------------------------
2024-11-29 20:13 - INFO - ---------------------------------------------
2024-11-29 20:13 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 20:13 - INFO - 	 Train Loss: 0.071
2024-11-29 20:13 - INFO - 	 Val. Loss: 0.067
2024-11-29 20:13 - INFO - 	 ROC-AUC: 0.985
2024-11-29 20:13 - INFO - 	 PR-AUC: 0.850
2024-11-29 20:13 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 20:13 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 20:13 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 20:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 20:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-29 20:13 - INFO - ---------------------------------------------
2024-11-29 20:21 - INFO - ---------------------------------------------
2024-11-29 20:21 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 20:21 - INFO - 	 Train Loss: 0.070
2024-11-29 20:21 - INFO - 	 Val. Loss: 0.062
2024-11-29 20:21 - INFO - 	 ROC-AUC: 0.987
2024-11-29 20:21 - INFO - 	 PR-AUC: 0.871
2024-11-29 20:21 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 20:21 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 20:21 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 20:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 20:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-29 20:21 - INFO - ---------------------------------------------
2024-11-29 20:29 - INFO - ---------------------------------------------
2024-11-29 20:29 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 20:29 - INFO - 	 Train Loss: 0.068
2024-11-29 20:29 - INFO - 	 Val. Loss: 0.066
2024-11-29 20:29 - INFO - 	 ROC-AUC: 0.986
2024-11-29 20:29 - INFO - 	 PR-AUC: 0.867
2024-11-29 20:29 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 20:29 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 20:29 - INFO - 	 Best PR-AUC: 0.871
2024-11-29 20:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 20:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-29 20:29 - INFO - ---------------------------------------------
2024-11-29 20:37 - INFO - ---------------------------------------------
2024-11-29 20:37 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 20:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88299
2024-11-29 20:37 - INFO - 	 Train Loss: 0.068
2024-11-29 20:37 - INFO - 	 Val. Loss: 0.060
2024-11-29 20:37 - INFO - 	 ROC-AUC: 0.988
2024-11-29 20:37 - INFO - 	 PR-AUC: 0.883
2024-11-29 20:37 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 20:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 20:37 - INFO - 	 Best PR-AUC: 0.883
2024-11-29 20:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 20:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 20:37 - INFO - ---------------------------------------------
2024-11-29 20:45 - INFO - ---------------------------------------------
2024-11-29 20:45 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-29 20:45 - INFO - 	 Train Loss: 0.068
2024-11-29 20:45 - INFO - 	 Val. Loss: 0.061
2024-11-29 20:45 - INFO - 	 ROC-AUC: 0.987
2024-11-29 20:45 - INFO - 	 PR-AUC: 0.871
2024-11-29 20:45 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 20:45 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 20:45 - INFO - 	 Best PR-AUC: 0.883
2024-11-29 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-29 20:45 - INFO - ---------------------------------------------
2024-11-29 20:47 - INFO - Fit the preprocessing pipeline
2024-11-29 20:47 - INFO - Training using device: cuda
2024-11-29 20:47 - INFO - Creating generators
2024-11-29 20:47 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 20:47 - INFO - * Model:
2024-11-29 20:47 - INFO - * -----------
2024-11-29 20:47 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 20:47 - INFO - * -----------
2024-11-29 20:55 - INFO - ---------------------------------------------
2024-11-29 20:55 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 20:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83795
2024-11-29 20:55 - INFO - 	 Train Loss: 0.096
2024-11-29 20:55 - INFO - 	 Val. Loss: 0.072
2024-11-29 20:55 - INFO - 	 ROC-AUC: 0.983
2024-11-29 20:55 - INFO - 	 PR-AUC: 0.838
2024-11-29 20:55 - INFO - 	 Best Val. Loss: 0.072
2024-11-29 20:55 - INFO - 	 Best ROC-AUC: 0.983
2024-11-29 20:55 - INFO - 	 Best PR-AUC: 0.838
2024-11-29 20:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 20:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-29 20:55 - INFO - ---------------------------------------------
2024-11-29 21:03 - INFO - ---------------------------------------------
2024-11-29 21:03 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 21:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83956
2024-11-29 21:03 - INFO - 	 Train Loss: 0.080
2024-11-29 21:03 - INFO - 	 Val. Loss: 0.070
2024-11-29 21:03 - INFO - 	 ROC-AUC: 0.985
2024-11-29 21:03 - INFO - 	 PR-AUC: 0.840
2024-11-29 21:03 - INFO - 	 Best Val. Loss: 0.070
2024-11-29 21:03 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 21:03 - INFO - 	 Best PR-AUC: 0.840
2024-11-29 21:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 21:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-29 21:03 - INFO - ---------------------------------------------
2024-11-29 21:11 - INFO - ---------------------------------------------
2024-11-29 21:11 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-29 21:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86286
2024-11-29 21:11 - INFO - 	 Train Loss: 0.076
2024-11-29 21:11 - INFO - 	 Val. Loss: 0.066
2024-11-29 21:11 - INFO - 	 ROC-AUC: 0.985
2024-11-29 21:11 - INFO - 	 PR-AUC: 0.863
2024-11-29 21:11 - INFO - 	 Best Val. Loss: 0.066
2024-11-29 21:11 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 21:11 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 21:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 21:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-29 21:11 - INFO - ---------------------------------------------
2024-11-29 21:19 - INFO - ---------------------------------------------
2024-11-29 21:19 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-29 21:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86324
2024-11-29 21:19 - INFO - 	 Train Loss: 0.074
2024-11-29 21:19 - INFO - 	 Val. Loss: 0.065
2024-11-29 21:19 - INFO - 	 ROC-AUC: 0.985
2024-11-29 21:19 - INFO - 	 PR-AUC: 0.863
2024-11-29 21:19 - INFO - 	 Best Val. Loss: 0.065
2024-11-29 21:19 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 21:19 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 21:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 21:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-29 21:19 - INFO - ---------------------------------------------
2024-11-29 21:27 - INFO - ---------------------------------------------
2024-11-29 21:27 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 21:27 - INFO - 	 Train Loss: 0.072
2024-11-29 21:27 - INFO - 	 Val. Loss: 0.066
2024-11-29 21:27 - INFO - 	 ROC-AUC: 0.986
2024-11-29 21:27 - INFO - 	 PR-AUC: 0.856
2024-11-29 21:27 - INFO - 	 Best Val. Loss: 0.065
2024-11-29 21:27 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 21:27 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 21:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 21:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-29 21:27 - INFO - ---------------------------------------------
2024-11-29 21:35 - INFO - ---------------------------------------------
2024-11-29 21:35 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 21:35 - INFO - 	 Train Loss: 0.071
2024-11-29 21:35 - INFO - 	 Val. Loss: 0.067
2024-11-29 21:35 - INFO - 	 ROC-AUC: 0.985
2024-11-29 21:35 - INFO - 	 PR-AUC: 0.851
2024-11-29 21:35 - INFO - 	 Best Val. Loss: 0.065
2024-11-29 21:35 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 21:35 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 21:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 21:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-29 21:35 - INFO - ---------------------------------------------
2024-11-29 21:43 - INFO - ---------------------------------------------
2024-11-29 21:43 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 21:43 - INFO - 	 Train Loss: 0.070
2024-11-29 21:43 - INFO - 	 Val. Loss: 0.064
2024-11-29 21:43 - INFO - 	 ROC-AUC: 0.985
2024-11-29 21:43 - INFO - 	 PR-AUC: 0.856
2024-11-29 21:43 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 21:43 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 21:43 - INFO - 	 Best PR-AUC: 0.863
2024-11-29 21:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 21:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-29 21:43 - INFO - ---------------------------------------------
2024-11-29 21:51 - INFO - ---------------------------------------------
2024-11-29 21:51 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 21:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86823
2024-11-29 21:51 - INFO - 	 Train Loss: 0.069
2024-11-29 21:51 - INFO - 	 Val. Loss: 0.066
2024-11-29 21:51 - INFO - 	 ROC-AUC: 0.986
2024-11-29 21:51 - INFO - 	 PR-AUC: 0.868
2024-11-29 21:51 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 21:51 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 21:51 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-29 21:51 - INFO - ---------------------------------------------
2024-11-29 21:59 - INFO - ---------------------------------------------
2024-11-29 21:59 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-29 21:59 - INFO - 	 Train Loss: 0.069
2024-11-29 21:59 - INFO - 	 Val. Loss: 0.065
2024-11-29 21:59 - INFO - 	 ROC-AUC: 0.986
2024-11-29 21:59 - INFO - 	 PR-AUC: 0.861
2024-11-29 21:59 - INFO - 	 Best Val. Loss: 0.064
2024-11-29 21:59 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 21:59 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 21:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 21:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-29 21:59 - INFO - ---------------------------------------------
2024-11-29 22:07 - INFO - ---------------------------------------------
2024-11-29 22:07 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 22:07 - INFO - 	 Train Loss: 0.067
2024-11-29 22:07 - INFO - 	 Val. Loss: 0.063
2024-11-29 22:07 - INFO - 	 ROC-AUC: 0.985
2024-11-29 22:07 - INFO - 	 PR-AUC: 0.863
2024-11-29 22:07 - INFO - 	 Best Val. Loss: 0.063
2024-11-29 22:07 - INFO - 	 Best ROC-AUC: 0.986
2024-11-29 22:07 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 22:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 22:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-29 22:07 - INFO - ---------------------------------------------
2024-11-29 22:10 - INFO - Fit the preprocessing pipeline
2024-11-29 22:10 - INFO - Training using device: cuda
2024-11-29 22:10 - INFO - Creating generators
2024-11-29 22:10 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 22:10 - INFO - * Model:
2024-11-29 22:10 - INFO - * -----------
2024-11-29 22:10 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 22:10 - INFO - * -----------
2024-11-29 22:18 - INFO - ---------------------------------------------
2024-11-29 22:18 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-29 22:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82334
2024-11-29 22:18 - INFO - 	 Train Loss: 0.096
2024-11-29 22:18 - INFO - 	 Val. Loss: 0.073
2024-11-29 22:18 - INFO - 	 ROC-AUC: 0.984
2024-11-29 22:18 - INFO - 	 PR-AUC: 0.823
2024-11-29 22:18 - INFO - 	 Best Val. Loss: 0.073
2024-11-29 22:18 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 22:18 - INFO - 	 Best PR-AUC: 0.823
2024-11-29 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-29 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-11-29 22:18 - INFO - ---------------------------------------------
2024-11-29 22:26 - INFO - ---------------------------------------------
2024-11-29 22:26 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 22:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84738
2024-11-29 22:26 - INFO - 	 Train Loss: 0.082
2024-11-29 22:26 - INFO - 	 Val. Loss: 0.070
2024-11-29 22:26 - INFO - 	 ROC-AUC: 0.985
2024-11-29 22:26 - INFO - 	 PR-AUC: 0.847
2024-11-29 22:26 - INFO - 	 Best Val. Loss: 0.070
2024-11-29 22:26 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 22:26 - INFO - 	 Best PR-AUC: 0.847
2024-11-29 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-29 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-11-29 22:26 - INFO - ---------------------------------------------
2024-11-29 22:34 - INFO - ---------------------------------------------
2024-11-29 22:34 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 22:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85593
2024-11-29 22:34 - INFO - 	 Train Loss: 0.076
2024-11-29 22:34 - INFO - 	 Val. Loss: 0.069
2024-11-29 22:34 - INFO - 	 ROC-AUC: 0.987
2024-11-29 22:34 - INFO - 	 PR-AUC: 0.856
2024-11-29 22:34 - INFO - 	 Best Val. Loss: 0.069
2024-11-29 22:34 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 22:34 - INFO - 	 Best PR-AUC: 0.856
2024-11-29 22:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 22:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-29 22:34 - INFO - ---------------------------------------------
2024-11-29 22:42 - INFO - ---------------------------------------------
2024-11-29 22:42 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-29 22:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86774
2024-11-29 22:42 - INFO - 	 Train Loss: 0.074
2024-11-29 22:42 - INFO - 	 Val. Loss: 0.062
2024-11-29 22:42 - INFO - 	 ROC-AUC: 0.987
2024-11-29 22:42 - INFO - 	 PR-AUC: 0.868
2024-11-29 22:42 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 22:42 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 22:42 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 22:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 22:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-29 22:42 - INFO - ---------------------------------------------
2024-11-29 22:50 - INFO - ---------------------------------------------
2024-11-29 22:50 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-29 22:50 - INFO - 	 Train Loss: 0.072
2024-11-29 22:50 - INFO - 	 Val. Loss: 0.065
2024-11-29 22:50 - INFO - 	 ROC-AUC: 0.986
2024-11-29 22:50 - INFO - 	 PR-AUC: 0.859
2024-11-29 22:50 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 22:50 - INFO - 	 Best ROC-AUC: 0.987
2024-11-29 22:50 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 22:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-29 22:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-29 22:50 - INFO - ---------------------------------------------
2024-11-29 22:58 - INFO - ---------------------------------------------
2024-11-29 22:58 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-29 22:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8684
2024-11-29 22:58 - INFO - 	 Train Loss: 0.072
2024-11-29 22:58 - INFO - 	 Val. Loss: 0.062
2024-11-29 22:58 - INFO - 	 ROC-AUC: 0.988
2024-11-29 22:58 - INFO - 	 PR-AUC: 0.868
2024-11-29 22:58 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 22:58 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 22:58 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 22:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 22:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-29 22:58 - INFO - ---------------------------------------------
2024-11-29 23:06 - INFO - ---------------------------------------------
2024-11-29 23:06 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-29 23:06 - INFO - 	 Train Loss: 0.070
2024-11-29 23:06 - INFO - 	 Val. Loss: 0.062
2024-11-29 23:06 - INFO - 	 ROC-AUC: 0.987
2024-11-29 23:06 - INFO - 	 PR-AUC: 0.865
2024-11-29 23:06 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 23:06 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 23:06 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 23:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 23:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-29 23:06 - INFO - ---------------------------------------------
2024-11-29 23:14 - INFO - ---------------------------------------------
2024-11-29 23:14 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-29 23:14 - INFO - 	 Train Loss: 0.069
2024-11-29 23:14 - INFO - 	 Val. Loss: 0.062
2024-11-29 23:14 - INFO - 	 ROC-AUC: 0.988
2024-11-29 23:14 - INFO - 	 PR-AUC: 0.867
2024-11-29 23:14 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 23:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 23:14 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-29 23:14 - INFO - ---------------------------------------------
2024-11-29 23:22 - INFO - ---------------------------------------------
2024-11-29 23:22 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-29 23:22 - INFO - 	 Train Loss: 0.068
2024-11-29 23:22 - INFO - 	 Val. Loss: 0.063
2024-11-29 23:22 - INFO - 	 ROC-AUC: 0.986
2024-11-29 23:22 - INFO - 	 PR-AUC: 0.868
2024-11-29 23:22 - INFO - 	 Best Val. Loss: 0.062
2024-11-29 23:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 23:22 - INFO - 	 Best PR-AUC: 0.868
2024-11-29 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-29 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-11-29 23:22 - INFO - ---------------------------------------------
2024-11-29 23:30 - INFO - ---------------------------------------------
2024-11-29 23:30 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-29 23:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87646
2024-11-29 23:30 - INFO - 	 Train Loss: 0.066
2024-11-29 23:30 - INFO - 	 Val. Loss: 0.060
2024-11-29 23:30 - INFO - 	 ROC-AUC: 0.988
2024-11-29 23:30 - INFO - 	 PR-AUC: 0.876
2024-11-29 23:30 - INFO - 	 Best Val. Loss: 0.060
2024-11-29 23:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-29 23:30 - INFO - 	 Best PR-AUC: 0.876
2024-11-29 23:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-29 23:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-29 23:30 - INFO - ---------------------------------------------
2024-11-29 23:32 - INFO - Fit the preprocessing pipeline
2024-11-29 23:32 - INFO - Training using device: cuda
2024-11-29 23:32 - INFO - Creating generators
2024-11-29 23:32 - INFO - The model has 2,246,929 trainable parameters
2024-11-29 23:32 - INFO - * Model:
2024-11-29 23:32 - INFO - * -----------
2024-11-29 23:32 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-29 23:32 - INFO - * -----------
2024-11-29 23:41 - INFO - ---------------------------------------------
2024-11-29 23:41 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-29 23:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82584
2024-11-29 23:41 - INFO - 	 Train Loss: 0.096
2024-11-29 23:41 - INFO - 	 Val. Loss: 0.073
2024-11-29 23:41 - INFO - 	 ROC-AUC: 0.982
2024-11-29 23:41 - INFO - 	 PR-AUC: 0.826
2024-11-29 23:41 - INFO - 	 Best Val. Loss: 0.073
2024-11-29 23:41 - INFO - 	 Best ROC-AUC: 0.982
2024-11-29 23:41 - INFO - 	 Best PR-AUC: 0.826
2024-11-29 23:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-29 23:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-29 23:41 - INFO - ---------------------------------------------
2024-11-29 23:49 - INFO - ---------------------------------------------
2024-11-29 23:49 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-29 23:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84319
2024-11-29 23:49 - INFO - 	 Train Loss: 0.081
2024-11-29 23:49 - INFO - 	 Val. Loss: 0.069
2024-11-29 23:49 - INFO - 	 ROC-AUC: 0.984
2024-11-29 23:49 - INFO - 	 PR-AUC: 0.843
2024-11-29 23:49 - INFO - 	 Best Val. Loss: 0.069
2024-11-29 23:49 - INFO - 	 Best ROC-AUC: 0.984
2024-11-29 23:49 - INFO - 	 Best PR-AUC: 0.843
2024-11-29 23:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 23:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-29 23:49 - INFO - ---------------------------------------------
2024-11-29 23:57 - INFO - ---------------------------------------------
2024-11-29 23:57 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-29 23:57 - INFO - 	 Train Loss: 0.076
2024-11-29 23:57 - INFO - 	 Val. Loss: 0.071
2024-11-29 23:57 - INFO - 	 ROC-AUC: 0.985
2024-11-29 23:57 - INFO - 	 PR-AUC: 0.842
2024-11-29 23:57 - INFO - 	 Best Val. Loss: 0.069
2024-11-29 23:57 - INFO - 	 Best ROC-AUC: 0.985
2024-11-29 23:57 - INFO - 	 Best PR-AUC: 0.843
2024-11-29 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-29 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-29 23:57 - INFO - ---------------------------------------------
2024-11-30 00:05 - INFO - ---------------------------------------------
2024-11-30 00:05 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-30 00:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85443
2024-11-30 00:05 - INFO - 	 Train Loss: 0.074
2024-11-30 00:05 - INFO - 	 Val. Loss: 0.066
2024-11-30 00:05 - INFO - 	 ROC-AUC: 0.986
2024-11-30 00:05 - INFO - 	 PR-AUC: 0.854
2024-11-30 00:05 - INFO - 	 Best Val. Loss: 0.066
2024-11-30 00:05 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 00:05 - INFO - 	 Best PR-AUC: 0.854
2024-11-30 00:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 00:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-30 00:05 - INFO - ---------------------------------------------
2024-11-30 00:13 - INFO - ---------------------------------------------
2024-11-30 00:13 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-30 00:13 - INFO - 	 Train Loss: 0.072
2024-11-30 00:13 - INFO - 	 Val. Loss: 0.065
2024-11-30 00:13 - INFO - 	 ROC-AUC: 0.986
2024-11-30 00:13 - INFO - 	 PR-AUC: 0.854
2024-11-30 00:13 - INFO - 	 Best Val. Loss: 0.065
2024-11-30 00:13 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 00:13 - INFO - 	 Best PR-AUC: 0.854
2024-11-30 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-30 00:13 - INFO - ---------------------------------------------
2024-11-30 00:21 - INFO - ---------------------------------------------
2024-11-30 00:21 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-30 00:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87078
2024-11-30 00:21 - INFO - 	 Train Loss: 0.071
2024-11-30 00:21 - INFO - 	 Val. Loss: 0.063
2024-11-30 00:21 - INFO - 	 ROC-AUC: 0.986
2024-11-30 00:21 - INFO - 	 PR-AUC: 0.871
2024-11-30 00:21 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 00:21 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 00:21 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-30 00:21 - INFO - ---------------------------------------------
2024-11-30 00:29 - INFO - ---------------------------------------------
2024-11-30 00:29 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-30 00:29 - INFO - 	 Train Loss: 0.071
2024-11-30 00:29 - INFO - 	 Val. Loss: 0.066
2024-11-30 00:29 - INFO - 	 ROC-AUC: 0.985
2024-11-30 00:29 - INFO - 	 PR-AUC: 0.862
2024-11-30 00:29 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 00:29 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 00:29 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 00:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 00:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-30 00:29 - INFO - ---------------------------------------------
2024-11-30 00:37 - INFO - ---------------------------------------------
2024-11-30 00:37 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-30 00:37 - INFO - 	 Train Loss: 0.069
2024-11-30 00:37 - INFO - 	 Val. Loss: 0.064
2024-11-30 00:37 - INFO - 	 ROC-AUC: 0.986
2024-11-30 00:37 - INFO - 	 PR-AUC: 0.867
2024-11-30 00:37 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 00:37 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 00:37 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 00:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 00:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-11-30 00:37 - INFO - ---------------------------------------------
2024-11-30 00:45 - INFO - ---------------------------------------------
2024-11-30 00:45 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-30 00:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87299
2024-11-30 00:45 - INFO - 	 Train Loss: 0.069
2024-11-30 00:45 - INFO - 	 Val. Loss: 0.062
2024-11-30 00:45 - INFO - 	 ROC-AUC: 0.986
2024-11-30 00:45 - INFO - 	 PR-AUC: 0.873
2024-11-30 00:45 - INFO - 	 Best Val. Loss: 0.062
2024-11-30 00:45 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 00:45 - INFO - 	 Best PR-AUC: 0.873
2024-11-30 00:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 00:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 00:45 - INFO - ---------------------------------------------
2024-11-30 00:53 - INFO - ---------------------------------------------
2024-11-30 00:53 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-30 00:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88171
2024-11-30 00:53 - INFO - 	 Train Loss: 0.068
2024-11-30 00:53 - INFO - 	 Val. Loss: 0.059
2024-11-30 00:53 - INFO - 	 ROC-AUC: 0.988
2024-11-30 00:53 - INFO - 	 PR-AUC: 0.882
2024-11-30 00:53 - INFO - 	 Best Val. Loss: 0.059
2024-11-30 00:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 00:53 - INFO - 	 Best PR-AUC: 0.882
2024-11-30 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-30 00:53 - INFO - ---------------------------------------------
2024-11-30 00:55 - INFO - Fit the preprocessing pipeline
2024-11-30 00:55 - INFO - Training using device: cuda
2024-11-30 00:55 - INFO - Creating generators
2024-11-30 00:55 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 00:55 - INFO - * Model:
2024-11-30 00:55 - INFO - * -----------
2024-11-30 00:55 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 00:55 - INFO - * -----------
2024-11-30 01:03 - INFO - ---------------------------------------------
2024-11-30 01:03 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-30 01:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82281
2024-11-30 01:03 - INFO - 	 Train Loss: 0.098
2024-11-30 01:03 - INFO - 	 Val. Loss: 0.073
2024-11-30 01:03 - INFO - 	 ROC-AUC: 0.983
2024-11-30 01:03 - INFO - 	 PR-AUC: 0.823
2024-11-30 01:03 - INFO - 	 Best Val. Loss: 0.073
2024-11-30 01:03 - INFO - 	 Best ROC-AUC: 0.983
2024-11-30 01:03 - INFO - 	 Best PR-AUC: 0.823
2024-11-30 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-11-30 01:03 - INFO - ---------------------------------------------
2024-11-30 01:11 - INFO - ---------------------------------------------
2024-11-30 01:11 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-30 01:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85768
2024-11-30 01:11 - INFO - 	 Train Loss: 0.082
2024-11-30 01:11 - INFO - 	 Val. Loss: 0.067
2024-11-30 01:11 - INFO - 	 ROC-AUC: 0.986
2024-11-30 01:11 - INFO - 	 PR-AUC: 0.858
2024-11-30 01:11 - INFO - 	 Best Val. Loss: 0.067
2024-11-30 01:11 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 01:11 - INFO - 	 Best PR-AUC: 0.858
2024-11-30 01:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 01:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-30 01:11 - INFO - ---------------------------------------------
2024-11-30 01:19 - INFO - ---------------------------------------------
2024-11-30 01:19 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-30 01:19 - INFO - 	 Train Loss: 0.078
2024-11-30 01:19 - INFO - 	 Val. Loss: 0.068
2024-11-30 01:19 - INFO - 	 ROC-AUC: 0.985
2024-11-30 01:19 - INFO - 	 PR-AUC: 0.845
2024-11-30 01:19 - INFO - 	 Best Val. Loss: 0.067
2024-11-30 01:19 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 01:19 - INFO - 	 Best PR-AUC: 0.858
2024-11-30 01:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 01:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-30 01:19 - INFO - ---------------------------------------------
2024-11-30 01:27 - INFO - ---------------------------------------------
2024-11-30 01:27 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-30 01:27 - INFO - 	 Train Loss: 0.073
2024-11-30 01:27 - INFO - 	 Val. Loss: 0.065
2024-11-30 01:27 - INFO - 	 ROC-AUC: 0.986
2024-11-30 01:27 - INFO - 	 PR-AUC: 0.856
2024-11-30 01:27 - INFO - 	 Best Val. Loss: 0.065
2024-11-30 01:27 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 01:27 - INFO - 	 Best PR-AUC: 0.858
2024-11-30 01:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 01:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-30 01:27 - INFO - ---------------------------------------------
2024-11-30 01:35 - INFO - ---------------------------------------------
2024-11-30 01:35 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-30 01:35 - INFO - 	 Train Loss: 0.074
2024-11-30 01:35 - INFO - 	 Val. Loss: 0.068
2024-11-30 01:35 - INFO - 	 ROC-AUC: 0.985
2024-11-30 01:35 - INFO - 	 PR-AUC: 0.846
2024-11-30 01:35 - INFO - 	 Best Val. Loss: 0.065
2024-11-30 01:35 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 01:35 - INFO - 	 Best PR-AUC: 0.858
2024-11-30 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-30 01:35 - INFO - ---------------------------------------------
2024-11-30 01:43 - INFO - ---------------------------------------------
2024-11-30 01:43 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-30 01:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86323
2024-11-30 01:43 - INFO - 	 Train Loss: 0.071
2024-11-30 01:43 - INFO - 	 Val. Loss: 0.063
2024-11-30 01:43 - INFO - 	 ROC-AUC: 0.987
2024-11-30 01:43 - INFO - 	 PR-AUC: 0.863
2024-11-30 01:43 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 01:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 01:43 - INFO - 	 Best PR-AUC: 0.863
2024-11-30 01:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 01:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-30 01:43 - INFO - ---------------------------------------------
2024-11-30 01:51 - INFO - ---------------------------------------------
2024-11-30 01:51 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-30 01:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86549
2024-11-30 01:51 - INFO - 	 Train Loss: 0.068
2024-11-30 01:51 - INFO - 	 Val. Loss: 0.062
2024-11-30 01:51 - INFO - 	 ROC-AUC: 0.987
2024-11-30 01:51 - INFO - 	 PR-AUC: 0.865
2024-11-30 01:51 - INFO - 	 Best Val. Loss: 0.062
2024-11-30 01:51 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 01:51 - INFO - 	 Best PR-AUC: 0.865
2024-11-30 01:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-30 01:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 01:51 - INFO - ---------------------------------------------
2024-11-30 01:59 - INFO - ---------------------------------------------
2024-11-30 01:59 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-30 01:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87128
2024-11-30 01:59 - INFO - 	 Train Loss: 0.069
2024-11-30 01:59 - INFO - 	 Val. Loss: 0.062
2024-11-30 01:59 - INFO - 	 ROC-AUC: 0.986
2024-11-30 01:59 - INFO - 	 PR-AUC: 0.871
2024-11-30 01:59 - INFO - 	 Best Val. Loss: 0.062
2024-11-30 01:59 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 01:59 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 01:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-30 01:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 01:59 - INFO - ---------------------------------------------
2024-11-30 02:07 - INFO - ---------------------------------------------
2024-11-30 02:07 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-30 02:07 - INFO - 	 Train Loss: 0.068
2024-11-30 02:07 - INFO - 	 Val. Loss: 0.063
2024-11-30 02:07 - INFO - 	 ROC-AUC: 0.986
2024-11-30 02:07 - INFO - 	 PR-AUC: 0.864
2024-11-30 02:07 - INFO - 	 Best Val. Loss: 0.062
2024-11-30 02:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 02:07 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 02:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-30 02:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 02:07 - INFO - ---------------------------------------------
2024-11-30 02:15 - INFO - ---------------------------------------------
2024-11-30 02:15 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-30 02:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87654
2024-11-30 02:15 - INFO - 	 Train Loss: 0.068
2024-11-30 02:15 - INFO - 	 Val. Loss: 0.062
2024-11-30 02:15 - INFO - 	 ROC-AUC: 0.987
2024-11-30 02:15 - INFO - 	 PR-AUC: 0.877
2024-11-30 02:15 - INFO - 	 Best Val. Loss: 0.062
2024-11-30 02:15 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 02:15 - INFO - 	 Best PR-AUC: 0.877
2024-11-30 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-30 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-30 02:15 - INFO - ---------------------------------------------
2024-11-30 02:18 - INFO - Fit the preprocessing pipeline
2024-11-30 02:18 - INFO - Training using device: cuda
2024-11-30 02:18 - INFO - Creating generators
2024-11-30 02:18 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 02:18 - INFO - * Model:
2024-11-30 02:18 - INFO - * -----------
2024-11-30 02:18 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 02:18 - INFO - * -----------
2024-11-30 02:26 - INFO - ---------------------------------------------
2024-11-30 02:26 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-30 02:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82495
2024-11-30 02:26 - INFO - 	 Train Loss: 0.097
2024-11-30 02:26 - INFO - 	 Val. Loss: 0.075
2024-11-30 02:26 - INFO - 	 ROC-AUC: 0.982
2024-11-30 02:26 - INFO - 	 PR-AUC: 0.825
2024-11-30 02:26 - INFO - 	 Best Val. Loss: 0.075
2024-11-30 02:26 - INFO - 	 Best ROC-AUC: 0.982
2024-11-30 02:26 - INFO - 	 Best PR-AUC: 0.825
2024-11-30 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-30 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-11-30 02:26 - INFO - ---------------------------------------------
2024-11-30 02:34 - INFO - ---------------------------------------------
2024-11-30 02:34 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-30 02:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86065
2024-11-30 02:34 - INFO - 	 Train Loss: 0.082
2024-11-30 02:34 - INFO - 	 Val. Loss: 0.068
2024-11-30 02:34 - INFO - 	 ROC-AUC: 0.984
2024-11-30 02:34 - INFO - 	 PR-AUC: 0.861
2024-11-30 02:34 - INFO - 	 Best Val. Loss: 0.068
2024-11-30 02:34 - INFO - 	 Best ROC-AUC: 0.984
2024-11-30 02:34 - INFO - 	 Best PR-AUC: 0.861
2024-11-30 02:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 02:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-30 02:34 - INFO - ---------------------------------------------
2024-11-30 02:42 - INFO - ---------------------------------------------
2024-11-30 02:42 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-30 02:42 - INFO - 	 Train Loss: 0.077
2024-11-30 02:42 - INFO - 	 Val. Loss: 0.066
2024-11-30 02:42 - INFO - 	 ROC-AUC: 0.986
2024-11-30 02:42 - INFO - 	 PR-AUC: 0.851
2024-11-30 02:42 - INFO - 	 Best Val. Loss: 0.066
2024-11-30 02:42 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 02:42 - INFO - 	 Best PR-AUC: 0.861
2024-11-30 02:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 02:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-30 02:42 - INFO - ---------------------------------------------
2024-11-30 02:50 - INFO - ---------------------------------------------
2024-11-30 02:50 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-30 02:50 - INFO - 	 Train Loss: 0.074
2024-11-30 02:50 - INFO - 	 Val. Loss: 0.068
2024-11-30 02:50 - INFO - 	 ROC-AUC: 0.985
2024-11-30 02:50 - INFO - 	 PR-AUC: 0.854
2024-11-30 02:50 - INFO - 	 Best Val. Loss: 0.066
2024-11-30 02:50 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 02:50 - INFO - 	 Best PR-AUC: 0.861
2024-11-30 02:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 02:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-30 02:50 - INFO - ---------------------------------------------
2024-11-30 02:58 - INFO - ---------------------------------------------
2024-11-30 02:58 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-30 02:58 - INFO - 	 Train Loss: 0.073
2024-11-30 02:58 - INFO - 	 Val. Loss: 0.065
2024-11-30 02:58 - INFO - 	 ROC-AUC: 0.986
2024-11-30 02:58 - INFO - 	 PR-AUC: 0.856
2024-11-30 02:58 - INFO - 	 Best Val. Loss: 0.065
2024-11-30 02:58 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 02:58 - INFO - 	 Best PR-AUC: 0.861
2024-11-30 02:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 02:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-30 02:58 - INFO - ---------------------------------------------
2024-11-30 03:06 - INFO - ---------------------------------------------
2024-11-30 03:06 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-30 03:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87145
2024-11-30 03:06 - INFO - 	 Train Loss: 0.071
2024-11-30 03:06 - INFO - 	 Val. Loss: 0.063
2024-11-30 03:06 - INFO - 	 ROC-AUC: 0.986
2024-11-30 03:06 - INFO - 	 PR-AUC: 0.871
2024-11-30 03:06 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 03:06 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 03:06 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 03:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 03:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-30 03:06 - INFO - ---------------------------------------------
2024-11-30 03:14 - INFO - ---------------------------------------------
2024-11-30 03:14 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-30 03:14 - INFO - 	 Train Loss: 0.070
2024-11-30 03:14 - INFO - 	 Val. Loss: 0.065
2024-11-30 03:14 - INFO - 	 ROC-AUC: 0.986
2024-11-30 03:14 - INFO - 	 PR-AUC: 0.861
2024-11-30 03:14 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 03:14 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 03:14 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 03:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 03:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-30 03:14 - INFO - ---------------------------------------------
2024-11-30 03:22 - INFO - ---------------------------------------------
2024-11-30 03:22 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-30 03:22 - INFO - 	 Train Loss: 0.068
2024-11-30 03:22 - INFO - 	 Val. Loss: 0.063
2024-11-30 03:22 - INFO - 	 ROC-AUC: 0.986
2024-11-30 03:22 - INFO - 	 PR-AUC: 0.869
2024-11-30 03:22 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 03:22 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 03:22 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-30 03:22 - INFO - ---------------------------------------------
2024-11-30 03:30 - INFO - ---------------------------------------------
2024-11-30 03:30 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-30 03:30 - INFO - 	 Train Loss: 0.068
2024-11-30 03:30 - INFO - 	 Val. Loss: 0.063
2024-11-30 03:30 - INFO - 	 ROC-AUC: 0.987
2024-11-30 03:30 - INFO - 	 PR-AUC: 0.871
2024-11-30 03:30 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 03:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 03:30 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 03:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 03:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-30 03:30 - INFO - ---------------------------------------------
2024-11-30 03:40 - INFO - Fit the preprocessing pipeline
2024-11-30 03:40 - INFO - Training using device: cuda
2024-11-30 03:40 - INFO - Creating generators
2024-11-30 03:40 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 03:40 - INFO - * Model:
2024-11-30 03:40 - INFO - * -----------
2024-11-30 03:40 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 03:40 - INFO - * -----------
2024-11-30 03:48 - INFO - ---------------------------------------------
2024-11-30 03:48 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-30 03:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83366
2024-11-30 03:48 - INFO - 	 Train Loss: 0.097
2024-11-30 03:48 - INFO - 	 Val. Loss: 0.075
2024-11-30 03:48 - INFO - 	 ROC-AUC: 0.982
2024-11-30 03:48 - INFO - 	 PR-AUC: 0.834
2024-11-30 03:48 - INFO - 	 Best Val. Loss: 0.075
2024-11-30 03:48 - INFO - 	 Best ROC-AUC: 0.982
2024-11-30 03:48 - INFO - 	 Best PR-AUC: 0.834
2024-11-30 03:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-30 03:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-11-30 03:48 - INFO - ---------------------------------------------
2024-11-30 03:56 - INFO - ---------------------------------------------
2024-11-30 03:56 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-30 03:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84809
2024-11-30 03:56 - INFO - 	 Train Loss: 0.081
2024-11-30 03:56 - INFO - 	 Val. Loss: 0.070
2024-11-30 03:56 - INFO - 	 ROC-AUC: 0.985
2024-11-30 03:56 - INFO - 	 PR-AUC: 0.848
2024-11-30 03:56 - INFO - 	 Best Val. Loss: 0.070
2024-11-30 03:56 - INFO - 	 Best ROC-AUC: 0.985
2024-11-30 03:56 - INFO - 	 Best PR-AUC: 0.848
2024-11-30 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-30 03:56 - INFO - ---------------------------------------------
2024-11-30 04:05 - INFO - ---------------------------------------------
2024-11-30 04:05 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-30 04:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85358
2024-11-30 04:05 - INFO - 	 Train Loss: 0.076
2024-11-30 04:05 - INFO - 	 Val. Loss: 0.067
2024-11-30 04:05 - INFO - 	 ROC-AUC: 0.986
2024-11-30 04:05 - INFO - 	 PR-AUC: 0.854
2024-11-30 04:05 - INFO - 	 Best Val. Loss: 0.067
2024-11-30 04:05 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 04:05 - INFO - 	 Best PR-AUC: 0.854
2024-11-30 04:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 04:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-30 04:05 - INFO - ---------------------------------------------
2024-11-30 04:13 - INFO - ---------------------------------------------
2024-11-30 04:13 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-30 04:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86143
2024-11-30 04:13 - INFO - 	 Train Loss: 0.075
2024-11-30 04:13 - INFO - 	 Val. Loss: 0.064
2024-11-30 04:13 - INFO - 	 ROC-AUC: 0.986
2024-11-30 04:13 - INFO - 	 PR-AUC: 0.861
2024-11-30 04:13 - INFO - 	 Best Val. Loss: 0.064
2024-11-30 04:13 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 04:13 - INFO - 	 Best PR-AUC: 0.861
2024-11-30 04:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 04:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-30 04:13 - INFO - ---------------------------------------------
2024-11-30 04:21 - INFO - ---------------------------------------------
2024-11-30 04:21 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-30 04:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86232
2024-11-30 04:21 - INFO - 	 Train Loss: 0.072
2024-11-30 04:21 - INFO - 	 Val. Loss: 0.066
2024-11-30 04:21 - INFO - 	 ROC-AUC: 0.986
2024-11-30 04:21 - INFO - 	 PR-AUC: 0.862
2024-11-30 04:21 - INFO - 	 Best Val. Loss: 0.064
2024-11-30 04:21 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 04:21 - INFO - 	 Best PR-AUC: 0.862
2024-11-30 04:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 04:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-30 04:21 - INFO - ---------------------------------------------
2024-11-30 04:29 - INFO - ---------------------------------------------
2024-11-30 04:29 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-30 04:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86803
2024-11-30 04:29 - INFO - 	 Train Loss: 0.072
2024-11-30 04:29 - INFO - 	 Val. Loss: 0.063
2024-11-30 04:29 - INFO - 	 ROC-AUC: 0.987
2024-11-30 04:29 - INFO - 	 PR-AUC: 0.868
2024-11-30 04:29 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 04:29 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 04:29 - INFO - 	 Best PR-AUC: 0.868
2024-11-30 04:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 04:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-30 04:29 - INFO - ---------------------------------------------
2024-11-30 04:37 - INFO - ---------------------------------------------
2024-11-30 04:37 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-30 04:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87404
2024-11-30 04:37 - INFO - 	 Train Loss: 0.069
2024-11-30 04:37 - INFO - 	 Val. Loss: 0.061
2024-11-30 04:37 - INFO - 	 ROC-AUC: 0.988
2024-11-30 04:37 - INFO - 	 PR-AUC: 0.874
2024-11-30 04:37 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 04:37 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 04:37 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 04:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 04:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 04:37 - INFO - ---------------------------------------------
2024-11-30 04:45 - INFO - ---------------------------------------------
2024-11-30 04:45 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-30 04:45 - INFO - 	 Train Loss: 0.068
2024-11-30 04:45 - INFO - 	 Val. Loss: 0.062
2024-11-30 04:45 - INFO - 	 ROC-AUC: 0.987
2024-11-30 04:45 - INFO - 	 PR-AUC: 0.870
2024-11-30 04:45 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 04:45 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 04:45 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 04:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 04:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 04:45 - INFO - ---------------------------------------------
2024-11-30 04:53 - INFO - ---------------------------------------------
2024-11-30 04:53 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-30 04:53 - INFO - 	 Train Loss: 0.067
2024-11-30 04:53 - INFO - 	 Val. Loss: 0.064
2024-11-30 04:53 - INFO - 	 ROC-AUC: 0.987
2024-11-30 04:53 - INFO - 	 PR-AUC: 0.865
2024-11-30 04:53 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 04:53 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 04:53 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 04:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 04:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 04:53 - INFO - ---------------------------------------------
2024-11-30 05:01 - INFO - ---------------------------------------------
2024-11-30 05:01 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-30 05:01 - INFO - 	 Train Loss: 0.066
2024-11-30 05:01 - INFO - 	 Val. Loss: 0.062
2024-11-30 05:01 - INFO - 	 ROC-AUC: 0.987
2024-11-30 05:01 - INFO - 	 PR-AUC: 0.874
2024-11-30 05:01 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 05:01 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 05:01 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 05:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 05:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 05:01 - INFO - ---------------------------------------------
2024-11-30 05:03 - INFO - Fit the preprocessing pipeline
2024-11-30 05:03 - INFO - Training using device: cuda
2024-11-30 05:03 - INFO - Creating generators
2024-11-30 05:03 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 05:03 - INFO - * Model:
2024-11-30 05:03 - INFO - * -----------
2024-11-30 05:03 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 05:03 - INFO - * -----------
2024-11-30 05:11 - INFO - ---------------------------------------------
2024-11-30 05:11 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-30 05:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81851
2024-11-30 05:11 - INFO - 	 Train Loss: 0.098
2024-11-30 05:11 - INFO - 	 Val. Loss: 0.075
2024-11-30 05:11 - INFO - 	 ROC-AUC: 0.982
2024-11-30 05:11 - INFO - 	 PR-AUC: 0.819
2024-11-30 05:11 - INFO - 	 Best Val. Loss: 0.075
2024-11-30 05:11 - INFO - 	 Best ROC-AUC: 0.982
2024-11-30 05:11 - INFO - 	 Best PR-AUC: 0.819
2024-11-30 05:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-30 05:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-11-30 05:11 - INFO - ---------------------------------------------
2024-11-30 05:19 - INFO - ---------------------------------------------
2024-11-30 05:19 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-30 05:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83057
2024-11-30 05:19 - INFO - 	 Train Loss: 0.080
2024-11-30 05:19 - INFO - 	 Val. Loss: 0.074
2024-11-30 05:19 - INFO - 	 ROC-AUC: 0.982
2024-11-30 05:19 - INFO - 	 PR-AUC: 0.831
2024-11-30 05:19 - INFO - 	 Best Val. Loss: 0.074
2024-11-30 05:19 - INFO - 	 Best ROC-AUC: 0.982
2024-11-30 05:19 - INFO - 	 Best PR-AUC: 0.831
2024-11-30 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-11-30 05:19 - INFO - ---------------------------------------------
2024-11-30 05:27 - INFO - ---------------------------------------------
2024-11-30 05:27 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-30 05:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.857
2024-11-30 05:27 - INFO - 	 Train Loss: 0.076
2024-11-30 05:27 - INFO - 	 Val. Loss: 0.067
2024-11-30 05:27 - INFO - 	 ROC-AUC: 0.986
2024-11-30 05:27 - INFO - 	 PR-AUC: 0.857
2024-11-30 05:27 - INFO - 	 Best Val. Loss: 0.067
2024-11-30 05:27 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 05:27 - INFO - 	 Best PR-AUC: 0.857
2024-11-30 05:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 05:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-30 05:27 - INFO - ---------------------------------------------
2024-11-30 05:35 - INFO - ---------------------------------------------
2024-11-30 05:35 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-30 05:35 - INFO - 	 Train Loss: 0.074
2024-11-30 05:35 - INFO - 	 Val. Loss: 0.068
2024-11-30 05:35 - INFO - 	 ROC-AUC: 0.985
2024-11-30 05:35 - INFO - 	 PR-AUC: 0.851
2024-11-30 05:35 - INFO - 	 Best Val. Loss: 0.067
2024-11-30 05:35 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 05:35 - INFO - 	 Best PR-AUC: 0.857
2024-11-30 05:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 05:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-30 05:35 - INFO - ---------------------------------------------
2024-11-30 05:43 - INFO - ---------------------------------------------
2024-11-30 05:43 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-30 05:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87257
2024-11-30 05:43 - INFO - 	 Train Loss: 0.071
2024-11-30 05:43 - INFO - 	 Val. Loss: 0.063
2024-11-30 05:43 - INFO - 	 ROC-AUC: 0.986
2024-11-30 05:43 - INFO - 	 PR-AUC: 0.873
2024-11-30 05:43 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 05:43 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 05:43 - INFO - 	 Best PR-AUC: 0.873
2024-11-30 05:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 05:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-30 05:43 - INFO - ---------------------------------------------
2024-11-30 05:51 - INFO - ---------------------------------------------
2024-11-30 05:51 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-30 05:51 - INFO - 	 Train Loss: 0.071
2024-11-30 05:51 - INFO - 	 Val. Loss: 0.066
2024-11-30 05:51 - INFO - 	 ROC-AUC: 0.986
2024-11-30 05:51 - INFO - 	 PR-AUC: 0.861
2024-11-30 05:51 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 05:51 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 05:51 - INFO - 	 Best PR-AUC: 0.873
2024-11-30 05:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 05:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-30 05:51 - INFO - ---------------------------------------------
2024-11-30 05:59 - INFO - ---------------------------------------------
2024-11-30 05:59 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-30 05:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87501
2024-11-30 05:59 - INFO - 	 Train Loss: 0.068
2024-11-30 05:59 - INFO - 	 Val. Loss: 0.063
2024-11-30 05:59 - INFO - 	 ROC-AUC: 0.987
2024-11-30 05:59 - INFO - 	 PR-AUC: 0.875
2024-11-30 05:59 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 05:59 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 05:59 - INFO - 	 Best PR-AUC: 0.875
2024-11-30 05:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 05:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-30 05:59 - INFO - ---------------------------------------------
2024-11-30 06:07 - INFO - ---------------------------------------------
2024-11-30 06:07 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-30 06:07 - INFO - 	 Train Loss: 0.069
2024-11-30 06:07 - INFO - 	 Val. Loss: 0.063
2024-11-30 06:07 - INFO - 	 ROC-AUC: 0.987
2024-11-30 06:07 - INFO - 	 PR-AUC: 0.870
2024-11-30 06:07 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 06:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 06:07 - INFO - 	 Best PR-AUC: 0.875
2024-11-30 06:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 06:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-30 06:07 - INFO - ---------------------------------------------
2024-11-30 06:15 - INFO - ---------------------------------------------
2024-11-30 06:15 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-30 06:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88586
2024-11-30 06:15 - INFO - 	 Train Loss: 0.067
2024-11-30 06:15 - INFO - 	 Val. Loss: 0.060
2024-11-30 06:15 - INFO - 	 ROC-AUC: 0.988
2024-11-30 06:15 - INFO - 	 PR-AUC: 0.886
2024-11-30 06:15 - INFO - 	 Best Val. Loss: 0.060
2024-11-30 06:15 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 06:15 - INFO - 	 Best PR-AUC: 0.886
2024-11-30 06:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 06:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 06:15 - INFO - ---------------------------------------------
2024-11-30 06:23 - INFO - ---------------------------------------------
2024-11-30 06:23 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-30 06:23 - INFO - 	 Train Loss: 0.066
2024-11-30 06:23 - INFO - 	 Val. Loss: 0.064
2024-11-30 06:23 - INFO - 	 ROC-AUC: 0.987
2024-11-30 06:23 - INFO - 	 PR-AUC: 0.874
2024-11-30 06:23 - INFO - 	 Best Val. Loss: 0.060
2024-11-30 06:23 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 06:23 - INFO - 	 Best PR-AUC: 0.886
2024-11-30 06:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 06:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 06:23 - INFO - ---------------------------------------------
2024-11-30 06:26 - INFO - Fit the preprocessing pipeline
2024-11-30 06:26 - INFO - Training using device: cuda
2024-11-30 06:26 - INFO - Creating generators
2024-11-30 06:26 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 06:26 - INFO - * Model:
2024-11-30 06:26 - INFO - * -----------
2024-11-30 06:26 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 06:26 - INFO - * -----------
2024-11-30 06:34 - INFO - ---------------------------------------------
2024-11-30 06:34 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-30 06:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84088
2024-11-30 06:34 - INFO - 	 Train Loss: 0.097
2024-11-30 06:34 - INFO - 	 Val. Loss: 0.075
2024-11-30 06:34 - INFO - 	 ROC-AUC: 0.983
2024-11-30 06:34 - INFO - 	 PR-AUC: 0.841
2024-11-30 06:34 - INFO - 	 Best Val. Loss: 0.075
2024-11-30 06:34 - INFO - 	 Best ROC-AUC: 0.983
2024-11-30 06:34 - INFO - 	 Best PR-AUC: 0.841
2024-11-30 06:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 06:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.815
2024-11-30 06:34 - INFO - ---------------------------------------------
2024-11-30 06:42 - INFO - ---------------------------------------------
2024-11-30 06:42 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-30 06:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84773
2024-11-30 06:42 - INFO - 	 Train Loss: 0.080
2024-11-30 06:42 - INFO - 	 Val. Loss: 0.067
2024-11-30 06:42 - INFO - 	 ROC-AUC: 0.985
2024-11-30 06:42 - INFO - 	 PR-AUC: 0.848
2024-11-30 06:42 - INFO - 	 Best Val. Loss: 0.067
2024-11-30 06:42 - INFO - 	 Best ROC-AUC: 0.985
2024-11-30 06:42 - INFO - 	 Best PR-AUC: 0.848
2024-11-30 06:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 06:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-30 06:42 - INFO - ---------------------------------------------
2024-11-30 06:50 - INFO - ---------------------------------------------
2024-11-30 06:50 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-30 06:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85451
2024-11-30 06:50 - INFO - 	 Train Loss: 0.078
2024-11-30 06:50 - INFO - 	 Val. Loss: 0.065
2024-11-30 06:50 - INFO - 	 ROC-AUC: 0.986
2024-11-30 06:50 - INFO - 	 PR-AUC: 0.855
2024-11-30 06:50 - INFO - 	 Best Val. Loss: 0.065
2024-11-30 06:50 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 06:50 - INFO - 	 Best PR-AUC: 0.855
2024-11-30 06:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 06:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-30 06:50 - INFO - ---------------------------------------------
2024-11-30 06:58 - INFO - ---------------------------------------------
2024-11-30 06:58 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-30 06:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86804
2024-11-30 06:58 - INFO - 	 Train Loss: 0.073
2024-11-30 06:58 - INFO - 	 Val. Loss: 0.064
2024-11-30 06:58 - INFO - 	 ROC-AUC: 0.986
2024-11-30 06:58 - INFO - 	 PR-AUC: 0.868
2024-11-30 06:58 - INFO - 	 Best Val. Loss: 0.064
2024-11-30 06:58 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 06:58 - INFO - 	 Best PR-AUC: 0.868
2024-11-30 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-30 06:58 - INFO - ---------------------------------------------
2024-11-30 07:06 - INFO - ---------------------------------------------
2024-11-30 07:06 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-30 07:06 - INFO - 	 Train Loss: 0.073
2024-11-30 07:06 - INFO - 	 Val. Loss: 0.068
2024-11-30 07:06 - INFO - 	 ROC-AUC: 0.984
2024-11-30 07:06 - INFO - 	 PR-AUC: 0.857
2024-11-30 07:06 - INFO - 	 Best Val. Loss: 0.064
2024-11-30 07:06 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 07:06 - INFO - 	 Best PR-AUC: 0.868
2024-11-30 07:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 07:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-30 07:06 - INFO - ---------------------------------------------
2024-11-30 07:14 - INFO - ---------------------------------------------
2024-11-30 07:14 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-30 07:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8743
2024-11-30 07:14 - INFO - 	 Train Loss: 0.071
2024-11-30 07:14 - INFO - 	 Val. Loss: 0.063
2024-11-30 07:14 - INFO - 	 ROC-AUC: 0.986
2024-11-30 07:14 - INFO - 	 PR-AUC: 0.874
2024-11-30 07:14 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 07:14 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 07:14 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 07:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 07:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-30 07:14 - INFO - ---------------------------------------------
2024-11-30 07:22 - INFO - ---------------------------------------------
2024-11-30 07:22 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-30 07:22 - INFO - 	 Train Loss: 0.070
2024-11-30 07:22 - INFO - 	 Val. Loss: 0.070
2024-11-30 07:22 - INFO - 	 ROC-AUC: 0.985
2024-11-30 07:22 - INFO - 	 PR-AUC: 0.873
2024-11-30 07:22 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 07:22 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 07:22 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 07:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 07:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-30 07:22 - INFO - ---------------------------------------------
2024-11-30 07:30 - INFO - ---------------------------------------------
2024-11-30 07:30 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-30 07:30 - INFO - 	 Train Loss: 0.069
2024-11-30 07:30 - INFO - 	 Val. Loss: 0.064
2024-11-30 07:30 - INFO - 	 ROC-AUC: 0.986
2024-11-30 07:30 - INFO - 	 PR-AUC: 0.870
2024-11-30 07:30 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 07:30 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 07:30 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 07:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 07:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-30 07:30 - INFO - ---------------------------------------------
2024-11-30 07:38 - INFO - ---------------------------------------------
2024-11-30 07:38 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-30 07:38 - INFO - 	 Train Loss: 0.067
2024-11-30 07:38 - INFO - 	 Val. Loss: 0.064
2024-11-30 07:38 - INFO - 	 ROC-AUC: 0.985
2024-11-30 07:38 - INFO - 	 PR-AUC: 0.866
2024-11-30 07:38 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 07:38 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 07:38 - INFO - 	 Best PR-AUC: 0.874
2024-11-30 07:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 07:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-30 07:38 - INFO - ---------------------------------------------
2024-11-30 07:48 - INFO - Fit the preprocessing pipeline
2024-11-30 07:48 - INFO - Training using device: cuda
2024-11-30 07:48 - INFO - Creating generators
2024-11-30 07:48 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 07:48 - INFO - * Model:
2024-11-30 07:48 - INFO - * -----------
2024-11-30 07:48 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 07:48 - INFO - * -----------
2024-11-30 07:56 - INFO - ---------------------------------------------
2024-11-30 07:56 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-30 07:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83086
2024-11-30 07:56 - INFO - 	 Train Loss: 0.097
2024-11-30 07:56 - INFO - 	 Val. Loss: 0.073
2024-11-30 07:56 - INFO - 	 ROC-AUC: 0.982
2024-11-30 07:56 - INFO - 	 PR-AUC: 0.831
2024-11-30 07:56 - INFO - 	 Best Val. Loss: 0.073
2024-11-30 07:56 - INFO - 	 Best ROC-AUC: 0.982
2024-11-30 07:56 - INFO - 	 Best PR-AUC: 0.831
2024-11-30 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-30 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-11-30 07:56 - INFO - ---------------------------------------------
2024-11-30 08:04 - INFO - ---------------------------------------------
2024-11-30 08:04 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-30 08:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83753
2024-11-30 08:04 - INFO - 	 Train Loss: 0.080
2024-11-30 08:04 - INFO - 	 Val. Loss: 0.074
2024-11-30 08:04 - INFO - 	 ROC-AUC: 0.984
2024-11-30 08:04 - INFO - 	 PR-AUC: 0.838
2024-11-30 08:04 - INFO - 	 Best Val. Loss: 0.073
2024-11-30 08:04 - INFO - 	 Best ROC-AUC: 0.984
2024-11-30 08:04 - INFO - 	 Best PR-AUC: 0.838
2024-11-30 08:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 08:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-30 08:04 - INFO - ---------------------------------------------
2024-11-30 08:12 - INFO - ---------------------------------------------
2024-11-30 08:12 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-30 08:12 - INFO - 	 Train Loss: 0.077
2024-11-30 08:12 - INFO - 	 Val. Loss: 0.073
2024-11-30 08:12 - INFO - 	 ROC-AUC: 0.984
2024-11-30 08:12 - INFO - 	 PR-AUC: 0.834
2024-11-30 08:12 - INFO - 	 Best Val. Loss: 0.073
2024-11-30 08:12 - INFO - 	 Best ROC-AUC: 0.984
2024-11-30 08:12 - INFO - 	 Best PR-AUC: 0.838
2024-11-30 08:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 08:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-30 08:12 - INFO - ---------------------------------------------
2024-11-30 08:20 - INFO - ---------------------------------------------
2024-11-30 08:20 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-30 08:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85867
2024-11-30 08:20 - INFO - 	 Train Loss: 0.074
2024-11-30 08:20 - INFO - 	 Val. Loss: 0.065
2024-11-30 08:20 - INFO - 	 ROC-AUC: 0.986
2024-11-30 08:20 - INFO - 	 PR-AUC: 0.859
2024-11-30 08:20 - INFO - 	 Best Val. Loss: 0.065
2024-11-30 08:20 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 08:20 - INFO - 	 Best PR-AUC: 0.859
2024-11-30 08:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 08:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-30 08:20 - INFO - ---------------------------------------------
2024-11-30 08:28 - INFO - ---------------------------------------------
2024-11-30 08:28 - INFO - Epoch: 05 | Time: 8m 0s
2024-11-30 08:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86185
2024-11-30 08:28 - INFO - 	 Train Loss: 0.072
2024-11-30 08:28 - INFO - 	 Val. Loss: 0.064
2024-11-30 08:28 - INFO - 	 ROC-AUC: 0.986
2024-11-30 08:28 - INFO - 	 PR-AUC: 0.862
2024-11-30 08:28 - INFO - 	 Best Val. Loss: 0.064
2024-11-30 08:28 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 08:28 - INFO - 	 Best PR-AUC: 0.862
2024-11-30 08:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 08:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-30 08:28 - INFO - ---------------------------------------------
2024-11-30 08:36 - INFO - ---------------------------------------------
2024-11-30 08:36 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-30 08:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87052
2024-11-30 08:36 - INFO - 	 Train Loss: 0.071
2024-11-30 08:36 - INFO - 	 Val. Loss: 0.064
2024-11-30 08:36 - INFO - 	 ROC-AUC: 0.986
2024-11-30 08:36 - INFO - 	 PR-AUC: 0.871
2024-11-30 08:36 - INFO - 	 Best Val. Loss: 0.064
2024-11-30 08:36 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 08:36 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 08:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 08:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-30 08:36 - INFO - ---------------------------------------------
2024-11-30 08:44 - INFO - ---------------------------------------------
2024-11-30 08:44 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-30 08:44 - INFO - 	 Train Loss: 0.070
2024-11-30 08:44 - INFO - 	 Val. Loss: 0.065
2024-11-30 08:44 - INFO - 	 ROC-AUC: 0.986
2024-11-30 08:44 - INFO - 	 PR-AUC: 0.858
2024-11-30 08:44 - INFO - 	 Best Val. Loss: 0.064
2024-11-30 08:44 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 08:44 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 08:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 08:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-30 08:44 - INFO - ---------------------------------------------
2024-11-30 08:52 - INFO - ---------------------------------------------
2024-11-30 08:52 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-30 08:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87149
2024-11-30 08:52 - INFO - 	 Train Loss: 0.068
2024-11-30 08:52 - INFO - 	 Val. Loss: 0.063
2024-11-30 08:52 - INFO - 	 ROC-AUC: 0.986
2024-11-30 08:52 - INFO - 	 PR-AUC: 0.871
2024-11-30 08:52 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 08:52 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 08:52 - INFO - 	 Best PR-AUC: 0.871
2024-11-30 08:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 08:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-30 08:52 - INFO - ---------------------------------------------
2024-11-30 09:00 - INFO - ---------------------------------------------
2024-11-30 09:00 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-30 09:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87716
2024-11-30 09:00 - INFO - 	 Train Loss: 0.069
2024-11-30 09:00 - INFO - 	 Val. Loss: 0.061
2024-11-30 09:00 - INFO - 	 ROC-AUC: 0.988
2024-11-30 09:00 - INFO - 	 PR-AUC: 0.877
2024-11-30 09:00 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 09:00 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 09:00 - INFO - 	 Best PR-AUC: 0.877
2024-11-30 09:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 09:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 09:00 - INFO - ---------------------------------------------
2024-11-30 09:08 - INFO - ---------------------------------------------
2024-11-30 09:08 - INFO - Epoch: 10 | Time: 8m 0s
2024-11-30 09:08 - INFO - 	 Train Loss: 0.067
2024-11-30 09:08 - INFO - 	 Val. Loss: 0.064
2024-11-30 09:08 - INFO - 	 ROC-AUC: 0.986
2024-11-30 09:08 - INFO - 	 PR-AUC: 0.862
2024-11-30 09:08 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 09:08 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 09:08 - INFO - 	 Best PR-AUC: 0.877
2024-11-30 09:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 09:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-30 09:08 - INFO - ---------------------------------------------
2024-11-30 09:11 - INFO - Fit the preprocessing pipeline
2024-11-30 09:11 - INFO - Training using device: cuda
2024-11-30 09:11 - INFO - Creating generators
2024-11-30 09:11 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 09:11 - INFO - * Model:
2024-11-30 09:11 - INFO - * -----------
2024-11-30 09:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 09:11 - INFO - * -----------
2024-11-30 09:19 - INFO - ---------------------------------------------
2024-11-30 09:19 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-30 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80403
2024-11-30 09:19 - INFO - 	 Train Loss: 0.098
2024-11-30 09:19 - INFO - 	 Val. Loss: 0.081
2024-11-30 09:19 - INFO - 	 ROC-AUC: 0.980
2024-11-30 09:19 - INFO - 	 PR-AUC: 0.804
2024-11-30 09:19 - INFO - 	 Best Val. Loss: 0.081
2024-11-30 09:19 - INFO - 	 Best ROC-AUC: 0.980
2024-11-30 09:19 - INFO - 	 Best PR-AUC: 0.804
2024-11-30 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-30 09:19 - INFO - ---------------------------------------------
2024-11-30 09:27 - INFO - ---------------------------------------------
2024-11-30 09:27 - INFO - Epoch: 02 | Time: 8m 0s
2024-11-30 09:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84025
2024-11-30 09:27 - INFO - 	 Train Loss: 0.082
2024-11-30 09:27 - INFO - 	 Val. Loss: 0.070
2024-11-30 09:27 - INFO - 	 ROC-AUC: 0.984
2024-11-30 09:27 - INFO - 	 PR-AUC: 0.840
2024-11-30 09:27 - INFO - 	 Best Val. Loss: 0.070
2024-11-30 09:27 - INFO - 	 Best ROC-AUC: 0.984
2024-11-30 09:27 - INFO - 	 Best PR-AUC: 0.840
2024-11-30 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-30 09:27 - INFO - ---------------------------------------------
2024-11-30 09:35 - INFO - ---------------------------------------------
2024-11-30 09:35 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-30 09:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87234
2024-11-30 09:35 - INFO - 	 Train Loss: 0.077
2024-11-30 09:35 - INFO - 	 Val. Loss: 0.063
2024-11-30 09:35 - INFO - 	 ROC-AUC: 0.987
2024-11-30 09:35 - INFO - 	 PR-AUC: 0.872
2024-11-30 09:35 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 09:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 09:35 - INFO - 	 Best PR-AUC: 0.872
2024-11-30 09:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 09:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-30 09:35 - INFO - ---------------------------------------------
2024-11-30 09:43 - INFO - ---------------------------------------------
2024-11-30 09:43 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-30 09:43 - INFO - 	 Train Loss: 0.073
2024-11-30 09:43 - INFO - 	 Val. Loss: 0.065
2024-11-30 09:43 - INFO - 	 ROC-AUC: 0.986
2024-11-30 09:43 - INFO - 	 PR-AUC: 0.851
2024-11-30 09:43 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 09:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 09:43 - INFO - 	 Best PR-AUC: 0.872
2024-11-30 09:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 09:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-30 09:43 - INFO - ---------------------------------------------
2024-11-30 09:51 - INFO - ---------------------------------------------
2024-11-30 09:51 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-30 09:51 - INFO - 	 Train Loss: 0.071
2024-11-30 09:51 - INFO - 	 Val. Loss: 0.064
2024-11-30 09:51 - INFO - 	 ROC-AUC: 0.986
2024-11-30 09:51 - INFO - 	 PR-AUC: 0.871
2024-11-30 09:51 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 09:51 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 09:51 - INFO - 	 Best PR-AUC: 0.872
2024-11-30 09:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 09:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-11-30 09:51 - INFO - ---------------------------------------------
2024-11-30 09:59 - INFO - ---------------------------------------------
2024-11-30 09:59 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-30 09:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87251
2024-11-30 09:59 - INFO - 	 Train Loss: 0.071
2024-11-30 09:59 - INFO - 	 Val. Loss: 0.061
2024-11-30 09:59 - INFO - 	 ROC-AUC: 0.988
2024-11-30 09:59 - INFO - 	 PR-AUC: 0.873
2024-11-30 09:59 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 09:59 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 09:59 - INFO - 	 Best PR-AUC: 0.873
2024-11-30 09:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-30 09:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 09:59 - INFO - ---------------------------------------------
2024-11-30 10:07 - INFO - ---------------------------------------------
2024-11-30 10:07 - INFO - Epoch: 07 | Time: 8m 0s
2024-11-30 10:07 - INFO - 	 Train Loss: 0.070
2024-11-30 10:07 - INFO - 	 Val. Loss: 0.066
2024-11-30 10:07 - INFO - 	 ROC-AUC: 0.986
2024-11-30 10:07 - INFO - 	 PR-AUC: 0.850
2024-11-30 10:07 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 10:07 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 10:07 - INFO - 	 Best PR-AUC: 0.873
2024-11-30 10:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-30 10:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 10:07 - INFO - ---------------------------------------------
2024-11-30 10:15 - INFO - ---------------------------------------------
2024-11-30 10:15 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-30 10:15 - INFO - 	 Train Loss: 0.067
2024-11-30 10:15 - INFO - 	 Val. Loss: 0.065
2024-11-30 10:15 - INFO - 	 ROC-AUC: 0.986
2024-11-30 10:15 - INFO - 	 PR-AUC: 0.861
2024-11-30 10:15 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 10:15 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 10:15 - INFO - 	 Best PR-AUC: 0.873
2024-11-30 10:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-30 10:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 10:15 - INFO - ---------------------------------------------
2024-11-30 10:23 - INFO - ---------------------------------------------
2024-11-30 10:23 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-30 10:23 - INFO - 	 Train Loss: 0.067
2024-11-30 10:23 - INFO - 	 Val. Loss: 0.063
2024-11-30 10:23 - INFO - 	 ROC-AUC: 0.987
2024-11-30 10:23 - INFO - 	 PR-AUC: 0.870
2024-11-30 10:23 - INFO - 	 Best Val. Loss: 0.061
2024-11-30 10:23 - INFO - 	 Best ROC-AUC: 0.988
2024-11-30 10:23 - INFO - 	 Best PR-AUC: 0.873
2024-11-30 10:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-30 10:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 10:23 - INFO - ---------------------------------------------
2024-11-30 10:33 - INFO - Fit the preprocessing pipeline
2024-11-30 10:33 - INFO - Training using device: cuda
2024-11-30 10:33 - INFO - Creating generators
2024-11-30 10:33 - INFO - The model has 2,246,929 trainable parameters
2024-11-30 10:33 - INFO - * Model:
2024-11-30 10:33 - INFO - * -----------
2024-11-30 10:33 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-30 10:33 - INFO - * -----------
2024-11-30 10:41 - INFO - ---------------------------------------------
2024-11-30 10:41 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-30 10:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81793
2024-11-30 10:41 - INFO - 	 Train Loss: 0.096
2024-11-30 10:41 - INFO - 	 Val. Loss: 0.077
2024-11-30 10:41 - INFO - 	 ROC-AUC: 0.981
2024-11-30 10:41 - INFO - 	 PR-AUC: 0.818
2024-11-30 10:41 - INFO - 	 Best Val. Loss: 0.077
2024-11-30 10:41 - INFO - 	 Best ROC-AUC: 0.981
2024-11-30 10:41 - INFO - 	 Best PR-AUC: 0.818
2024-11-30 10:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-30 10:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.805
2024-11-30 10:41 - INFO - ---------------------------------------------
2024-11-30 10:49 - INFO - ---------------------------------------------
2024-11-30 10:49 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-30 10:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84351
2024-11-30 10:49 - INFO - 	 Train Loss: 0.081
2024-11-30 10:49 - INFO - 	 Val. Loss: 0.069
2024-11-30 10:49 - INFO - 	 ROC-AUC: 0.984
2024-11-30 10:49 - INFO - 	 PR-AUC: 0.844
2024-11-30 10:49 - INFO - 	 Best Val. Loss: 0.069
2024-11-30 10:49 - INFO - 	 Best ROC-AUC: 0.984
2024-11-30 10:49 - INFO - 	 Best PR-AUC: 0.844
2024-11-30 10:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 10:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-30 10:49 - INFO - ---------------------------------------------
2024-11-30 10:58 - INFO - ---------------------------------------------
2024-11-30 10:58 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-30 10:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85057
2024-11-30 10:58 - INFO - 	 Train Loss: 0.077
2024-11-30 10:58 - INFO - 	 Val. Loss: 0.068
2024-11-30 10:58 - INFO - 	 ROC-AUC: 0.985
2024-11-30 10:58 - INFO - 	 PR-AUC: 0.851
2024-11-30 10:58 - INFO - 	 Best Val. Loss: 0.068
2024-11-30 10:58 - INFO - 	 Best ROC-AUC: 0.985
2024-11-30 10:58 - INFO - 	 Best PR-AUC: 0.851
2024-11-30 10:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 10:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-11-30 10:58 - INFO - ---------------------------------------------
2024-11-30 11:06 - INFO - ---------------------------------------------
2024-11-30 11:06 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-30 11:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85998
2024-11-30 11:06 - INFO - 	 Train Loss: 0.075
2024-11-30 11:06 - INFO - 	 Val. Loss: 0.066
2024-11-30 11:06 - INFO - 	 ROC-AUC: 0.986
2024-11-30 11:06 - INFO - 	 PR-AUC: 0.860
2024-11-30 11:06 - INFO - 	 Best Val. Loss: 0.066
2024-11-30 11:06 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 11:06 - INFO - 	 Best PR-AUC: 0.860
2024-11-30 11:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 11:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-30 11:06 - INFO - ---------------------------------------------
2024-11-30 11:14 - INFO - ---------------------------------------------
2024-11-30 11:14 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-30 11:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87642
2024-11-30 11:14 - INFO - 	 Train Loss: 0.071
2024-11-30 11:14 - INFO - 	 Val. Loss: 0.063
2024-11-30 11:14 - INFO - 	 ROC-AUC: 0.986
2024-11-30 11:14 - INFO - 	 PR-AUC: 0.876
2024-11-30 11:14 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 11:14 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 11:14 - INFO - 	 Best PR-AUC: 0.876
2024-11-30 11:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-30 11:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 11:14 - INFO - ---------------------------------------------
2024-11-30 11:22 - INFO - ---------------------------------------------
2024-11-30 11:22 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-30 11:22 - INFO - 	 Train Loss: 0.069
2024-11-30 11:22 - INFO - 	 Val. Loss: 0.063
2024-11-30 11:22 - INFO - 	 ROC-AUC: 0.986
2024-11-30 11:22 - INFO - 	 PR-AUC: 0.871
2024-11-30 11:22 - INFO - 	 Best Val. Loss: 0.063
2024-11-30 11:22 - INFO - 	 Best ROC-AUC: 0.986
2024-11-30 11:22 - INFO - 	 Best PR-AUC: 0.876
2024-11-30 11:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-30 11:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 11:22 - INFO - ---------------------------------------------
2024-11-30 11:30 - INFO - ---------------------------------------------
2024-11-30 11:30 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-30 11:30 - INFO - 	 Train Loss: 0.071
2024-11-30 11:30 - INFO - 	 Val. Loss: 0.062
2024-11-30 11:30 - INFO - 	 ROC-AUC: 0.987
2024-11-30 11:30 - INFO - 	 PR-AUC: 0.865
2024-11-30 11:30 - INFO - 	 Best Val. Loss: 0.062
2024-11-30 11:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 11:30 - INFO - 	 Best PR-AUC: 0.876
2024-11-30 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 11:30 - INFO - ---------------------------------------------
2024-11-30 11:38 - INFO - ---------------------------------------------
2024-11-30 11:38 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-30 11:38 - INFO - 	 Train Loss: 0.069
2024-11-30 11:38 - INFO - 	 Val. Loss: 0.064
2024-11-30 11:38 - INFO - 	 ROC-AUC: 0.987
2024-11-30 11:38 - INFO - 	 PR-AUC: 0.873
2024-11-30 11:38 - INFO - 	 Best Val. Loss: 0.062
2024-11-30 11:38 - INFO - 	 Best ROC-AUC: 0.987
2024-11-30 11:38 - INFO - 	 Best PR-AUC: 0.876
2024-11-30 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-30 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-30 11:38 - INFO - ---------------------------------------------
