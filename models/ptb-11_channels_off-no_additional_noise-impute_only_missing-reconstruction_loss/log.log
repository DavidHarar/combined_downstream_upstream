2024-10-31 17:34 - INFO - Fit the preprocessing pipeline
2024-10-31 17:34 - INFO - Training using device: cuda
2024-10-31 17:34 - INFO - Creating generators
2024-10-31 17:34 - INFO - The model has 2,246,929 trainable parameters
2024-10-31 17:34 - INFO - * Model:
2024-10-31 17:34 - INFO - * -----------
2024-10-31 17:34 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-31 17:34 - INFO - * -----------
2024-10-31 17:42 - INFO - ---------------------------------------------
2024-10-31 17:42 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-31 17:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50129
2024-10-31 17:42 - INFO - 	 Train Loss: 0.187
2024-10-31 17:42 - INFO - 	 Val. Loss: 0.142
2024-10-31 17:42 - INFO - 	 ROC-AUC: 0.932
2024-10-31 17:42 - INFO - 	 PR-AUC: 0.501
2024-10-31 17:42 - INFO - 	 Best Val. Loss: 0.142
2024-10-31 17:42 - INFO - 	 Best ROC-AUC: 0.932
2024-10-31 17:42 - INFO - 	 Best PR-AUC: 0.501
2024-10-31 17:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-10-31 17:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.537
2024-10-31 17:42 - INFO - ---------------------------------------------
2024-10-31 17:50 - INFO - ---------------------------------------------
2024-10-31 17:50 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-31 17:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55355
2024-10-31 17:50 - INFO - 	 Train Loss: 0.146
2024-10-31 17:50 - INFO - 	 Val. Loss: 0.125
2024-10-31 17:50 - INFO - 	 ROC-AUC: 0.953
2024-10-31 17:50 - INFO - 	 PR-AUC: 0.554
2024-10-31 17:50 - INFO - 	 Best Val. Loss: 0.125
2024-10-31 17:50 - INFO - 	 Best ROC-AUC: 0.953
2024-10-31 17:50 - INFO - 	 Best PR-AUC: 0.554
2024-10-31 17:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-31 17:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.624
2024-10-31 17:50 - INFO - ---------------------------------------------
2024-10-31 17:58 - INFO - ---------------------------------------------
2024-10-31 17:58 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-31 17:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59828
2024-10-31 17:58 - INFO - 	 Train Loss: 0.135
2024-10-31 17:58 - INFO - 	 Val. Loss: 0.128
2024-10-31 17:58 - INFO - 	 ROC-AUC: 0.954
2024-10-31 17:58 - INFO - 	 PR-AUC: 0.598
2024-10-31 17:58 - INFO - 	 Best Val. Loss: 0.125
2024-10-31 17:58 - INFO - 	 Best ROC-AUC: 0.954
2024-10-31 17:58 - INFO - 	 Best PR-AUC: 0.598
2024-10-31 17:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.954
2024-10-31 17:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-10-31 17:58 - INFO - ---------------------------------------------
2024-10-31 18:06 - INFO - ---------------------------------------------
2024-10-31 18:06 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-31 18:06 - INFO - 	 Train Loss: 0.129
2024-10-31 18:06 - INFO - 	 Val. Loss: 0.119
2024-10-31 18:06 - INFO - 	 ROC-AUC: 0.956
2024-10-31 18:06 - INFO - 	 PR-AUC: 0.593
2024-10-31 18:06 - INFO - 	 Best Val. Loss: 0.119
2024-10-31 18:06 - INFO - 	 Best ROC-AUC: 0.956
2024-10-31 18:06 - INFO - 	 Best PR-AUC: 0.598
2024-10-31 18:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-31 18:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-10-31 18:06 - INFO - ---------------------------------------------
2024-10-31 18:14 - INFO - ---------------------------------------------
2024-10-31 18:14 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-31 18:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64578
2024-10-31 18:14 - INFO - 	 Train Loss: 0.123
2024-10-31 18:14 - INFO - 	 Val. Loss: 0.112
2024-10-31 18:14 - INFO - 	 ROC-AUC: 0.961
2024-10-31 18:14 - INFO - 	 PR-AUC: 0.646
2024-10-31 18:14 - INFO - 	 Best Val. Loss: 0.112
2024-10-31 18:14 - INFO - 	 Best ROC-AUC: 0.961
2024-10-31 18:14 - INFO - 	 Best PR-AUC: 0.646
2024-10-31 18:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-10-31 18:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.675
2024-10-31 18:14 - INFO - ---------------------------------------------
2024-10-31 18:22 - INFO - ---------------------------------------------
2024-10-31 18:22 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-31 18:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66207
2024-10-31 18:22 - INFO - 	 Train Loss: 0.121
2024-10-31 18:22 - INFO - 	 Val. Loss: 0.109
2024-10-31 18:22 - INFO - 	 ROC-AUC: 0.963
2024-10-31 18:22 - INFO - 	 PR-AUC: 0.662
2024-10-31 18:22 - INFO - 	 Best Val. Loss: 0.109
2024-10-31 18:22 - INFO - 	 Best ROC-AUC: 0.963
2024-10-31 18:22 - INFO - 	 Best PR-AUC: 0.662
2024-10-31 18:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-10-31 18:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.670
2024-10-31 18:22 - INFO - ---------------------------------------------
2024-10-31 18:30 - INFO - ---------------------------------------------
2024-10-31 18:30 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-31 18:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6877
2024-10-31 18:30 - INFO - 	 Train Loss: 0.117
2024-10-31 18:30 - INFO - 	 Val. Loss: 0.104
2024-10-31 18:30 - INFO - 	 ROC-AUC: 0.966
2024-10-31 18:30 - INFO - 	 PR-AUC: 0.688
2024-10-31 18:30 - INFO - 	 Best Val. Loss: 0.104
2024-10-31 18:30 - INFO - 	 Best ROC-AUC: 0.966
2024-10-31 18:30 - INFO - 	 Best PR-AUC: 0.688
2024-10-31 18:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-31 18:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.698
2024-10-31 18:30 - INFO - ---------------------------------------------
2024-10-31 18:39 - INFO - ---------------------------------------------
2024-10-31 18:39 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-31 18:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69305
2024-10-31 18:39 - INFO - 	 Train Loss: 0.115
2024-10-31 18:39 - INFO - 	 Val. Loss: 0.105
2024-10-31 18:39 - INFO - 	 ROC-AUC: 0.966
2024-10-31 18:39 - INFO - 	 PR-AUC: 0.693
2024-10-31 18:39 - INFO - 	 Best Val. Loss: 0.104
2024-10-31 18:39 - INFO - 	 Best ROC-AUC: 0.966
2024-10-31 18:39 - INFO - 	 Best PR-AUC: 0.693
2024-10-31 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-10-31 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.706
2024-10-31 18:39 - INFO - ---------------------------------------------
2024-10-31 18:47 - INFO - ---------------------------------------------
2024-10-31 18:47 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-31 18:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70221
2024-10-31 18:47 - INFO - 	 Train Loss: 0.114
2024-10-31 18:47 - INFO - 	 Val. Loss: 0.104
2024-10-31 18:47 - INFO - 	 ROC-AUC: 0.967
2024-10-31 18:47 - INFO - 	 PR-AUC: 0.702
2024-10-31 18:47 - INFO - 	 Best Val. Loss: 0.104
2024-10-31 18:47 - INFO - 	 Best ROC-AUC: 0.967
2024-10-31 18:47 - INFO - 	 Best PR-AUC: 0.702
2024-10-31 18:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-31 18:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-10-31 18:47 - INFO - ---------------------------------------------
2024-10-31 18:55 - INFO - ---------------------------------------------
2024-10-31 18:55 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-31 18:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71088
2024-10-31 18:55 - INFO - 	 Train Loss: 0.112
2024-10-31 18:55 - INFO - 	 Val. Loss: 0.103
2024-10-31 18:55 - INFO - 	 ROC-AUC: 0.965
2024-10-31 18:55 - INFO - 	 PR-AUC: 0.711
2024-10-31 18:55 - INFO - 	 Best Val. Loss: 0.103
2024-10-31 18:55 - INFO - 	 Best ROC-AUC: 0.967
2024-10-31 18:55 - INFO - 	 Best PR-AUC: 0.711
2024-10-31 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-10-31 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-10-31 18:55 - INFO - ---------------------------------------------
2024-10-31 18:57 - INFO - Fit the preprocessing pipeline
2024-10-31 18:57 - INFO - Training using device: cuda
2024-10-31 18:57 - INFO - Creating generators
2024-10-31 18:57 - INFO - The model has 2,246,929 trainable parameters
2024-10-31 18:57 - INFO - * Model:
2024-10-31 18:57 - INFO - * -----------
2024-10-31 18:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-31 18:57 - INFO - * -----------
2024-10-31 19:05 - INFO - ---------------------------------------------
2024-10-31 19:05 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-31 19:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33896
2024-10-31 19:05 - INFO - 	 Train Loss: 0.189
2024-10-31 19:05 - INFO - 	 Val. Loss: 0.175
2024-10-31 19:05 - INFO - 	 ROC-AUC: 0.878
2024-10-31 19:05 - INFO - 	 PR-AUC: 0.339
2024-10-31 19:05 - INFO - 	 Best Val. Loss: 0.175
2024-10-31 19:05 - INFO - 	 Best ROC-AUC: 0.878
2024-10-31 19:05 - INFO - 	 Best PR-AUC: 0.339
2024-10-31 19:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.885
2024-10-31 19:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.378
2024-10-31 19:05 - INFO - ---------------------------------------------
2024-10-31 19:13 - INFO - ---------------------------------------------
2024-10-31 19:13 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-31 19:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42822
2024-10-31 19:13 - INFO - 	 Train Loss: 0.155
2024-10-31 19:13 - INFO - 	 Val. Loss: 0.148
2024-10-31 19:13 - INFO - 	 ROC-AUC: 0.916
2024-10-31 19:13 - INFO - 	 PR-AUC: 0.428
2024-10-31 19:13 - INFO - 	 Best Val. Loss: 0.148
2024-10-31 19:13 - INFO - 	 Best ROC-AUC: 0.916
2024-10-31 19:13 - INFO - 	 Best PR-AUC: 0.428
2024-10-31 19:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-10-31 19:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-10-31 19:13 - INFO - ---------------------------------------------
2024-10-31 19:21 - INFO - ---------------------------------------------
2024-10-31 19:21 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-31 19:21 - INFO - 	 Train Loss: 0.145
2024-10-31 19:21 - INFO - 	 Val. Loss: 0.147
2024-10-31 19:21 - INFO - 	 ROC-AUC: 0.915
2024-10-31 19:21 - INFO - 	 PR-AUC: 0.426
2024-10-31 19:21 - INFO - 	 Best Val. Loss: 0.147
2024-10-31 19:21 - INFO - 	 Best ROC-AUC: 0.916
2024-10-31 19:21 - INFO - 	 Best PR-AUC: 0.428
2024-10-31 19:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-10-31 19:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-10-31 19:21 - INFO - ---------------------------------------------
2024-10-31 19:29 - INFO - ---------------------------------------------
2024-10-31 19:29 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-31 19:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45571
2024-10-31 19:29 - INFO - 	 Train Loss: 0.137
2024-10-31 19:29 - INFO - 	 Val. Loss: 0.136
2024-10-31 19:29 - INFO - 	 ROC-AUC: 0.920
2024-10-31 19:29 - INFO - 	 PR-AUC: 0.456
2024-10-31 19:29 - INFO - 	 Best Val. Loss: 0.136
2024-10-31 19:29 - INFO - 	 Best ROC-AUC: 0.920
2024-10-31 19:29 - INFO - 	 Best PR-AUC: 0.456
2024-10-31 19:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-10-31 19:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.486
2024-10-31 19:29 - INFO - ---------------------------------------------
2024-10-31 19:37 - INFO - ---------------------------------------------
2024-10-31 19:37 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-31 19:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53731
2024-10-31 19:37 - INFO - 	 Train Loss: 0.129
2024-10-31 19:37 - INFO - 	 Val. Loss: 0.118
2024-10-31 19:37 - INFO - 	 ROC-AUC: 0.945
2024-10-31 19:37 - INFO - 	 PR-AUC: 0.537
2024-10-31 19:37 - INFO - 	 Best Val. Loss: 0.118
2024-10-31 19:37 - INFO - 	 Best ROC-AUC: 0.945
2024-10-31 19:37 - INFO - 	 Best PR-AUC: 0.537
2024-10-31 19:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-10-31 19:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.575
2024-10-31 19:37 - INFO - ---------------------------------------------
2024-10-31 19:45 - INFO - ---------------------------------------------
2024-10-31 19:45 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-31 19:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54065
2024-10-31 19:45 - INFO - 	 Train Loss: 0.126
2024-10-31 19:45 - INFO - 	 Val. Loss: 0.115
2024-10-31 19:45 - INFO - 	 ROC-AUC: 0.948
2024-10-31 19:45 - INFO - 	 PR-AUC: 0.541
2024-10-31 19:45 - INFO - 	 Best Val. Loss: 0.115
2024-10-31 19:45 - INFO - 	 Best ROC-AUC: 0.948
2024-10-31 19:45 - INFO - 	 Best PR-AUC: 0.541
2024-10-31 19:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-10-31 19:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.579
2024-10-31 19:45 - INFO - ---------------------------------------------
2024-10-31 19:53 - INFO - ---------------------------------------------
2024-10-31 19:53 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-31 19:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57712
2024-10-31 19:53 - INFO - 	 Train Loss: 0.125
2024-10-31 19:53 - INFO - 	 Val. Loss: 0.112
2024-10-31 19:53 - INFO - 	 ROC-AUC: 0.956
2024-10-31 19:53 - INFO - 	 PR-AUC: 0.577
2024-10-31 19:53 - INFO - 	 Best Val. Loss: 0.112
2024-10-31 19:53 - INFO - 	 Best ROC-AUC: 0.956
2024-10-31 19:53 - INFO - 	 Best PR-AUC: 0.577
2024-10-31 19:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-31 19:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.621
2024-10-31 19:53 - INFO - ---------------------------------------------
2024-10-31 20:01 - INFO - ---------------------------------------------
2024-10-31 20:01 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-31 20:01 - INFO - 	 Train Loss: 0.119
2024-10-31 20:01 - INFO - 	 Val. Loss: 0.115
2024-10-31 20:01 - INFO - 	 ROC-AUC: 0.952
2024-10-31 20:01 - INFO - 	 PR-AUC: 0.564
2024-10-31 20:01 - INFO - 	 Best Val. Loss: 0.112
2024-10-31 20:01 - INFO - 	 Best ROC-AUC: 0.956
2024-10-31 20:01 - INFO - 	 Best PR-AUC: 0.577
2024-10-31 20:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-31 20:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.621
2024-10-31 20:01 - INFO - ---------------------------------------------
2024-10-31 20:09 - INFO - ---------------------------------------------
2024-10-31 20:09 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-31 20:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60778
2024-10-31 20:09 - INFO - 	 Train Loss: 0.118
2024-10-31 20:09 - INFO - 	 Val. Loss: 0.110
2024-10-31 20:09 - INFO - 	 ROC-AUC: 0.953
2024-10-31 20:09 - INFO - 	 PR-AUC: 0.608
2024-10-31 20:09 - INFO - 	 Best Val. Loss: 0.110
2024-10-31 20:09 - INFO - 	 Best ROC-AUC: 0.956
2024-10-31 20:09 - INFO - 	 Best PR-AUC: 0.608
2024-10-31 20:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-31 20:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-10-31 20:09 - INFO - ---------------------------------------------
2024-10-31 20:17 - INFO - ---------------------------------------------
2024-10-31 20:17 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-31 20:17 - INFO - 	 Train Loss: 0.115
2024-10-31 20:17 - INFO - 	 Val. Loss: 0.110
2024-10-31 20:17 - INFO - 	 ROC-AUC: 0.952
2024-10-31 20:17 - INFO - 	 PR-AUC: 0.588
2024-10-31 20:17 - INFO - 	 Best Val. Loss: 0.110
2024-10-31 20:17 - INFO - 	 Best ROC-AUC: 0.956
2024-10-31 20:17 - INFO - 	 Best PR-AUC: 0.608
2024-10-31 20:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-31 20:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-10-31 20:17 - INFO - ---------------------------------------------
2024-10-31 20:20 - INFO - Fit the preprocessing pipeline
2024-10-31 20:20 - INFO - Training using device: cuda
2024-10-31 20:20 - INFO - Creating generators
2024-10-31 20:20 - INFO - The model has 2,246,929 trainable parameters
2024-10-31 20:20 - INFO - * Model:
2024-10-31 20:20 - INFO - * -----------
2024-10-31 20:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-31 20:20 - INFO - * -----------
2024-10-31 20:28 - INFO - ---------------------------------------------
2024-10-31 20:28 - INFO - Epoch: 01 | Time: 8m 3s
2024-10-31 20:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33403
2024-10-31 20:28 - INFO - 	 Train Loss: 0.166
2024-10-31 20:28 - INFO - 	 Val. Loss: 0.152
2024-10-31 20:28 - INFO - 	 ROC-AUC: 0.878
2024-10-31 20:28 - INFO - 	 PR-AUC: 0.334
2024-10-31 20:28 - INFO - 	 Best Val. Loss: 0.152
2024-10-31 20:28 - INFO - 	 Best ROC-AUC: 0.878
2024-10-31 20:28 - INFO - 	 Best PR-AUC: 0.334
2024-10-31 20:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.884
2024-10-31 20:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.377
2024-10-31 20:28 - INFO - ---------------------------------------------
2024-10-31 20:36 - INFO - ---------------------------------------------
2024-10-31 20:36 - INFO - Epoch: 02 | Time: 8m 2s
2024-10-31 20:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4256
2024-10-31 20:36 - INFO - 	 Train Loss: 0.136
2024-10-31 20:36 - INFO - 	 Val. Loss: 0.127
2024-10-31 20:36 - INFO - 	 ROC-AUC: 0.916
2024-10-31 20:36 - INFO - 	 PR-AUC: 0.426
2024-10-31 20:36 - INFO - 	 Best Val. Loss: 0.127
2024-10-31 20:36 - INFO - 	 Best ROC-AUC: 0.916
2024-10-31 20:36 - INFO - 	 Best PR-AUC: 0.426
2024-10-31 20:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-10-31 20:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.446
2024-10-31 20:36 - INFO - ---------------------------------------------
2024-10-31 20:44 - INFO - ---------------------------------------------
2024-10-31 20:44 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-31 20:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46753
2024-10-31 20:44 - INFO - 	 Train Loss: 0.127
2024-10-31 20:44 - INFO - 	 Val. Loss: 0.122
2024-10-31 20:44 - INFO - 	 ROC-AUC: 0.927
2024-10-31 20:44 - INFO - 	 PR-AUC: 0.468
2024-10-31 20:44 - INFO - 	 Best Val. Loss: 0.122
2024-10-31 20:44 - INFO - 	 Best ROC-AUC: 0.927
2024-10-31 20:44 - INFO - 	 Best PR-AUC: 0.468
2024-10-31 20:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-10-31 20:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.508
2024-10-31 20:44 - INFO - ---------------------------------------------
2024-10-31 20:52 - INFO - ---------------------------------------------
2024-10-31 20:52 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-31 20:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48083
2024-10-31 20:52 - INFO - 	 Train Loss: 0.121
2024-10-31 20:52 - INFO - 	 Val. Loss: 0.116
2024-10-31 20:52 - INFO - 	 ROC-AUC: 0.930
2024-10-31 20:52 - INFO - 	 PR-AUC: 0.481
2024-10-31 20:52 - INFO - 	 Best Val. Loss: 0.116
2024-10-31 20:52 - INFO - 	 Best ROC-AUC: 0.930
2024-10-31 20:52 - INFO - 	 Best PR-AUC: 0.481
2024-10-31 20:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-10-31 20:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.519
2024-10-31 20:52 - INFO - ---------------------------------------------
2024-10-31 21:00 - INFO - ---------------------------------------------
2024-10-31 21:00 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-31 21:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54443
2024-10-31 21:00 - INFO - 	 Train Loss: 0.114
2024-10-31 21:00 - INFO - 	 Val. Loss: 0.103
2024-10-31 21:00 - INFO - 	 ROC-AUC: 0.948
2024-10-31 21:00 - INFO - 	 PR-AUC: 0.544
2024-10-31 21:00 - INFO - 	 Best Val. Loss: 0.103
2024-10-31 21:00 - INFO - 	 Best ROC-AUC: 0.948
2024-10-31 21:00 - INFO - 	 Best PR-AUC: 0.544
2024-10-31 21:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-31 21:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.589
2024-10-31 21:00 - INFO - ---------------------------------------------
2024-10-31 21:08 - INFO - ---------------------------------------------
2024-10-31 21:08 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-31 21:08 - INFO - 	 Train Loss: 0.111
2024-10-31 21:08 - INFO - 	 Val. Loss: 0.102
2024-10-31 21:08 - INFO - 	 ROC-AUC: 0.948
2024-10-31 21:08 - INFO - 	 PR-AUC: 0.538
2024-10-31 21:08 - INFO - 	 Best Val. Loss: 0.102
2024-10-31 21:08 - INFO - 	 Best ROC-AUC: 0.948
2024-10-31 21:08 - INFO - 	 Best PR-AUC: 0.544
2024-10-31 21:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-10-31 21:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.589
2024-10-31 21:08 - INFO - ---------------------------------------------
2024-10-31 21:16 - INFO - ---------------------------------------------
2024-10-31 21:16 - INFO - Epoch: 07 | Time: 8m 2s
2024-10-31 21:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57159
2024-10-31 21:16 - INFO - 	 Train Loss: 0.110
2024-10-31 21:16 - INFO - 	 Val. Loss: 0.098
2024-10-31 21:16 - INFO - 	 ROC-AUC: 0.954
2024-10-31 21:16 - INFO - 	 PR-AUC: 0.572
2024-10-31 21:16 - INFO - 	 Best Val. Loss: 0.098
2024-10-31 21:16 - INFO - 	 Best ROC-AUC: 0.954
2024-10-31 21:16 - INFO - 	 Best PR-AUC: 0.572
2024-10-31 21:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-31 21:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.620
2024-10-31 21:16 - INFO - ---------------------------------------------
2024-10-31 21:24 - INFO - ---------------------------------------------
2024-10-31 21:24 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-31 21:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58659
2024-10-31 21:24 - INFO - 	 Train Loss: 0.105
2024-10-31 21:24 - INFO - 	 Val. Loss: 0.099
2024-10-31 21:24 - INFO - 	 ROC-AUC: 0.954
2024-10-31 21:24 - INFO - 	 PR-AUC: 0.587
2024-10-31 21:24 - INFO - 	 Best Val. Loss: 0.098
2024-10-31 21:24 - INFO - 	 Best ROC-AUC: 0.954
2024-10-31 21:24 - INFO - 	 Best PR-AUC: 0.587
2024-10-31 21:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-10-31 21:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.634
2024-10-31 21:24 - INFO - ---------------------------------------------
2024-10-31 21:32 - INFO - ---------------------------------------------
2024-10-31 21:32 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-31 21:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61301
2024-10-31 21:32 - INFO - 	 Train Loss: 0.104
2024-10-31 21:32 - INFO - 	 Val. Loss: 0.095
2024-10-31 21:32 - INFO - 	 ROC-AUC: 0.955
2024-10-31 21:32 - INFO - 	 PR-AUC: 0.613
2024-10-31 21:32 - INFO - 	 Best Val. Loss: 0.095
2024-10-31 21:32 - INFO - 	 Best ROC-AUC: 0.955
2024-10-31 21:32 - INFO - 	 Best PR-AUC: 0.613
2024-10-31 21:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-10-31 21:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.647
2024-10-31 21:32 - INFO - ---------------------------------------------
2024-10-31 21:40 - INFO - ---------------------------------------------
2024-10-31 21:40 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-31 21:40 - INFO - 	 Train Loss: 0.102
2024-10-31 21:40 - INFO - 	 Val. Loss: 0.099
2024-10-31 21:40 - INFO - 	 ROC-AUC: 0.951
2024-10-31 21:40 - INFO - 	 PR-AUC: 0.560
2024-10-31 21:40 - INFO - 	 Best Val. Loss: 0.095
2024-10-31 21:40 - INFO - 	 Best ROC-AUC: 0.955
2024-10-31 21:40 - INFO - 	 Best PR-AUC: 0.613
2024-10-31 21:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-10-31 21:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.647
2024-10-31 21:40 - INFO - ---------------------------------------------
2024-10-31 21:43 - INFO - Fit the preprocessing pipeline
2024-10-31 21:43 - INFO - Training using device: cuda
2024-10-31 21:43 - INFO - Creating generators
2024-10-31 21:43 - INFO - The model has 2,246,929 trainable parameters
2024-10-31 21:43 - INFO - * Model:
2024-10-31 21:43 - INFO - * -----------
2024-10-31 21:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-31 21:43 - INFO - * -----------
2024-10-31 21:51 - INFO - ---------------------------------------------
2024-10-31 21:51 - INFO - Epoch: 01 | Time: 8m 3s
2024-10-31 21:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33391
2024-10-31 21:51 - INFO - 	 Train Loss: 0.143
2024-10-31 21:51 - INFO - 	 Val. Loss: 0.139
2024-10-31 21:51 - INFO - 	 ROC-AUC: 0.880
2024-10-31 21:51 - INFO - 	 PR-AUC: 0.334
2024-10-31 21:51 - INFO - 	 Best Val. Loss: 0.139
2024-10-31 21:51 - INFO - 	 Best ROC-AUC: 0.880
2024-10-31 21:51 - INFO - 	 Best PR-AUC: 0.334
2024-10-31 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.887
2024-10-31 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.375
2024-10-31 21:51 - INFO - ---------------------------------------------
2024-10-31 21:59 - INFO - ---------------------------------------------
2024-10-31 21:59 - INFO - Epoch: 02 | Time: 8m 3s
2024-10-31 21:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43175
2024-10-31 21:59 - INFO - 	 Train Loss: 0.117
2024-10-31 21:59 - INFO - 	 Val. Loss: 0.110
2024-10-31 21:59 - INFO - 	 ROC-AUC: 0.919
2024-10-31 21:59 - INFO - 	 PR-AUC: 0.432
2024-10-31 21:59 - INFO - 	 Best Val. Loss: 0.110
2024-10-31 21:59 - INFO - 	 Best ROC-AUC: 0.919
2024-10-31 21:59 - INFO - 	 Best PR-AUC: 0.432
2024-10-31 21:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-10-31 21:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-10-31 21:59 - INFO - ---------------------------------------------
2024-10-31 22:07 - INFO - ---------------------------------------------
2024-10-31 22:07 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-31 22:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45348
2024-10-31 22:07 - INFO - 	 Train Loss: 0.109
2024-10-31 22:07 - INFO - 	 Val. Loss: 0.105
2024-10-31 22:07 - INFO - 	 ROC-AUC: 0.924
2024-10-31 22:07 - INFO - 	 PR-AUC: 0.453
2024-10-31 22:07 - INFO - 	 Best Val. Loss: 0.105
2024-10-31 22:07 - INFO - 	 Best ROC-AUC: 0.924
2024-10-31 22:07 - INFO - 	 Best PR-AUC: 0.453
2024-10-31 22:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-10-31 22:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.491
2024-10-31 22:07 - INFO - ---------------------------------------------
2024-10-31 22:15 - INFO - ---------------------------------------------
2024-10-31 22:15 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-31 22:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45876
2024-10-31 22:15 - INFO - 	 Train Loss: 0.105
2024-10-31 22:15 - INFO - 	 Val. Loss: 0.101
2024-10-31 22:15 - INFO - 	 ROC-AUC: 0.928
2024-10-31 22:15 - INFO - 	 PR-AUC: 0.459
2024-10-31 22:15 - INFO - 	 Best Val. Loss: 0.101
2024-10-31 22:15 - INFO - 	 Best ROC-AUC: 0.928
2024-10-31 22:15 - INFO - 	 Best PR-AUC: 0.459
2024-10-31 22:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-10-31 22:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.499
2024-10-31 22:15 - INFO - ---------------------------------------------
2024-10-31 22:23 - INFO - ---------------------------------------------
2024-10-31 22:23 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-31 22:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51675
2024-10-31 22:23 - INFO - 	 Train Loss: 0.099
2024-10-31 22:23 - INFO - 	 Val. Loss: 0.096
2024-10-31 22:23 - INFO - 	 ROC-AUC: 0.942
2024-10-31 22:23 - INFO - 	 PR-AUC: 0.517
2024-10-31 22:23 - INFO - 	 Best Val. Loss: 0.096
2024-10-31 22:23 - INFO - 	 Best ROC-AUC: 0.942
2024-10-31 22:23 - INFO - 	 Best PR-AUC: 0.517
2024-10-31 22:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-10-31 22:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.558
2024-10-31 22:23 - INFO - ---------------------------------------------
2024-10-31 22:31 - INFO - ---------------------------------------------
2024-10-31 22:31 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-31 22:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58145
2024-10-31 22:31 - INFO - 	 Train Loss: 0.097
2024-10-31 22:31 - INFO - 	 Val. Loss: 0.084
2024-10-31 22:31 - INFO - 	 ROC-AUC: 0.952
2024-10-31 22:31 - INFO - 	 PR-AUC: 0.581
2024-10-31 22:31 - INFO - 	 Best Val. Loss: 0.084
2024-10-31 22:31 - INFO - 	 Best ROC-AUC: 0.952
2024-10-31 22:31 - INFO - 	 Best PR-AUC: 0.581
2024-10-31 22:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-10-31 22:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.615
2024-10-31 22:31 - INFO - ---------------------------------------------
2024-10-31 22:39 - INFO - ---------------------------------------------
2024-10-31 22:39 - INFO - Epoch: 07 | Time: 8m 3s
2024-10-31 22:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59264
2024-10-31 22:39 - INFO - 	 Train Loss: 0.095
2024-10-31 22:39 - INFO - 	 Val. Loss: 0.083
2024-10-31 22:39 - INFO - 	 ROC-AUC: 0.958
2024-10-31 22:39 - INFO - 	 PR-AUC: 0.593
2024-10-31 22:39 - INFO - 	 Best Val. Loss: 0.083
2024-10-31 22:39 - INFO - 	 Best ROC-AUC: 0.958
2024-10-31 22:39 - INFO - 	 Best PR-AUC: 0.593
2024-10-31 22:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-31 22:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.626
2024-10-31 22:39 - INFO - ---------------------------------------------
2024-10-31 22:47 - INFO - ---------------------------------------------
2024-10-31 22:47 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-31 22:47 - INFO - 	 Train Loss: 0.092
2024-10-31 22:47 - INFO - 	 Val. Loss: 0.083
2024-10-31 22:47 - INFO - 	 ROC-AUC: 0.954
2024-10-31 22:47 - INFO - 	 PR-AUC: 0.592
2024-10-31 22:47 - INFO - 	 Best Val. Loss: 0.083
2024-10-31 22:47 - INFO - 	 Best ROC-AUC: 0.958
2024-10-31 22:47 - INFO - 	 Best PR-AUC: 0.593
2024-10-31 22:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-31 22:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.626
2024-10-31 22:47 - INFO - ---------------------------------------------
2024-10-31 22:55 - INFO - ---------------------------------------------
2024-10-31 22:55 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-31 22:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5983
2024-10-31 22:55 - INFO - 	 Train Loss: 0.090
2024-10-31 22:55 - INFO - 	 Val. Loss: 0.083
2024-10-31 22:55 - INFO - 	 ROC-AUC: 0.952
2024-10-31 22:55 - INFO - 	 PR-AUC: 0.598
2024-10-31 22:55 - INFO - 	 Best Val. Loss: 0.083
2024-10-31 22:55 - INFO - 	 Best ROC-AUC: 0.958
2024-10-31 22:55 - INFO - 	 Best PR-AUC: 0.598
2024-10-31 22:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-31 22:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.631
2024-10-31 22:55 - INFO - ---------------------------------------------
2024-10-31 23:03 - INFO - ---------------------------------------------
2024-10-31 23:03 - INFO - Epoch: 10 | Time: 8m 2s
2024-10-31 23:03 - INFO - 	 Train Loss: 0.088
2024-10-31 23:03 - INFO - 	 Val. Loss: 0.083
2024-10-31 23:03 - INFO - 	 ROC-AUC: 0.953
2024-10-31 23:03 - INFO - 	 PR-AUC: 0.591
2024-10-31 23:03 - INFO - 	 Best Val. Loss: 0.083
2024-10-31 23:03 - INFO - 	 Best ROC-AUC: 0.958
2024-10-31 23:03 - INFO - 	 Best PR-AUC: 0.598
2024-10-31 23:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-10-31 23:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.631
2024-10-31 23:03 - INFO - ---------------------------------------------
2024-10-31 23:05 - INFO - Fit the preprocessing pipeline
2024-10-31 23:05 - INFO - Training using device: cuda
2024-10-31 23:05 - INFO - Creating generators
2024-10-31 23:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-31 23:05 - INFO - * Model:
2024-10-31 23:05 - INFO - * -----------
2024-10-31 23:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-31 23:05 - INFO - * -----------
2024-10-31 23:14 - INFO - ---------------------------------------------
2024-10-31 23:14 - INFO - Epoch: 01 | Time: 8m 3s
2024-10-31 23:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3353
2024-10-31 23:14 - INFO - 	 Train Loss: 0.120
2024-10-31 23:14 - INFO - 	 Val. Loss: 0.116
2024-10-31 23:14 - INFO - 	 ROC-AUC: 0.882
2024-10-31 23:14 - INFO - 	 PR-AUC: 0.335
2024-10-31 23:14 - INFO - 	 Best Val. Loss: 0.116
2024-10-31 23:14 - INFO - 	 Best ROC-AUC: 0.882
2024-10-31 23:14 - INFO - 	 Best PR-AUC: 0.335
2024-10-31 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-10-31 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.379
2024-10-31 23:14 - INFO - ---------------------------------------------
2024-10-31 23:22 - INFO - ---------------------------------------------
2024-10-31 23:22 - INFO - Epoch: 02 | Time: 8m 3s
2024-10-31 23:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41255
2024-10-31 23:22 - INFO - 	 Train Loss: 0.098
2024-10-31 23:22 - INFO - 	 Val. Loss: 0.104
2024-10-31 23:22 - INFO - 	 ROC-AUC: 0.909
2024-10-31 23:22 - INFO - 	 PR-AUC: 0.413
2024-10-31 23:22 - INFO - 	 Best Val. Loss: 0.104
2024-10-31 23:22 - INFO - 	 Best ROC-AUC: 0.909
2024-10-31 23:22 - INFO - 	 Best PR-AUC: 0.413
2024-10-31 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.910
2024-10-31 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-10-31 23:22 - INFO - ---------------------------------------------
2024-10-31 23:30 - INFO - ---------------------------------------------
2024-10-31 23:30 - INFO - Epoch: 03 | Time: 8m 3s
2024-10-31 23:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43592
2024-10-31 23:30 - INFO - 	 Train Loss: 0.092
2024-10-31 23:30 - INFO - 	 Val. Loss: 0.093
2024-10-31 23:30 - INFO - 	 ROC-AUC: 0.919
2024-10-31 23:30 - INFO - 	 PR-AUC: 0.436
2024-10-31 23:30 - INFO - 	 Best Val. Loss: 0.093
2024-10-31 23:30 - INFO - 	 Best ROC-AUC: 0.919
2024-10-31 23:30 - INFO - 	 Best PR-AUC: 0.436
2024-10-31 23:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-10-31 23:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.476
2024-10-31 23:30 - INFO - ---------------------------------------------
2024-10-31 23:38 - INFO - ---------------------------------------------
2024-10-31 23:38 - INFO - Epoch: 04 | Time: 8m 2s
2024-10-31 23:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47749
2024-10-31 23:38 - INFO - 	 Train Loss: 0.088
2024-10-31 23:38 - INFO - 	 Val. Loss: 0.083
2024-10-31 23:38 - INFO - 	 ROC-AUC: 0.929
2024-10-31 23:38 - INFO - 	 PR-AUC: 0.477
2024-10-31 23:38 - INFO - 	 Best Val. Loss: 0.083
2024-10-31 23:38 - INFO - 	 Best ROC-AUC: 0.929
2024-10-31 23:38 - INFO - 	 Best PR-AUC: 0.477
2024-10-31 23:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-10-31 23:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.518
2024-10-31 23:38 - INFO - ---------------------------------------------
2024-10-31 23:46 - INFO - ---------------------------------------------
2024-10-31 23:46 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-31 23:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51072
2024-10-31 23:46 - INFO - 	 Train Loss: 0.083
2024-10-31 23:46 - INFO - 	 Val. Loss: 0.078
2024-10-31 23:46 - INFO - 	 ROC-AUC: 0.942
2024-10-31 23:46 - INFO - 	 PR-AUC: 0.511
2024-10-31 23:46 - INFO - 	 Best Val. Loss: 0.078
2024-10-31 23:46 - INFO - 	 Best ROC-AUC: 0.942
2024-10-31 23:46 - INFO - 	 Best PR-AUC: 0.511
2024-10-31 23:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-10-31 23:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.573
2024-10-31 23:46 - INFO - ---------------------------------------------
2024-10-31 23:54 - INFO - ---------------------------------------------
2024-10-31 23:54 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-31 23:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52352
2024-10-31 23:54 - INFO - 	 Train Loss: 0.080
2024-10-31 23:54 - INFO - 	 Val. Loss: 0.076
2024-10-31 23:54 - INFO - 	 ROC-AUC: 0.946
2024-10-31 23:54 - INFO - 	 PR-AUC: 0.524
2024-10-31 23:54 - INFO - 	 Best Val. Loss: 0.076
2024-10-31 23:54 - INFO - 	 Best ROC-AUC: 0.946
2024-10-31 23:54 - INFO - 	 Best PR-AUC: 0.524
2024-10-31 23:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-10-31 23:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.569
2024-10-31 23:54 - INFO - ---------------------------------------------
2024-11-01 00:02 - INFO - ---------------------------------------------
2024-11-01 00:02 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 00:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53764
2024-11-01 00:02 - INFO - 	 Train Loss: 0.079
2024-11-01 00:02 - INFO - 	 Val. Loss: 0.077
2024-11-01 00:02 - INFO - 	 ROC-AUC: 0.949
2024-11-01 00:02 - INFO - 	 PR-AUC: 0.538
2024-11-01 00:02 - INFO - 	 Best Val. Loss: 0.076
2024-11-01 00:02 - INFO - 	 Best ROC-AUC: 0.949
2024-11-01 00:02 - INFO - 	 Best PR-AUC: 0.538
2024-11-01 00:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-01 00:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.583
2024-11-01 00:02 - INFO - ---------------------------------------------
2024-11-01 00:10 - INFO - ---------------------------------------------
2024-11-01 00:10 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 00:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59793
2024-11-01 00:10 - INFO - 	 Train Loss: 0.077
2024-11-01 00:10 - INFO - 	 Val. Loss: 0.073
2024-11-01 00:10 - INFO - 	 ROC-AUC: 0.953
2024-11-01 00:10 - INFO - 	 PR-AUC: 0.598
2024-11-01 00:10 - INFO - 	 Best Val. Loss: 0.073
2024-11-01 00:10 - INFO - 	 Best ROC-AUC: 0.953
2024-11-01 00:10 - INFO - 	 Best PR-AUC: 0.598
2024-11-01 00:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-11-01 00:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.626
2024-11-01 00:10 - INFO - ---------------------------------------------
2024-11-01 00:18 - INFO - ---------------------------------------------
2024-11-01 00:18 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 00:18 - INFO - 	 Train Loss: 0.075
2024-11-01 00:18 - INFO - 	 Val. Loss: 0.071
2024-11-01 00:18 - INFO - 	 ROC-AUC: 0.950
2024-11-01 00:18 - INFO - 	 PR-AUC: 0.593
2024-11-01 00:18 - INFO - 	 Best Val. Loss: 0.071
2024-11-01 00:18 - INFO - 	 Best ROC-AUC: 0.953
2024-11-01 00:18 - INFO - 	 Best PR-AUC: 0.598
2024-11-01 00:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-11-01 00:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.626
2024-11-01 00:18 - INFO - ---------------------------------------------
2024-11-01 00:26 - INFO - ---------------------------------------------
2024-11-01 00:26 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 00:26 - INFO - 	 Train Loss: 0.073
2024-11-01 00:26 - INFO - 	 Val. Loss: 0.072
2024-11-01 00:26 - INFO - 	 ROC-AUC: 0.951
2024-11-01 00:26 - INFO - 	 PR-AUC: 0.568
2024-11-01 00:26 - INFO - 	 Best Val. Loss: 0.071
2024-11-01 00:26 - INFO - 	 Best ROC-AUC: 0.953
2024-11-01 00:26 - INFO - 	 Best PR-AUC: 0.598
2024-11-01 00:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-11-01 00:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.626
2024-11-01 00:26 - INFO - ---------------------------------------------
2024-11-01 00:28 - INFO - Fit the preprocessing pipeline
2024-11-01 00:28 - INFO - Training using device: cuda
2024-11-01 00:28 - INFO - Creating generators
2024-11-01 00:28 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 00:28 - INFO - * Model:
2024-11-01 00:28 - INFO - * -----------
2024-11-01 00:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 00:28 - INFO - * -----------
2024-11-01 00:36 - INFO - ---------------------------------------------
2024-11-01 00:36 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 00:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32776
2024-11-01 00:36 - INFO - 	 Train Loss: 0.098
2024-11-01 00:36 - INFO - 	 Val. Loss: 0.099
2024-11-01 00:36 - INFO - 	 ROC-AUC: 0.858
2024-11-01 00:36 - INFO - 	 PR-AUC: 0.328
2024-11-01 00:36 - INFO - 	 Best Val. Loss: 0.099
2024-11-01 00:36 - INFO - 	 Best ROC-AUC: 0.858
2024-11-01 00:36 - INFO - 	 Best PR-AUC: 0.328
2024-11-01 00:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.865
2024-11-01 00:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.362
2024-11-01 00:36 - INFO - ---------------------------------------------
2024-11-01 00:44 - INFO - ---------------------------------------------
2024-11-01 00:44 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 00:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42564
2024-11-01 00:44 - INFO - 	 Train Loss: 0.079
2024-11-01 00:44 - INFO - 	 Val. Loss: 0.082
2024-11-01 00:44 - INFO - 	 ROC-AUC: 0.914
2024-11-01 00:44 - INFO - 	 PR-AUC: 0.426
2024-11-01 00:44 - INFO - 	 Best Val. Loss: 0.082
2024-11-01 00:44 - INFO - 	 Best ROC-AUC: 0.914
2024-11-01 00:44 - INFO - 	 Best PR-AUC: 0.426
2024-11-01 00:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.915
2024-11-01 00:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.441
2024-11-01 00:44 - INFO - ---------------------------------------------
2024-11-01 00:53 - INFO - ---------------------------------------------
2024-11-01 00:53 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 00:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44164
2024-11-01 00:53 - INFO - 	 Train Loss: 0.075
2024-11-01 00:53 - INFO - 	 Val. Loss: 0.076
2024-11-01 00:53 - INFO - 	 ROC-AUC: 0.915
2024-11-01 00:53 - INFO - 	 PR-AUC: 0.442
2024-11-01 00:53 - INFO - 	 Best Val. Loss: 0.076
2024-11-01 00:53 - INFO - 	 Best ROC-AUC: 0.915
2024-11-01 00:53 - INFO - 	 Best PR-AUC: 0.442
2024-11-01 00:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.925
2024-11-01 00:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.473
2024-11-01 00:53 - INFO - ---------------------------------------------
2024-11-01 01:01 - INFO - ---------------------------------------------
2024-11-01 01:01 - INFO - Epoch: 04 | Time: 8m 3s
2024-11-01 01:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4766
2024-11-01 01:01 - INFO - 	 Train Loss: 0.070
2024-11-01 01:01 - INFO - 	 Val. Loss: 0.070
2024-11-01 01:01 - INFO - 	 ROC-AUC: 0.925
2024-11-01 01:01 - INFO - 	 PR-AUC: 0.477
2024-11-01 01:01 - INFO - 	 Best Val. Loss: 0.070
2024-11-01 01:01 - INFO - 	 Best ROC-AUC: 0.925
2024-11-01 01:01 - INFO - 	 Best PR-AUC: 0.477
2024-11-01 01:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-01 01:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.502
2024-11-01 01:01 - INFO - ---------------------------------------------
2024-11-01 01:09 - INFO - ---------------------------------------------
2024-11-01 01:09 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 01:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52517
2024-11-01 01:09 - INFO - 	 Train Loss: 0.067
2024-11-01 01:09 - INFO - 	 Val. Loss: 0.062
2024-11-01 01:09 - INFO - 	 ROC-AUC: 0.945
2024-11-01 01:09 - INFO - 	 PR-AUC: 0.525
2024-11-01 01:09 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 01:09 - INFO - 	 Best ROC-AUC: 0.945
2024-11-01 01:09 - INFO - 	 Best PR-AUC: 0.525
2024-11-01 01:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-01 01:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.569
2024-11-01 01:09 - INFO - ---------------------------------------------
2024-11-01 01:17 - INFO - ---------------------------------------------
2024-11-01 01:17 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 01:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55078
2024-11-01 01:17 - INFO - 	 Train Loss: 0.065
2024-11-01 01:17 - INFO - 	 Val. Loss: 0.059
2024-11-01 01:17 - INFO - 	 ROC-AUC: 0.951
2024-11-01 01:17 - INFO - 	 PR-AUC: 0.551
2024-11-01 01:17 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 01:17 - INFO - 	 Best ROC-AUC: 0.951
2024-11-01 01:17 - INFO - 	 Best PR-AUC: 0.551
2024-11-01 01:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.953
2024-11-01 01:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.588
2024-11-01 01:17 - INFO - ---------------------------------------------
2024-11-01 01:25 - INFO - ---------------------------------------------
2024-11-01 01:25 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 01:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57402
2024-11-01 01:25 - INFO - 	 Train Loss: 0.065
2024-11-01 01:25 - INFO - 	 Val. Loss: 0.060
2024-11-01 01:25 - INFO - 	 ROC-AUC: 0.956
2024-11-01 01:25 - INFO - 	 PR-AUC: 0.574
2024-11-01 01:25 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 01:25 - INFO - 	 Best ROC-AUC: 0.956
2024-11-01 01:25 - INFO - 	 Best PR-AUC: 0.574
2024-11-01 01:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-01 01:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-11-01 01:25 - INFO - ---------------------------------------------
2024-11-01 01:33 - INFO - ---------------------------------------------
2024-11-01 01:33 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 01:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58177
2024-11-01 01:33 - INFO - 	 Train Loss: 0.063
2024-11-01 01:33 - INFO - 	 Val. Loss: 0.062
2024-11-01 01:33 - INFO - 	 ROC-AUC: 0.952
2024-11-01 01:33 - INFO - 	 PR-AUC: 0.582
2024-11-01 01:33 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 01:33 - INFO - 	 Best ROC-AUC: 0.956
2024-11-01 01:33 - INFO - 	 Best PR-AUC: 0.582
2024-11-01 01:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-01 01:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.635
2024-11-01 01:33 - INFO - ---------------------------------------------
2024-11-01 01:41 - INFO - ---------------------------------------------
2024-11-01 01:41 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 01:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61927
2024-11-01 01:41 - INFO - 	 Train Loss: 0.060
2024-11-01 01:41 - INFO - 	 Val. Loss: 0.056
2024-11-01 01:41 - INFO - 	 ROC-AUC: 0.953
2024-11-01 01:41 - INFO - 	 PR-AUC: 0.619
2024-11-01 01:41 - INFO - 	 Best Val. Loss: 0.056
2024-11-01 01:41 - INFO - 	 Best ROC-AUC: 0.956
2024-11-01 01:41 - INFO - 	 Best PR-AUC: 0.619
2024-11-01 01:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-01 01:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.648
2024-11-01 01:41 - INFO - ---------------------------------------------
2024-11-01 01:49 - INFO - ---------------------------------------------
2024-11-01 01:49 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 01:49 - INFO - 	 Train Loss: 0.059
2024-11-01 01:49 - INFO - 	 Val. Loss: 0.059
2024-11-01 01:49 - INFO - 	 ROC-AUC: 0.951
2024-11-01 01:49 - INFO - 	 PR-AUC: 0.574
2024-11-01 01:49 - INFO - 	 Best Val. Loss: 0.056
2024-11-01 01:49 - INFO - 	 Best ROC-AUC: 0.956
2024-11-01 01:49 - INFO - 	 Best PR-AUC: 0.619
2024-11-01 01:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-01 01:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.648
2024-11-01 01:49 - INFO - ---------------------------------------------
2024-11-01 01:51 - INFO - Fit the preprocessing pipeline
2024-11-01 01:51 - INFO - Training using device: cuda
2024-11-01 01:51 - INFO - Creating generators
2024-11-01 01:51 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 01:51 - INFO - * Model:
2024-11-01 01:51 - INFO - * -----------
2024-11-01 01:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 01:51 - INFO - * -----------
2024-11-01 01:59 - INFO - ---------------------------------------------
2024-11-01 01:59 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 01:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33155
2024-11-01 01:59 - INFO - 	 Train Loss: 0.076
2024-11-01 01:59 - INFO - 	 Val. Loss: 0.079
2024-11-01 01:59 - INFO - 	 ROC-AUC: 0.869
2024-11-01 01:59 - INFO - 	 PR-AUC: 0.332
2024-11-01 01:59 - INFO - 	 Best Val. Loss: 0.079
2024-11-01 01:59 - INFO - 	 Best ROC-AUC: 0.869
2024-11-01 01:59 - INFO - 	 Best PR-AUC: 0.332
2024-11-01 01:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-01 01:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.369
2024-11-01 01:59 - INFO - ---------------------------------------------
2024-11-01 02:07 - INFO - ---------------------------------------------
2024-11-01 02:07 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 02:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43893
2024-11-01 02:07 - INFO - 	 Train Loss: 0.061
2024-11-01 02:07 - INFO - 	 Val. Loss: 0.063
2024-11-01 02:07 - INFO - 	 ROC-AUC: 0.921
2024-11-01 02:07 - INFO - 	 PR-AUC: 0.439
2024-11-01 02:07 - INFO - 	 Best Val. Loss: 0.063
2024-11-01 02:07 - INFO - 	 Best ROC-AUC: 0.921
2024-11-01 02:07 - INFO - 	 Best PR-AUC: 0.439
2024-11-01 02:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-01 02:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.453
2024-11-01 02:07 - INFO - ---------------------------------------------
2024-11-01 02:15 - INFO - ---------------------------------------------
2024-11-01 02:15 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 02:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46126
2024-11-01 02:15 - INFO - 	 Train Loss: 0.058
2024-11-01 02:15 - INFO - 	 Val. Loss: 0.057
2024-11-01 02:15 - INFO - 	 ROC-AUC: 0.924
2024-11-01 02:15 - INFO - 	 PR-AUC: 0.461
2024-11-01 02:15 - INFO - 	 Best Val. Loss: 0.057
2024-11-01 02:15 - INFO - 	 Best ROC-AUC: 0.924
2024-11-01 02:15 - INFO - 	 Best PR-AUC: 0.461
2024-11-01 02:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-01 02:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.487
2024-11-01 02:15 - INFO - ---------------------------------------------
2024-11-01 02:23 - INFO - ---------------------------------------------
2024-11-01 02:23 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 02:23 - INFO - 	 Train Loss: 0.053
2024-11-01 02:23 - INFO - 	 Val. Loss: 0.055
2024-11-01 02:23 - INFO - 	 ROC-AUC: 0.920
2024-11-01 02:23 - INFO - 	 PR-AUC: 0.453
2024-11-01 02:23 - INFO - 	 Best Val. Loss: 0.055
2024-11-01 02:23 - INFO - 	 Best ROC-AUC: 0.924
2024-11-01 02:23 - INFO - 	 Best PR-AUC: 0.461
2024-11-01 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-01 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.487
2024-11-01 02:23 - INFO - ---------------------------------------------
2024-11-01 02:31 - INFO - ---------------------------------------------
2024-11-01 02:31 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 02:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51057
2024-11-01 02:31 - INFO - 	 Train Loss: 0.051
2024-11-01 02:31 - INFO - 	 Val. Loss: 0.049
2024-11-01 02:31 - INFO - 	 ROC-AUC: 0.941
2024-11-01 02:31 - INFO - 	 PR-AUC: 0.511
2024-11-01 02:31 - INFO - 	 Best Val. Loss: 0.049
2024-11-01 02:31 - INFO - 	 Best ROC-AUC: 0.941
2024-11-01 02:31 - INFO - 	 Best PR-AUC: 0.511
2024-11-01 02:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-01 02:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.564
2024-11-01 02:31 - INFO - ---------------------------------------------
2024-11-01 02:39 - INFO - ---------------------------------------------
2024-11-01 02:39 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 02:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51913
2024-11-01 02:39 - INFO - 	 Train Loss: 0.049
2024-11-01 02:39 - INFO - 	 Val. Loss: 0.048
2024-11-01 02:39 - INFO - 	 ROC-AUC: 0.943
2024-11-01 02:39 - INFO - 	 PR-AUC: 0.519
2024-11-01 02:39 - INFO - 	 Best Val. Loss: 0.048
2024-11-01 02:39 - INFO - 	 Best ROC-AUC: 0.943
2024-11-01 02:39 - INFO - 	 Best PR-AUC: 0.519
2024-11-01 02:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-01 02:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.571
2024-11-01 02:39 - INFO - ---------------------------------------------
2024-11-01 02:48 - INFO - ---------------------------------------------
2024-11-01 02:48 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 02:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57263
2024-11-01 02:48 - INFO - 	 Train Loss: 0.049
2024-11-01 02:48 - INFO - 	 Val. Loss: 0.047
2024-11-01 02:48 - INFO - 	 ROC-AUC: 0.955
2024-11-01 02:48 - INFO - 	 PR-AUC: 0.573
2024-11-01 02:48 - INFO - 	 Best Val. Loss: 0.047
2024-11-01 02:48 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 02:48 - INFO - 	 Best PR-AUC: 0.573
2024-11-01 02:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-01 02:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.620
2024-11-01 02:48 - INFO - ---------------------------------------------
2024-11-01 02:56 - INFO - ---------------------------------------------
2024-11-01 02:56 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 02:56 - INFO - 	 Train Loss: 0.048
2024-11-01 02:56 - INFO - 	 Val. Loss: 0.048
2024-11-01 02:56 - INFO - 	 ROC-AUC: 0.950
2024-11-01 02:56 - INFO - 	 PR-AUC: 0.570
2024-11-01 02:56 - INFO - 	 Best Val. Loss: 0.047
2024-11-01 02:56 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 02:56 - INFO - 	 Best PR-AUC: 0.573
2024-11-01 02:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-01 02:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.620
2024-11-01 02:56 - INFO - ---------------------------------------------
2024-11-01 03:04 - INFO - ---------------------------------------------
2024-11-01 03:04 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 03:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58865
2024-11-01 03:04 - INFO - 	 Train Loss: 0.046
2024-11-01 03:04 - INFO - 	 Val. Loss: 0.045
2024-11-01 03:04 - INFO - 	 ROC-AUC: 0.949
2024-11-01 03:04 - INFO - 	 PR-AUC: 0.589
2024-11-01 03:04 - INFO - 	 Best Val. Loss: 0.045
2024-11-01 03:04 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 03:04 - INFO - 	 Best PR-AUC: 0.589
2024-11-01 03:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-01 03:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.622
2024-11-01 03:04 - INFO - ---------------------------------------------
2024-11-01 03:12 - INFO - ---------------------------------------------
2024-11-01 03:12 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 03:12 - INFO - 	 Train Loss: 0.044
2024-11-01 03:12 - INFO - 	 Val. Loss: 0.048
2024-11-01 03:12 - INFO - 	 ROC-AUC: 0.947
2024-11-01 03:12 - INFO - 	 PR-AUC: 0.553
2024-11-01 03:12 - INFO - 	 Best Val. Loss: 0.045
2024-11-01 03:12 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 03:12 - INFO - 	 Best PR-AUC: 0.589
2024-11-01 03:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-01 03:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.622
2024-11-01 03:12 - INFO - ---------------------------------------------
2024-11-01 03:14 - INFO - Fit the preprocessing pipeline
2024-11-01 03:14 - INFO - Training using device: cuda
2024-11-01 03:14 - INFO - Creating generators
2024-11-01 03:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 03:14 - INFO - * Model:
2024-11-01 03:14 - INFO - * -----------
2024-11-01 03:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 03:14 - INFO - * -----------
2024-11-01 03:22 - INFO - ---------------------------------------------
2024-11-01 03:22 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 03:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33165
2024-11-01 03:22 - INFO - 	 Train Loss: 0.054
2024-11-01 03:22 - INFO - 	 Val. Loss: 0.058
2024-11-01 03:22 - INFO - 	 ROC-AUC: 0.880
2024-11-01 03:22 - INFO - 	 PR-AUC: 0.332
2024-11-01 03:22 - INFO - 	 Best Val. Loss: 0.058
2024-11-01 03:22 - INFO - 	 Best ROC-AUC: 0.880
2024-11-01 03:22 - INFO - 	 Best PR-AUC: 0.332
2024-11-01 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.888
2024-11-01 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.376
2024-11-01 03:22 - INFO - ---------------------------------------------
2024-11-01 03:30 - INFO - ---------------------------------------------
2024-11-01 03:30 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 03:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44479
2024-11-01 03:30 - INFO - 	 Train Loss: 0.042
2024-11-01 03:30 - INFO - 	 Val. Loss: 0.045
2024-11-01 03:30 - INFO - 	 ROC-AUC: 0.923
2024-11-01 03:30 - INFO - 	 PR-AUC: 0.445
2024-11-01 03:30 - INFO - 	 Best Val. Loss: 0.045
2024-11-01 03:30 - INFO - 	 Best ROC-AUC: 0.923
2024-11-01 03:30 - INFO - 	 Best PR-AUC: 0.445
2024-11-01 03:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-01 03:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.466
2024-11-01 03:30 - INFO - ---------------------------------------------
2024-11-01 03:38 - INFO - ---------------------------------------------
2024-11-01 03:38 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 03:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45101
2024-11-01 03:38 - INFO - 	 Train Loss: 0.041
2024-11-01 03:38 - INFO - 	 Val. Loss: 0.041
2024-11-01 03:38 - INFO - 	 ROC-AUC: 0.923
2024-11-01 03:38 - INFO - 	 PR-AUC: 0.451
2024-11-01 03:38 - INFO - 	 Best Val. Loss: 0.041
2024-11-01 03:38 - INFO - 	 Best ROC-AUC: 0.923
2024-11-01 03:38 - INFO - 	 Best PR-AUC: 0.451
2024-11-01 03:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-01 03:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.486
2024-11-01 03:38 - INFO - ---------------------------------------------
2024-11-01 03:46 - INFO - ---------------------------------------------
2024-11-01 03:46 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 03:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4909
2024-11-01 03:46 - INFO - 	 Train Loss: 0.037
2024-11-01 03:46 - INFO - 	 Val. Loss: 0.037
2024-11-01 03:46 - INFO - 	 ROC-AUC: 0.931
2024-11-01 03:46 - INFO - 	 PR-AUC: 0.491
2024-11-01 03:46 - INFO - 	 Best Val. Loss: 0.037
2024-11-01 03:46 - INFO - 	 Best ROC-AUC: 0.931
2024-11-01 03:46 - INFO - 	 Best PR-AUC: 0.491
2024-11-01 03:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-01 03:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.533
2024-11-01 03:46 - INFO - ---------------------------------------------
2024-11-01 03:54 - INFO - ---------------------------------------------
2024-11-01 03:54 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 03:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53033
2024-11-01 03:54 - INFO - 	 Train Loss: 0.035
2024-11-01 03:54 - INFO - 	 Val. Loss: 0.033
2024-11-01 03:54 - INFO - 	 ROC-AUC: 0.944
2024-11-01 03:54 - INFO - 	 PR-AUC: 0.530
2024-11-01 03:54 - INFO - 	 Best Val. Loss: 0.033
2024-11-01 03:54 - INFO - 	 Best ROC-AUC: 0.944
2024-11-01 03:54 - INFO - 	 Best PR-AUC: 0.530
2024-11-01 03:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-01 03:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.571
2024-11-01 03:54 - INFO - ---------------------------------------------
2024-11-01 04:02 - INFO - ---------------------------------------------
2024-11-01 04:02 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 04:02 - INFO - 	 Train Loss: 0.034
2024-11-01 04:02 - INFO - 	 Val. Loss: 0.032
2024-11-01 04:02 - INFO - 	 ROC-AUC: 0.946
2024-11-01 04:02 - INFO - 	 PR-AUC: 0.521
2024-11-01 04:02 - INFO - 	 Best Val. Loss: 0.032
2024-11-01 04:02 - INFO - 	 Best ROC-AUC: 0.946
2024-11-01 04:02 - INFO - 	 Best PR-AUC: 0.530
2024-11-01 04:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-01 04:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.571
2024-11-01 04:02 - INFO - ---------------------------------------------
2024-11-01 04:10 - INFO - ---------------------------------------------
2024-11-01 04:10 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 04:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56145
2024-11-01 04:10 - INFO - 	 Train Loss: 0.034
2024-11-01 04:10 - INFO - 	 Val. Loss: 0.036
2024-11-01 04:10 - INFO - 	 ROC-AUC: 0.952
2024-11-01 04:10 - INFO - 	 PR-AUC: 0.561
2024-11-01 04:10 - INFO - 	 Best Val. Loss: 0.032
2024-11-01 04:10 - INFO - 	 Best ROC-AUC: 0.952
2024-11-01 04:10 - INFO - 	 Best PR-AUC: 0.561
2024-11-01 04:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-11-01 04:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.614
2024-11-01 04:10 - INFO - ---------------------------------------------
2024-11-01 04:18 - INFO - ---------------------------------------------
2024-11-01 04:18 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 04:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58949
2024-11-01 04:18 - INFO - 	 Train Loss: 0.034
2024-11-01 04:18 - INFO - 	 Val. Loss: 0.032
2024-11-01 04:18 - INFO - 	 ROC-AUC: 0.953
2024-11-01 04:18 - INFO - 	 PR-AUC: 0.589
2024-11-01 04:18 - INFO - 	 Best Val. Loss: 0.032
2024-11-01 04:18 - INFO - 	 Best ROC-AUC: 0.953
2024-11-01 04:18 - INFO - 	 Best PR-AUC: 0.589
2024-11-01 04:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-01 04:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.627
2024-11-01 04:18 - INFO - ---------------------------------------------
2024-11-01 04:27 - INFO - ---------------------------------------------
2024-11-01 04:27 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 04:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.624
2024-11-01 04:27 - INFO - 	 Train Loss: 0.032
2024-11-01 04:27 - INFO - 	 Val. Loss: 0.030
2024-11-01 04:27 - INFO - 	 ROC-AUC: 0.952
2024-11-01 04:27 - INFO - 	 PR-AUC: 0.624
2024-11-01 04:27 - INFO - 	 Best Val. Loss: 0.030
2024-11-01 04:27 - INFO - 	 Best ROC-AUC: 0.953
2024-11-01 04:27 - INFO - 	 Best PR-AUC: 0.624
2024-11-01 04:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-01 04:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-11-01 04:27 - INFO - ---------------------------------------------
2024-11-01 04:35 - INFO - ---------------------------------------------
2024-11-01 04:35 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 04:35 - INFO - 	 Train Loss: 0.031
2024-11-01 04:35 - INFO - 	 Val. Loss: 0.035
2024-11-01 04:35 - INFO - 	 ROC-AUC: 0.945
2024-11-01 04:35 - INFO - 	 PR-AUC: 0.522
2024-11-01 04:35 - INFO - 	 Best Val. Loss: 0.030
2024-11-01 04:35 - INFO - 	 Best ROC-AUC: 0.953
2024-11-01 04:35 - INFO - 	 Best PR-AUC: 0.624
2024-11-01 04:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-01 04:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.645
2024-11-01 04:35 - INFO - ---------------------------------------------
2024-11-01 04:37 - INFO - Fit the preprocessing pipeline
2024-11-01 04:37 - INFO - Training using device: cuda
2024-11-01 04:37 - INFO - Creating generators
2024-11-01 04:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 04:37 - INFO - * Model:
2024-11-01 04:37 - INFO - * -----------
2024-11-01 04:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 04:37 - INFO - * -----------
2024-11-01 04:45 - INFO - ---------------------------------------------
2024-11-01 04:45 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 04:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31422
2024-11-01 04:45 - INFO - 	 Train Loss: 0.032
2024-11-01 04:45 - INFO - 	 Val. Loss: 0.042
2024-11-01 04:45 - INFO - 	 ROC-AUC: 0.865
2024-11-01 04:45 - INFO - 	 PR-AUC: 0.314
2024-11-01 04:45 - INFO - 	 Best Val. Loss: 0.042
2024-11-01 04:45 - INFO - 	 Best ROC-AUC: 0.865
2024-11-01 04:45 - INFO - 	 Best PR-AUC: 0.314
2024-11-01 04:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.874
2024-11-01 04:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.359
2024-11-01 04:45 - INFO - ---------------------------------------------
2024-11-01 04:53 - INFO - ---------------------------------------------
2024-11-01 04:53 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 04:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4222
2024-11-01 04:53 - INFO - 	 Train Loss: 0.023
2024-11-01 04:53 - INFO - 	 Val. Loss: 0.030
2024-11-01 04:53 - INFO - 	 ROC-AUC: 0.917
2024-11-01 04:53 - INFO - 	 PR-AUC: 0.422
2024-11-01 04:53 - INFO - 	 Best Val. Loss: 0.030
2024-11-01 04:53 - INFO - 	 Best ROC-AUC: 0.917
2024-11-01 04:53 - INFO - 	 Best PR-AUC: 0.422
2024-11-01 04:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-01 04:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-11-01 04:53 - INFO - ---------------------------------------------
2024-11-01 05:01 - INFO - ---------------------------------------------
2024-11-01 05:01 - INFO - Epoch: 03 | Time: 8m 3s
2024-11-01 05:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46321
2024-11-01 05:01 - INFO - 	 Train Loss: 0.024
2024-11-01 05:01 - INFO - 	 Val. Loss: 0.024
2024-11-01 05:01 - INFO - 	 ROC-AUC: 0.928
2024-11-01 05:01 - INFO - 	 PR-AUC: 0.463
2024-11-01 05:01 - INFO - 	 Best Val. Loss: 0.024
2024-11-01 05:01 - INFO - 	 Best ROC-AUC: 0.928
2024-11-01 05:01 - INFO - 	 Best PR-AUC: 0.463
2024-11-01 05:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-01 05:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.495
2024-11-01 05:01 - INFO - ---------------------------------------------
2024-11-01 05:09 - INFO - ---------------------------------------------
2024-11-01 05:09 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 05:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48575
2024-11-01 05:09 - INFO - 	 Train Loss: 0.020
2024-11-01 05:09 - INFO - 	 Val. Loss: 0.022
2024-11-01 05:09 - INFO - 	 ROC-AUC: 0.930
2024-11-01 05:09 - INFO - 	 PR-AUC: 0.486
2024-11-01 05:09 - INFO - 	 Best Val. Loss: 0.022
2024-11-01 05:09 - INFO - 	 Best ROC-AUC: 0.930
2024-11-01 05:09 - INFO - 	 Best PR-AUC: 0.486
2024-11-01 05:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-01 05:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.532
2024-11-01 05:09 - INFO - ---------------------------------------------
2024-11-01 05:17 - INFO - ---------------------------------------------
2024-11-01 05:17 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 05:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51495
2024-11-01 05:17 - INFO - 	 Train Loss: 0.020
2024-11-01 05:17 - INFO - 	 Val. Loss: 0.020
2024-11-01 05:17 - INFO - 	 ROC-AUC: 0.940
2024-11-01 05:17 - INFO - 	 PR-AUC: 0.515
2024-11-01 05:17 - INFO - 	 Best Val. Loss: 0.020
2024-11-01 05:17 - INFO - 	 Best ROC-AUC: 0.940
2024-11-01 05:17 - INFO - 	 Best PR-AUC: 0.515
2024-11-01 05:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.945
2024-11-01 05:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.554
2024-11-01 05:17 - INFO - ---------------------------------------------
2024-11-01 05:25 - INFO - ---------------------------------------------
2024-11-01 05:25 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 05:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52888
2024-11-01 05:25 - INFO - 	 Train Loss: 0.018
2024-11-01 05:25 - INFO - 	 Val. Loss: 0.019
2024-11-01 05:25 - INFO - 	 ROC-AUC: 0.945
2024-11-01 05:25 - INFO - 	 PR-AUC: 0.529
2024-11-01 05:25 - INFO - 	 Best Val. Loss: 0.019
2024-11-01 05:25 - INFO - 	 Best ROC-AUC: 0.945
2024-11-01 05:25 - INFO - 	 Best PR-AUC: 0.529
2024-11-01 05:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-01 05:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.579
2024-11-01 05:25 - INFO - ---------------------------------------------
2024-11-01 05:33 - INFO - ---------------------------------------------
2024-11-01 05:33 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 05:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57621
2024-11-01 05:33 - INFO - 	 Train Loss: 0.019
2024-11-01 05:33 - INFO - 	 Val. Loss: 0.022
2024-11-01 05:33 - INFO - 	 ROC-AUC: 0.955
2024-11-01 05:33 - INFO - 	 PR-AUC: 0.576
2024-11-01 05:33 - INFO - 	 Best Val. Loss: 0.019
2024-11-01 05:33 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 05:33 - INFO - 	 Best PR-AUC: 0.576
2024-11-01 05:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-01 05:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-11-01 05:33 - INFO - ---------------------------------------------
2024-11-01 05:41 - INFO - ---------------------------------------------
2024-11-01 05:41 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 05:41 - INFO - 	 Train Loss: 0.020
2024-11-01 05:41 - INFO - 	 Val. Loss: 0.020
2024-11-01 05:41 - INFO - 	 ROC-AUC: 0.947
2024-11-01 05:41 - INFO - 	 PR-AUC: 0.554
2024-11-01 05:41 - INFO - 	 Best Val. Loss: 0.019
2024-11-01 05:41 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 05:41 - INFO - 	 Best PR-AUC: 0.576
2024-11-01 05:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-01 05:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-11-01 05:41 - INFO - ---------------------------------------------
2024-11-01 05:49 - INFO - ---------------------------------------------
2024-11-01 05:49 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 05:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5809
2024-11-01 05:49 - INFO - 	 Train Loss: 0.018
2024-11-01 05:49 - INFO - 	 Val. Loss: 0.017
2024-11-01 05:49 - INFO - 	 ROC-AUC: 0.951
2024-11-01 05:49 - INFO - 	 PR-AUC: 0.581
2024-11-01 05:49 - INFO - 	 Best Val. Loss: 0.017
2024-11-01 05:49 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 05:49 - INFO - 	 Best PR-AUC: 0.581
2024-11-01 05:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-01 05:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.614
2024-11-01 05:49 - INFO - ---------------------------------------------
2024-11-01 05:57 - INFO - ---------------------------------------------
2024-11-01 05:57 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 05:57 - INFO - 	 Train Loss: 0.016
2024-11-01 05:57 - INFO - 	 Val. Loss: 0.020
2024-11-01 05:57 - INFO - 	 ROC-AUC: 0.948
2024-11-01 05:57 - INFO - 	 PR-AUC: 0.558
2024-11-01 05:57 - INFO - 	 Best Val. Loss: 0.017
2024-11-01 05:57 - INFO - 	 Best ROC-AUC: 0.955
2024-11-01 05:57 - INFO - 	 Best PR-AUC: 0.581
2024-11-01 05:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-01 05:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.614
2024-11-01 05:57 - INFO - ---------------------------------------------
2024-11-01 06:00 - INFO - Fit the preprocessing pipeline
2024-11-01 06:00 - INFO - Training using device: cuda
2024-11-01 06:00 - INFO - Creating generators
2024-11-01 06:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 06:00 - INFO - * Model:
2024-11-01 06:00 - INFO - * -----------
2024-11-01 06:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 06:00 - INFO - * -----------
2024-11-01 06:08 - INFO - ---------------------------------------------
2024-11-01 06:08 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 06:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31863
2024-11-01 06:08 - INFO - 	 Train Loss: 0.010
2024-11-01 06:08 - INFO - 	 Val. Loss: 0.023
2024-11-01 06:08 - INFO - 	 ROC-AUC: 0.856
2024-11-01 06:08 - INFO - 	 PR-AUC: 0.319
2024-11-01 06:08 - INFO - 	 Best Val. Loss: 0.023
2024-11-01 06:08 - INFO - 	 Best ROC-AUC: 0.856
2024-11-01 06:08 - INFO - 	 Best PR-AUC: 0.319
2024-11-01 06:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.865
2024-11-01 06:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.353
2024-11-01 06:08 - INFO - ---------------------------------------------
2024-11-01 06:16 - INFO - ---------------------------------------------
2024-11-01 06:16 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 06:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.35856
2024-11-01 06:16 - INFO - 	 Train Loss: 0.004
2024-11-01 06:16 - INFO - 	 Val. Loss: 0.013
2024-11-01 06:16 - INFO - 	 ROC-AUC: 0.883
2024-11-01 06:16 - INFO - 	 PR-AUC: 0.359
2024-11-01 06:16 - INFO - 	 Best Val. Loss: 0.013
2024-11-01 06:16 - INFO - 	 Best ROC-AUC: 0.883
2024-11-01 06:16 - INFO - 	 Best PR-AUC: 0.359
2024-11-01 06:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.881
2024-11-01 06:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.375
2024-11-01 06:16 - INFO - ---------------------------------------------
2024-11-01 06:24 - INFO - ---------------------------------------------
2024-11-01 06:24 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 06:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38811
2024-11-01 06:24 - INFO - 	 Train Loss: 0.007
2024-11-01 06:24 - INFO - 	 Val. Loss: 0.008
2024-11-01 06:24 - INFO - 	 ROC-AUC: 0.903
2024-11-01 06:24 - INFO - 	 PR-AUC: 0.388
2024-11-01 06:24 - INFO - 	 Best Val. Loss: 0.008
2024-11-01 06:24 - INFO - 	 Best ROC-AUC: 0.903
2024-11-01 06:24 - INFO - 	 Best PR-AUC: 0.388
2024-11-01 06:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-01 06:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.444
2024-11-01 06:24 - INFO - ---------------------------------------------
2024-11-01 06:32 - INFO - ---------------------------------------------
2024-11-01 06:32 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 06:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38973
2024-11-01 06:32 - INFO - 	 Train Loss: 0.004
2024-11-01 06:32 - INFO - 	 Val. Loss: 0.007
2024-11-01 06:32 - INFO - 	 ROC-AUC: 0.902
2024-11-01 06:32 - INFO - 	 PR-AUC: 0.390
2024-11-01 06:32 - INFO - 	 Best Val. Loss: 0.007
2024-11-01 06:32 - INFO - 	 Best ROC-AUC: 0.903
2024-11-01 06:32 - INFO - 	 Best PR-AUC: 0.390
2024-11-01 06:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-01 06:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-11-01 06:32 - INFO - ---------------------------------------------
2024-11-01 06:40 - INFO - ---------------------------------------------
2024-11-01 06:40 - INFO - Epoch: 05 | Time: 8m 3s
2024-11-01 06:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39793
2024-11-01 06:40 - INFO - 	 Train Loss: 0.004
2024-11-01 06:40 - INFO - 	 Val. Loss: 0.005
2024-11-01 06:40 - INFO - 	 ROC-AUC: 0.905
2024-11-01 06:40 - INFO - 	 PR-AUC: 0.398
2024-11-01 06:40 - INFO - 	 Best Val. Loss: 0.005
2024-11-01 06:40 - INFO - 	 Best ROC-AUC: 0.905
2024-11-01 06:40 - INFO - 	 Best PR-AUC: 0.398
2024-11-01 06:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.906
2024-11-01 06:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-11-01 06:40 - INFO - ---------------------------------------------
2024-11-01 06:48 - INFO - ---------------------------------------------
2024-11-01 06:48 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 06:48 - INFO - 	 Train Loss: 0.003
2024-11-01 06:48 - INFO - 	 Val. Loss: 0.004
2024-11-01 06:48 - INFO - 	 ROC-AUC: 0.905
2024-11-01 06:48 - INFO - 	 PR-AUC: 0.395
2024-11-01 06:48 - INFO - 	 Best Val. Loss: 0.004
2024-11-01 06:48 - INFO - 	 Best ROC-AUC: 0.905
2024-11-01 06:48 - INFO - 	 Best PR-AUC: 0.398
2024-11-01 06:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-01 06:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-11-01 06:48 - INFO - ---------------------------------------------
2024-11-01 06:56 - INFO - ---------------------------------------------
2024-11-01 06:56 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 06:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40928
2024-11-01 06:56 - INFO - 	 Train Loss: 0.004
2024-11-01 06:56 - INFO - 	 Val. Loss: 0.009
2024-11-01 06:56 - INFO - 	 ROC-AUC: 0.913
2024-11-01 06:56 - INFO - 	 PR-AUC: 0.409
2024-11-01 06:56 - INFO - 	 Best Val. Loss: 0.004
2024-11-01 06:56 - INFO - 	 Best ROC-AUC: 0.913
2024-11-01 06:56 - INFO - 	 Best PR-AUC: 0.409
2024-11-01 06:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-01 06:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.457
2024-11-01 06:56 - INFO - ---------------------------------------------
2024-11-01 07:04 - INFO - ---------------------------------------------
2024-11-01 07:04 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 07:04 - INFO - 	 Train Loss: 0.006
2024-11-01 07:04 - INFO - 	 Val. Loss: 0.004
2024-11-01 07:04 - INFO - 	 ROC-AUC: 0.908
2024-11-01 07:04 - INFO - 	 PR-AUC: 0.403
2024-11-01 07:04 - INFO - 	 Best Val. Loss: 0.004
2024-11-01 07:04 - INFO - 	 Best ROC-AUC: 0.913
2024-11-01 07:04 - INFO - 	 Best PR-AUC: 0.409
2024-11-01 07:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-01 07:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.457
2024-11-01 07:04 - INFO - ---------------------------------------------
2024-11-01 07:12 - INFO - ---------------------------------------------
2024-11-01 07:12 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 07:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41189
2024-11-01 07:12 - INFO - 	 Train Loss: 0.004
2024-11-01 07:12 - INFO - 	 Val. Loss: 0.004
2024-11-01 07:12 - INFO - 	 ROC-AUC: 0.908
2024-11-01 07:12 - INFO - 	 PR-AUC: 0.412
2024-11-01 07:12 - INFO - 	 Best Val. Loss: 0.004
2024-11-01 07:12 - INFO - 	 Best ROC-AUC: 0.913
2024-11-01 07:12 - INFO - 	 Best PR-AUC: 0.412
2024-11-01 07:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-01 07:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-11-01 07:12 - INFO - ---------------------------------------------
2024-11-01 07:20 - INFO - ---------------------------------------------
2024-11-01 07:20 - INFO - Epoch: 10 | Time: 8m 3s
2024-11-01 07:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42324
2024-11-01 07:20 - INFO - 	 Train Loss: 0.002
2024-11-01 07:20 - INFO - 	 Val. Loss: 0.006
2024-11-01 07:20 - INFO - 	 ROC-AUC: 0.913
2024-11-01 07:20 - INFO - 	 PR-AUC: 0.423
2024-11-01 07:20 - INFO - 	 Best Val. Loss: 0.004
2024-11-01 07:20 - INFO - 	 Best ROC-AUC: 0.913
2024-11-01 07:20 - INFO - 	 Best PR-AUC: 0.423
2024-11-01 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.912
2024-11-01 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.447
2024-11-01 07:20 - INFO - ---------------------------------------------
