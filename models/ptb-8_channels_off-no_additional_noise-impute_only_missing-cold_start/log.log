2024-11-08 06:54 - INFO - Fit the preprocessing pipeline
2024-11-08 06:54 - INFO - Training using device: cuda
2024-11-08 06:54 - INFO - Creating generators
2024-11-08 06:54 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 06:54 - INFO - * Model:
2024-11-08 06:54 - INFO - * -----------
2024-11-08 06:54 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 06:54 - INFO - * -----------
2024-11-08 07:02 - INFO - ---------------------------------------------
2024-11-08 07:02 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 07:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12806
2024-11-08 07:02 - INFO - 	 Train Loss: 0.265
2024-11-08 07:02 - INFO - 	 Val. Loss: 0.309
2024-11-08 07:02 - INFO - 	 ROC-AUC: 0.603
2024-11-08 07:02 - INFO - 	 PR-AUC: 0.128
2024-11-08 07:02 - INFO - 	 Best Val. Loss: 0.309
2024-11-08 07:02 - INFO - 	 Best ROC-AUC: 0.603
2024-11-08 07:02 - INFO - 	 Best PR-AUC: 0.128
2024-11-08 07:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.584
2024-11-08 07:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.159
2024-11-08 07:02 - INFO - ---------------------------------------------
2024-11-08 07:10 - INFO - ---------------------------------------------
2024-11-08 07:10 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-08 07:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18653
2024-11-08 07:10 - INFO - 	 Train Loss: 0.240
2024-11-08 07:10 - INFO - 	 Val. Loss: 0.326
2024-11-08 07:10 - INFO - 	 ROC-AUC: 0.711
2024-11-08 07:10 - INFO - 	 PR-AUC: 0.187
2024-11-08 07:10 - INFO - 	 Best Val. Loss: 0.309
2024-11-08 07:10 - INFO - 	 Best ROC-AUC: 0.711
2024-11-08 07:10 - INFO - 	 Best PR-AUC: 0.187
2024-11-08 07:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.661
2024-11-08 07:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.209
2024-11-08 07:10 - INFO - ---------------------------------------------
2024-11-08 07:18 - INFO - ---------------------------------------------
2024-11-08 07:18 - INFO - Epoch: 03 | Time: 8m 0s
2024-11-08 07:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28128
2024-11-08 07:18 - INFO - 	 Train Loss: 0.204
2024-11-08 07:18 - INFO - 	 Val. Loss: 0.486
2024-11-08 07:18 - INFO - 	 ROC-AUC: 0.835
2024-11-08 07:18 - INFO - 	 PR-AUC: 0.281
2024-11-08 07:18 - INFO - 	 Best Val. Loss: 0.309
2024-11-08 07:18 - INFO - 	 Best ROC-AUC: 0.835
2024-11-08 07:18 - INFO - 	 Best PR-AUC: 0.281
2024-11-08 07:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.815
2024-11-08 07:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-08 07:18 - INFO - ---------------------------------------------
2024-11-08 07:26 - INFO - ---------------------------------------------
2024-11-08 07:26 - INFO - Epoch: 04 | Time: 8m 0s
2024-11-08 07:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43929
2024-11-08 07:26 - INFO - 	 Train Loss: 0.169
2024-11-08 07:26 - INFO - 	 Val. Loss: 0.328
2024-11-08 07:26 - INFO - 	 ROC-AUC: 0.913
2024-11-08 07:26 - INFO - 	 PR-AUC: 0.439
2024-11-08 07:26 - INFO - 	 Best Val. Loss: 0.309
2024-11-08 07:26 - INFO - 	 Best ROC-AUC: 0.913
2024-11-08 07:26 - INFO - 	 Best PR-AUC: 0.439
2024-11-08 07:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.903
2024-11-08 07:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.468
2024-11-08 07:26 - INFO - ---------------------------------------------
2024-11-08 07:34 - INFO - ---------------------------------------------
2024-11-08 07:34 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-08 07:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52857
2024-11-08 07:34 - INFO - 	 Train Loss: 0.146
2024-11-08 07:34 - INFO - 	 Val. Loss: 0.222
2024-11-08 07:34 - INFO - 	 ROC-AUC: 0.944
2024-11-08 07:34 - INFO - 	 PR-AUC: 0.529
2024-11-08 07:34 - INFO - 	 Best Val. Loss: 0.222
2024-11-08 07:34 - INFO - 	 Best ROC-AUC: 0.944
2024-11-08 07:34 - INFO - 	 Best PR-AUC: 0.529
2024-11-08 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.943
2024-11-08 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.562
2024-11-08 07:34 - INFO - ---------------------------------------------
2024-11-08 07:42 - INFO - ---------------------------------------------
2024-11-08 07:42 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-08 07:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64262
2024-11-08 07:42 - INFO - 	 Train Loss: 0.132
2024-11-08 07:42 - INFO - 	 Val. Loss: 0.132
2024-11-08 07:42 - INFO - 	 ROC-AUC: 0.963
2024-11-08 07:42 - INFO - 	 PR-AUC: 0.643
2024-11-08 07:42 - INFO - 	 Best Val. Loss: 0.132
2024-11-08 07:42 - INFO - 	 Best ROC-AUC: 0.963
2024-11-08 07:42 - INFO - 	 Best PR-AUC: 0.643
2024-11-08 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-08 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.651
2024-11-08 07:42 - INFO - ---------------------------------------------
2024-11-08 07:50 - INFO - ---------------------------------------------
2024-11-08 07:50 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-08 07:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70039
2024-11-08 07:50 - INFO - 	 Train Loss: 0.118
2024-11-08 07:50 - INFO - 	 Val. Loss: 0.114
2024-11-08 07:50 - INFO - 	 ROC-AUC: 0.969
2024-11-08 07:50 - INFO - 	 PR-AUC: 0.700
2024-11-08 07:50 - INFO - 	 Best Val. Loss: 0.114
2024-11-08 07:50 - INFO - 	 Best ROC-AUC: 0.969
2024-11-08 07:50 - INFO - 	 Best PR-AUC: 0.700
2024-11-08 07:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-08 07:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.714
2024-11-08 07:50 - INFO - ---------------------------------------------
2024-11-08 07:58 - INFO - ---------------------------------------------
2024-11-08 07:58 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-08 07:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78247
2024-11-08 07:58 - INFO - 	 Train Loss: 0.108
2024-11-08 07:58 - INFO - 	 Val. Loss: 0.088
2024-11-08 07:58 - INFO - 	 ROC-AUC: 0.978
2024-11-08 07:58 - INFO - 	 PR-AUC: 0.782
2024-11-08 07:58 - INFO - 	 Best Val. Loss: 0.088
2024-11-08 07:58 - INFO - 	 Best ROC-AUC: 0.978
2024-11-08 07:58 - INFO - 	 Best PR-AUC: 0.782
2024-11-08 07:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-08 07:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-11-08 07:58 - INFO - ---------------------------------------------
2024-11-08 08:06 - INFO - ---------------------------------------------
2024-11-08 08:06 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-08 08:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79774
2024-11-08 08:06 - INFO - 	 Train Loss: 0.097
2024-11-08 08:06 - INFO - 	 Val. Loss: 0.082
2024-11-08 08:06 - INFO - 	 ROC-AUC: 0.979
2024-11-08 08:06 - INFO - 	 PR-AUC: 0.798
2024-11-08 08:06 - INFO - 	 Best Val. Loss: 0.082
2024-11-08 08:06 - INFO - 	 Best ROC-AUC: 0.979
2024-11-08 08:06 - INFO - 	 Best PR-AUC: 0.798
2024-11-08 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-08 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-11-08 08:06 - INFO - ---------------------------------------------
2024-11-08 08:14 - INFO - ---------------------------------------------
2024-11-08 08:14 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-08 08:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8188
2024-11-08 08:14 - INFO - 	 Train Loss: 0.091
2024-11-08 08:14 - INFO - 	 Val. Loss: 0.076
2024-11-08 08:14 - INFO - 	 ROC-AUC: 0.983
2024-11-08 08:14 - INFO - 	 PR-AUC: 0.819
2024-11-08 08:14 - INFO - 	 Best Val. Loss: 0.076
2024-11-08 08:14 - INFO - 	 Best ROC-AUC: 0.983
2024-11-08 08:14 - INFO - 	 Best PR-AUC: 0.819
2024-11-08 08:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-08 08:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-08 08:14 - INFO - ---------------------------------------------
2024-11-08 08:17 - INFO - Fit the preprocessing pipeline
2024-11-08 08:17 - INFO - Training using device: cuda
2024-11-08 08:17 - INFO - Creating generators
2024-11-08 08:17 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 08:17 - INFO - * Model:
2024-11-08 08:17 - INFO - * -----------
2024-11-08 08:17 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 08:17 - INFO - * -----------
2024-11-08 08:25 - INFO - ---------------------------------------------
2024-11-08 08:25 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-08 08:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12716
2024-11-08 08:25 - INFO - 	 Train Loss: 0.265
2024-11-08 08:25 - INFO - 	 Val. Loss: 0.309
2024-11-08 08:25 - INFO - 	 ROC-AUC: 0.633
2024-11-08 08:25 - INFO - 	 PR-AUC: 0.127
2024-11-08 08:25 - INFO - 	 Best Val. Loss: 0.309
2024-11-08 08:25 - INFO - 	 Best ROC-AUC: 0.633
2024-11-08 08:25 - INFO - 	 Best PR-AUC: 0.127
2024-11-08 08:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.582
2024-11-08 08:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.136
2024-11-08 08:25 - INFO - ---------------------------------------------
2024-11-08 08:33 - INFO - ---------------------------------------------
2024-11-08 08:33 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-08 08:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14587
2024-11-08 08:33 - INFO - 	 Train Loss: 0.247
2024-11-08 08:33 - INFO - 	 Val. Loss: 0.270
2024-11-08 08:33 - INFO - 	 ROC-AUC: 0.652
2024-11-08 08:33 - INFO - 	 PR-AUC: 0.146
2024-11-08 08:33 - INFO - 	 Best Val. Loss: 0.270
2024-11-08 08:33 - INFO - 	 Best ROC-AUC: 0.652
2024-11-08 08:33 - INFO - 	 Best PR-AUC: 0.146
2024-11-08 08:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.634
2024-11-08 08:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.182
2024-11-08 08:33 - INFO - ---------------------------------------------
2024-11-08 08:41 - INFO - ---------------------------------------------
2024-11-08 08:41 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 08:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20156
2024-11-08 08:41 - INFO - 	 Train Loss: 0.228
2024-11-08 08:41 - INFO - 	 Val. Loss: 0.359
2024-11-08 08:41 - INFO - 	 ROC-AUC: 0.781
2024-11-08 08:41 - INFO - 	 PR-AUC: 0.202
2024-11-08 08:41 - INFO - 	 Best Val. Loss: 0.270
2024-11-08 08:41 - INFO - 	 Best ROC-AUC: 0.781
2024-11-08 08:41 - INFO - 	 Best PR-AUC: 0.202
2024-11-08 08:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-08 08:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.253
2024-11-08 08:41 - INFO - ---------------------------------------------
2024-11-08 08:49 - INFO - ---------------------------------------------
2024-11-08 08:49 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 08:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37376
2024-11-08 08:49 - INFO - 	 Train Loss: 0.179
2024-11-08 08:49 - INFO - 	 Val. Loss: 0.252
2024-11-08 08:49 - INFO - 	 ROC-AUC: 0.906
2024-11-08 08:49 - INFO - 	 PR-AUC: 0.374
2024-11-08 08:49 - INFO - 	 Best Val. Loss: 0.252
2024-11-08 08:49 - INFO - 	 Best ROC-AUC: 0.906
2024-11-08 08:49 - INFO - 	 Best PR-AUC: 0.374
2024-11-08 08:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-08 08:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.401
2024-11-08 08:49 - INFO - ---------------------------------------------
2024-11-08 08:57 - INFO - ---------------------------------------------
2024-11-08 08:57 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 08:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62787
2024-11-08 08:57 - INFO - 	 Train Loss: 0.132
2024-11-08 08:57 - INFO - 	 Val. Loss: 0.141
2024-11-08 08:57 - INFO - 	 ROC-AUC: 0.962
2024-11-08 08:57 - INFO - 	 PR-AUC: 0.628
2024-11-08 08:57 - INFO - 	 Best Val. Loss: 0.141
2024-11-08 08:57 - INFO - 	 Best ROC-AUC: 0.962
2024-11-08 08:57 - INFO - 	 Best PR-AUC: 0.628
2024-11-08 08:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-08 08:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.632
2024-11-08 08:57 - INFO - ---------------------------------------------
2024-11-08 09:05 - INFO - ---------------------------------------------
2024-11-08 09:05 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-08 09:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.709
2024-11-08 09:05 - INFO - 	 Train Loss: 0.113
2024-11-08 09:05 - INFO - 	 Val. Loss: 0.108
2024-11-08 09:05 - INFO - 	 ROC-AUC: 0.970
2024-11-08 09:05 - INFO - 	 PR-AUC: 0.709
2024-11-08 09:05 - INFO - 	 Best Val. Loss: 0.108
2024-11-08 09:05 - INFO - 	 Best ROC-AUC: 0.970
2024-11-08 09:05 - INFO - 	 Best PR-AUC: 0.709
2024-11-08 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-08 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.707
2024-11-08 09:05 - INFO - ---------------------------------------------
2024-11-08 09:13 - INFO - ---------------------------------------------
2024-11-08 09:13 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-08 09:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76685
2024-11-08 09:13 - INFO - 	 Train Loss: 0.105
2024-11-08 09:13 - INFO - 	 Val. Loss: 0.095
2024-11-08 09:13 - INFO - 	 ROC-AUC: 0.976
2024-11-08 09:13 - INFO - 	 PR-AUC: 0.767
2024-11-08 09:13 - INFO - 	 Best Val. Loss: 0.095
2024-11-08 09:13 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 09:13 - INFO - 	 Best PR-AUC: 0.767
2024-11-08 09:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-08 09:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.750
2024-11-08 09:13 - INFO - ---------------------------------------------
2024-11-08 09:21 - INFO - ---------------------------------------------
2024-11-08 09:21 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-08 09:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77138
2024-11-08 09:21 - INFO - 	 Train Loss: 0.097
2024-11-08 09:21 - INFO - 	 Val. Loss: 0.091
2024-11-08 09:21 - INFO - 	 ROC-AUC: 0.976
2024-11-08 09:21 - INFO - 	 PR-AUC: 0.771
2024-11-08 09:21 - INFO - 	 Best Val. Loss: 0.091
2024-11-08 09:21 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 09:21 - INFO - 	 Best PR-AUC: 0.771
2024-11-08 09:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-08 09:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-11-08 09:21 - INFO - ---------------------------------------------
2024-11-08 09:29 - INFO - ---------------------------------------------
2024-11-08 09:29 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-08 09:29 - INFO - 	 Train Loss: 0.094
2024-11-08 09:29 - INFO - 	 Val. Loss: 0.089
2024-11-08 09:29 - INFO - 	 ROC-AUC: 0.976
2024-11-08 09:29 - INFO - 	 PR-AUC: 0.764
2024-11-08 09:29 - INFO - 	 Best Val. Loss: 0.089
2024-11-08 09:29 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 09:29 - INFO - 	 Best PR-AUC: 0.771
2024-11-08 09:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-08 09:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.745
2024-11-08 09:29 - INFO - ---------------------------------------------
2024-11-08 09:37 - INFO - ---------------------------------------------
2024-11-08 09:37 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-08 09:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81235
2024-11-08 09:37 - INFO - 	 Train Loss: 0.090
2024-11-08 09:37 - INFO - 	 Val. Loss: 0.080
2024-11-08 09:37 - INFO - 	 ROC-AUC: 0.980
2024-11-08 09:37 - INFO - 	 PR-AUC: 0.812
2024-11-08 09:37 - INFO - 	 Best Val. Loss: 0.080
2024-11-08 09:37 - INFO - 	 Best ROC-AUC: 0.980
2024-11-08 09:37 - INFO - 	 Best PR-AUC: 0.812
2024-11-08 09:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-08 09:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.775
2024-11-08 09:37 - INFO - ---------------------------------------------
2024-11-08 09:39 - INFO - Fit the preprocessing pipeline
2024-11-08 09:39 - INFO - Training using device: cuda
2024-11-08 09:39 - INFO - Creating generators
2024-11-08 09:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 09:39 - INFO - * Model:
2024-11-08 09:39 - INFO - * -----------
2024-11-08 09:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 09:39 - INFO - * -----------
2024-11-08 09:47 - INFO - ---------------------------------------------
2024-11-08 09:47 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 09:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12513
2024-11-08 09:47 - INFO - 	 Train Loss: 0.264
2024-11-08 09:47 - INFO - 	 Val. Loss: 0.269
2024-11-08 09:47 - INFO - 	 ROC-AUC: 0.612
2024-11-08 09:47 - INFO - 	 PR-AUC: 0.125
2024-11-08 09:47 - INFO - 	 Best Val. Loss: 0.269
2024-11-08 09:47 - INFO - 	 Best ROC-AUC: 0.612
2024-11-08 09:47 - INFO - 	 Best PR-AUC: 0.125
2024-11-08 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.600
2024-11-08 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-08 09:47 - INFO - ---------------------------------------------
2024-11-08 09:55 - INFO - ---------------------------------------------
2024-11-08 09:55 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 09:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15075
2024-11-08 09:55 - INFO - 	 Train Loss: 0.243
2024-11-08 09:55 - INFO - 	 Val. Loss: 0.332
2024-11-08 09:55 - INFO - 	 ROC-AUC: 0.674
2024-11-08 09:55 - INFO - 	 PR-AUC: 0.151
2024-11-08 09:55 - INFO - 	 Best Val. Loss: 0.269
2024-11-08 09:55 - INFO - 	 Best ROC-AUC: 0.674
2024-11-08 09:55 - INFO - 	 Best PR-AUC: 0.151
2024-11-08 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.653
2024-11-08 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.190
2024-11-08 09:55 - INFO - ---------------------------------------------
2024-11-08 10:04 - INFO - ---------------------------------------------
2024-11-08 10:04 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 10:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23539
2024-11-08 10:04 - INFO - 	 Train Loss: 0.211
2024-11-08 10:04 - INFO - 	 Val. Loss: 0.440
2024-11-08 10:04 - INFO - 	 ROC-AUC: 0.792
2024-11-08 10:04 - INFO - 	 PR-AUC: 0.235
2024-11-08 10:04 - INFO - 	 Best Val. Loss: 0.269
2024-11-08 10:04 - INFO - 	 Best ROC-AUC: 0.792
2024-11-08 10:04 - INFO - 	 Best PR-AUC: 0.235
2024-11-08 10:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-08 10:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.256
2024-11-08 10:04 - INFO - ---------------------------------------------
2024-11-08 10:12 - INFO - ---------------------------------------------
2024-11-08 10:12 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 10:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51971
2024-11-08 10:12 - INFO - 	 Train Loss: 0.162
2024-11-08 10:12 - INFO - 	 Val. Loss: 0.183
2024-11-08 10:12 - INFO - 	 ROC-AUC: 0.936
2024-11-08 10:12 - INFO - 	 PR-AUC: 0.520
2024-11-08 10:12 - INFO - 	 Best Val. Loss: 0.183
2024-11-08 10:12 - INFO - 	 Best ROC-AUC: 0.936
2024-11-08 10:12 - INFO - 	 Best PR-AUC: 0.520
2024-11-08 10:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-08 10:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.546
2024-11-08 10:12 - INFO - ---------------------------------------------
2024-11-08 10:20 - INFO - ---------------------------------------------
2024-11-08 10:20 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 10:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59515
2024-11-08 10:20 - INFO - 	 Train Loss: 0.133
2024-11-08 10:20 - INFO - 	 Val. Loss: 0.175
2024-11-08 10:20 - INFO - 	 ROC-AUC: 0.951
2024-11-08 10:20 - INFO - 	 PR-AUC: 0.595
2024-11-08 10:20 - INFO - 	 Best Val. Loss: 0.175
2024-11-08 10:20 - INFO - 	 Best ROC-AUC: 0.951
2024-11-08 10:20 - INFO - 	 Best PR-AUC: 0.595
2024-11-08 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-08 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.593
2024-11-08 10:20 - INFO - ---------------------------------------------
2024-11-08 10:28 - INFO - ---------------------------------------------
2024-11-08 10:28 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-08 10:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69158
2024-11-08 10:28 - INFO - 	 Train Loss: 0.119
2024-11-08 10:28 - INFO - 	 Val. Loss: 0.127
2024-11-08 10:28 - INFO - 	 ROC-AUC: 0.966
2024-11-08 10:28 - INFO - 	 PR-AUC: 0.692
2024-11-08 10:28 - INFO - 	 Best Val. Loss: 0.127
2024-11-08 10:28 - INFO - 	 Best ROC-AUC: 0.966
2024-11-08 10:28 - INFO - 	 Best PR-AUC: 0.692
2024-11-08 10:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-08 10:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.680
2024-11-08 10:28 - INFO - ---------------------------------------------
2024-11-08 10:36 - INFO - ---------------------------------------------
2024-11-08 10:36 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-08 10:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70923
2024-11-08 10:36 - INFO - 	 Train Loss: 0.110
2024-11-08 10:36 - INFO - 	 Val. Loss: 0.111
2024-11-08 10:36 - INFO - 	 ROC-AUC: 0.969
2024-11-08 10:36 - INFO - 	 PR-AUC: 0.709
2024-11-08 10:36 - INFO - 	 Best Val. Loss: 0.111
2024-11-08 10:36 - INFO - 	 Best ROC-AUC: 0.969
2024-11-08 10:36 - INFO - 	 Best PR-AUC: 0.709
2024-11-08 10:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-08 10:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.728
2024-11-08 10:36 - INFO - ---------------------------------------------
2024-11-08 10:44 - INFO - ---------------------------------------------
2024-11-08 10:44 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-08 10:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73443
2024-11-08 10:44 - INFO - 	 Train Loss: 0.102
2024-11-08 10:44 - INFO - 	 Val. Loss: 0.100
2024-11-08 10:44 - INFO - 	 ROC-AUC: 0.971
2024-11-08 10:44 - INFO - 	 PR-AUC: 0.734
2024-11-08 10:44 - INFO - 	 Best Val. Loss: 0.100
2024-11-08 10:44 - INFO - 	 Best ROC-AUC: 0.971
2024-11-08 10:44 - INFO - 	 Best PR-AUC: 0.734
2024-11-08 10:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-08 10:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-11-08 10:44 - INFO - ---------------------------------------------
2024-11-08 10:52 - INFO - ---------------------------------------------
2024-11-08 10:52 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-08 10:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75976
2024-11-08 10:52 - INFO - 	 Train Loss: 0.098
2024-11-08 10:52 - INFO - 	 Val. Loss: 0.090
2024-11-08 10:52 - INFO - 	 ROC-AUC: 0.976
2024-11-08 10:52 - INFO - 	 PR-AUC: 0.760
2024-11-08 10:52 - INFO - 	 Best Val. Loss: 0.090
2024-11-08 10:52 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 10:52 - INFO - 	 Best PR-AUC: 0.760
2024-11-08 10:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-08 10:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-11-08 10:52 - INFO - ---------------------------------------------
2024-11-08 11:00 - INFO - ---------------------------------------------
2024-11-08 11:00 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 11:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81055
2024-11-08 11:00 - INFO - 	 Train Loss: 0.094
2024-11-08 11:00 - INFO - 	 Val. Loss: 0.084
2024-11-08 11:00 - INFO - 	 ROC-AUC: 0.979
2024-11-08 11:00 - INFO - 	 PR-AUC: 0.811
2024-11-08 11:00 - INFO - 	 Best Val. Loss: 0.084
2024-11-08 11:00 - INFO - 	 Best ROC-AUC: 0.979
2024-11-08 11:00 - INFO - 	 Best PR-AUC: 0.811
2024-11-08 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-08 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-11-08 11:00 - INFO - ---------------------------------------------
2024-11-08 11:02 - INFO - Fit the preprocessing pipeline
2024-11-08 11:02 - INFO - Training using device: cuda
2024-11-08 11:02 - INFO - Creating generators
2024-11-08 11:02 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 11:02 - INFO - * Model:
2024-11-08 11:02 - INFO - * -----------
2024-11-08 11:02 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 11:02 - INFO - * -----------
2024-11-08 11:10 - INFO - ---------------------------------------------
2024-11-08 11:10 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-08 11:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16003
2024-11-08 11:10 - INFO - 	 Train Loss: 0.258
2024-11-08 11:10 - INFO - 	 Val. Loss: 0.277
2024-11-08 11:10 - INFO - 	 ROC-AUC: 0.654
2024-11-08 11:10 - INFO - 	 PR-AUC: 0.160
2024-11-08 11:10 - INFO - 	 Best Val. Loss: 0.277
2024-11-08 11:10 - INFO - 	 Best ROC-AUC: 0.654
2024-11-08 11:10 - INFO - 	 Best PR-AUC: 0.160
2024-11-08 11:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.609
2024-11-08 11:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.178
2024-11-08 11:10 - INFO - ---------------------------------------------
2024-11-08 11:18 - INFO - ---------------------------------------------
2024-11-08 11:18 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 11:18 - INFO - 	 Train Loss: 0.225
2024-11-08 11:18 - INFO - 	 Val. Loss: 0.562
2024-11-08 11:18 - INFO - 	 ROC-AUC: 0.682
2024-11-08 11:18 - INFO - 	 PR-AUC: 0.158
2024-11-08 11:18 - INFO - 	 Best Val. Loss: 0.277
2024-11-08 11:18 - INFO - 	 Best ROC-AUC: 0.682
2024-11-08 11:18 - INFO - 	 Best PR-AUC: 0.160
2024-11-08 11:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.665
2024-11-08 11:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.178
2024-11-08 11:18 - INFO - ---------------------------------------------
2024-11-08 11:26 - INFO - ---------------------------------------------
2024-11-08 11:26 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 11:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39695
2024-11-08 11:26 - INFO - 	 Train Loss: 0.179
2024-11-08 11:26 - INFO - 	 Val. Loss: 0.372
2024-11-08 11:26 - INFO - 	 ROC-AUC: 0.907
2024-11-08 11:26 - INFO - 	 PR-AUC: 0.397
2024-11-08 11:26 - INFO - 	 Best Val. Loss: 0.277
2024-11-08 11:26 - INFO - 	 Best ROC-AUC: 0.907
2024-11-08 11:26 - INFO - 	 Best PR-AUC: 0.397
2024-11-08 11:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.905
2024-11-08 11:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.442
2024-11-08 11:26 - INFO - ---------------------------------------------
2024-11-08 11:34 - INFO - ---------------------------------------------
2024-11-08 11:34 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 11:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52626
2024-11-08 11:34 - INFO - 	 Train Loss: 0.138
2024-11-08 11:34 - INFO - 	 Val. Loss: 0.219
2024-11-08 11:34 - INFO - 	 ROC-AUC: 0.941
2024-11-08 11:34 - INFO - 	 PR-AUC: 0.526
2024-11-08 11:34 - INFO - 	 Best Val. Loss: 0.219
2024-11-08 11:34 - INFO - 	 Best ROC-AUC: 0.941
2024-11-08 11:34 - INFO - 	 Best PR-AUC: 0.526
2024-11-08 11:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-08 11:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.561
2024-11-08 11:34 - INFO - ---------------------------------------------
2024-11-08 11:42 - INFO - ---------------------------------------------
2024-11-08 11:42 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 11:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66593
2024-11-08 11:42 - INFO - 	 Train Loss: 0.121
2024-11-08 11:42 - INFO - 	 Val. Loss: 0.122
2024-11-08 11:42 - INFO - 	 ROC-AUC: 0.962
2024-11-08 11:42 - INFO - 	 PR-AUC: 0.666
2024-11-08 11:42 - INFO - 	 Best Val. Loss: 0.122
2024-11-08 11:42 - INFO - 	 Best ROC-AUC: 0.962
2024-11-08 11:42 - INFO - 	 Best PR-AUC: 0.666
2024-11-08 11:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.962
2024-11-08 11:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.673
2024-11-08 11:42 - INFO - ---------------------------------------------
2024-11-08 11:50 - INFO - ---------------------------------------------
2024-11-08 11:50 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-08 11:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70967
2024-11-08 11:50 - INFO - 	 Train Loss: 0.110
2024-11-08 11:50 - INFO - 	 Val. Loss: 0.113
2024-11-08 11:50 - INFO - 	 ROC-AUC: 0.969
2024-11-08 11:50 - INFO - 	 PR-AUC: 0.710
2024-11-08 11:50 - INFO - 	 Best Val. Loss: 0.113
2024-11-08 11:50 - INFO - 	 Best ROC-AUC: 0.969
2024-11-08 11:50 - INFO - 	 Best PR-AUC: 0.710
2024-11-08 11:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-08 11:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-11-08 11:50 - INFO - ---------------------------------------------
2024-11-08 11:58 - INFO - ---------------------------------------------
2024-11-08 11:58 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-08 11:58 - INFO - 	 Train Loss: 0.104
2024-11-08 11:58 - INFO - 	 Val. Loss: 0.111
2024-11-08 11:58 - INFO - 	 ROC-AUC: 0.969
2024-11-08 11:58 - INFO - 	 PR-AUC: 0.702
2024-11-08 11:58 - INFO - 	 Best Val. Loss: 0.111
2024-11-08 11:58 - INFO - 	 Best ROC-AUC: 0.969
2024-11-08 11:58 - INFO - 	 Best PR-AUC: 0.710
2024-11-08 11:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-08 11:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.724
2024-11-08 11:58 - INFO - ---------------------------------------------
2024-11-08 12:06 - INFO - ---------------------------------------------
2024-11-08 12:06 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-08 12:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7457
2024-11-08 12:06 - INFO - 	 Train Loss: 0.098
2024-11-08 12:06 - INFO - 	 Val. Loss: 0.094
2024-11-08 12:06 - INFO - 	 ROC-AUC: 0.972
2024-11-08 12:06 - INFO - 	 PR-AUC: 0.746
2024-11-08 12:06 - INFO - 	 Best Val. Loss: 0.094
2024-11-08 12:06 - INFO - 	 Best ROC-AUC: 0.972
2024-11-08 12:06 - INFO - 	 Best PR-AUC: 0.746
2024-11-08 12:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-08 12:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-11-08 12:06 - INFO - ---------------------------------------------
2024-11-08 12:14 - INFO - ---------------------------------------------
2024-11-08 12:14 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-08 12:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76976
2024-11-08 12:14 - INFO - 	 Train Loss: 0.092
2024-11-08 12:14 - INFO - 	 Val. Loss: 0.086
2024-11-08 12:14 - INFO - 	 ROC-AUC: 0.978
2024-11-08 12:14 - INFO - 	 PR-AUC: 0.770
2024-11-08 12:14 - INFO - 	 Best Val. Loss: 0.086
2024-11-08 12:14 - INFO - 	 Best ROC-AUC: 0.978
2024-11-08 12:14 - INFO - 	 Best PR-AUC: 0.770
2024-11-08 12:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-08 12:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-11-08 12:14 - INFO - ---------------------------------------------
2024-11-08 12:23 - INFO - ---------------------------------------------
2024-11-08 12:23 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-08 12:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79104
2024-11-08 12:23 - INFO - 	 Train Loss: 0.089
2024-11-08 12:23 - INFO - 	 Val. Loss: 0.081
2024-11-08 12:23 - INFO - 	 ROC-AUC: 0.980
2024-11-08 12:23 - INFO - 	 PR-AUC: 0.791
2024-11-08 12:23 - INFO - 	 Best Val. Loss: 0.081
2024-11-08 12:23 - INFO - 	 Best ROC-AUC: 0.980
2024-11-08 12:23 - INFO - 	 Best PR-AUC: 0.791
2024-11-08 12:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-08 12:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-11-08 12:23 - INFO - ---------------------------------------------
2024-11-08 12:25 - INFO - Fit the preprocessing pipeline
2024-11-08 12:25 - INFO - Training using device: cuda
2024-11-08 12:25 - INFO - Creating generators
2024-11-08 12:25 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 12:25 - INFO - * Model:
2024-11-08 12:25 - INFO - * -----------
2024-11-08 12:25 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 12:25 - INFO - * -----------
2024-11-08 12:33 - INFO - ---------------------------------------------
2024-11-08 12:33 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-08 12:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1231
2024-11-08 12:33 - INFO - 	 Train Loss: 0.264
2024-11-08 12:33 - INFO - 	 Val. Loss: 0.258
2024-11-08 12:33 - INFO - 	 ROC-AUC: 0.621
2024-11-08 12:33 - INFO - 	 PR-AUC: 0.123
2024-11-08 12:33 - INFO - 	 Best Val. Loss: 0.258
2024-11-08 12:33 - INFO - 	 Best ROC-AUC: 0.621
2024-11-08 12:33 - INFO - 	 Best PR-AUC: 0.123
2024-11-08 12:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.598
2024-11-08 12:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.142
2024-11-08 12:33 - INFO - ---------------------------------------------
2024-11-08 12:41 - INFO - ---------------------------------------------
2024-11-08 12:41 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-08 12:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1799
2024-11-08 12:41 - INFO - 	 Train Loss: 0.242
2024-11-08 12:41 - INFO - 	 Val. Loss: 0.259
2024-11-08 12:41 - INFO - 	 ROC-AUC: 0.711
2024-11-08 12:41 - INFO - 	 PR-AUC: 0.180
2024-11-08 12:41 - INFO - 	 Best Val. Loss: 0.258
2024-11-08 12:41 - INFO - 	 Best ROC-AUC: 0.711
2024-11-08 12:41 - INFO - 	 Best PR-AUC: 0.180
2024-11-08 12:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.695
2024-11-08 12:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.225
2024-11-08 12:41 - INFO - ---------------------------------------------
2024-11-08 12:49 - INFO - ---------------------------------------------
2024-11-08 12:49 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 12:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.24886
2024-11-08 12:49 - INFO - 	 Train Loss: 0.210
2024-11-08 12:49 - INFO - 	 Val. Loss: 0.458
2024-11-08 12:49 - INFO - 	 ROC-AUC: 0.810
2024-11-08 12:49 - INFO - 	 PR-AUC: 0.249
2024-11-08 12:49 - INFO - 	 Best Val. Loss: 0.258
2024-11-08 12:49 - INFO - 	 Best ROC-AUC: 0.810
2024-11-08 12:49 - INFO - 	 Best PR-AUC: 0.249
2024-11-08 12:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.808
2024-11-08 12:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-08 12:49 - INFO - ---------------------------------------------
2024-11-08 12:57 - INFO - ---------------------------------------------
2024-11-08 12:57 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 12:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48362
2024-11-08 12:57 - INFO - 	 Train Loss: 0.158
2024-11-08 12:57 - INFO - 	 Val. Loss: 0.241
2024-11-08 12:57 - INFO - 	 ROC-AUC: 0.926
2024-11-08 12:57 - INFO - 	 PR-AUC: 0.484
2024-11-08 12:57 - INFO - 	 Best Val. Loss: 0.241
2024-11-08 12:57 - INFO - 	 Best ROC-AUC: 0.926
2024-11-08 12:57 - INFO - 	 Best PR-AUC: 0.484
2024-11-08 12:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-08 12:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.501
2024-11-08 12:57 - INFO - ---------------------------------------------
2024-11-08 13:05 - INFO - ---------------------------------------------
2024-11-08 13:05 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 13:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6359
2024-11-08 13:05 - INFO - 	 Train Loss: 0.129
2024-11-08 13:05 - INFO - 	 Val. Loss: 0.128
2024-11-08 13:05 - INFO - 	 ROC-AUC: 0.957
2024-11-08 13:05 - INFO - 	 PR-AUC: 0.636
2024-11-08 13:05 - INFO - 	 Best Val. Loss: 0.128
2024-11-08 13:05 - INFO - 	 Best ROC-AUC: 0.957
2024-11-08 13:05 - INFO - 	 Best PR-AUC: 0.636
2024-11-08 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-08 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.639
2024-11-08 13:05 - INFO - ---------------------------------------------
2024-11-08 13:13 - INFO - ---------------------------------------------
2024-11-08 13:13 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-08 13:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72435
2024-11-08 13:13 - INFO - 	 Train Loss: 0.114
2024-11-08 13:13 - INFO - 	 Val. Loss: 0.108
2024-11-08 13:13 - INFO - 	 ROC-AUC: 0.969
2024-11-08 13:13 - INFO - 	 PR-AUC: 0.724
2024-11-08 13:13 - INFO - 	 Best Val. Loss: 0.108
2024-11-08 13:13 - INFO - 	 Best ROC-AUC: 0.969
2024-11-08 13:13 - INFO - 	 Best PR-AUC: 0.724
2024-11-08 13:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-08 13:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-11-08 13:13 - INFO - ---------------------------------------------
2024-11-08 13:21 - INFO - ---------------------------------------------
2024-11-08 13:21 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-08 13:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74535
2024-11-08 13:21 - INFO - 	 Train Loss: 0.106
2024-11-08 13:21 - INFO - 	 Val. Loss: 0.091
2024-11-08 13:21 - INFO - 	 ROC-AUC: 0.974
2024-11-08 13:21 - INFO - 	 PR-AUC: 0.745
2024-11-08 13:21 - INFO - 	 Best Val. Loss: 0.091
2024-11-08 13:21 - INFO - 	 Best ROC-AUC: 0.974
2024-11-08 13:21 - INFO - 	 Best PR-AUC: 0.745
2024-11-08 13:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-08 13:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.754
2024-11-08 13:21 - INFO - ---------------------------------------------
2024-11-08 13:29 - INFO - ---------------------------------------------
2024-11-08 13:29 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-08 13:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77271
2024-11-08 13:29 - INFO - 	 Train Loss: 0.098
2024-11-08 13:29 - INFO - 	 Val. Loss: 0.087
2024-11-08 13:29 - INFO - 	 ROC-AUC: 0.976
2024-11-08 13:29 - INFO - 	 PR-AUC: 0.773
2024-11-08 13:29 - INFO - 	 Best Val. Loss: 0.087
2024-11-08 13:29 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 13:29 - INFO - 	 Best PR-AUC: 0.773
2024-11-08 13:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-08 13:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-11-08 13:29 - INFO - ---------------------------------------------
2024-11-08 13:37 - INFO - ---------------------------------------------
2024-11-08 13:37 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-08 13:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80237
2024-11-08 13:37 - INFO - 	 Train Loss: 0.092
2024-11-08 13:37 - INFO - 	 Val. Loss: 0.082
2024-11-08 13:37 - INFO - 	 ROC-AUC: 0.979
2024-11-08 13:37 - INFO - 	 PR-AUC: 0.802
2024-11-08 13:37 - INFO - 	 Best Val. Loss: 0.082
2024-11-08 13:37 - INFO - 	 Best ROC-AUC: 0.979
2024-11-08 13:37 - INFO - 	 Best PR-AUC: 0.802
2024-11-08 13:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-08 13:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.787
2024-11-08 13:37 - INFO - ---------------------------------------------
2024-11-08 13:45 - INFO - ---------------------------------------------
2024-11-08 13:45 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 13:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81874
2024-11-08 13:45 - INFO - 	 Train Loss: 0.088
2024-11-08 13:45 - INFO - 	 Val. Loss: 0.077
2024-11-08 13:45 - INFO - 	 ROC-AUC: 0.980
2024-11-08 13:45 - INFO - 	 PR-AUC: 0.819
2024-11-08 13:45 - INFO - 	 Best Val. Loss: 0.077
2024-11-08 13:45 - INFO - 	 Best ROC-AUC: 0.980
2024-11-08 13:45 - INFO - 	 Best PR-AUC: 0.819
2024-11-08 13:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-08 13:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-11-08 13:45 - INFO - ---------------------------------------------
2024-11-08 13:48 - INFO - Fit the preprocessing pipeline
2024-11-08 13:48 - INFO - Training using device: cuda
2024-11-08 13:48 - INFO - Creating generators
2024-11-08 13:48 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 13:48 - INFO - * Model:
2024-11-08 13:48 - INFO - * -----------
2024-11-08 13:48 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 13:48 - INFO - * -----------
2024-11-08 13:56 - INFO - ---------------------------------------------
2024-11-08 13:56 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 13:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13993
2024-11-08 13:56 - INFO - 	 Train Loss: 0.261
2024-11-08 13:56 - INFO - 	 Val. Loss: 0.255
2024-11-08 13:56 - INFO - 	 ROC-AUC: 0.613
2024-11-08 13:56 - INFO - 	 PR-AUC: 0.140
2024-11-08 13:56 - INFO - 	 Best Val. Loss: 0.255
2024-11-08 13:56 - INFO - 	 Best ROC-AUC: 0.613
2024-11-08 13:56 - INFO - 	 Best PR-AUC: 0.140
2024-11-08 13:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.592
2024-11-08 13:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.178
2024-11-08 13:56 - INFO - ---------------------------------------------
2024-11-08 14:04 - INFO - ---------------------------------------------
2024-11-08 14:04 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 14:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17667
2024-11-08 14:04 - INFO - 	 Train Loss: 0.239
2024-11-08 14:04 - INFO - 	 Val. Loss: 0.519
2024-11-08 14:04 - INFO - 	 ROC-AUC: 0.706
2024-11-08 14:04 - INFO - 	 PR-AUC: 0.177
2024-11-08 14:04 - INFO - 	 Best Val. Loss: 0.255
2024-11-08 14:04 - INFO - 	 Best ROC-AUC: 0.706
2024-11-08 14:04 - INFO - 	 Best PR-AUC: 0.177
2024-11-08 14:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.664
2024-11-08 14:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.201
2024-11-08 14:04 - INFO - ---------------------------------------------
2024-11-08 14:12 - INFO - ---------------------------------------------
2024-11-08 14:12 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 14:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.31298
2024-11-08 14:12 - INFO - 	 Train Loss: 0.197
2024-11-08 14:12 - INFO - 	 Val. Loss: 0.490
2024-11-08 14:12 - INFO - 	 ROC-AUC: 0.852
2024-11-08 14:12 - INFO - 	 PR-AUC: 0.313
2024-11-08 14:12 - INFO - 	 Best Val. Loss: 0.255
2024-11-08 14:12 - INFO - 	 Best ROC-AUC: 0.852
2024-11-08 14:12 - INFO - 	 Best PR-AUC: 0.313
2024-11-08 14:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.844
2024-11-08 14:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.349
2024-11-08 14:12 - INFO - ---------------------------------------------
2024-11-08 14:20 - INFO - ---------------------------------------------
2024-11-08 14:20 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 14:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50245
2024-11-08 14:20 - INFO - 	 Train Loss: 0.156
2024-11-08 14:20 - INFO - 	 Val. Loss: 0.326
2024-11-08 14:20 - INFO - 	 ROC-AUC: 0.930
2024-11-08 14:20 - INFO - 	 PR-AUC: 0.502
2024-11-08 14:20 - INFO - 	 Best Val. Loss: 0.255
2024-11-08 14:20 - INFO - 	 Best ROC-AUC: 0.930
2024-11-08 14:20 - INFO - 	 Best PR-AUC: 0.502
2024-11-08 14:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-08 14:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.500
2024-11-08 14:20 - INFO - ---------------------------------------------
2024-11-08 14:28 - INFO - ---------------------------------------------
2024-11-08 14:28 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 14:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57591
2024-11-08 14:28 - INFO - 	 Train Loss: 0.133
2024-11-08 14:28 - INFO - 	 Val. Loss: 0.176
2024-11-08 14:28 - INFO - 	 ROC-AUC: 0.946
2024-11-08 14:28 - INFO - 	 PR-AUC: 0.576
2024-11-08 14:28 - INFO - 	 Best Val. Loss: 0.176
2024-11-08 14:28 - INFO - 	 Best ROC-AUC: 0.946
2024-11-08 14:28 - INFO - 	 Best PR-AUC: 0.576
2024-11-08 14:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-08 14:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.579
2024-11-08 14:28 - INFO - ---------------------------------------------
2024-11-08 14:36 - INFO - ---------------------------------------------
2024-11-08 14:36 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-08 14:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66611
2024-11-08 14:36 - INFO - 	 Train Loss: 0.118
2024-11-08 14:36 - INFO - 	 Val. Loss: 0.150
2024-11-08 14:36 - INFO - 	 ROC-AUC: 0.962
2024-11-08 14:36 - INFO - 	 PR-AUC: 0.666
2024-11-08 14:36 - INFO - 	 Best Val. Loss: 0.150
2024-11-08 14:36 - INFO - 	 Best ROC-AUC: 0.962
2024-11-08 14:36 - INFO - 	 Best PR-AUC: 0.666
2024-11-08 14:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-08 14:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.675
2024-11-08 14:36 - INFO - ---------------------------------------------
2024-11-08 14:44 - INFO - ---------------------------------------------
2024-11-08 14:44 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-08 14:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71979
2024-11-08 14:44 - INFO - 	 Train Loss: 0.109
2024-11-08 14:44 - INFO - 	 Val. Loss: 0.099
2024-11-08 14:44 - INFO - 	 ROC-AUC: 0.973
2024-11-08 14:44 - INFO - 	 PR-AUC: 0.720
2024-11-08 14:44 - INFO - 	 Best Val. Loss: 0.099
2024-11-08 14:44 - INFO - 	 Best ROC-AUC: 0.973
2024-11-08 14:44 - INFO - 	 Best PR-AUC: 0.720
2024-11-08 14:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-08 14:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.722
2024-11-08 14:44 - INFO - ---------------------------------------------
2024-11-08 14:52 - INFO - ---------------------------------------------
2024-11-08 14:52 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-08 14:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75908
2024-11-08 14:52 - INFO - 	 Train Loss: 0.102
2024-11-08 14:52 - INFO - 	 Val. Loss: 0.088
2024-11-08 14:52 - INFO - 	 ROC-AUC: 0.976
2024-11-08 14:52 - INFO - 	 PR-AUC: 0.759
2024-11-08 14:52 - INFO - 	 Best Val. Loss: 0.088
2024-11-08 14:52 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 14:52 - INFO - 	 Best PR-AUC: 0.759
2024-11-08 14:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-08 14:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-11-08 14:52 - INFO - ---------------------------------------------
2024-11-08 15:00 - INFO - ---------------------------------------------
2024-11-08 15:00 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-08 15:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76394
2024-11-08 15:00 - INFO - 	 Train Loss: 0.097
2024-11-08 15:00 - INFO - 	 Val. Loss: 0.089
2024-11-08 15:00 - INFO - 	 ROC-AUC: 0.975
2024-11-08 15:00 - INFO - 	 PR-AUC: 0.764
2024-11-08 15:00 - INFO - 	 Best Val. Loss: 0.088
2024-11-08 15:00 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 15:00 - INFO - 	 Best PR-AUC: 0.764
2024-11-08 15:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-08 15:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.761
2024-11-08 15:00 - INFO - ---------------------------------------------
2024-11-08 15:08 - INFO - ---------------------------------------------
2024-11-08 15:08 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 15:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81343
2024-11-08 15:08 - INFO - 	 Train Loss: 0.093
2024-11-08 15:08 - INFO - 	 Val. Loss: 0.077
2024-11-08 15:08 - INFO - 	 ROC-AUC: 0.981
2024-11-08 15:08 - INFO - 	 PR-AUC: 0.813
2024-11-08 15:08 - INFO - 	 Best Val. Loss: 0.077
2024-11-08 15:08 - INFO - 	 Best ROC-AUC: 0.981
2024-11-08 15:08 - INFO - 	 Best PR-AUC: 0.813
2024-11-08 15:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-08 15:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-08 15:08 - INFO - ---------------------------------------------
2024-11-08 15:10 - INFO - Fit the preprocessing pipeline
2024-11-08 15:10 - INFO - Training using device: cuda
2024-11-08 15:10 - INFO - Creating generators
2024-11-08 15:10 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 15:10 - INFO - * Model:
2024-11-08 15:10 - INFO - * -----------
2024-11-08 15:10 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 15:10 - INFO - * -----------
2024-11-08 15:18 - INFO - ---------------------------------------------
2024-11-08 15:18 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 15:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15544
2024-11-08 15:18 - INFO - 	 Train Loss: 0.264
2024-11-08 15:18 - INFO - 	 Val. Loss: 0.269
2024-11-08 15:18 - INFO - 	 ROC-AUC: 0.647
2024-11-08 15:18 - INFO - 	 PR-AUC: 0.155
2024-11-08 15:18 - INFO - 	 Best Val. Loss: 0.269
2024-11-08 15:18 - INFO - 	 Best ROC-AUC: 0.647
2024-11-08 15:18 - INFO - 	 Best PR-AUC: 0.155
2024-11-08 15:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.620
2024-11-08 15:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.186
2024-11-08 15:18 - INFO - ---------------------------------------------
2024-11-08 15:26 - INFO - ---------------------------------------------
2024-11-08 15:26 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 15:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18194
2024-11-08 15:26 - INFO - 	 Train Loss: 0.240
2024-11-08 15:26 - INFO - 	 Val. Loss: 0.284
2024-11-08 15:26 - INFO - 	 ROC-AUC: 0.704
2024-11-08 15:26 - INFO - 	 PR-AUC: 0.182
2024-11-08 15:26 - INFO - 	 Best Val. Loss: 0.269
2024-11-08 15:26 - INFO - 	 Best ROC-AUC: 0.704
2024-11-08 15:26 - INFO - 	 Best PR-AUC: 0.182
2024-11-08 15:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.700
2024-11-08 15:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.232
2024-11-08 15:26 - INFO - ---------------------------------------------
2024-11-08 15:35 - INFO - ---------------------------------------------
2024-11-08 15:35 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 15:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25635
2024-11-08 15:35 - INFO - 	 Train Loss: 0.207
2024-11-08 15:35 - INFO - 	 Val. Loss: 0.486
2024-11-08 15:35 - INFO - 	 ROC-AUC: 0.810
2024-11-08 15:35 - INFO - 	 PR-AUC: 0.256
2024-11-08 15:35 - INFO - 	 Best Val. Loss: 0.269
2024-11-08 15:35 - INFO - 	 Best ROC-AUC: 0.810
2024-11-08 15:35 - INFO - 	 Best PR-AUC: 0.256
2024-11-08 15:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.796
2024-11-08 15:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.292
2024-11-08 15:35 - INFO - ---------------------------------------------
2024-11-08 15:43 - INFO - ---------------------------------------------
2024-11-08 15:43 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 15:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50045
2024-11-08 15:43 - INFO - 	 Train Loss: 0.153
2024-11-08 15:43 - INFO - 	 Val. Loss: 0.227
2024-11-08 15:43 - INFO - 	 ROC-AUC: 0.933
2024-11-08 15:43 - INFO - 	 PR-AUC: 0.500
2024-11-08 15:43 - INFO - 	 Best Val. Loss: 0.227
2024-11-08 15:43 - INFO - 	 Best ROC-AUC: 0.933
2024-11-08 15:43 - INFO - 	 Best PR-AUC: 0.500
2024-11-08 15:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-08 15:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.539
2024-11-08 15:43 - INFO - ---------------------------------------------
2024-11-08 15:51 - INFO - ---------------------------------------------
2024-11-08 15:51 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 15:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59417
2024-11-08 15:51 - INFO - 	 Train Loss: 0.128
2024-11-08 15:51 - INFO - 	 Val. Loss: 0.189
2024-11-08 15:51 - INFO - 	 ROC-AUC: 0.952
2024-11-08 15:51 - INFO - 	 PR-AUC: 0.594
2024-11-08 15:51 - INFO - 	 Best Val. Loss: 0.189
2024-11-08 15:51 - INFO - 	 Best ROC-AUC: 0.952
2024-11-08 15:51 - INFO - 	 Best PR-AUC: 0.594
2024-11-08 15:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-08 15:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.596
2024-11-08 15:51 - INFO - ---------------------------------------------
2024-11-08 15:59 - INFO - ---------------------------------------------
2024-11-08 15:59 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-08 15:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65617
2024-11-08 15:59 - INFO - 	 Train Loss: 0.117
2024-11-08 15:59 - INFO - 	 Val. Loss: 0.156
2024-11-08 15:59 - INFO - 	 ROC-AUC: 0.959
2024-11-08 15:59 - INFO - 	 PR-AUC: 0.656
2024-11-08 15:59 - INFO - 	 Best Val. Loss: 0.156
2024-11-08 15:59 - INFO - 	 Best ROC-AUC: 0.959
2024-11-08 15:59 - INFO - 	 Best PR-AUC: 0.656
2024-11-08 15:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-08 15:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.679
2024-11-08 15:59 - INFO - ---------------------------------------------
2024-11-08 16:07 - INFO - ---------------------------------------------
2024-11-08 16:07 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-08 16:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72031
2024-11-08 16:07 - INFO - 	 Train Loss: 0.108
2024-11-08 16:07 - INFO - 	 Val. Loss: 0.109
2024-11-08 16:07 - INFO - 	 ROC-AUC: 0.971
2024-11-08 16:07 - INFO - 	 PR-AUC: 0.720
2024-11-08 16:07 - INFO - 	 Best Val. Loss: 0.109
2024-11-08 16:07 - INFO - 	 Best ROC-AUC: 0.971
2024-11-08 16:07 - INFO - 	 Best PR-AUC: 0.720
2024-11-08 16:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-08 16:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.727
2024-11-08 16:07 - INFO - ---------------------------------------------
2024-11-08 16:15 - INFO - ---------------------------------------------
2024-11-08 16:15 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-08 16:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7643
2024-11-08 16:15 - INFO - 	 Train Loss: 0.102
2024-11-08 16:15 - INFO - 	 Val. Loss: 0.093
2024-11-08 16:15 - INFO - 	 ROC-AUC: 0.976
2024-11-08 16:15 - INFO - 	 PR-AUC: 0.764
2024-11-08 16:15 - INFO - 	 Best Val. Loss: 0.093
2024-11-08 16:15 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 16:15 - INFO - 	 Best PR-AUC: 0.764
2024-11-08 16:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-08 16:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.765
2024-11-08 16:15 - INFO - ---------------------------------------------
2024-11-08 16:23 - INFO - ---------------------------------------------
2024-11-08 16:23 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-08 16:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77629
2024-11-08 16:23 - INFO - 	 Train Loss: 0.097
2024-11-08 16:23 - INFO - 	 Val. Loss: 0.090
2024-11-08 16:23 - INFO - 	 ROC-AUC: 0.977
2024-11-08 16:23 - INFO - 	 PR-AUC: 0.776
2024-11-08 16:23 - INFO - 	 Best Val. Loss: 0.090
2024-11-08 16:23 - INFO - 	 Best ROC-AUC: 0.977
2024-11-08 16:23 - INFO - 	 Best PR-AUC: 0.776
2024-11-08 16:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-08 16:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-11-08 16:23 - INFO - ---------------------------------------------
2024-11-08 16:31 - INFO - ---------------------------------------------
2024-11-08 16:31 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 16:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80235
2024-11-08 16:31 - INFO - 	 Train Loss: 0.090
2024-11-08 16:31 - INFO - 	 Val. Loss: 0.080
2024-11-08 16:31 - INFO - 	 ROC-AUC: 0.980
2024-11-08 16:31 - INFO - 	 PR-AUC: 0.802
2024-11-08 16:31 - INFO - 	 Best Val. Loss: 0.080
2024-11-08 16:31 - INFO - 	 Best ROC-AUC: 0.980
2024-11-08 16:31 - INFO - 	 Best PR-AUC: 0.802
2024-11-08 16:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-08 16:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.801
2024-11-08 16:31 - INFO - ---------------------------------------------
2024-11-08 16:33 - INFO - Fit the preprocessing pipeline
2024-11-08 16:33 - INFO - Training using device: cuda
2024-11-08 16:33 - INFO - Creating generators
2024-11-08 16:33 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 16:33 - INFO - * Model:
2024-11-08 16:33 - INFO - * -----------
2024-11-08 16:33 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 16:33 - INFO - * -----------
2024-11-08 16:41 - INFO - ---------------------------------------------
2024-11-08 16:41 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 16:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.1567
2024-11-08 16:41 - INFO - 	 Train Loss: 0.262
2024-11-08 16:41 - INFO - 	 Val. Loss: 0.285
2024-11-08 16:41 - INFO - 	 ROC-AUC: 0.656
2024-11-08 16:41 - INFO - 	 PR-AUC: 0.157
2024-11-08 16:41 - INFO - 	 Best Val. Loss: 0.285
2024-11-08 16:41 - INFO - 	 Best ROC-AUC: 0.656
2024-11-08 16:41 - INFO - 	 Best PR-AUC: 0.157
2024-11-08 16:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.631
2024-11-08 16:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.193
2024-11-08 16:41 - INFO - ---------------------------------------------
2024-11-08 16:49 - INFO - ---------------------------------------------
2024-11-08 16:49 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 16:49 - INFO - 	 Train Loss: 0.236
2024-11-08 16:49 - INFO - 	 Val. Loss: 0.582
2024-11-08 16:49 - INFO - 	 ROC-AUC: 0.657
2024-11-08 16:49 - INFO - 	 PR-AUC: 0.146
2024-11-08 16:49 - INFO - 	 Best Val. Loss: 0.285
2024-11-08 16:49 - INFO - 	 Best ROC-AUC: 0.657
2024-11-08 16:49 - INFO - 	 Best PR-AUC: 0.157
2024-11-08 16:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.642
2024-11-08 16:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.193
2024-11-08 16:49 - INFO - ---------------------------------------------
2024-11-08 16:57 - INFO - ---------------------------------------------
2024-11-08 16:57 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-08 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28283
2024-11-08 16:57 - INFO - 	 Train Loss: 0.198
2024-11-08 16:57 - INFO - 	 Val. Loss: 0.339
2024-11-08 16:57 - INFO - 	 ROC-AUC: 0.832
2024-11-08 16:57 - INFO - 	 PR-AUC: 0.283
2024-11-08 16:57 - INFO - 	 Best Val. Loss: 0.285
2024-11-08 16:57 - INFO - 	 Best ROC-AUC: 0.832
2024-11-08 16:57 - INFO - 	 Best PR-AUC: 0.283
2024-11-08 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.832
2024-11-08 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-08 16:57 - INFO - ---------------------------------------------
2024-11-08 17:05 - INFO - ---------------------------------------------
2024-11-08 17:05 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39381
2024-11-08 17:05 - INFO - 	 Train Loss: 0.167
2024-11-08 17:05 - INFO - 	 Val. Loss: 0.376
2024-11-08 17:05 - INFO - 	 ROC-AUC: 0.888
2024-11-08 17:05 - INFO - 	 PR-AUC: 0.394
2024-11-08 17:05 - INFO - 	 Best Val. Loss: 0.285
2024-11-08 17:05 - INFO - 	 Best ROC-AUC: 0.888
2024-11-08 17:05 - INFO - 	 Best PR-AUC: 0.394
2024-11-08 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-08 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.418
2024-11-08 17:05 - INFO - ---------------------------------------------
2024-11-08 17:13 - INFO - ---------------------------------------------
2024-11-08 17:13 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4916
2024-11-08 17:13 - INFO - 	 Train Loss: 0.148
2024-11-08 17:13 - INFO - 	 Val. Loss: 0.235
2024-11-08 17:13 - INFO - 	 ROC-AUC: 0.928
2024-11-08 17:13 - INFO - 	 PR-AUC: 0.492
2024-11-08 17:13 - INFO - 	 Best Val. Loss: 0.235
2024-11-08 17:13 - INFO - 	 Best ROC-AUC: 0.928
2024-11-08 17:13 - INFO - 	 Best PR-AUC: 0.492
2024-11-08 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-08 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.517
2024-11-08 17:13 - INFO - ---------------------------------------------
2024-11-08 17:21 - INFO - ---------------------------------------------
2024-11-08 17:21 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-08 17:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58356
2024-11-08 17:21 - INFO - 	 Train Loss: 0.132
2024-11-08 17:21 - INFO - 	 Val. Loss: 0.258
2024-11-08 17:21 - INFO - 	 ROC-AUC: 0.945
2024-11-08 17:21 - INFO - 	 PR-AUC: 0.584
2024-11-08 17:21 - INFO - 	 Best Val. Loss: 0.235
2024-11-08 17:21 - INFO - 	 Best ROC-AUC: 0.945
2024-11-08 17:21 - INFO - 	 Best PR-AUC: 0.584
2024-11-08 17:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-08 17:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.576
2024-11-08 17:21 - INFO - ---------------------------------------------
2024-11-08 17:29 - INFO - ---------------------------------------------
2024-11-08 17:29 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-08 17:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71678
2024-11-08 17:29 - INFO - 	 Train Loss: 0.114
2024-11-08 17:29 - INFO - 	 Val. Loss: 0.131
2024-11-08 17:29 - INFO - 	 ROC-AUC: 0.968
2024-11-08 17:29 - INFO - 	 PR-AUC: 0.717
2024-11-08 17:29 - INFO - 	 Best Val. Loss: 0.131
2024-11-08 17:29 - INFO - 	 Best ROC-AUC: 0.968
2024-11-08 17:29 - INFO - 	 Best PR-AUC: 0.717
2024-11-08 17:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-08 17:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.676
2024-11-08 17:29 - INFO - ---------------------------------------------
2024-11-08 17:37 - INFO - ---------------------------------------------
2024-11-08 17:37 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-08 17:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76119
2024-11-08 17:37 - INFO - 	 Train Loss: 0.103
2024-11-08 17:37 - INFO - 	 Val. Loss: 0.099
2024-11-08 17:37 - INFO - 	 ROC-AUC: 0.973
2024-11-08 17:37 - INFO - 	 PR-AUC: 0.761
2024-11-08 17:37 - INFO - 	 Best Val. Loss: 0.099
2024-11-08 17:37 - INFO - 	 Best ROC-AUC: 0.973
2024-11-08 17:37 - INFO - 	 Best PR-AUC: 0.761
2024-11-08 17:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-08 17:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-11-08 17:37 - INFO - ---------------------------------------------
2024-11-08 17:46 - INFO - ---------------------------------------------
2024-11-08 17:46 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-08 17:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80215
2024-11-08 17:46 - INFO - 	 Train Loss: 0.095
2024-11-08 17:46 - INFO - 	 Val. Loss: 0.086
2024-11-08 17:46 - INFO - 	 ROC-AUC: 0.979
2024-11-08 17:46 - INFO - 	 PR-AUC: 0.802
2024-11-08 17:46 - INFO - 	 Best Val. Loss: 0.086
2024-11-08 17:46 - INFO - 	 Best ROC-AUC: 0.979
2024-11-08 17:46 - INFO - 	 Best PR-AUC: 0.802
2024-11-08 17:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-08 17:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-11-08 17:46 - INFO - ---------------------------------------------
2024-11-08 17:54 - INFO - ---------------------------------------------
2024-11-08 17:54 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 17:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83594
2024-11-08 17:54 - INFO - 	 Train Loss: 0.089
2024-11-08 17:54 - INFO - 	 Val. Loss: 0.077
2024-11-08 17:54 - INFO - 	 ROC-AUC: 0.982
2024-11-08 17:54 - INFO - 	 PR-AUC: 0.836
2024-11-08 17:54 - INFO - 	 Best Val. Loss: 0.077
2024-11-08 17:54 - INFO - 	 Best ROC-AUC: 0.982
2024-11-08 17:54 - INFO - 	 Best PR-AUC: 0.836
2024-11-08 17:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-08 17:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-11-08 17:54 - INFO - ---------------------------------------------
2024-11-08 17:56 - INFO - Fit the preprocessing pipeline
2024-11-08 17:56 - INFO - Training using device: cuda
2024-11-08 17:56 - INFO - Creating generators
2024-11-08 17:56 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 17:56 - INFO - * Model:
2024-11-08 17:56 - INFO - * -----------
2024-11-08 17:56 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 17:56 - INFO - * -----------
2024-11-08 18:04 - INFO - ---------------------------------------------
2024-11-08 18:04 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 18:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13927
2024-11-08 18:04 - INFO - 	 Train Loss: 0.261
2024-11-08 18:04 - INFO - 	 Val. Loss: 0.306
2024-11-08 18:04 - INFO - 	 ROC-AUC: 0.627
2024-11-08 18:04 - INFO - 	 PR-AUC: 0.139
2024-11-08 18:04 - INFO - 	 Best Val. Loss: 0.306
2024-11-08 18:04 - INFO - 	 Best ROC-AUC: 0.627
2024-11-08 18:04 - INFO - 	 Best PR-AUC: 0.139
2024-11-08 18:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.594
2024-11-08 18:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-08 18:04 - INFO - ---------------------------------------------
2024-11-08 18:12 - INFO - ---------------------------------------------
2024-11-08 18:12 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 18:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21667
2024-11-08 18:12 - INFO - 	 Train Loss: 0.225
2024-11-08 18:12 - INFO - 	 Val. Loss: 0.450
2024-11-08 18:12 - INFO - 	 ROC-AUC: 0.754
2024-11-08 18:12 - INFO - 	 PR-AUC: 0.217
2024-11-08 18:12 - INFO - 	 Best Val. Loss: 0.306
2024-11-08 18:12 - INFO - 	 Best ROC-AUC: 0.754
2024-11-08 18:12 - INFO - 	 Best PR-AUC: 0.217
2024-11-08 18:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.749
2024-11-08 18:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.262
2024-11-08 18:12 - INFO - ---------------------------------------------
2024-11-08 18:20 - INFO - ---------------------------------------------
2024-11-08 18:20 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 18:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.33341
2024-11-08 18:20 - INFO - 	 Train Loss: 0.179
2024-11-08 18:20 - INFO - 	 Val. Loss: 0.378
2024-11-08 18:20 - INFO - 	 ROC-AUC: 0.877
2024-11-08 18:20 - INFO - 	 PR-AUC: 0.333
2024-11-08 18:20 - INFO - 	 Best Val. Loss: 0.306
2024-11-08 18:20 - INFO - 	 Best ROC-AUC: 0.877
2024-11-08 18:20 - INFO - 	 Best PR-AUC: 0.333
2024-11-08 18:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.865
2024-11-08 18:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.366
2024-11-08 18:20 - INFO - ---------------------------------------------
2024-11-08 18:28 - INFO - ---------------------------------------------
2024-11-08 18:28 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45018
2024-11-08 18:28 - INFO - 	 Train Loss: 0.148
2024-11-08 18:28 - INFO - 	 Val. Loss: 0.271
2024-11-08 18:28 - INFO - 	 ROC-AUC: 0.913
2024-11-08 18:28 - INFO - 	 PR-AUC: 0.450
2024-11-08 18:28 - INFO - 	 Best Val. Loss: 0.271
2024-11-08 18:28 - INFO - 	 Best ROC-AUC: 0.913
2024-11-08 18:28 - INFO - 	 Best PR-AUC: 0.450
2024-11-08 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.911
2024-11-08 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.485
2024-11-08 18:28 - INFO - ---------------------------------------------
2024-11-08 18:36 - INFO - ---------------------------------------------
2024-11-08 18:36 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60014
2024-11-08 18:36 - INFO - 	 Train Loss: 0.133
2024-11-08 18:36 - INFO - 	 Val. Loss: 0.215
2024-11-08 18:36 - INFO - 	 ROC-AUC: 0.941
2024-11-08 18:36 - INFO - 	 PR-AUC: 0.600
2024-11-08 18:36 - INFO - 	 Best Val. Loss: 0.215
2024-11-08 18:36 - INFO - 	 Best ROC-AUC: 0.941
2024-11-08 18:36 - INFO - 	 Best PR-AUC: 0.600
2024-11-08 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-08 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.598
2024-11-08 18:36 - INFO - ---------------------------------------------
2024-11-08 18:44 - INFO - ---------------------------------------------
2024-11-08 18:44 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-08 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6451
2024-11-08 18:44 - INFO - 	 Train Loss: 0.121
2024-11-08 18:44 - INFO - 	 Val. Loss: 0.123
2024-11-08 18:44 - INFO - 	 ROC-AUC: 0.960
2024-11-08 18:44 - INFO - 	 PR-AUC: 0.645
2024-11-08 18:44 - INFO - 	 Best Val. Loss: 0.123
2024-11-08 18:44 - INFO - 	 Best ROC-AUC: 0.960
2024-11-08 18:44 - INFO - 	 Best PR-AUC: 0.645
2024-11-08 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-08 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.667
2024-11-08 18:44 - INFO - ---------------------------------------------
2024-11-08 18:52 - INFO - ---------------------------------------------
2024-11-08 18:52 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-08 18:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71349
2024-11-08 18:52 - INFO - 	 Train Loss: 0.112
2024-11-08 18:52 - INFO - 	 Val. Loss: 0.104
2024-11-08 18:52 - INFO - 	 ROC-AUC: 0.969
2024-11-08 18:52 - INFO - 	 PR-AUC: 0.713
2024-11-08 18:52 - INFO - 	 Best Val. Loss: 0.104
2024-11-08 18:52 - INFO - 	 Best ROC-AUC: 0.969
2024-11-08 18:52 - INFO - 	 Best PR-AUC: 0.713
2024-11-08 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-08 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.701
2024-11-08 18:52 - INFO - ---------------------------------------------
2024-11-08 19:00 - INFO - ---------------------------------------------
2024-11-08 19:00 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-08 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77094
2024-11-08 19:00 - INFO - 	 Train Loss: 0.103
2024-11-08 19:00 - INFO - 	 Val. Loss: 0.092
2024-11-08 19:00 - INFO - 	 ROC-AUC: 0.974
2024-11-08 19:00 - INFO - 	 PR-AUC: 0.771
2024-11-08 19:00 - INFO - 	 Best Val. Loss: 0.092
2024-11-08 19:00 - INFO - 	 Best ROC-AUC: 0.974
2024-11-08 19:00 - INFO - 	 Best PR-AUC: 0.771
2024-11-08 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-08 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.766
2024-11-08 19:00 - INFO - ---------------------------------------------
2024-11-08 19:08 - INFO - ---------------------------------------------
2024-11-08 19:08 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-08 19:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78074
2024-11-08 19:08 - INFO - 	 Train Loss: 0.095
2024-11-08 19:08 - INFO - 	 Val. Loss: 0.089
2024-11-08 19:08 - INFO - 	 ROC-AUC: 0.977
2024-11-08 19:08 - INFO - 	 PR-AUC: 0.781
2024-11-08 19:08 - INFO - 	 Best Val. Loss: 0.089
2024-11-08 19:08 - INFO - 	 Best ROC-AUC: 0.977
2024-11-08 19:08 - INFO - 	 Best PR-AUC: 0.781
2024-11-08 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-08 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.796
2024-11-08 19:08 - INFO - ---------------------------------------------
2024-11-08 19:16 - INFO - ---------------------------------------------
2024-11-08 19:16 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80099
2024-11-08 19:16 - INFO - 	 Train Loss: 0.089
2024-11-08 19:16 - INFO - 	 Val. Loss: 0.084
2024-11-08 19:16 - INFO - 	 ROC-AUC: 0.978
2024-11-08 19:16 - INFO - 	 PR-AUC: 0.801
2024-11-08 19:16 - INFO - 	 Best Val. Loss: 0.084
2024-11-08 19:16 - INFO - 	 Best ROC-AUC: 0.978
2024-11-08 19:16 - INFO - 	 Best PR-AUC: 0.801
2024-11-08 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-08 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-08 19:16 - INFO - ---------------------------------------------
2024-11-08 19:19 - INFO - Fit the preprocessing pipeline
2024-11-08 19:19 - INFO - Training using device: cuda
2024-11-08 19:19 - INFO - Creating generators
2024-11-08 19:19 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 19:19 - INFO - * Model:
2024-11-08 19:19 - INFO - * -----------
2024-11-08 19:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 19:19 - INFO - * -----------
2024-11-08 19:27 - INFO - ---------------------------------------------
2024-11-08 19:27 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 19:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14353
2024-11-08 19:27 - INFO - 	 Train Loss: 0.261
2024-11-08 19:27 - INFO - 	 Val. Loss: 0.293
2024-11-08 19:27 - INFO - 	 ROC-AUC: 0.626
2024-11-08 19:27 - INFO - 	 PR-AUC: 0.144
2024-11-08 19:27 - INFO - 	 Best Val. Loss: 0.293
2024-11-08 19:27 - INFO - 	 Best ROC-AUC: 0.626
2024-11-08 19:27 - INFO - 	 Best PR-AUC: 0.144
2024-11-08 19:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.593
2024-11-08 19:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.158
2024-11-08 19:27 - INFO - ---------------------------------------------
2024-11-08 19:35 - INFO - ---------------------------------------------
2024-11-08 19:35 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 19:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19476
2024-11-08 19:35 - INFO - 	 Train Loss: 0.230
2024-11-08 19:35 - INFO - 	 Val. Loss: 0.432
2024-11-08 19:35 - INFO - 	 ROC-AUC: 0.736
2024-11-08 19:35 - INFO - 	 PR-AUC: 0.195
2024-11-08 19:35 - INFO - 	 Best Val. Loss: 0.293
2024-11-08 19:35 - INFO - 	 Best ROC-AUC: 0.736
2024-11-08 19:35 - INFO - 	 Best PR-AUC: 0.195
2024-11-08 19:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-08 19:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-08 19:35 - INFO - ---------------------------------------------
2024-11-08 19:43 - INFO - ---------------------------------------------
2024-11-08 19:43 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 19:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40922
2024-11-08 19:43 - INFO - 	 Train Loss: 0.179
2024-11-08 19:43 - INFO - 	 Val. Loss: 0.306
2024-11-08 19:43 - INFO - 	 ROC-AUC: 0.904
2024-11-08 19:43 - INFO - 	 PR-AUC: 0.409
2024-11-08 19:43 - INFO - 	 Best Val. Loss: 0.293
2024-11-08 19:43 - INFO - 	 Best ROC-AUC: 0.904
2024-11-08 19:43 - INFO - 	 Best PR-AUC: 0.409
2024-11-08 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.905
2024-11-08 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.457
2024-11-08 19:43 - INFO - ---------------------------------------------
2024-11-08 19:51 - INFO - ---------------------------------------------
2024-11-08 19:51 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 19:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53292
2024-11-08 19:51 - INFO - 	 Train Loss: 0.142
2024-11-08 19:51 - INFO - 	 Val. Loss: 0.221
2024-11-08 19:51 - INFO - 	 ROC-AUC: 0.939
2024-11-08 19:51 - INFO - 	 PR-AUC: 0.533
2024-11-08 19:51 - INFO - 	 Best Val. Loss: 0.221
2024-11-08 19:51 - INFO - 	 Best ROC-AUC: 0.939
2024-11-08 19:51 - INFO - 	 Best PR-AUC: 0.533
2024-11-08 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-08 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.525
2024-11-08 19:51 - INFO - ---------------------------------------------
2024-11-08 19:59 - INFO - ---------------------------------------------
2024-11-08 19:59 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63773
2024-11-08 19:59 - INFO - 	 Train Loss: 0.125
2024-11-08 19:59 - INFO - 	 Val. Loss: 0.204
2024-11-08 19:59 - INFO - 	 ROC-AUC: 0.957
2024-11-08 19:59 - INFO - 	 PR-AUC: 0.638
2024-11-08 19:59 - INFO - 	 Best Val. Loss: 0.204
2024-11-08 19:59 - INFO - 	 Best ROC-AUC: 0.957
2024-11-08 19:59 - INFO - 	 Best PR-AUC: 0.638
2024-11-08 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-08 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.653
2024-11-08 19:59 - INFO - ---------------------------------------------
2024-11-08 20:07 - INFO - ---------------------------------------------
2024-11-08 20:07 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-08 20:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69994
2024-11-08 20:07 - INFO - 	 Train Loss: 0.115
2024-11-08 20:07 - INFO - 	 Val. Loss: 0.115
2024-11-08 20:07 - INFO - 	 ROC-AUC: 0.968
2024-11-08 20:07 - INFO - 	 PR-AUC: 0.700
2024-11-08 20:07 - INFO - 	 Best Val. Loss: 0.115
2024-11-08 20:07 - INFO - 	 Best ROC-AUC: 0.968
2024-11-08 20:07 - INFO - 	 Best PR-AUC: 0.700
2024-11-08 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-08 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.686
2024-11-08 20:07 - INFO - ---------------------------------------------
2024-11-08 20:15 - INFO - ---------------------------------------------
2024-11-08 20:15 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-08 20:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75644
2024-11-08 20:15 - INFO - 	 Train Loss: 0.106
2024-11-08 20:15 - INFO - 	 Val. Loss: 0.108
2024-11-08 20:15 - INFO - 	 ROC-AUC: 0.973
2024-11-08 20:15 - INFO - 	 PR-AUC: 0.756
2024-11-08 20:15 - INFO - 	 Best Val. Loss: 0.108
2024-11-08 20:15 - INFO - 	 Best ROC-AUC: 0.973
2024-11-08 20:15 - INFO - 	 Best PR-AUC: 0.756
2024-11-08 20:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-08 20:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.753
2024-11-08 20:15 - INFO - ---------------------------------------------
2024-11-08 20:23 - INFO - ---------------------------------------------
2024-11-08 20:23 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-08 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7789
2024-11-08 20:23 - INFO - 	 Train Loss: 0.100
2024-11-08 20:23 - INFO - 	 Val. Loss: 0.088
2024-11-08 20:23 - INFO - 	 ROC-AUC: 0.975
2024-11-08 20:23 - INFO - 	 PR-AUC: 0.779
2024-11-08 20:23 - INFO - 	 Best Val. Loss: 0.088
2024-11-08 20:23 - INFO - 	 Best ROC-AUC: 0.975
2024-11-08 20:23 - INFO - 	 Best PR-AUC: 0.779
2024-11-08 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-08 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-11-08 20:23 - INFO - ---------------------------------------------
2024-11-08 20:31 - INFO - ---------------------------------------------
2024-11-08 20:31 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-08 20:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81451
2024-11-08 20:31 - INFO - 	 Train Loss: 0.094
2024-11-08 20:31 - INFO - 	 Val. Loss: 0.081
2024-11-08 20:31 - INFO - 	 ROC-AUC: 0.979
2024-11-08 20:31 - INFO - 	 PR-AUC: 0.815
2024-11-08 20:31 - INFO - 	 Best Val. Loss: 0.081
2024-11-08 20:31 - INFO - 	 Best ROC-AUC: 0.979
2024-11-08 20:31 - INFO - 	 Best PR-AUC: 0.815
2024-11-08 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-08 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-11-08 20:31 - INFO - ---------------------------------------------
2024-11-08 20:39 - INFO - ---------------------------------------------
2024-11-08 20:39 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 20:39 - INFO - 	 Train Loss: 0.088
2024-11-08 20:39 - INFO - 	 Val. Loss: 0.080
2024-11-08 20:39 - INFO - 	 ROC-AUC: 0.980
2024-11-08 20:39 - INFO - 	 PR-AUC: 0.811
2024-11-08 20:39 - INFO - 	 Best Val. Loss: 0.080
2024-11-08 20:39 - INFO - 	 Best ROC-AUC: 0.980
2024-11-08 20:39 - INFO - 	 Best PR-AUC: 0.815
2024-11-08 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-08 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-11-08 20:39 - INFO - ---------------------------------------------
2024-11-08 20:42 - INFO - Fit the preprocessing pipeline
2024-11-08 20:42 - INFO - Training using device: cuda
2024-11-08 20:42 - INFO - Creating generators
2024-11-08 20:42 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 20:42 - INFO - * Model:
2024-11-08 20:42 - INFO - * -----------
2024-11-08 20:42 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 20:42 - INFO - * -----------
2024-11-08 20:50 - INFO - ---------------------------------------------
2024-11-08 20:50 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 20:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.15155
2024-11-08 20:50 - INFO - 	 Train Loss: 0.260
2024-11-08 20:50 - INFO - 	 Val. Loss: 0.283
2024-11-08 20:50 - INFO - 	 ROC-AUC: 0.626
2024-11-08 20:50 - INFO - 	 PR-AUC: 0.152
2024-11-08 20:50 - INFO - 	 Best Val. Loss: 0.283
2024-11-08 20:50 - INFO - 	 Best ROC-AUC: 0.626
2024-11-08 20:50 - INFO - 	 Best PR-AUC: 0.152
2024-11-08 20:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.624
2024-11-08 20:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.189
2024-11-08 20:50 - INFO - ---------------------------------------------
2024-11-08 20:58 - INFO - ---------------------------------------------
2024-11-08 20:58 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 20:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20726
2024-11-08 20:58 - INFO - 	 Train Loss: 0.226
2024-11-08 20:58 - INFO - 	 Val. Loss: 0.528
2024-11-08 20:58 - INFO - 	 ROC-AUC: 0.743
2024-11-08 20:58 - INFO - 	 PR-AUC: 0.207
2024-11-08 20:58 - INFO - 	 Best Val. Loss: 0.283
2024-11-08 20:58 - INFO - 	 Best ROC-AUC: 0.743
2024-11-08 20:58 - INFO - 	 Best PR-AUC: 0.207
2024-11-08 20:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.729
2024-11-08 20:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.233
2024-11-08 20:58 - INFO - ---------------------------------------------
2024-11-08 21:06 - INFO - ---------------------------------------------
2024-11-08 21:06 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-08 21:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37369
2024-11-08 21:06 - INFO - 	 Train Loss: 0.182
2024-11-08 21:06 - INFO - 	 Val. Loss: 0.310
2024-11-08 21:06 - INFO - 	 ROC-AUC: 0.891
2024-11-08 21:06 - INFO - 	 PR-AUC: 0.374
2024-11-08 21:06 - INFO - 	 Best Val. Loss: 0.283
2024-11-08 21:06 - INFO - 	 Best ROC-AUC: 0.891
2024-11-08 21:06 - INFO - 	 Best PR-AUC: 0.374
2024-11-08 21:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.879
2024-11-08 21:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.413
2024-11-08 21:06 - INFO - ---------------------------------------------
2024-11-08 21:14 - INFO - ---------------------------------------------
2024-11-08 21:14 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-08 21:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46062
2024-11-08 21:14 - INFO - 	 Train Loss: 0.148
2024-11-08 21:14 - INFO - 	 Val. Loss: 0.371
2024-11-08 21:14 - INFO - 	 ROC-AUC: 0.924
2024-11-08 21:14 - INFO - 	 PR-AUC: 0.461
2024-11-08 21:14 - INFO - 	 Best Val. Loss: 0.283
2024-11-08 21:14 - INFO - 	 Best ROC-AUC: 0.924
2024-11-08 21:14 - INFO - 	 Best PR-AUC: 0.461
2024-11-08 21:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-08 21:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.472
2024-11-08 21:14 - INFO - ---------------------------------------------
2024-11-08 21:22 - INFO - ---------------------------------------------
2024-11-08 21:22 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-08 21:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66321
2024-11-08 21:22 - INFO - 	 Train Loss: 0.126
2024-11-08 21:22 - INFO - 	 Val. Loss: 0.143
2024-11-08 21:22 - INFO - 	 ROC-AUC: 0.963
2024-11-08 21:22 - INFO - 	 PR-AUC: 0.663
2024-11-08 21:22 - INFO - 	 Best Val. Loss: 0.143
2024-11-08 21:22 - INFO - 	 Best ROC-AUC: 0.963
2024-11-08 21:22 - INFO - 	 Best PR-AUC: 0.663
2024-11-08 21:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-08 21:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.679
2024-11-08 21:22 - INFO - ---------------------------------------------
2024-11-08 21:30 - INFO - ---------------------------------------------
2024-11-08 21:30 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-08 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7189
2024-11-08 21:30 - INFO - 	 Train Loss: 0.113
2024-11-08 21:30 - INFO - 	 Val. Loss: 0.097
2024-11-08 21:30 - INFO - 	 ROC-AUC: 0.972
2024-11-08 21:30 - INFO - 	 PR-AUC: 0.719
2024-11-08 21:30 - INFO - 	 Best Val. Loss: 0.097
2024-11-08 21:30 - INFO - 	 Best ROC-AUC: 0.972
2024-11-08 21:30 - INFO - 	 Best PR-AUC: 0.719
2024-11-08 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-08 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.746
2024-11-08 21:30 - INFO - ---------------------------------------------
2024-11-08 21:38 - INFO - ---------------------------------------------
2024-11-08 21:38 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-08 21:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75792
2024-11-08 21:38 - INFO - 	 Train Loss: 0.102
2024-11-08 21:38 - INFO - 	 Val. Loss: 0.091
2024-11-08 21:38 - INFO - 	 ROC-AUC: 0.976
2024-11-08 21:38 - INFO - 	 PR-AUC: 0.758
2024-11-08 21:38 - INFO - 	 Best Val. Loss: 0.091
2024-11-08 21:38 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 21:38 - INFO - 	 Best PR-AUC: 0.758
2024-11-08 21:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-08 21:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.757
2024-11-08 21:38 - INFO - ---------------------------------------------
2024-11-08 21:46 - INFO - ---------------------------------------------
2024-11-08 21:46 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-08 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77676
2024-11-08 21:46 - INFO - 	 Train Loss: 0.097
2024-11-08 21:46 - INFO - 	 Val. Loss: 0.091
2024-11-08 21:46 - INFO - 	 ROC-AUC: 0.976
2024-11-08 21:46 - INFO - 	 PR-AUC: 0.777
2024-11-08 21:46 - INFO - 	 Best Val. Loss: 0.091
2024-11-08 21:46 - INFO - 	 Best ROC-AUC: 0.976
2024-11-08 21:46 - INFO - 	 Best PR-AUC: 0.777
2024-11-08 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-08 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.755
2024-11-08 21:46 - INFO - ---------------------------------------------
2024-11-08 21:54 - INFO - ---------------------------------------------
2024-11-08 21:54 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-08 21:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78602
2024-11-08 21:54 - INFO - 	 Train Loss: 0.093
2024-11-08 21:54 - INFO - 	 Val. Loss: 0.084
2024-11-08 21:54 - INFO - 	 ROC-AUC: 0.979
2024-11-08 21:54 - INFO - 	 PR-AUC: 0.786
2024-11-08 21:54 - INFO - 	 Best Val. Loss: 0.084
2024-11-08 21:54 - INFO - 	 Best ROC-AUC: 0.979
2024-11-08 21:54 - INFO - 	 Best PR-AUC: 0.786
2024-11-08 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-08 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.782
2024-11-08 21:54 - INFO - ---------------------------------------------
2024-11-08 22:02 - INFO - ---------------------------------------------
2024-11-08 22:02 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82034
2024-11-08 22:02 - INFO - 	 Train Loss: 0.089
2024-11-08 22:02 - INFO - 	 Val. Loss: 0.079
2024-11-08 22:02 - INFO - 	 ROC-AUC: 0.980
2024-11-08 22:02 - INFO - 	 PR-AUC: 0.820
2024-11-08 22:02 - INFO - 	 Best Val. Loss: 0.079
2024-11-08 22:02 - INFO - 	 Best ROC-AUC: 0.980
2024-11-08 22:02 - INFO - 	 Best PR-AUC: 0.820
2024-11-08 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-08 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.807
2024-11-08 22:02 - INFO - ---------------------------------------------
2024-11-08 22:04 - INFO - Fit the preprocessing pipeline
2024-11-08 22:04 - INFO - Training using device: cuda
2024-11-08 22:04 - INFO - Creating generators
2024-11-08 22:04 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 22:04 - INFO - * Model:
2024-11-08 22:04 - INFO - * -----------
2024-11-08 22:04 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 22:04 - INFO - * -----------
2024-11-08 22:12 - INFO - ---------------------------------------------
2024-11-08 22:12 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-08 22:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13696
2024-11-08 22:12 - INFO - 	 Train Loss: 0.265
2024-11-08 22:12 - INFO - 	 Val. Loss: 0.244
2024-11-08 22:12 - INFO - 	 ROC-AUC: 0.641
2024-11-08 22:12 - INFO - 	 PR-AUC: 0.137
2024-11-08 22:12 - INFO - 	 Best Val. Loss: 0.244
2024-11-08 22:12 - INFO - 	 Best ROC-AUC: 0.641
2024-11-08 22:12 - INFO - 	 Best PR-AUC: 0.137
2024-11-08 22:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.604
2024-11-08 22:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.162
2024-11-08 22:12 - INFO - ---------------------------------------------
2024-11-08 22:20 - INFO - ---------------------------------------------
2024-11-08 22:20 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 22:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17796
2024-11-08 22:20 - INFO - 	 Train Loss: 0.240
2024-11-08 22:20 - INFO - 	 Val. Loss: 0.304
2024-11-08 22:20 - INFO - 	 ROC-AUC: 0.693
2024-11-08 22:20 - INFO - 	 PR-AUC: 0.178
2024-11-08 22:20 - INFO - 	 Best Val. Loss: 0.244
2024-11-08 22:20 - INFO - 	 Best ROC-AUC: 0.693
2024-11-08 22:20 - INFO - 	 Best PR-AUC: 0.178
2024-11-08 22:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.667
2024-11-08 22:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.204
2024-11-08 22:20 - INFO - ---------------------------------------------
2024-11-08 22:28 - INFO - ---------------------------------------------
2024-11-08 22:28 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 22:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.28069
2024-11-08 22:28 - INFO - 	 Train Loss: 0.210
2024-11-08 22:28 - INFO - 	 Val. Loss: 0.377
2024-11-08 22:28 - INFO - 	 ROC-AUC: 0.831
2024-11-08 22:28 - INFO - 	 PR-AUC: 0.281
2024-11-08 22:28 - INFO - 	 Best Val. Loss: 0.244
2024-11-08 22:28 - INFO - 	 Best ROC-AUC: 0.831
2024-11-08 22:28 - INFO - 	 Best PR-AUC: 0.281
2024-11-08 22:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.808
2024-11-08 22:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.303
2024-11-08 22:28 - INFO - ---------------------------------------------
2024-11-08 22:36 - INFO - ---------------------------------------------
2024-11-08 22:36 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45655
2024-11-08 22:36 - INFO - 	 Train Loss: 0.159
2024-11-08 22:36 - INFO - 	 Val. Loss: 0.305
2024-11-08 22:36 - INFO - 	 ROC-AUC: 0.919
2024-11-08 22:36 - INFO - 	 PR-AUC: 0.457
2024-11-08 22:36 - INFO - 	 Best Val. Loss: 0.244
2024-11-08 22:36 - INFO - 	 Best ROC-AUC: 0.919
2024-11-08 22:36 - INFO - 	 Best PR-AUC: 0.457
2024-11-08 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-08 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.485
2024-11-08 22:36 - INFO - ---------------------------------------------
2024-11-08 22:44 - INFO - ---------------------------------------------
2024-11-08 22:44 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-08 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60665
2024-11-08 22:44 - INFO - 	 Train Loss: 0.132
2024-11-08 22:44 - INFO - 	 Val. Loss: 0.199
2024-11-08 22:44 - INFO - 	 ROC-AUC: 0.953
2024-11-08 22:44 - INFO - 	 PR-AUC: 0.607
2024-11-08 22:44 - INFO - 	 Best Val. Loss: 0.199
2024-11-08 22:44 - INFO - 	 Best ROC-AUC: 0.953
2024-11-08 22:44 - INFO - 	 Best PR-AUC: 0.607
2024-11-08 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.948
2024-11-08 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.623
2024-11-08 22:44 - INFO - ---------------------------------------------
2024-11-08 22:53 - INFO - ---------------------------------------------
2024-11-08 22:53 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-08 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65855
2024-11-08 22:53 - INFO - 	 Train Loss: 0.121
2024-11-08 22:53 - INFO - 	 Val. Loss: 0.158
2024-11-08 22:53 - INFO - 	 ROC-AUC: 0.960
2024-11-08 22:53 - INFO - 	 PR-AUC: 0.659
2024-11-08 22:53 - INFO - 	 Best Val. Loss: 0.158
2024-11-08 22:53 - INFO - 	 Best ROC-AUC: 0.960
2024-11-08 22:53 - INFO - 	 Best PR-AUC: 0.659
2024-11-08 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-08 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.656
2024-11-08 22:53 - INFO - ---------------------------------------------
2024-11-08 23:01 - INFO - ---------------------------------------------
2024-11-08 23:01 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-08 23:01 - INFO - 	 Train Loss: 0.112
2024-11-08 23:01 - INFO - 	 Val. Loss: 0.176
2024-11-08 23:01 - INFO - 	 ROC-AUC: 0.959
2024-11-08 23:01 - INFO - 	 PR-AUC: 0.657
2024-11-08 23:01 - INFO - 	 Best Val. Loss: 0.158
2024-11-08 23:01 - INFO - 	 Best ROC-AUC: 0.960
2024-11-08 23:01 - INFO - 	 Best PR-AUC: 0.659
2024-11-08 23:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-08 23:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.656
2024-11-08 23:01 - INFO - ---------------------------------------------
2024-11-08 23:09 - INFO - ---------------------------------------------
2024-11-08 23:09 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-08 23:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75231
2024-11-08 23:09 - INFO - 	 Train Loss: 0.105
2024-11-08 23:09 - INFO - 	 Val. Loss: 0.107
2024-11-08 23:09 - INFO - 	 ROC-AUC: 0.973
2024-11-08 23:09 - INFO - 	 PR-AUC: 0.752
2024-11-08 23:09 - INFO - 	 Best Val. Loss: 0.107
2024-11-08 23:09 - INFO - 	 Best ROC-AUC: 0.973
2024-11-08 23:09 - INFO - 	 Best PR-AUC: 0.752
2024-11-08 23:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-08 23:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.743
2024-11-08 23:09 - INFO - ---------------------------------------------
2024-11-08 23:17 - INFO - ---------------------------------------------
2024-11-08 23:17 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-08 23:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78048
2024-11-08 23:17 - INFO - 	 Train Loss: 0.101
2024-11-08 23:17 - INFO - 	 Val. Loss: 0.090
2024-11-08 23:17 - INFO - 	 ROC-AUC: 0.974
2024-11-08 23:17 - INFO - 	 PR-AUC: 0.780
2024-11-08 23:17 - INFO - 	 Best Val. Loss: 0.090
2024-11-08 23:17 - INFO - 	 Best ROC-AUC: 0.974
2024-11-08 23:17 - INFO - 	 Best PR-AUC: 0.780
2024-11-08 23:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-08 23:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-11-08 23:17 - INFO - ---------------------------------------------
2024-11-08 23:25 - INFO - ---------------------------------------------
2024-11-08 23:25 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-08 23:25 - INFO - 	 Train Loss: 0.096
2024-11-08 23:25 - INFO - 	 Val. Loss: 0.097
2024-11-08 23:25 - INFO - 	 ROC-AUC: 0.975
2024-11-08 23:25 - INFO - 	 PR-AUC: 0.773
2024-11-08 23:25 - INFO - 	 Best Val. Loss: 0.090
2024-11-08 23:25 - INFO - 	 Best ROC-AUC: 0.975
2024-11-08 23:25 - INFO - 	 Best PR-AUC: 0.780
2024-11-08 23:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-08 23:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.751
2024-11-08 23:25 - INFO - ---------------------------------------------
2024-11-08 23:27 - INFO - Fit the preprocessing pipeline
2024-11-08 23:27 - INFO - Training using device: cuda
2024-11-08 23:27 - INFO - Creating generators
2024-11-08 23:27 - INFO - The model has 2,246,929 trainable parameters
2024-11-08 23:27 - INFO - * Model:
2024-11-08 23:27 - INFO - * -----------
2024-11-08 23:27 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-08 23:27 - INFO - * -----------
2024-11-08 23:35 - INFO - ---------------------------------------------
2024-11-08 23:35 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-08 23:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.12945
2024-11-08 23:35 - INFO - 	 Train Loss: 0.266
2024-11-08 23:35 - INFO - 	 Val. Loss: 0.265
2024-11-08 23:35 - INFO - 	 ROC-AUC: 0.629
2024-11-08 23:35 - INFO - 	 PR-AUC: 0.129
2024-11-08 23:35 - INFO - 	 Best Val. Loss: 0.265
2024-11-08 23:35 - INFO - 	 Best ROC-AUC: 0.629
2024-11-08 23:35 - INFO - 	 Best PR-AUC: 0.129
2024-11-08 23:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.613
2024-11-08 23:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.151
2024-11-08 23:35 - INFO - ---------------------------------------------
2024-11-08 23:43 - INFO - ---------------------------------------------
2024-11-08 23:43 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-08 23:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18965
2024-11-08 23:43 - INFO - 	 Train Loss: 0.244
2024-11-08 23:43 - INFO - 	 Val. Loss: 0.305
2024-11-08 23:43 - INFO - 	 ROC-AUC: 0.688
2024-11-08 23:43 - INFO - 	 PR-AUC: 0.190
2024-11-08 23:43 - INFO - 	 Best Val. Loss: 0.265
2024-11-08 23:43 - INFO - 	 Best ROC-AUC: 0.688
2024-11-08 23:43 - INFO - 	 Best PR-AUC: 0.190
2024-11-08 23:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.657
2024-11-08 23:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.220
2024-11-08 23:43 - INFO - ---------------------------------------------
2024-11-08 23:51 - INFO - ---------------------------------------------
2024-11-08 23:51 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-08 23:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.26161
2024-11-08 23:51 - INFO - 	 Train Loss: 0.214
2024-11-08 23:51 - INFO - 	 Val. Loss: 0.433
2024-11-08 23:51 - INFO - 	 ROC-AUC: 0.809
2024-11-08 23:51 - INFO - 	 PR-AUC: 0.262
2024-11-08 23:51 - INFO - 	 Best Val. Loss: 0.265
2024-11-08 23:51 - INFO - 	 Best ROC-AUC: 0.809
2024-11-08 23:51 - INFO - 	 Best PR-AUC: 0.262
2024-11-08 23:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-08 23:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-08 23:51 - INFO - ---------------------------------------------
2024-11-08 23:59 - INFO - ---------------------------------------------
2024-11-08 23:59 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-08 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4963
2024-11-08 23:59 - INFO - 	 Train Loss: 0.170
2024-11-08 23:59 - INFO - 	 Val. Loss: 0.211
2024-11-08 23:59 - INFO - 	 ROC-AUC: 0.929
2024-11-08 23:59 - INFO - 	 PR-AUC: 0.496
2024-11-08 23:59 - INFO - 	 Best Val. Loss: 0.211
2024-11-08 23:59 - INFO - 	 Best ROC-AUC: 0.929
2024-11-08 23:59 - INFO - 	 Best PR-AUC: 0.496
2024-11-08 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-08 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.527
2024-11-08 23:59 - INFO - ---------------------------------------------
2024-11-09 00:07 - INFO - ---------------------------------------------
2024-11-09 00:07 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-09 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56014
2024-11-09 00:07 - INFO - 	 Train Loss: 0.137
2024-11-09 00:07 - INFO - 	 Val. Loss: 0.246
2024-11-09 00:07 - INFO - 	 ROC-AUC: 0.946
2024-11-09 00:07 - INFO - 	 PR-AUC: 0.560
2024-11-09 00:07 - INFO - 	 Best Val. Loss: 0.211
2024-11-09 00:07 - INFO - 	 Best ROC-AUC: 0.946
2024-11-09 00:07 - INFO - 	 Best PR-AUC: 0.560
2024-11-09 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-09 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.597
2024-11-09 00:07 - INFO - ---------------------------------------------
2024-11-09 00:15 - INFO - ---------------------------------------------
2024-11-09 00:15 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-09 00:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6721
2024-11-09 00:15 - INFO - 	 Train Loss: 0.119
2024-11-09 00:15 - INFO - 	 Val. Loss: 0.120
2024-11-09 00:15 - INFO - 	 ROC-AUC: 0.963
2024-11-09 00:15 - INFO - 	 PR-AUC: 0.672
2024-11-09 00:15 - INFO - 	 Best Val. Loss: 0.120
2024-11-09 00:15 - INFO - 	 Best ROC-AUC: 0.963
2024-11-09 00:15 - INFO - 	 Best PR-AUC: 0.672
2024-11-09 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-09 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.685
2024-11-09 00:15 - INFO - ---------------------------------------------
2024-11-09 00:23 - INFO - ---------------------------------------------
2024-11-09 00:23 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 00:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73287
2024-11-09 00:23 - INFO - 	 Train Loss: 0.107
2024-11-09 00:23 - INFO - 	 Val. Loss: 0.106
2024-11-09 00:23 - INFO - 	 ROC-AUC: 0.972
2024-11-09 00:23 - INFO - 	 PR-AUC: 0.733
2024-11-09 00:23 - INFO - 	 Best Val. Loss: 0.106
2024-11-09 00:23 - INFO - 	 Best ROC-AUC: 0.972
2024-11-09 00:23 - INFO - 	 Best PR-AUC: 0.733
2024-11-09 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.970
2024-11-09 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.739
2024-11-09 00:23 - INFO - ---------------------------------------------
2024-11-09 00:31 - INFO - ---------------------------------------------
2024-11-09 00:31 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-09 00:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78584
2024-11-09 00:31 - INFO - 	 Train Loss: 0.100
2024-11-09 00:31 - INFO - 	 Val. Loss: 0.090
2024-11-09 00:31 - INFO - 	 ROC-AUC: 0.975
2024-11-09 00:31 - INFO - 	 PR-AUC: 0.786
2024-11-09 00:31 - INFO - 	 Best Val. Loss: 0.090
2024-11-09 00:31 - INFO - 	 Best ROC-AUC: 0.975
2024-11-09 00:31 - INFO - 	 Best PR-AUC: 0.786
2024-11-09 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-09 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-11-09 00:31 - INFO - ---------------------------------------------
2024-11-09 00:39 - INFO - ---------------------------------------------
2024-11-09 00:39 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-09 00:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79491
2024-11-09 00:39 - INFO - 	 Train Loss: 0.093
2024-11-09 00:39 - INFO - 	 Val. Loss: 0.084
2024-11-09 00:39 - INFO - 	 ROC-AUC: 0.978
2024-11-09 00:39 - INFO - 	 PR-AUC: 0.795
2024-11-09 00:39 - INFO - 	 Best Val. Loss: 0.084
2024-11-09 00:39 - INFO - 	 Best ROC-AUC: 0.978
2024-11-09 00:39 - INFO - 	 Best PR-AUC: 0.795
2024-11-09 00:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-09 00:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-11-09 00:39 - INFO - ---------------------------------------------
2024-11-09 00:47 - INFO - ---------------------------------------------
2024-11-09 00:47 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-09 00:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80104
2024-11-09 00:47 - INFO - 	 Train Loss: 0.087
2024-11-09 00:47 - INFO - 	 Val. Loss: 0.082
2024-11-09 00:47 - INFO - 	 ROC-AUC: 0.979
2024-11-09 00:47 - INFO - 	 PR-AUC: 0.801
2024-11-09 00:47 - INFO - 	 Best Val. Loss: 0.082
2024-11-09 00:47 - INFO - 	 Best ROC-AUC: 0.979
2024-11-09 00:47 - INFO - 	 Best PR-AUC: 0.801
2024-11-09 00:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-09 00:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-11-09 00:47 - INFO - ---------------------------------------------
2024-11-09 00:50 - INFO - Fit the preprocessing pipeline
2024-11-09 00:50 - INFO - Training using device: cuda
2024-11-09 00:50 - INFO - Creating generators
2024-11-09 00:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 00:50 - INFO - * Model:
2024-11-09 00:50 - INFO - * -----------
2024-11-09 00:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 00:50 - INFO - * -----------
2024-11-09 00:58 - INFO - ---------------------------------------------
2024-11-09 00:58 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 00:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.13089
2024-11-09 00:58 - INFO - 	 Train Loss: 0.265
2024-11-09 00:58 - INFO - 	 Val. Loss: 0.273
2024-11-09 00:58 - INFO - 	 ROC-AUC: 0.623
2024-11-09 00:58 - INFO - 	 PR-AUC: 0.131
2024-11-09 00:58 - INFO - 	 Best Val. Loss: 0.273
2024-11-09 00:58 - INFO - 	 Best ROC-AUC: 0.623
2024-11-09 00:58 - INFO - 	 Best PR-AUC: 0.131
2024-11-09 00:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.594
2024-11-09 00:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.167
2024-11-09 00:58 - INFO - ---------------------------------------------
2024-11-09 01:06 - INFO - ---------------------------------------------
2024-11-09 01:06 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-09 01:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.16692
2024-11-09 01:06 - INFO - 	 Train Loss: 0.239
2024-11-09 01:06 - INFO - 	 Val. Loss: 0.296
2024-11-09 01:06 - INFO - 	 ROC-AUC: 0.670
2024-11-09 01:06 - INFO - 	 PR-AUC: 0.167
2024-11-09 01:06 - INFO - 	 Best Val. Loss: 0.273
2024-11-09 01:06 - INFO - 	 Best ROC-AUC: 0.670
2024-11-09 01:06 - INFO - 	 Best PR-AUC: 0.167
2024-11-09 01:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.660
2024-11-09 01:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.219
2024-11-09 01:06 - INFO - ---------------------------------------------
2024-11-09 01:14 - INFO - ---------------------------------------------
2024-11-09 01:14 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-09 01:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25508
2024-11-09 01:14 - INFO - 	 Train Loss: 0.205
2024-11-09 01:14 - INFO - 	 Val. Loss: 0.493
2024-11-09 01:14 - INFO - 	 ROC-AUC: 0.804
2024-11-09 01:14 - INFO - 	 PR-AUC: 0.255
2024-11-09 01:14 - INFO - 	 Best Val. Loss: 0.273
2024-11-09 01:14 - INFO - 	 Best ROC-AUC: 0.804
2024-11-09 01:14 - INFO - 	 Best PR-AUC: 0.255
2024-11-09 01:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.791
2024-11-09 01:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.293
2024-11-09 01:14 - INFO - ---------------------------------------------
2024-11-09 01:22 - INFO - ---------------------------------------------
2024-11-09 01:22 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-09 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41785
2024-11-09 01:22 - INFO - 	 Train Loss: 0.171
2024-11-09 01:22 - INFO - 	 Val. Loss: 0.271
2024-11-09 01:22 - INFO - 	 ROC-AUC: 0.900
2024-11-09 01:22 - INFO - 	 PR-AUC: 0.418
2024-11-09 01:22 - INFO - 	 Best Val. Loss: 0.271
2024-11-09 01:22 - INFO - 	 Best ROC-AUC: 0.900
2024-11-09 01:22 - INFO - 	 Best PR-AUC: 0.418
2024-11-09 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.894
2024-11-09 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.465
2024-11-09 01:22 - INFO - ---------------------------------------------
2024-11-09 01:30 - INFO - ---------------------------------------------
2024-11-09 01:30 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-09 01:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52488
2024-11-09 01:30 - INFO - 	 Train Loss: 0.148
2024-11-09 01:30 - INFO - 	 Val. Loss: 0.199
2024-11-09 01:30 - INFO - 	 ROC-AUC: 0.933
2024-11-09 01:30 - INFO - 	 PR-AUC: 0.525
2024-11-09 01:30 - INFO - 	 Best Val. Loss: 0.199
2024-11-09 01:30 - INFO - 	 Best ROC-AUC: 0.933
2024-11-09 01:30 - INFO - 	 Best PR-AUC: 0.525
2024-11-09 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.940
2024-11-09 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.555
2024-11-09 01:30 - INFO - ---------------------------------------------
2024-11-09 01:38 - INFO - ---------------------------------------------
2024-11-09 01:38 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-09 01:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61654
2024-11-09 01:38 - INFO - 	 Train Loss: 0.131
2024-11-09 01:38 - INFO - 	 Val. Loss: 0.168
2024-11-09 01:38 - INFO - 	 ROC-AUC: 0.956
2024-11-09 01:38 - INFO - 	 PR-AUC: 0.617
2024-11-09 01:38 - INFO - 	 Best Val. Loss: 0.168
2024-11-09 01:38 - INFO - 	 Best ROC-AUC: 0.956
2024-11-09 01:38 - INFO - 	 Best PR-AUC: 0.617
2024-11-09 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.957
2024-11-09 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.622
2024-11-09 01:38 - INFO - ---------------------------------------------
2024-11-09 01:46 - INFO - ---------------------------------------------
2024-11-09 01:46 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 01:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71942
2024-11-09 01:46 - INFO - 	 Train Loss: 0.116
2024-11-09 01:46 - INFO - 	 Val. Loss: 0.127
2024-11-09 01:46 - INFO - 	 ROC-AUC: 0.970
2024-11-09 01:46 - INFO - 	 PR-AUC: 0.719
2024-11-09 01:46 - INFO - 	 Best Val. Loss: 0.127
2024-11-09 01:46 - INFO - 	 Best ROC-AUC: 0.970
2024-11-09 01:46 - INFO - 	 Best PR-AUC: 0.719
2024-11-09 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-09 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.703
2024-11-09 01:46 - INFO - ---------------------------------------------
2024-11-09 01:54 - INFO - ---------------------------------------------
2024-11-09 01:54 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-09 01:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76044
2024-11-09 01:54 - INFO - 	 Train Loss: 0.105
2024-11-09 01:54 - INFO - 	 Val. Loss: 0.107
2024-11-09 01:54 - INFO - 	 ROC-AUC: 0.974
2024-11-09 01:54 - INFO - 	 PR-AUC: 0.760
2024-11-09 01:54 - INFO - 	 Best Val. Loss: 0.107
2024-11-09 01:54 - INFO - 	 Best ROC-AUC: 0.974
2024-11-09 01:54 - INFO - 	 Best PR-AUC: 0.760
2024-11-09 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-09 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.750
2024-11-09 01:54 - INFO - ---------------------------------------------
2024-11-09 02:02 - INFO - ---------------------------------------------
2024-11-09 02:02 - INFO - Epoch: 09 | Time: 8m 0s
2024-11-09 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76914
2024-11-09 02:02 - INFO - 	 Train Loss: 0.096
2024-11-09 02:02 - INFO - 	 Val. Loss: 0.086
2024-11-09 02:02 - INFO - 	 ROC-AUC: 0.978
2024-11-09 02:02 - INFO - 	 PR-AUC: 0.769
2024-11-09 02:02 - INFO - 	 Best Val. Loss: 0.086
2024-11-09 02:02 - INFO - 	 Best ROC-AUC: 0.978
2024-11-09 02:02 - INFO - 	 Best PR-AUC: 0.769
2024-11-09 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-09 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-11-09 02:02 - INFO - ---------------------------------------------
2024-11-09 02:10 - INFO - ---------------------------------------------
2024-11-09 02:10 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-09 02:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80622
2024-11-09 02:10 - INFO - 	 Train Loss: 0.087
2024-11-09 02:10 - INFO - 	 Val. Loss: 0.079
2024-11-09 02:10 - INFO - 	 ROC-AUC: 0.981
2024-11-09 02:10 - INFO - 	 PR-AUC: 0.806
2024-11-09 02:10 - INFO - 	 Best Val. Loss: 0.079
2024-11-09 02:10 - INFO - 	 Best ROC-AUC: 0.981
2024-11-09 02:10 - INFO - 	 Best PR-AUC: 0.806
2024-11-09 02:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-09 02:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-11-09 02:10 - INFO - ---------------------------------------------
2024-11-09 02:13 - INFO - Fit the preprocessing pipeline
2024-11-09 02:13 - INFO - Training using device: cuda
2024-11-09 02:13 - INFO - Creating generators
2024-11-09 02:13 - INFO - The model has 2,246,929 trainable parameters
2024-11-09 02:13 - INFO - * Model:
2024-11-09 02:13 - INFO - * -----------
2024-11-09 02:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-09 02:13 - INFO - * -----------
2024-11-09 02:21 - INFO - ---------------------------------------------
2024-11-09 02:21 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-09 02:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.14171
2024-11-09 02:21 - INFO - 	 Train Loss: 0.265
2024-11-09 02:21 - INFO - 	 Val. Loss: 0.262
2024-11-09 02:21 - INFO - 	 ROC-AUC: 0.628
2024-11-09 02:21 - INFO - 	 PR-AUC: 0.142
2024-11-09 02:21 - INFO - 	 Best Val. Loss: 0.262
2024-11-09 02:21 - INFO - 	 Best ROC-AUC: 0.628
2024-11-09 02:21 - INFO - 	 Best PR-AUC: 0.142
2024-11-09 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.607
2024-11-09 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.172
2024-11-09 02:21 - INFO - ---------------------------------------------
2024-11-09 02:29 - INFO - ---------------------------------------------
2024-11-09 02:29 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-09 02:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19574
2024-11-09 02:29 - INFO - 	 Train Loss: 0.241
2024-11-09 02:29 - INFO - 	 Val. Loss: 0.332
2024-11-09 02:29 - INFO - 	 ROC-AUC: 0.708
2024-11-09 02:29 - INFO - 	 PR-AUC: 0.196
2024-11-09 02:29 - INFO - 	 Best Val. Loss: 0.262
2024-11-09 02:29 - INFO - 	 Best ROC-AUC: 0.708
2024-11-09 02:29 - INFO - 	 Best PR-AUC: 0.196
2024-11-09 02:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.684
2024-11-09 02:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.239
2024-11-09 02:29 - INFO - ---------------------------------------------
2024-11-09 02:37 - INFO - ---------------------------------------------
2024-11-09 02:37 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-09 02:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25571
2024-11-09 02:37 - INFO - 	 Train Loss: 0.204
2024-11-09 02:37 - INFO - 	 Val. Loss: 0.449
2024-11-09 02:37 - INFO - 	 ROC-AUC: 0.815
2024-11-09 02:37 - INFO - 	 PR-AUC: 0.256
2024-11-09 02:37 - INFO - 	 Best Val. Loss: 0.262
2024-11-09 02:37 - INFO - 	 Best ROC-AUC: 0.815
2024-11-09 02:37 - INFO - 	 Best PR-AUC: 0.256
2024-11-09 02:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.815
2024-11-09 02:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.296
2024-11-09 02:37 - INFO - ---------------------------------------------
2024-11-09 02:45 - INFO - ---------------------------------------------
2024-11-09 02:45 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-09 02:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53783
2024-11-09 02:45 - INFO - 	 Train Loss: 0.155
2024-11-09 02:45 - INFO - 	 Val. Loss: 0.184
2024-11-09 02:45 - INFO - 	 ROC-AUC: 0.945
2024-11-09 02:45 - INFO - 	 PR-AUC: 0.538
2024-11-09 02:45 - INFO - 	 Best Val. Loss: 0.184
2024-11-09 02:45 - INFO - 	 Best ROC-AUC: 0.945
2024-11-09 02:45 - INFO - 	 Best PR-AUC: 0.538
2024-11-09 02:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-09 02:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.574
2024-11-09 02:45 - INFO - ---------------------------------------------
2024-11-09 02:53 - INFO - ---------------------------------------------
2024-11-09 02:53 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-09 02:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63745
2024-11-09 02:53 - INFO - 	 Train Loss: 0.128
2024-11-09 02:53 - INFO - 	 Val. Loss: 0.172
2024-11-09 02:53 - INFO - 	 ROC-AUC: 0.959
2024-11-09 02:53 - INFO - 	 PR-AUC: 0.637
2024-11-09 02:53 - INFO - 	 Best Val. Loss: 0.172
2024-11-09 02:53 - INFO - 	 Best ROC-AUC: 0.959
2024-11-09 02:53 - INFO - 	 Best PR-AUC: 0.637
2024-11-09 02:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-09 02:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.619
2024-11-09 02:53 - INFO - ---------------------------------------------
2024-11-09 03:01 - INFO - ---------------------------------------------
2024-11-09 03:01 - INFO - Epoch: 06 | Time: 8m 0s
2024-11-09 03:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.69215
2024-11-09 03:01 - INFO - 	 Train Loss: 0.117
2024-11-09 03:01 - INFO - 	 Val. Loss: 0.126
2024-11-09 03:01 - INFO - 	 ROC-AUC: 0.966
2024-11-09 03:01 - INFO - 	 PR-AUC: 0.692
2024-11-09 03:01 - INFO - 	 Best Val. Loss: 0.126
2024-11-09 03:01 - INFO - 	 Best ROC-AUC: 0.966
2024-11-09 03:01 - INFO - 	 Best PR-AUC: 0.692
2024-11-09 03:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-09 03:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.704
2024-11-09 03:01 - INFO - ---------------------------------------------
2024-11-09 03:09 - INFO - ---------------------------------------------
2024-11-09 03:09 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-09 03:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.72717
2024-11-09 03:09 - INFO - 	 Train Loss: 0.107
2024-11-09 03:09 - INFO - 	 Val. Loss: 0.095
2024-11-09 03:09 - INFO - 	 ROC-AUC: 0.973
2024-11-09 03:09 - INFO - 	 PR-AUC: 0.727
2024-11-09 03:09 - INFO - 	 Best Val. Loss: 0.095
2024-11-09 03:09 - INFO - 	 Best ROC-AUC: 0.973
2024-11-09 03:09 - INFO - 	 Best PR-AUC: 0.727
2024-11-09 03:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-09 03:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.738
2024-11-09 03:09 - INFO - ---------------------------------------------
2024-11-09 03:17 - INFO - ---------------------------------------------
2024-11-09 03:17 - INFO - Epoch: 08 | Time: 8m 0s
2024-11-09 03:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77625
2024-11-09 03:17 - INFO - 	 Train Loss: 0.100
2024-11-09 03:17 - INFO - 	 Val. Loss: 0.087
2024-11-09 03:17 - INFO - 	 ROC-AUC: 0.977
2024-11-09 03:17 - INFO - 	 PR-AUC: 0.776
2024-11-09 03:17 - INFO - 	 Best Val. Loss: 0.087
2024-11-09 03:17 - INFO - 	 Best ROC-AUC: 0.977
2024-11-09 03:17 - INFO - 	 Best PR-AUC: 0.776
2024-11-09 03:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-09 03:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.758
2024-11-09 03:17 - INFO - ---------------------------------------------
2024-11-09 03:25 - INFO - ---------------------------------------------
2024-11-09 03:25 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-09 03:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79711
2024-11-09 03:25 - INFO - 	 Train Loss: 0.095
2024-11-09 03:25 - INFO - 	 Val. Loss: 0.082
2024-11-09 03:25 - INFO - 	 ROC-AUC: 0.979
2024-11-09 03:25 - INFO - 	 PR-AUC: 0.797
2024-11-09 03:25 - INFO - 	 Best Val. Loss: 0.082
2024-11-09 03:25 - INFO - 	 Best ROC-AUC: 0.979
2024-11-09 03:25 - INFO - 	 Best PR-AUC: 0.797
2024-11-09 03:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-09 03:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-11-09 03:25 - INFO - ---------------------------------------------
2024-11-09 03:33 - INFO - ---------------------------------------------
2024-11-09 03:33 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-09 03:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80822
2024-11-09 03:33 - INFO - 	 Train Loss: 0.092
2024-11-09 03:33 - INFO - 	 Val. Loss: 0.081
2024-11-09 03:33 - INFO - 	 ROC-AUC: 0.979
2024-11-09 03:33 - INFO - 	 PR-AUC: 0.808
2024-11-09 03:33 - INFO - 	 Best Val. Loss: 0.081
2024-11-09 03:33 - INFO - 	 Best ROC-AUC: 0.979
2024-11-09 03:33 - INFO - 	 Best PR-AUC: 0.808
2024-11-09 03:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-09 03:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-11-09 03:33 - INFO - ---------------------------------------------
