2024-10-19 16:58 - INFO - Fit the preprocessing pipeline
2024-10-19 16:58 - INFO - Training using device: cuda
2024-10-19 16:58 - INFO - Creating generators
2024-10-19 16:58 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 16:58 - INFO - * Model:
2024-10-19 16:58 - INFO - * -----------
2024-10-19 16:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 16:58 - INFO - * -----------
2024-10-19 17:06 - INFO - ---------------------------------------------
2024-10-19 17:06 - INFO - Epoch: 01 | Time: 8m 2s
2024-10-19 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79139
2024-10-19 17:06 - INFO - 	 Train Loss: 0.107
2024-10-19 17:06 - INFO - 	 Val. Loss: 0.079
2024-10-19 17:06 - INFO - 	 ROC-AUC: 0.980
2024-10-19 17:06 - INFO - 	 PR-AUC: 0.791
2024-10-19 17:06 - INFO - 	 Best Val. Loss: 0.079
2024-10-19 17:06 - INFO - 	 Best ROC-AUC: 0.980
2024-10-19 17:06 - INFO - 	 Best PR-AUC: 0.791
2024-10-19 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-10-19 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-10-19 17:06 - INFO - ---------------------------------------------
2024-10-19 17:14 - INFO - ---------------------------------------------
2024-10-19 17:14 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 17:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82351
2024-10-19 17:14 - INFO - 	 Train Loss: 0.087
2024-10-19 17:14 - INFO - 	 Val. Loss: 0.075
2024-10-19 17:14 - INFO - 	 ROC-AUC: 0.982
2024-10-19 17:14 - INFO - 	 PR-AUC: 0.824
2024-10-19 17:14 - INFO - 	 Best Val. Loss: 0.075
2024-10-19 17:14 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 17:14 - INFO - 	 Best PR-AUC: 0.824
2024-10-19 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-19 17:14 - INFO - ---------------------------------------------
2024-10-19 17:22 - INFO - ---------------------------------------------
2024-10-19 17:22 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 17:22 - INFO - 	 Train Loss: 0.082
2024-10-19 17:22 - INFO - 	 Val. Loss: 0.075
2024-10-19 17:22 - INFO - 	 ROC-AUC: 0.982
2024-10-19 17:22 - INFO - 	 PR-AUC: 0.815
2024-10-19 17:22 - INFO - 	 Best Val. Loss: 0.075
2024-10-19 17:22 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 17:22 - INFO - 	 Best PR-AUC: 0.824
2024-10-19 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-19 17:22 - INFO - ---------------------------------------------
2024-10-19 17:30 - INFO - ---------------------------------------------
2024-10-19 17:30 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 17:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83327
2024-10-19 17:30 - INFO - 	 Train Loss: 0.081
2024-10-19 17:30 - INFO - 	 Val. Loss: 0.071
2024-10-19 17:30 - INFO - 	 ROC-AUC: 0.984
2024-10-19 17:30 - INFO - 	 PR-AUC: 0.833
2024-10-19 17:30 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 17:30 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 17:30 - INFO - 	 Best PR-AUC: 0.833
2024-10-19 17:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 17:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-19 17:30 - INFO - ---------------------------------------------
2024-10-19 17:38 - INFO - ---------------------------------------------
2024-10-19 17:38 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 17:38 - INFO - 	 Train Loss: 0.078
2024-10-19 17:38 - INFO - 	 Val. Loss: 0.076
2024-10-19 17:38 - INFO - 	 ROC-AUC: 0.983
2024-10-19 17:38 - INFO - 	 PR-AUC: 0.818
2024-10-19 17:38 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 17:38 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 17:38 - INFO - 	 Best PR-AUC: 0.833
2024-10-19 17:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 17:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-19 17:38 - INFO - ---------------------------------------------
2024-10-19 17:46 - INFO - ---------------------------------------------
2024-10-19 17:46 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 17:46 - INFO - 	 Train Loss: 0.077
2024-10-19 17:46 - INFO - 	 Val. Loss: 0.074
2024-10-19 17:46 - INFO - 	 ROC-AUC: 0.983
2024-10-19 17:46 - INFO - 	 PR-AUC: 0.823
2024-10-19 17:46 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 17:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 17:46 - INFO - 	 Best PR-AUC: 0.833
2024-10-19 17:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 17:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-19 17:46 - INFO - ---------------------------------------------
2024-10-19 17:54 - INFO - ---------------------------------------------
2024-10-19 17:54 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-19 17:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83868
2024-10-19 17:54 - INFO - 	 Train Loss: 0.077
2024-10-19 17:54 - INFO - 	 Val. Loss: 0.070
2024-10-19 17:54 - INFO - 	 ROC-AUC: 0.984
2024-10-19 17:54 - INFO - 	 PR-AUC: 0.839
2024-10-19 17:54 - INFO - 	 Best Val. Loss: 0.070
2024-10-19 17:54 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 17:54 - INFO - 	 Best PR-AUC: 0.839
2024-10-19 17:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 17:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-19 17:54 - INFO - ---------------------------------------------
2024-10-19 18:02 - INFO - ---------------------------------------------
2024-10-19 18:02 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 18:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85098
2024-10-19 18:02 - INFO - 	 Train Loss: 0.075
2024-10-19 18:02 - INFO - 	 Val. Loss: 0.068
2024-10-19 18:02 - INFO - 	 ROC-AUC: 0.984
2024-10-19 18:02 - INFO - 	 PR-AUC: 0.851
2024-10-19 18:02 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 18:02 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 18:02 - INFO - 	 Best PR-AUC: 0.851
2024-10-19 18:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 18:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 18:02 - INFO - ---------------------------------------------
2024-10-19 18:10 - INFO - ---------------------------------------------
2024-10-19 18:10 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-19 18:10 - INFO - 	 Train Loss: 0.074
2024-10-19 18:10 - INFO - 	 Val. Loss: 0.067
2024-10-19 18:10 - INFO - 	 ROC-AUC: 0.984
2024-10-19 18:10 - INFO - 	 PR-AUC: 0.849
2024-10-19 18:10 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 18:10 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 18:10 - INFO - 	 Best PR-AUC: 0.851
2024-10-19 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 18:10 - INFO - ---------------------------------------------
2024-10-19 18:18 - INFO - ---------------------------------------------
2024-10-19 18:18 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-19 18:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86282
2024-10-19 18:18 - INFO - 	 Train Loss: 0.073
2024-10-19 18:18 - INFO - 	 Val. Loss: 0.067
2024-10-19 18:18 - INFO - 	 ROC-AUC: 0.986
2024-10-19 18:18 - INFO - 	 PR-AUC: 0.863
2024-10-19 18:18 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 18:18 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 18:18 - INFO - 	 Best PR-AUC: 0.863
2024-10-19 18:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 18:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-19 18:18 - INFO - ---------------------------------------------
2024-10-19 18:20 - INFO - Fit the preprocessing pipeline
2024-10-19 18:20 - INFO - Training using device: cuda
2024-10-19 18:20 - INFO - Creating generators
2024-10-19 18:20 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 18:20 - INFO - * Model:
2024-10-19 18:20 - INFO - * -----------
2024-10-19 18:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 18:20 - INFO - * -----------
2024-10-19 18:28 - INFO - ---------------------------------------------
2024-10-19 18:28 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7961
2024-10-19 18:28 - INFO - 	 Train Loss: 0.107
2024-10-19 18:28 - INFO - 	 Val. Loss: 0.081
2024-10-19 18:28 - INFO - 	 ROC-AUC: 0.979
2024-10-19 18:28 - INFO - 	 PR-AUC: 0.796
2024-10-19 18:28 - INFO - 	 Best Val. Loss: 0.081
2024-10-19 18:28 - INFO - 	 Best ROC-AUC: 0.979
2024-10-19 18:28 - INFO - 	 Best PR-AUC: 0.796
2024-10-19 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-19 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-10-19 18:28 - INFO - ---------------------------------------------
2024-10-19 18:36 - INFO - ---------------------------------------------
2024-10-19 18:36 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80861
2024-10-19 18:36 - INFO - 	 Train Loss: 0.088
2024-10-19 18:36 - INFO - 	 Val. Loss: 0.078
2024-10-19 18:36 - INFO - 	 ROC-AUC: 0.981
2024-10-19 18:36 - INFO - 	 PR-AUC: 0.809
2024-10-19 18:36 - INFO - 	 Best Val. Loss: 0.078
2024-10-19 18:36 - INFO - 	 Best ROC-AUC: 0.981
2024-10-19 18:36 - INFO - 	 Best PR-AUC: 0.809
2024-10-19 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-19 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-19 18:36 - INFO - ---------------------------------------------
2024-10-19 18:44 - INFO - ---------------------------------------------
2024-10-19 18:44 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83176
2024-10-19 18:44 - INFO - 	 Train Loss: 0.083
2024-10-19 18:44 - INFO - 	 Val. Loss: 0.073
2024-10-19 18:44 - INFO - 	 ROC-AUC: 0.984
2024-10-19 18:44 - INFO - 	 PR-AUC: 0.832
2024-10-19 18:44 - INFO - 	 Best Val. Loss: 0.073
2024-10-19 18:44 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 18:44 - INFO - 	 Best PR-AUC: 0.832
2024-10-19 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-19 18:44 - INFO - ---------------------------------------------
2024-10-19 18:52 - INFO - ---------------------------------------------
2024-10-19 18:52 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 18:52 - INFO - 	 Train Loss: 0.080
2024-10-19 18:52 - INFO - 	 Val. Loss: 0.074
2024-10-19 18:52 - INFO - 	 ROC-AUC: 0.982
2024-10-19 18:52 - INFO - 	 PR-AUC: 0.821
2024-10-19 18:52 - INFO - 	 Best Val. Loss: 0.073
2024-10-19 18:52 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 18:52 - INFO - 	 Best PR-AUC: 0.832
2024-10-19 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-19 18:52 - INFO - ---------------------------------------------
2024-10-19 19:00 - INFO - ---------------------------------------------
2024-10-19 19:00 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85163
2024-10-19 19:00 - INFO - 	 Train Loss: 0.079
2024-10-19 19:00 - INFO - 	 Val. Loss: 0.067
2024-10-19 19:00 - INFO - 	 ROC-AUC: 0.986
2024-10-19 19:00 - INFO - 	 PR-AUC: 0.852
2024-10-19 19:00 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 19:00 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 19:00 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-19 19:00 - INFO - ---------------------------------------------
2024-10-19 19:08 - INFO - ---------------------------------------------
2024-10-19 19:08 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 19:08 - INFO - 	 Train Loss: 0.078
2024-10-19 19:08 - INFO - 	 Val. Loss: 0.070
2024-10-19 19:08 - INFO - 	 ROC-AUC: 0.984
2024-10-19 19:08 - INFO - 	 PR-AUC: 0.848
2024-10-19 19:08 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 19:08 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 19:08 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-19 19:08 - INFO - ---------------------------------------------
2024-10-19 19:16 - INFO - ---------------------------------------------
2024-10-19 19:16 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 19:16 - INFO - 	 Train Loss: 0.076
2024-10-19 19:16 - INFO - 	 Val. Loss: 0.069
2024-10-19 19:16 - INFO - 	 ROC-AUC: 0.983
2024-10-19 19:16 - INFO - 	 PR-AUC: 0.847
2024-10-19 19:16 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 19:16 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 19:16 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-19 19:16 - INFO - ---------------------------------------------
2024-10-19 19:25 - INFO - ---------------------------------------------
2024-10-19 19:25 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 19:25 - INFO - 	 Train Loss: 0.075
2024-10-19 19:25 - INFO - 	 Val. Loss: 0.068
2024-10-19 19:25 - INFO - 	 ROC-AUC: 0.985
2024-10-19 19:25 - INFO - 	 PR-AUC: 0.849
2024-10-19 19:25 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 19:25 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 19:25 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-19 19:25 - INFO - ---------------------------------------------
2024-10-19 19:33 - INFO - ---------------------------------------------
2024-10-19 19:33 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 19:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85236
2024-10-19 19:33 - INFO - 	 Train Loss: 0.074
2024-10-19 19:33 - INFO - 	 Val. Loss: 0.067
2024-10-19 19:33 - INFO - 	 ROC-AUC: 0.985
2024-10-19 19:33 - INFO - 	 PR-AUC: 0.852
2024-10-19 19:33 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 19:33 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 19:33 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 19:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 19:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-19 19:33 - INFO - ---------------------------------------------
2024-10-19 19:41 - INFO - ---------------------------------------------
2024-10-19 19:41 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 19:41 - INFO - 	 Train Loss: 0.072
2024-10-19 19:41 - INFO - 	 Val. Loss: 0.066
2024-10-19 19:41 - INFO - 	 ROC-AUC: 0.986
2024-10-19 19:41 - INFO - 	 PR-AUC: 0.848
2024-10-19 19:41 - INFO - 	 Best Val. Loss: 0.066
2024-10-19 19:41 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 19:41 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 19:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-19 19:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-19 19:41 - INFO - ---------------------------------------------
2024-10-19 19:43 - INFO - Fit the preprocessing pipeline
2024-10-19 19:43 - INFO - Training using device: cuda
2024-10-19 19:43 - INFO - Creating generators
2024-10-19 19:43 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 19:43 - INFO - * Model:
2024-10-19 19:43 - INFO - * -----------
2024-10-19 19:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 19:43 - INFO - * -----------
2024-10-19 19:51 - INFO - ---------------------------------------------
2024-10-19 19:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 19:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74
2024-10-19 19:51 - INFO - 	 Train Loss: 0.107
2024-10-19 19:51 - INFO - 	 Val. Loss: 0.087
2024-10-19 19:51 - INFO - 	 ROC-AUC: 0.977
2024-10-19 19:51 - INFO - 	 PR-AUC: 0.740
2024-10-19 19:51 - INFO - 	 Best Val. Loss: 0.087
2024-10-19 19:51 - INFO - 	 Best ROC-AUC: 0.977
2024-10-19 19:51 - INFO - 	 Best PR-AUC: 0.740
2024-10-19 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-19 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.788
2024-10-19 19:51 - INFO - ---------------------------------------------
2024-10-19 19:59 - INFO - ---------------------------------------------
2024-10-19 19:59 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81263
2024-10-19 19:59 - INFO - 	 Train Loss: 0.088
2024-10-19 19:59 - INFO - 	 Val. Loss: 0.079
2024-10-19 19:59 - INFO - 	 ROC-AUC: 0.981
2024-10-19 19:59 - INFO - 	 PR-AUC: 0.813
2024-10-19 19:59 - INFO - 	 Best Val. Loss: 0.079
2024-10-19 19:59 - INFO - 	 Best ROC-AUC: 0.981
2024-10-19 19:59 - INFO - 	 Best PR-AUC: 0.813
2024-10-19 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-19 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-19 19:59 - INFO - ---------------------------------------------
2024-10-19 20:07 - INFO - ---------------------------------------------
2024-10-19 20:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 20:07 - INFO - 	 Train Loss: 0.082
2024-10-19 20:07 - INFO - 	 Val. Loss: 0.077
2024-10-19 20:07 - INFO - 	 ROC-AUC: 0.982
2024-10-19 20:07 - INFO - 	 PR-AUC: 0.808
2024-10-19 20:07 - INFO - 	 Best Val. Loss: 0.077
2024-10-19 20:07 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 20:07 - INFO - 	 Best PR-AUC: 0.813
2024-10-19 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-19 20:07 - INFO - ---------------------------------------------
2024-10-19 20:15 - INFO - ---------------------------------------------
2024-10-19 20:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 20:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84228
2024-10-19 20:15 - INFO - 	 Train Loss: 0.079
2024-10-19 20:15 - INFO - 	 Val. Loss: 0.069
2024-10-19 20:15 - INFO - 	 ROC-AUC: 0.985
2024-10-19 20:15 - INFO - 	 PR-AUC: 0.842
2024-10-19 20:15 - INFO - 	 Best Val. Loss: 0.069
2024-10-19 20:15 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 20:15 - INFO - 	 Best PR-AUC: 0.842
2024-10-19 20:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 20:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-10-19 20:15 - INFO - ---------------------------------------------
2024-10-19 20:23 - INFO - ---------------------------------------------
2024-10-19 20:23 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84824
2024-10-19 20:23 - INFO - 	 Train Loss: 0.077
2024-10-19 20:23 - INFO - 	 Val. Loss: 0.068
2024-10-19 20:23 - INFO - 	 ROC-AUC: 0.984
2024-10-19 20:23 - INFO - 	 PR-AUC: 0.848
2024-10-19 20:23 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 20:23 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 20:23 - INFO - 	 Best PR-AUC: 0.848
2024-10-19 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 20:23 - INFO - ---------------------------------------------
2024-10-19 20:31 - INFO - ---------------------------------------------
2024-10-19 20:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 20:31 - INFO - 	 Train Loss: 0.076
2024-10-19 20:31 - INFO - 	 Val. Loss: 0.070
2024-10-19 20:31 - INFO - 	 ROC-AUC: 0.984
2024-10-19 20:31 - INFO - 	 PR-AUC: 0.842
2024-10-19 20:31 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 20:31 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 20:31 - INFO - 	 Best PR-AUC: 0.848
2024-10-19 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 20:31 - INFO - ---------------------------------------------
2024-10-19 20:39 - INFO - ---------------------------------------------
2024-10-19 20:39 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 20:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85194
2024-10-19 20:39 - INFO - 	 Train Loss: 0.075
2024-10-19 20:39 - INFO - 	 Val. Loss: 0.068
2024-10-19 20:39 - INFO - 	 ROC-AUC: 0.985
2024-10-19 20:39 - INFO - 	 PR-AUC: 0.852
2024-10-19 20:39 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 20:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 20:39 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-19 20:39 - INFO - ---------------------------------------------
2024-10-19 20:47 - INFO - ---------------------------------------------
2024-10-19 20:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 20:47 - INFO - 	 Train Loss: 0.075
2024-10-19 20:47 - INFO - 	 Val. Loss: 0.072
2024-10-19 20:47 - INFO - 	 ROC-AUC: 0.984
2024-10-19 20:47 - INFO - 	 PR-AUC: 0.848
2024-10-19 20:47 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 20:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 20:47 - INFO - 	 Best PR-AUC: 0.852
2024-10-19 20:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 20:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-19 20:47 - INFO - ---------------------------------------------
2024-10-19 20:55 - INFO - ---------------------------------------------
2024-10-19 20:55 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 20:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85665
2024-10-19 20:55 - INFO - 	 Train Loss: 0.074
2024-10-19 20:55 - INFO - 	 Val. Loss: 0.065
2024-10-19 20:55 - INFO - 	 ROC-AUC: 0.986
2024-10-19 20:55 - INFO - 	 PR-AUC: 0.857
2024-10-19 20:55 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 20:55 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 20:55 - INFO - 	 Best PR-AUC: 0.857
2024-10-19 20:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 20:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 20:55 - INFO - ---------------------------------------------
2024-10-19 21:03 - INFO - ---------------------------------------------
2024-10-19 21:03 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 21:03 - INFO - 	 Train Loss: 0.073
2024-10-19 21:03 - INFO - 	 Val. Loss: 0.067
2024-10-19 21:03 - INFO - 	 ROC-AUC: 0.984
2024-10-19 21:03 - INFO - 	 PR-AUC: 0.856
2024-10-19 21:03 - INFO - 	 Best Val. Loss: 0.065
2024-10-19 21:03 - INFO - 	 Best ROC-AUC: 0.986
2024-10-19 21:03 - INFO - 	 Best PR-AUC: 0.857
2024-10-19 21:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 21:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-19 21:03 - INFO - ---------------------------------------------
2024-10-19 21:06 - INFO - Fit the preprocessing pipeline
2024-10-19 21:06 - INFO - Training using device: cuda
2024-10-19 21:06 - INFO - Creating generators
2024-10-19 21:06 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 21:06 - INFO - * Model:
2024-10-19 21:06 - INFO - * -----------
2024-10-19 21:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 21:06 - INFO - * -----------
2024-10-19 21:14 - INFO - ---------------------------------------------
2024-10-19 21:14 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 21:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74018
2024-10-19 21:14 - INFO - 	 Train Loss: 0.107
2024-10-19 21:14 - INFO - 	 Val. Loss: 0.089
2024-10-19 21:14 - INFO - 	 ROC-AUC: 0.976
2024-10-19 21:14 - INFO - 	 PR-AUC: 0.740
2024-10-19 21:14 - INFO - 	 Best Val. Loss: 0.089
2024-10-19 21:14 - INFO - 	 Best ROC-AUC: 0.976
2024-10-19 21:14 - INFO - 	 Best PR-AUC: 0.740
2024-10-19 21:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-19 21:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.784
2024-10-19 21:14 - INFO - ---------------------------------------------
2024-10-19 21:22 - INFO - ---------------------------------------------
2024-10-19 21:22 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 21:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81966
2024-10-19 21:22 - INFO - 	 Train Loss: 0.088
2024-10-19 21:22 - INFO - 	 Val. Loss: 0.078
2024-10-19 21:22 - INFO - 	 ROC-AUC: 0.981
2024-10-19 21:22 - INFO - 	 PR-AUC: 0.820
2024-10-19 21:22 - INFO - 	 Best Val. Loss: 0.078
2024-10-19 21:22 - INFO - 	 Best ROC-AUC: 0.981
2024-10-19 21:22 - INFO - 	 Best PR-AUC: 0.820
2024-10-19 21:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-19 21:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.810
2024-10-19 21:22 - INFO - ---------------------------------------------
2024-10-19 21:30 - INFO - ---------------------------------------------
2024-10-19 21:30 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8323
2024-10-19 21:30 - INFO - 	 Train Loss: 0.082
2024-10-19 21:30 - INFO - 	 Val. Loss: 0.073
2024-10-19 21:30 - INFO - 	 ROC-AUC: 0.982
2024-10-19 21:30 - INFO - 	 PR-AUC: 0.832
2024-10-19 21:30 - INFO - 	 Best Val. Loss: 0.073
2024-10-19 21:30 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 21:30 - INFO - 	 Best PR-AUC: 0.832
2024-10-19 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-19 21:30 - INFO - ---------------------------------------------
2024-10-19 21:38 - INFO - ---------------------------------------------
2024-10-19 21:38 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 21:38 - INFO - 	 Train Loss: 0.080
2024-10-19 21:38 - INFO - 	 Val. Loss: 0.072
2024-10-19 21:38 - INFO - 	 ROC-AUC: 0.983
2024-10-19 21:38 - INFO - 	 PR-AUC: 0.827
2024-10-19 21:38 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 21:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 21:38 - INFO - 	 Best PR-AUC: 0.832
2024-10-19 21:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 21:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-19 21:38 - INFO - ---------------------------------------------
2024-10-19 21:46 - INFO - ---------------------------------------------
2024-10-19 21:46 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 21:46 - INFO - 	 Train Loss: 0.077
2024-10-19 21:46 - INFO - 	 Val. Loss: 0.072
2024-10-19 21:46 - INFO - 	 ROC-AUC: 0.984
2024-10-19 21:46 - INFO - 	 PR-AUC: 0.831
2024-10-19 21:46 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 21:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 21:46 - INFO - 	 Best PR-AUC: 0.832
2024-10-19 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-19 21:46 - INFO - ---------------------------------------------
2024-10-19 21:54 - INFO - ---------------------------------------------
2024-10-19 21:54 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 21:54 - INFO - 	 Train Loss: 0.077
2024-10-19 21:54 - INFO - 	 Val. Loss: 0.073
2024-10-19 21:54 - INFO - 	 ROC-AUC: 0.983
2024-10-19 21:54 - INFO - 	 PR-AUC: 0.827
2024-10-19 21:54 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 21:54 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 21:54 - INFO - 	 Best PR-AUC: 0.832
2024-10-19 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-19 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-10-19 21:54 - INFO - ---------------------------------------------
2024-10-19 22:02 - INFO - ---------------------------------------------
2024-10-19 22:02 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83383
2024-10-19 22:02 - INFO - 	 Train Loss: 0.075
2024-10-19 22:02 - INFO - 	 Val. Loss: 0.072
2024-10-19 22:02 - INFO - 	 ROC-AUC: 0.984
2024-10-19 22:02 - INFO - 	 PR-AUC: 0.834
2024-10-19 22:02 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 22:02 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 22:02 - INFO - 	 Best PR-AUC: 0.834
2024-10-19 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-19 22:02 - INFO - ---------------------------------------------
2024-10-19 22:10 - INFO - ---------------------------------------------
2024-10-19 22:10 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 22:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84398
2024-10-19 22:10 - INFO - 	 Train Loss: 0.074
2024-10-19 22:10 - INFO - 	 Val. Loss: 0.071
2024-10-19 22:10 - INFO - 	 ROC-AUC: 0.983
2024-10-19 22:10 - INFO - 	 PR-AUC: 0.844
2024-10-19 22:10 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 22:10 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 22:10 - INFO - 	 Best PR-AUC: 0.844
2024-10-19 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-10-19 22:10 - INFO - ---------------------------------------------
2024-10-19 22:18 - INFO - ---------------------------------------------
2024-10-19 22:18 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-19 22:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8473
2024-10-19 22:18 - INFO - 	 Train Loss: 0.072
2024-10-19 22:18 - INFO - 	 Val. Loss: 0.068
2024-10-19 22:18 - INFO - 	 ROC-AUC: 0.985
2024-10-19 22:18 - INFO - 	 PR-AUC: 0.847
2024-10-19 22:18 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 22:18 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 22:18 - INFO - 	 Best PR-AUC: 0.847
2024-10-19 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 22:18 - INFO - ---------------------------------------------
2024-10-19 22:26 - INFO - ---------------------------------------------
2024-10-19 22:26 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 22:26 - INFO - 	 Train Loss: 0.073
2024-10-19 22:26 - INFO - 	 Val. Loss: 0.067
2024-10-19 22:26 - INFO - 	 ROC-AUC: 0.985
2024-10-19 22:26 - INFO - 	 PR-AUC: 0.847
2024-10-19 22:26 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 22:26 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 22:26 - INFO - 	 Best PR-AUC: 0.847
2024-10-19 22:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 22:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-19 22:26 - INFO - ---------------------------------------------
2024-10-19 22:28 - INFO - Fit the preprocessing pipeline
2024-10-19 22:28 - INFO - Training using device: cuda
2024-10-19 22:28 - INFO - Creating generators
2024-10-19 22:28 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 22:28 - INFO - * Model:
2024-10-19 22:28 - INFO - * -----------
2024-10-19 22:28 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 22:28 - INFO - * -----------
2024-10-19 22:36 - INFO - ---------------------------------------------
2024-10-19 22:36 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 22:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79621
2024-10-19 22:36 - INFO - 	 Train Loss: 0.108
2024-10-19 22:36 - INFO - 	 Val. Loss: 0.080
2024-10-19 22:36 - INFO - 	 ROC-AUC: 0.980
2024-10-19 22:36 - INFO - 	 PR-AUC: 0.796
2024-10-19 22:36 - INFO - 	 Best Val. Loss: 0.080
2024-10-19 22:36 - INFO - 	 Best ROC-AUC: 0.980
2024-10-19 22:36 - INFO - 	 Best PR-AUC: 0.796
2024-10-19 22:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-19 22:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.791
2024-10-19 22:36 - INFO - ---------------------------------------------
2024-10-19 22:44 - INFO - ---------------------------------------------
2024-10-19 22:44 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-19 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81597
2024-10-19 22:44 - INFO - 	 Train Loss: 0.087
2024-10-19 22:44 - INFO - 	 Val. Loss: 0.077
2024-10-19 22:44 - INFO - 	 ROC-AUC: 0.982
2024-10-19 22:44 - INFO - 	 PR-AUC: 0.816
2024-10-19 22:44 - INFO - 	 Best Val. Loss: 0.077
2024-10-19 22:44 - INFO - 	 Best ROC-AUC: 0.982
2024-10-19 22:44 - INFO - 	 Best PR-AUC: 0.816
2024-10-19 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-19 22:44 - INFO - ---------------------------------------------
2024-10-19 22:52 - INFO - ---------------------------------------------
2024-10-19 22:52 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-19 22:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83382
2024-10-19 22:52 - INFO - 	 Train Loss: 0.082
2024-10-19 22:52 - INFO - 	 Val. Loss: 0.072
2024-10-19 22:52 - INFO - 	 ROC-AUC: 0.983
2024-10-19 22:52 - INFO - 	 PR-AUC: 0.834
2024-10-19 22:52 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 22:52 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 22:52 - INFO - 	 Best PR-AUC: 0.834
2024-10-19 22:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 22:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-10-19 22:52 - INFO - ---------------------------------------------
2024-10-19 23:00 - INFO - ---------------------------------------------
2024-10-19 23:00 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-19 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84172
2024-10-19 23:00 - INFO - 	 Train Loss: 0.080
2024-10-19 23:00 - INFO - 	 Val. Loss: 0.072
2024-10-19 23:00 - INFO - 	 ROC-AUC: 0.983
2024-10-19 23:00 - INFO - 	 PR-AUC: 0.842
2024-10-19 23:00 - INFO - 	 Best Val. Loss: 0.072
2024-10-19 23:00 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 23:00 - INFO - 	 Best PR-AUC: 0.842
2024-10-19 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-19 23:00 - INFO - ---------------------------------------------
2024-10-19 23:08 - INFO - ---------------------------------------------
2024-10-19 23:08 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-19 23:08 - INFO - 	 Train Loss: 0.077
2024-10-19 23:08 - INFO - 	 Val. Loss: 0.071
2024-10-19 23:08 - INFO - 	 ROC-AUC: 0.983
2024-10-19 23:08 - INFO - 	 PR-AUC: 0.838
2024-10-19 23:08 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 23:08 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 23:08 - INFO - 	 Best PR-AUC: 0.842
2024-10-19 23:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 23:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-19 23:08 - INFO - ---------------------------------------------
2024-10-19 23:16 - INFO - ---------------------------------------------
2024-10-19 23:16 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-19 23:16 - INFO - 	 Train Loss: 0.079
2024-10-19 23:16 - INFO - 	 Val. Loss: 0.071
2024-10-19 23:16 - INFO - 	 ROC-AUC: 0.983
2024-10-19 23:16 - INFO - 	 PR-AUC: 0.835
2024-10-19 23:16 - INFO - 	 Best Val. Loss: 0.071
2024-10-19 23:16 - INFO - 	 Best ROC-AUC: 0.983
2024-10-19 23:16 - INFO - 	 Best PR-AUC: 0.842
2024-10-19 23:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-19 23:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-19 23:16 - INFO - ---------------------------------------------
2024-10-19 23:24 - INFO - ---------------------------------------------
2024-10-19 23:24 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-19 23:24 - INFO - 	 Train Loss: 0.077
2024-10-19 23:24 - INFO - 	 Val. Loss: 0.068
2024-10-19 23:24 - INFO - 	 ROC-AUC: 0.984
2024-10-19 23:24 - INFO - 	 PR-AUC: 0.834
2024-10-19 23:24 - INFO - 	 Best Val. Loss: 0.068
2024-10-19 23:24 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 23:24 - INFO - 	 Best PR-AUC: 0.842
2024-10-19 23:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 23:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-19 23:24 - INFO - ---------------------------------------------
2024-10-19 23:32 - INFO - ---------------------------------------------
2024-10-19 23:32 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-19 23:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85385
2024-10-19 23:32 - INFO - 	 Train Loss: 0.075
2024-10-19 23:32 - INFO - 	 Val. Loss: 0.067
2024-10-19 23:32 - INFO - 	 ROC-AUC: 0.984
2024-10-19 23:32 - INFO - 	 PR-AUC: 0.854
2024-10-19 23:32 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 23:32 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 23:32 - INFO - 	 Best PR-AUC: 0.854
2024-10-19 23:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 23:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-19 23:32 - INFO - ---------------------------------------------
2024-10-19 23:40 - INFO - ---------------------------------------------
2024-10-19 23:40 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-19 23:40 - INFO - 	 Train Loss: 0.073
2024-10-19 23:40 - INFO - 	 Val. Loss: 0.069
2024-10-19 23:40 - INFO - 	 ROC-AUC: 0.984
2024-10-19 23:40 - INFO - 	 PR-AUC: 0.849
2024-10-19 23:40 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 23:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-19 23:40 - INFO - 	 Best PR-AUC: 0.854
2024-10-19 23:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 23:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-19 23:40 - INFO - ---------------------------------------------
2024-10-19 23:48 - INFO - ---------------------------------------------
2024-10-19 23:48 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-19 23:48 - INFO - 	 Train Loss: 0.073
2024-10-19 23:48 - INFO - 	 Val. Loss: 0.067
2024-10-19 23:48 - INFO - 	 ROC-AUC: 0.985
2024-10-19 23:48 - INFO - 	 PR-AUC: 0.852
2024-10-19 23:48 - INFO - 	 Best Val. Loss: 0.067
2024-10-19 23:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-19 23:48 - INFO - 	 Best PR-AUC: 0.854
2024-10-19 23:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-19 23:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-19 23:48 - INFO - ---------------------------------------------
2024-10-19 23:51 - INFO - Fit the preprocessing pipeline
2024-10-19 23:51 - INFO - Training using device: cuda
2024-10-19 23:51 - INFO - Creating generators
2024-10-19 23:51 - INFO - The model has 2,246,929 trainable parameters
2024-10-19 23:51 - INFO - * Model:
2024-10-19 23:51 - INFO - * -----------
2024-10-19 23:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-19 23:51 - INFO - * -----------
2024-10-19 23:59 - INFO - ---------------------------------------------
2024-10-19 23:59 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-19 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78522
2024-10-19 23:59 - INFO - 	 Train Loss: 0.107
2024-10-19 23:59 - INFO - 	 Val. Loss: 0.080
2024-10-19 23:59 - INFO - 	 ROC-AUC: 0.980
2024-10-19 23:59 - INFO - 	 PR-AUC: 0.785
2024-10-19 23:59 - INFO - 	 Best Val. Loss: 0.080
2024-10-19 23:59 - INFO - 	 Best ROC-AUC: 0.980
2024-10-19 23:59 - INFO - 	 Best PR-AUC: 0.785
2024-10-19 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-19 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-10-19 23:59 - INFO - ---------------------------------------------
2024-10-20 00:07 - INFO - ---------------------------------------------
2024-10-20 00:07 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81911
2024-10-20 00:07 - INFO - 	 Train Loss: 0.089
2024-10-20 00:07 - INFO - 	 Val. Loss: 0.075
2024-10-20 00:07 - INFO - 	 ROC-AUC: 0.982
2024-10-20 00:07 - INFO - 	 PR-AUC: 0.819
2024-10-20 00:07 - INFO - 	 Best Val. Loss: 0.075
2024-10-20 00:07 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 00:07 - INFO - 	 Best PR-AUC: 0.819
2024-10-20 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-10-20 00:07 - INFO - ---------------------------------------------
2024-10-20 00:15 - INFO - ---------------------------------------------
2024-10-20 00:15 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 00:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82395
2024-10-20 00:15 - INFO - 	 Train Loss: 0.083
2024-10-20 00:15 - INFO - 	 Val. Loss: 0.072
2024-10-20 00:15 - INFO - 	 ROC-AUC: 0.984
2024-10-20 00:15 - INFO - 	 PR-AUC: 0.824
2024-10-20 00:15 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 00:15 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 00:15 - INFO - 	 Best PR-AUC: 0.824
2024-10-20 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.828
2024-10-20 00:15 - INFO - ---------------------------------------------
2024-10-20 00:23 - INFO - ---------------------------------------------
2024-10-20 00:23 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 00:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82894
2024-10-20 00:23 - INFO - 	 Train Loss: 0.081
2024-10-20 00:23 - INFO - 	 Val. Loss: 0.072
2024-10-20 00:23 - INFO - 	 ROC-AUC: 0.984
2024-10-20 00:23 - INFO - 	 PR-AUC: 0.829
2024-10-20 00:23 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 00:23 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 00:23 - INFO - 	 Best PR-AUC: 0.829
2024-10-20 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-20 00:23 - INFO - ---------------------------------------------
2024-10-20 00:31 - INFO - ---------------------------------------------
2024-10-20 00:31 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 00:31 - INFO - 	 Train Loss: 0.079
2024-10-20 00:31 - INFO - 	 Val. Loss: 0.074
2024-10-20 00:31 - INFO - 	 ROC-AUC: 0.982
2024-10-20 00:31 - INFO - 	 PR-AUC: 0.813
2024-10-20 00:31 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 00:31 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 00:31 - INFO - 	 Best PR-AUC: 0.829
2024-10-20 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-20 00:31 - INFO - ---------------------------------------------
2024-10-20 00:39 - INFO - ---------------------------------------------
2024-10-20 00:39 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-20 00:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83822
2024-10-20 00:39 - INFO - 	 Train Loss: 0.076
2024-10-20 00:39 - INFO - 	 Val. Loss: 0.074
2024-10-20 00:39 - INFO - 	 ROC-AUC: 0.985
2024-10-20 00:39 - INFO - 	 PR-AUC: 0.838
2024-10-20 00:39 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 00:39 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 00:39 - INFO - 	 Best PR-AUC: 0.838
2024-10-20 00:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 00:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 00:39 - INFO - ---------------------------------------------
2024-10-20 00:47 - INFO - ---------------------------------------------
2024-10-20 00:47 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 00:47 - INFO - 	 Train Loss: 0.075
2024-10-20 00:47 - INFO - 	 Val. Loss: 0.070
2024-10-20 00:47 - INFO - 	 ROC-AUC: 0.984
2024-10-20 00:47 - INFO - 	 PR-AUC: 0.830
2024-10-20 00:47 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 00:47 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 00:47 - INFO - 	 Best PR-AUC: 0.838
2024-10-20 00:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 00:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 00:47 - INFO - ---------------------------------------------
2024-10-20 00:55 - INFO - ---------------------------------------------
2024-10-20 00:55 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-20 00:55 - INFO - 	 Train Loss: 0.075
2024-10-20 00:55 - INFO - 	 Val. Loss: 0.070
2024-10-20 00:55 - INFO - 	 ROC-AUC: 0.984
2024-10-20 00:55 - INFO - 	 PR-AUC: 0.833
2024-10-20 00:55 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 00:55 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 00:55 - INFO - 	 Best PR-AUC: 0.838
2024-10-20 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 00:55 - INFO - ---------------------------------------------
2024-10-20 01:03 - INFO - ---------------------------------------------
2024-10-20 01:03 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 01:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85014
2024-10-20 01:03 - INFO - 	 Train Loss: 0.075
2024-10-20 01:03 - INFO - 	 Val. Loss: 0.069
2024-10-20 01:03 - INFO - 	 ROC-AUC: 0.984
2024-10-20 01:03 - INFO - 	 PR-AUC: 0.850
2024-10-20 01:03 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 01:03 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 01:03 - INFO - 	 Best PR-AUC: 0.850
2024-10-20 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 01:03 - INFO - ---------------------------------------------
2024-10-20 01:11 - INFO - ---------------------------------------------
2024-10-20 01:11 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 01:11 - INFO - 	 Train Loss: 0.072
2024-10-20 01:11 - INFO - 	 Val. Loss: 0.067
2024-10-20 01:11 - INFO - 	 ROC-AUC: 0.985
2024-10-20 01:11 - INFO - 	 PR-AUC: 0.847
2024-10-20 01:11 - INFO - 	 Best Val. Loss: 0.067
2024-10-20 01:11 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 01:11 - INFO - 	 Best PR-AUC: 0.850
2024-10-20 01:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 01:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 01:11 - INFO - ---------------------------------------------
2024-10-20 01:13 - INFO - Fit the preprocessing pipeline
2024-10-20 01:13 - INFO - Training using device: cuda
2024-10-20 01:13 - INFO - Creating generators
2024-10-20 01:13 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 01:13 - INFO - * Model:
2024-10-20 01:13 - INFO - * -----------
2024-10-20 01:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 01:13 - INFO - * -----------
2024-10-20 01:21 - INFO - ---------------------------------------------
2024-10-20 01:21 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 01:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78742
2024-10-20 01:21 - INFO - 	 Train Loss: 0.107
2024-10-20 01:21 - INFO - 	 Val. Loss: 0.081
2024-10-20 01:21 - INFO - 	 ROC-AUC: 0.980
2024-10-20 01:21 - INFO - 	 PR-AUC: 0.787
2024-10-20 01:21 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 01:21 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 01:21 - INFO - 	 Best PR-AUC: 0.787
2024-10-20 01:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-10-20 01:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-20 01:21 - INFO - ---------------------------------------------
2024-10-20 01:30 - INFO - ---------------------------------------------
2024-10-20 01:30 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 01:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80833
2024-10-20 01:30 - INFO - 	 Train Loss: 0.090
2024-10-20 01:30 - INFO - 	 Val. Loss: 0.076
2024-10-20 01:30 - INFO - 	 ROC-AUC: 0.982
2024-10-20 01:30 - INFO - 	 PR-AUC: 0.808
2024-10-20 01:30 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 01:30 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 01:30 - INFO - 	 Best PR-AUC: 0.808
2024-10-20 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-20 01:30 - INFO - ---------------------------------------------
2024-10-20 01:38 - INFO - ---------------------------------------------
2024-10-20 01:38 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 01:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8306
2024-10-20 01:38 - INFO - 	 Train Loss: 0.083
2024-10-20 01:38 - INFO - 	 Val. Loss: 0.072
2024-10-20 01:38 - INFO - 	 ROC-AUC: 0.983
2024-10-20 01:38 - INFO - 	 PR-AUC: 0.831
2024-10-20 01:38 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 01:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 01:38 - INFO - 	 Best PR-AUC: 0.831
2024-10-20 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-20 01:38 - INFO - ---------------------------------------------
2024-10-20 01:46 - INFO - ---------------------------------------------
2024-10-20 01:46 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 01:46 - INFO - 	 Train Loss: 0.079
2024-10-20 01:46 - INFO - 	 Val. Loss: 0.073
2024-10-20 01:46 - INFO - 	 ROC-AUC: 0.984
2024-10-20 01:46 - INFO - 	 PR-AUC: 0.828
2024-10-20 01:46 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 01:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 01:46 - INFO - 	 Best PR-AUC: 0.831
2024-10-20 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-20 01:46 - INFO - ---------------------------------------------
2024-10-20 01:54 - INFO - ---------------------------------------------
2024-10-20 01:54 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 01:54 - INFO - 	 Train Loss: 0.079
2024-10-20 01:54 - INFO - 	 Val. Loss: 0.074
2024-10-20 01:54 - INFO - 	 ROC-AUC: 0.984
2024-10-20 01:54 - INFO - 	 PR-AUC: 0.825
2024-10-20 01:54 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 01:54 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 01:54 - INFO - 	 Best PR-AUC: 0.831
2024-10-20 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-20 01:54 - INFO - ---------------------------------------------
2024-10-20 02:02 - INFO - ---------------------------------------------
2024-10-20 02:02 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-20 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84249
2024-10-20 02:02 - INFO - 	 Train Loss: 0.076
2024-10-20 02:02 - INFO - 	 Val. Loss: 0.068
2024-10-20 02:02 - INFO - 	 ROC-AUC: 0.984
2024-10-20 02:02 - INFO - 	 PR-AUC: 0.842
2024-10-20 02:02 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 02:02 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 02:02 - INFO - 	 Best PR-AUC: 0.842
2024-10-20 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-20 02:02 - INFO - ---------------------------------------------
2024-10-20 02:10 - INFO - ---------------------------------------------
2024-10-20 02:10 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 02:10 - INFO - 	 Train Loss: 0.077
2024-10-20 02:10 - INFO - 	 Val. Loss: 0.073
2024-10-20 02:10 - INFO - 	 ROC-AUC: 0.983
2024-10-20 02:10 - INFO - 	 PR-AUC: 0.828
2024-10-20 02:10 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 02:10 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 02:10 - INFO - 	 Best PR-AUC: 0.842
2024-10-20 02:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 02:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-20 02:10 - INFO - ---------------------------------------------
2024-10-20 02:18 - INFO - ---------------------------------------------
2024-10-20 02:18 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-20 02:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84524
2024-10-20 02:18 - INFO - 	 Train Loss: 0.074
2024-10-20 02:18 - INFO - 	 Val. Loss: 0.070
2024-10-20 02:18 - INFO - 	 ROC-AUC: 0.984
2024-10-20 02:18 - INFO - 	 PR-AUC: 0.845
2024-10-20 02:18 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 02:18 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 02:18 - INFO - 	 Best PR-AUC: 0.845
2024-10-20 02:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 02:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-10-20 02:18 - INFO - ---------------------------------------------
2024-10-20 02:26 - INFO - ---------------------------------------------
2024-10-20 02:26 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 02:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84971
2024-10-20 02:26 - INFO - 	 Train Loss: 0.075
2024-10-20 02:26 - INFO - 	 Val. Loss: 0.069
2024-10-20 02:26 - INFO - 	 ROC-AUC: 0.984
2024-10-20 02:26 - INFO - 	 PR-AUC: 0.850
2024-10-20 02:26 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 02:26 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 02:26 - INFO - 	 Best PR-AUC: 0.850
2024-10-20 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-20 02:26 - INFO - ---------------------------------------------
2024-10-20 02:34 - INFO - ---------------------------------------------
2024-10-20 02:34 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 02:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8503
2024-10-20 02:34 - INFO - 	 Train Loss: 0.073
2024-10-20 02:34 - INFO - 	 Val. Loss: 0.066
2024-10-20 02:34 - INFO - 	 ROC-AUC: 0.986
2024-10-20 02:34 - INFO - 	 PR-AUC: 0.850
2024-10-20 02:34 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 02:34 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 02:34 - INFO - 	 Best PR-AUC: 0.850
2024-10-20 02:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 02:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 02:34 - INFO - ---------------------------------------------
2024-10-20 02:36 - INFO - Fit the preprocessing pipeline
2024-10-20 02:36 - INFO - Training using device: cuda
2024-10-20 02:36 - INFO - Creating generators
2024-10-20 02:36 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 02:36 - INFO - * Model:
2024-10-20 02:36 - INFO - * -----------
2024-10-20 02:36 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 02:36 - INFO - * -----------
2024-10-20 02:44 - INFO - ---------------------------------------------
2024-10-20 02:44 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-20 02:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7918
2024-10-20 02:44 - INFO - 	 Train Loss: 0.109
2024-10-20 02:44 - INFO - 	 Val. Loss: 0.082
2024-10-20 02:44 - INFO - 	 ROC-AUC: 0.980
2024-10-20 02:44 - INFO - 	 PR-AUC: 0.792
2024-10-20 02:44 - INFO - 	 Best Val. Loss: 0.082
2024-10-20 02:44 - INFO - 	 Best ROC-AUC: 0.980
2024-10-20 02:44 - INFO - 	 Best PR-AUC: 0.792
2024-10-20 02:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 02:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-10-20 02:44 - INFO - ---------------------------------------------
2024-10-20 02:52 - INFO - ---------------------------------------------
2024-10-20 02:52 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 02:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80798
2024-10-20 02:52 - INFO - 	 Train Loss: 0.088
2024-10-20 02:52 - INFO - 	 Val. Loss: 0.079
2024-10-20 02:52 - INFO - 	 ROC-AUC: 0.981
2024-10-20 02:52 - INFO - 	 PR-AUC: 0.808
2024-10-20 02:52 - INFO - 	 Best Val. Loss: 0.079
2024-10-20 02:52 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 02:52 - INFO - 	 Best PR-AUC: 0.808
2024-10-20 02:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 02:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-20 02:52 - INFO - ---------------------------------------------
2024-10-20 03:00 - INFO - ---------------------------------------------
2024-10-20 03:00 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 03:00 - INFO - 	 Train Loss: 0.083
2024-10-20 03:00 - INFO - 	 Val. Loss: 0.078
2024-10-20 03:00 - INFO - 	 ROC-AUC: 0.981
2024-10-20 03:00 - INFO - 	 PR-AUC: 0.798
2024-10-20 03:00 - INFO - 	 Best Val. Loss: 0.078
2024-10-20 03:00 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 03:00 - INFO - 	 Best PR-AUC: 0.808
2024-10-20 03:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 03:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-20 03:00 - INFO - ---------------------------------------------
2024-10-20 03:08 - INFO - ---------------------------------------------
2024-10-20 03:08 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-20 03:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82168
2024-10-20 03:08 - INFO - 	 Train Loss: 0.079
2024-10-20 03:08 - INFO - 	 Val. Loss: 0.072
2024-10-20 03:08 - INFO - 	 ROC-AUC: 0.984
2024-10-20 03:08 - INFO - 	 PR-AUC: 0.822
2024-10-20 03:08 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 03:08 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 03:08 - INFO - 	 Best PR-AUC: 0.822
2024-10-20 03:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 03:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-20 03:08 - INFO - ---------------------------------------------
2024-10-20 03:16 - INFO - ---------------------------------------------
2024-10-20 03:16 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 03:16 - INFO - 	 Train Loss: 0.079
2024-10-20 03:16 - INFO - 	 Val. Loss: 0.076
2024-10-20 03:16 - INFO - 	 ROC-AUC: 0.982
2024-10-20 03:16 - INFO - 	 PR-AUC: 0.813
2024-10-20 03:16 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 03:16 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 03:16 - INFO - 	 Best PR-AUC: 0.822
2024-10-20 03:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 03:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-20 03:16 - INFO - ---------------------------------------------
2024-10-20 03:24 - INFO - ---------------------------------------------
2024-10-20 03:24 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 03:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84694
2024-10-20 03:24 - INFO - 	 Train Loss: 0.078
2024-10-20 03:24 - INFO - 	 Val. Loss: 0.070
2024-10-20 03:24 - INFO - 	 ROC-AUC: 0.984
2024-10-20 03:24 - INFO - 	 PR-AUC: 0.847
2024-10-20 03:24 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 03:24 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 03:24 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 03:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 03:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 03:24 - INFO - ---------------------------------------------
2024-10-20 03:32 - INFO - ---------------------------------------------
2024-10-20 03:32 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-20 03:32 - INFO - 	 Train Loss: 0.075
2024-10-20 03:32 - INFO - 	 Val. Loss: 0.069
2024-10-20 03:32 - INFO - 	 ROC-AUC: 0.985
2024-10-20 03:32 - INFO - 	 PR-AUC: 0.834
2024-10-20 03:32 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 03:32 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 03:32 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 03:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 03:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 03:32 - INFO - ---------------------------------------------
2024-10-20 03:40 - INFO - ---------------------------------------------
2024-10-20 03:40 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 03:40 - INFO - 	 Train Loss: 0.074
2024-10-20 03:40 - INFO - 	 Val. Loss: 0.071
2024-10-20 03:40 - INFO - 	 ROC-AUC: 0.982
2024-10-20 03:40 - INFO - 	 PR-AUC: 0.844
2024-10-20 03:40 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 03:40 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 03:40 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 03:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 03:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 03:40 - INFO - ---------------------------------------------
2024-10-20 03:48 - INFO - ---------------------------------------------
2024-10-20 03:48 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 03:48 - INFO - 	 Train Loss: 0.075
2024-10-20 03:48 - INFO - 	 Val. Loss: 0.069
2024-10-20 03:48 - INFO - 	 ROC-AUC: 0.984
2024-10-20 03:48 - INFO - 	 PR-AUC: 0.844
2024-10-20 03:48 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 03:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 03:48 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 03:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 03:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 03:48 - INFO - ---------------------------------------------
2024-10-20 03:56 - INFO - ---------------------------------------------
2024-10-20 03:56 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 03:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85036
2024-10-20 03:56 - INFO - 	 Train Loss: 0.073
2024-10-20 03:56 - INFO - 	 Val. Loss: 0.069
2024-10-20 03:56 - INFO - 	 ROC-AUC: 0.985
2024-10-20 03:56 - INFO - 	 PR-AUC: 0.850
2024-10-20 03:56 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 03:56 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 03:56 - INFO - 	 Best PR-AUC: 0.850
2024-10-20 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 03:56 - INFO - ---------------------------------------------
2024-10-20 03:59 - INFO - Fit the preprocessing pipeline
2024-10-20 03:59 - INFO - Training using device: cuda
2024-10-20 03:59 - INFO - Creating generators
2024-10-20 03:59 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 03:59 - INFO - * Model:
2024-10-20 03:59 - INFO - * -----------
2024-10-20 03:59 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 03:59 - INFO - * -----------
2024-10-20 04:07 - INFO - ---------------------------------------------
2024-10-20 04:07 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 04:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79135
2024-10-20 04:07 - INFO - 	 Train Loss: 0.108
2024-10-20 04:07 - INFO - 	 Val. Loss: 0.085
2024-10-20 04:07 - INFO - 	 ROC-AUC: 0.978
2024-10-20 04:07 - INFO - 	 PR-AUC: 0.791
2024-10-20 04:07 - INFO - 	 Best Val. Loss: 0.085
2024-10-20 04:07 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 04:07 - INFO - 	 Best PR-AUC: 0.791
2024-10-20 04:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 04:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-20 04:07 - INFO - ---------------------------------------------
2024-10-20 04:15 - INFO - ---------------------------------------------
2024-10-20 04:15 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-20 04:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81717
2024-10-20 04:15 - INFO - 	 Train Loss: 0.089
2024-10-20 04:15 - INFO - 	 Val. Loss: 0.076
2024-10-20 04:15 - INFO - 	 ROC-AUC: 0.981
2024-10-20 04:15 - INFO - 	 PR-AUC: 0.817
2024-10-20 04:15 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 04:15 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 04:15 - INFO - 	 Best PR-AUC: 0.817
2024-10-20 04:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 04:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-20 04:15 - INFO - ---------------------------------------------
2024-10-20 04:23 - INFO - ---------------------------------------------
2024-10-20 04:23 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 04:23 - INFO - 	 Train Loss: 0.082
2024-10-20 04:23 - INFO - 	 Val. Loss: 0.076
2024-10-20 04:23 - INFO - 	 ROC-AUC: 0.984
2024-10-20 04:23 - INFO - 	 PR-AUC: 0.817
2024-10-20 04:23 - INFO - 	 Best Val. Loss: 0.076
2024-10-20 04:23 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 04:23 - INFO - 	 Best PR-AUC: 0.817
2024-10-20 04:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 04:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-20 04:23 - INFO - ---------------------------------------------
2024-10-20 04:31 - INFO - ---------------------------------------------
2024-10-20 04:31 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 04:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81744
2024-10-20 04:31 - INFO - 	 Train Loss: 0.080
2024-10-20 04:31 - INFO - 	 Val. Loss: 0.075
2024-10-20 04:31 - INFO - 	 ROC-AUC: 0.982
2024-10-20 04:31 - INFO - 	 PR-AUC: 0.817
2024-10-20 04:31 - INFO - 	 Best Val. Loss: 0.075
2024-10-20 04:31 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 04:31 - INFO - 	 Best PR-AUC: 0.817
2024-10-20 04:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 04:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 04:31 - INFO - ---------------------------------------------
2024-10-20 04:39 - INFO - ---------------------------------------------
2024-10-20 04:39 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 04:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.833
2024-10-20 04:39 - INFO - 	 Train Loss: 0.079
2024-10-20 04:39 - INFO - 	 Val. Loss: 0.072
2024-10-20 04:39 - INFO - 	 ROC-AUC: 0.983
2024-10-20 04:39 - INFO - 	 PR-AUC: 0.833
2024-10-20 04:39 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 04:39 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 04:39 - INFO - 	 Best PR-AUC: 0.833
2024-10-20 04:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 04:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 04:39 - INFO - ---------------------------------------------
2024-10-20 04:47 - INFO - ---------------------------------------------
2024-10-20 04:47 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 04:47 - INFO - 	 Train Loss: 0.077
2024-10-20 04:47 - INFO - 	 Val. Loss: 0.073
2024-10-20 04:47 - INFO - 	 ROC-AUC: 0.984
2024-10-20 04:47 - INFO - 	 PR-AUC: 0.828
2024-10-20 04:47 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 04:47 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 04:47 - INFO - 	 Best PR-AUC: 0.833
2024-10-20 04:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 04:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-20 04:47 - INFO - ---------------------------------------------
2024-10-20 04:55 - INFO - ---------------------------------------------
2024-10-20 04:55 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 04:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85639
2024-10-20 04:55 - INFO - 	 Train Loss: 0.076
2024-10-20 04:55 - INFO - 	 Val. Loss: 0.066
2024-10-20 04:55 - INFO - 	 ROC-AUC: 0.986
2024-10-20 04:55 - INFO - 	 PR-AUC: 0.856
2024-10-20 04:55 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 04:55 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 04:55 - INFO - 	 Best PR-AUC: 0.856
2024-10-20 04:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 04:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 04:55 - INFO - ---------------------------------------------
2024-10-20 05:03 - INFO - ---------------------------------------------
2024-10-20 05:03 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 05:03 - INFO - 	 Train Loss: 0.074
2024-10-20 05:03 - INFO - 	 Val. Loss: 0.069
2024-10-20 05:03 - INFO - 	 ROC-AUC: 0.985
2024-10-20 05:03 - INFO - 	 PR-AUC: 0.846
2024-10-20 05:03 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 05:03 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 05:03 - INFO - 	 Best PR-AUC: 0.856
2024-10-20 05:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 05:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 05:03 - INFO - ---------------------------------------------
2024-10-20 05:11 - INFO - ---------------------------------------------
2024-10-20 05:11 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-20 05:11 - INFO - 	 Train Loss: 0.074
2024-10-20 05:11 - INFO - 	 Val. Loss: 0.069
2024-10-20 05:11 - INFO - 	 ROC-AUC: 0.984
2024-10-20 05:11 - INFO - 	 PR-AUC: 0.847
2024-10-20 05:11 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 05:11 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 05:11 - INFO - 	 Best PR-AUC: 0.856
2024-10-20 05:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 05:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 05:11 - INFO - ---------------------------------------------
2024-10-20 05:19 - INFO - ---------------------------------------------
2024-10-20 05:19 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 05:19 - INFO - 	 Train Loss: 0.072
2024-10-20 05:19 - INFO - 	 Val. Loss: 0.069
2024-10-20 05:19 - INFO - 	 ROC-AUC: 0.984
2024-10-20 05:19 - INFO - 	 PR-AUC: 0.845
2024-10-20 05:19 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 05:19 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 05:19 - INFO - 	 Best PR-AUC: 0.856
2024-10-20 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-10-20 05:19 - INFO - ---------------------------------------------
2024-10-20 05:21 - INFO - Fit the preprocessing pipeline
2024-10-20 05:21 - INFO - Training using device: cuda
2024-10-20 05:21 - INFO - Creating generators
2024-10-20 05:21 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 05:21 - INFO - * Model:
2024-10-20 05:21 - INFO - * -----------
2024-10-20 05:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 05:21 - INFO - * -----------
2024-10-20 05:29 - INFO - ---------------------------------------------
2024-10-20 05:29 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 05:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80611
2024-10-20 05:29 - INFO - 	 Train Loss: 0.108
2024-10-20 05:29 - INFO - 	 Val. Loss: 0.085
2024-10-20 05:29 - INFO - 	 ROC-AUC: 0.979
2024-10-20 05:29 - INFO - 	 PR-AUC: 0.806
2024-10-20 05:29 - INFO - 	 Best Val. Loss: 0.085
2024-10-20 05:29 - INFO - 	 Best ROC-AUC: 0.979
2024-10-20 05:29 - INFO - 	 Best PR-AUC: 0.806
2024-10-20 05:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 05:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-10-20 05:29 - INFO - ---------------------------------------------
2024-10-20 05:37 - INFO - ---------------------------------------------
2024-10-20 05:37 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-20 05:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80722
2024-10-20 05:37 - INFO - 	 Train Loss: 0.087
2024-10-20 05:37 - INFO - 	 Val. Loss: 0.082
2024-10-20 05:37 - INFO - 	 ROC-AUC: 0.982
2024-10-20 05:37 - INFO - 	 PR-AUC: 0.807
2024-10-20 05:37 - INFO - 	 Best Val. Loss: 0.082
2024-10-20 05:37 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 05:37 - INFO - 	 Best PR-AUC: 0.807
2024-10-20 05:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 05:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-10-20 05:37 - INFO - ---------------------------------------------
2024-10-20 05:45 - INFO - ---------------------------------------------
2024-10-20 05:45 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 05:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82786
2024-10-20 05:45 - INFO - 	 Train Loss: 0.083
2024-10-20 05:45 - INFO - 	 Val. Loss: 0.073
2024-10-20 05:45 - INFO - 	 ROC-AUC: 0.982
2024-10-20 05:45 - INFO - 	 PR-AUC: 0.828
2024-10-20 05:45 - INFO - 	 Best Val. Loss: 0.073
2024-10-20 05:45 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 05:45 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 05:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 05:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-10-20 05:45 - INFO - ---------------------------------------------
2024-10-20 05:53 - INFO - ---------------------------------------------
2024-10-20 05:53 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83455
2024-10-20 05:53 - INFO - 	 Train Loss: 0.080
2024-10-20 05:53 - INFO - 	 Val. Loss: 0.071
2024-10-20 05:53 - INFO - 	 ROC-AUC: 0.984
2024-10-20 05:53 - INFO - 	 PR-AUC: 0.835
2024-10-20 05:53 - INFO - 	 Best Val. Loss: 0.071
2024-10-20 05:53 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 05:53 - INFO - 	 Best PR-AUC: 0.835
2024-10-20 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-20 05:53 - INFO - ---------------------------------------------
2024-10-20 06:01 - INFO - ---------------------------------------------
2024-10-20 06:01 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83599
2024-10-20 06:01 - INFO - 	 Train Loss: 0.078
2024-10-20 06:01 - INFO - 	 Val. Loss: 0.070
2024-10-20 06:01 - INFO - 	 ROC-AUC: 0.984
2024-10-20 06:01 - INFO - 	 PR-AUC: 0.836
2024-10-20 06:01 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 06:01 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 06:01 - INFO - 	 Best PR-AUC: 0.836
2024-10-20 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-20 06:01 - INFO - ---------------------------------------------
2024-10-20 06:09 - INFO - ---------------------------------------------
2024-10-20 06:09 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-20 06:09 - INFO - 	 Train Loss: 0.077
2024-10-20 06:09 - INFO - 	 Val. Loss: 0.070
2024-10-20 06:09 - INFO - 	 ROC-AUC: 0.984
2024-10-20 06:09 - INFO - 	 PR-AUC: 0.834
2024-10-20 06:09 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 06:09 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 06:09 - INFO - 	 Best PR-AUC: 0.836
2024-10-20 06:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 06:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-10-20 06:09 - INFO - ---------------------------------------------
2024-10-20 06:17 - INFO - ---------------------------------------------
2024-10-20 06:17 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 06:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84447
2024-10-20 06:17 - INFO - 	 Train Loss: 0.075
2024-10-20 06:17 - INFO - 	 Val. Loss: 0.068
2024-10-20 06:17 - INFO - 	 ROC-AUC: 0.985
2024-10-20 06:17 - INFO - 	 PR-AUC: 0.844
2024-10-20 06:17 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 06:17 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 06:17 - INFO - 	 Best PR-AUC: 0.844
2024-10-20 06:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 06:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-20 06:17 - INFO - ---------------------------------------------
2024-10-20 06:25 - INFO - ---------------------------------------------
2024-10-20 06:25 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 06:25 - INFO - 	 Train Loss: 0.075
2024-10-20 06:25 - INFO - 	 Val. Loss: 0.068
2024-10-20 06:25 - INFO - 	 ROC-AUC: 0.985
2024-10-20 06:25 - INFO - 	 PR-AUC: 0.843
2024-10-20 06:25 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 06:25 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 06:25 - INFO - 	 Best PR-AUC: 0.844
2024-10-20 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-20 06:25 - INFO - ---------------------------------------------
2024-10-20 06:33 - INFO - ---------------------------------------------
2024-10-20 06:33 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-20 06:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84694
2024-10-20 06:33 - INFO - 	 Train Loss: 0.073
2024-10-20 06:33 - INFO - 	 Val. Loss: 0.068
2024-10-20 06:33 - INFO - 	 ROC-AUC: 0.985
2024-10-20 06:33 - INFO - 	 PR-AUC: 0.847
2024-10-20 06:33 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 06:33 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 06:33 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-20 06:33 - INFO - ---------------------------------------------
2024-10-20 06:42 - INFO - ---------------------------------------------
2024-10-20 06:42 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 06:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85471
2024-10-20 06:42 - INFO - 	 Train Loss: 0.072
2024-10-20 06:42 - INFO - 	 Val. Loss: 0.067
2024-10-20 06:42 - INFO - 	 ROC-AUC: 0.985
2024-10-20 06:42 - INFO - 	 PR-AUC: 0.855
2024-10-20 06:42 - INFO - 	 Best Val. Loss: 0.067
2024-10-20 06:42 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 06:42 - INFO - 	 Best PR-AUC: 0.855
2024-10-20 06:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 06:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-20 06:42 - INFO - ---------------------------------------------
2024-10-20 06:44 - INFO - Fit the preprocessing pipeline
2024-10-20 06:44 - INFO - Training using device: cuda
2024-10-20 06:44 - INFO - Creating generators
2024-10-20 06:44 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 06:44 - INFO - * Model:
2024-10-20 06:44 - INFO - * -----------
2024-10-20 06:44 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 06:44 - INFO - * -----------
2024-10-20 06:52 - INFO - ---------------------------------------------
2024-10-20 06:52 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 06:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77214
2024-10-20 06:52 - INFO - 	 Train Loss: 0.107
2024-10-20 06:52 - INFO - 	 Val. Loss: 0.082
2024-10-20 06:52 - INFO - 	 ROC-AUC: 0.979
2024-10-20 06:52 - INFO - 	 PR-AUC: 0.772
2024-10-20 06:52 - INFO - 	 Best Val. Loss: 0.082
2024-10-20 06:52 - INFO - 	 Best ROC-AUC: 0.979
2024-10-20 06:52 - INFO - 	 Best PR-AUC: 0.772
2024-10-20 06:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 06:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.774
2024-10-20 06:52 - INFO - ---------------------------------------------
2024-10-20 07:00 - INFO - ---------------------------------------------
2024-10-20 07:00 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 07:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82609
2024-10-20 07:00 - INFO - 	 Train Loss: 0.088
2024-10-20 07:00 - INFO - 	 Val. Loss: 0.074
2024-10-20 07:00 - INFO - 	 ROC-AUC: 0.982
2024-10-20 07:00 - INFO - 	 PR-AUC: 0.826
2024-10-20 07:00 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 07:00 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 07:00 - INFO - 	 Best PR-AUC: 0.826
2024-10-20 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-10-20 07:00 - INFO - ---------------------------------------------
2024-10-20 07:08 - INFO - ---------------------------------------------
2024-10-20 07:08 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 07:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83882
2024-10-20 07:08 - INFO - 	 Train Loss: 0.082
2024-10-20 07:08 - INFO - 	 Val. Loss: 0.070
2024-10-20 07:08 - INFO - 	 ROC-AUC: 0.984
2024-10-20 07:08 - INFO - 	 PR-AUC: 0.839
2024-10-20 07:08 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 07:08 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 07:08 - INFO - 	 Best PR-AUC: 0.839
2024-10-20 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-20 07:08 - INFO - ---------------------------------------------
2024-10-20 07:16 - INFO - ---------------------------------------------
2024-10-20 07:16 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 07:16 - INFO - 	 Train Loss: 0.080
2024-10-20 07:16 - INFO - 	 Val. Loss: 0.074
2024-10-20 07:16 - INFO - 	 ROC-AUC: 0.983
2024-10-20 07:16 - INFO - 	 PR-AUC: 0.819
2024-10-20 07:16 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 07:16 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 07:16 - INFO - 	 Best PR-AUC: 0.839
2024-10-20 07:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 07:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-20 07:16 - INFO - ---------------------------------------------
2024-10-20 07:24 - INFO - ---------------------------------------------
2024-10-20 07:24 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 07:24 - INFO - 	 Train Loss: 0.077
2024-10-20 07:24 - INFO - 	 Val. Loss: 0.074
2024-10-20 07:24 - INFO - 	 ROC-AUC: 0.982
2024-10-20 07:24 - INFO - 	 PR-AUC: 0.824
2024-10-20 07:24 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 07:24 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 07:24 - INFO - 	 Best PR-AUC: 0.839
2024-10-20 07:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 07:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-20 07:24 - INFO - ---------------------------------------------
2024-10-20 07:32 - INFO - ---------------------------------------------
2024-10-20 07:32 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 07:32 - INFO - 	 Train Loss: 0.077
2024-10-20 07:32 - INFO - 	 Val. Loss: 0.071
2024-10-20 07:32 - INFO - 	 ROC-AUC: 0.984
2024-10-20 07:32 - INFO - 	 PR-AUC: 0.826
2024-10-20 07:32 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 07:32 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 07:32 - INFO - 	 Best PR-AUC: 0.839
2024-10-20 07:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 07:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-20 07:32 - INFO - ---------------------------------------------
2024-10-20 07:40 - INFO - ---------------------------------------------
2024-10-20 07:40 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 07:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84202
2024-10-20 07:40 - INFO - 	 Train Loss: 0.075
2024-10-20 07:40 - INFO - 	 Val. Loss: 0.070
2024-10-20 07:40 - INFO - 	 ROC-AUC: 0.984
2024-10-20 07:40 - INFO - 	 PR-AUC: 0.842
2024-10-20 07:40 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 07:40 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 07:40 - INFO - 	 Best PR-AUC: 0.842
2024-10-20 07:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 07:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-20 07:40 - INFO - ---------------------------------------------
2024-10-20 07:48 - INFO - ---------------------------------------------
2024-10-20 07:48 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 07:48 - INFO - 	 Train Loss: 0.074
2024-10-20 07:48 - INFO - 	 Val. Loss: 0.069
2024-10-20 07:48 - INFO - 	 ROC-AUC: 0.985
2024-10-20 07:48 - INFO - 	 PR-AUC: 0.839
2024-10-20 07:48 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 07:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 07:48 - INFO - 	 Best PR-AUC: 0.842
2024-10-20 07:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-20 07:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-20 07:48 - INFO - ---------------------------------------------
2024-10-20 07:56 - INFO - ---------------------------------------------
2024-10-20 07:56 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 07:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85236
2024-10-20 07:56 - INFO - 	 Train Loss: 0.073
2024-10-20 07:56 - INFO - 	 Val. Loss: 0.068
2024-10-20 07:56 - INFO - 	 ROC-AUC: 0.984
2024-10-20 07:56 - INFO - 	 PR-AUC: 0.852
2024-10-20 07:56 - INFO - 	 Best Val. Loss: 0.068
2024-10-20 07:56 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 07:56 - INFO - 	 Best PR-AUC: 0.852
2024-10-20 07:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-20 07:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-20 07:56 - INFO - ---------------------------------------------
2024-10-20 08:04 - INFO - ---------------------------------------------
2024-10-20 08:04 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 08:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85519
2024-10-20 08:04 - INFO - 	 Train Loss: 0.073
2024-10-20 08:04 - INFO - 	 Val. Loss: 0.066
2024-10-20 08:04 - INFO - 	 ROC-AUC: 0.985
2024-10-20 08:04 - INFO - 	 PR-AUC: 0.855
2024-10-20 08:04 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 08:04 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 08:04 - INFO - 	 Best PR-AUC: 0.855
2024-10-20 08:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 08:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-20 08:04 - INFO - ---------------------------------------------
2024-10-20 08:07 - INFO - Fit the preprocessing pipeline
2024-10-20 08:07 - INFO - Training using device: cuda
2024-10-20 08:07 - INFO - Creating generators
2024-10-20 08:07 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 08:07 - INFO - * Model:
2024-10-20 08:07 - INFO - * -----------
2024-10-20 08:07 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 08:07 - INFO - * -----------
2024-10-20 08:15 - INFO - ---------------------------------------------
2024-10-20 08:15 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-20 08:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78128
2024-10-20 08:15 - INFO - 	 Train Loss: 0.109
2024-10-20 08:15 - INFO - 	 Val. Loss: 0.085
2024-10-20 08:15 - INFO - 	 ROC-AUC: 0.977
2024-10-20 08:15 - INFO - 	 PR-AUC: 0.781
2024-10-20 08:15 - INFO - 	 Best Val. Loss: 0.085
2024-10-20 08:15 - INFO - 	 Best ROC-AUC: 0.977
2024-10-20 08:15 - INFO - 	 Best PR-AUC: 0.781
2024-10-20 08:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 08:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.781
2024-10-20 08:15 - INFO - ---------------------------------------------
2024-10-20 08:23 - INFO - ---------------------------------------------
2024-10-20 08:23 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 08:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83358
2024-10-20 08:23 - INFO - 	 Train Loss: 0.089
2024-10-20 08:23 - INFO - 	 Val. Loss: 0.072
2024-10-20 08:23 - INFO - 	 ROC-AUC: 0.983
2024-10-20 08:23 - INFO - 	 PR-AUC: 0.834
2024-10-20 08:23 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 08:23 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 08:23 - INFO - 	 Best PR-AUC: 0.834
2024-10-20 08:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 08:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-20 08:23 - INFO - ---------------------------------------------
2024-10-20 08:31 - INFO - ---------------------------------------------
2024-10-20 08:31 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 08:31 - INFO - 	 Train Loss: 0.082
2024-10-20 08:31 - INFO - 	 Val. Loss: 0.071
2024-10-20 08:31 - INFO - 	 ROC-AUC: 0.983
2024-10-20 08:31 - INFO - 	 PR-AUC: 0.828
2024-10-20 08:31 - INFO - 	 Best Val. Loss: 0.071
2024-10-20 08:31 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 08:31 - INFO - 	 Best PR-AUC: 0.834
2024-10-20 08:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 08:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-10-20 08:31 - INFO - ---------------------------------------------
2024-10-20 08:39 - INFO - ---------------------------------------------
2024-10-20 08:39 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 08:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83772
2024-10-20 08:39 - INFO - 	 Train Loss: 0.080
2024-10-20 08:39 - INFO - 	 Val. Loss: 0.072
2024-10-20 08:39 - INFO - 	 ROC-AUC: 0.982
2024-10-20 08:39 - INFO - 	 PR-AUC: 0.838
2024-10-20 08:39 - INFO - 	 Best Val. Loss: 0.071
2024-10-20 08:39 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 08:39 - INFO - 	 Best PR-AUC: 0.838
2024-10-20 08:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 08:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 08:39 - INFO - ---------------------------------------------
2024-10-20 08:47 - INFO - ---------------------------------------------
2024-10-20 08:47 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 08:47 - INFO - 	 Train Loss: 0.079
2024-10-20 08:47 - INFO - 	 Val. Loss: 0.071
2024-10-20 08:47 - INFO - 	 ROC-AUC: 0.984
2024-10-20 08:47 - INFO - 	 PR-AUC: 0.837
2024-10-20 08:47 - INFO - 	 Best Val. Loss: 0.071
2024-10-20 08:47 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 08:47 - INFO - 	 Best PR-AUC: 0.838
2024-10-20 08:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 08:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-20 08:47 - INFO - ---------------------------------------------
2024-10-20 08:55 - INFO - ---------------------------------------------
2024-10-20 08:55 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 08:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83891
2024-10-20 08:55 - INFO - 	 Train Loss: 0.077
2024-10-20 08:55 - INFO - 	 Val. Loss: 0.071
2024-10-20 08:55 - INFO - 	 ROC-AUC: 0.983
2024-10-20 08:55 - INFO - 	 PR-AUC: 0.839
2024-10-20 08:55 - INFO - 	 Best Val. Loss: 0.071
2024-10-20 08:55 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 08:55 - INFO - 	 Best PR-AUC: 0.839
2024-10-20 08:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 08:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-20 08:55 - INFO - ---------------------------------------------
2024-10-20 09:03 - INFO - ---------------------------------------------
2024-10-20 09:03 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 09:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85458
2024-10-20 09:03 - INFO - 	 Train Loss: 0.075
2024-10-20 09:03 - INFO - 	 Val. Loss: 0.069
2024-10-20 09:03 - INFO - 	 ROC-AUC: 0.984
2024-10-20 09:03 - INFO - 	 PR-AUC: 0.855
2024-10-20 09:03 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 09:03 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 09:03 - INFO - 	 Best PR-AUC: 0.855
2024-10-20 09:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 09:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-20 09:03 - INFO - ---------------------------------------------
2024-10-20 09:11 - INFO - ---------------------------------------------
2024-10-20 09:11 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 09:11 - INFO - 	 Train Loss: 0.075
2024-10-20 09:11 - INFO - 	 Val. Loss: 0.069
2024-10-20 09:11 - INFO - 	 ROC-AUC: 0.984
2024-10-20 09:11 - INFO - 	 PR-AUC: 0.845
2024-10-20 09:11 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 09:11 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 09:11 - INFO - 	 Best PR-AUC: 0.855
2024-10-20 09:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 09:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-20 09:11 - INFO - ---------------------------------------------
2024-10-20 09:19 - INFO - ---------------------------------------------
2024-10-20 09:19 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 09:19 - INFO - 	 Train Loss: 0.074
2024-10-20 09:19 - INFO - 	 Val. Loss: 0.070
2024-10-20 09:19 - INFO - 	 ROC-AUC: 0.984
2024-10-20 09:19 - INFO - 	 PR-AUC: 0.846
2024-10-20 09:19 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 09:19 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 09:19 - INFO - 	 Best PR-AUC: 0.855
2024-10-20 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-20 09:19 - INFO - ---------------------------------------------
2024-10-20 09:27 - INFO - ---------------------------------------------
2024-10-20 09:27 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 09:27 - INFO - 	 Train Loss: 0.073
2024-10-20 09:27 - INFO - 	 Val. Loss: 0.070
2024-10-20 09:27 - INFO - 	 ROC-AUC: 0.984
2024-10-20 09:27 - INFO - 	 PR-AUC: 0.849
2024-10-20 09:27 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 09:27 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 09:27 - INFO - 	 Best PR-AUC: 0.855
2024-10-20 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-20 09:27 - INFO - ---------------------------------------------
2024-10-20 09:29 - INFO - Fit the preprocessing pipeline
2024-10-20 09:29 - INFO - Training using device: cuda
2024-10-20 09:29 - INFO - Creating generators
2024-10-20 09:29 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 09:29 - INFO - * Model:
2024-10-20 09:29 - INFO - * -----------
2024-10-20 09:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 09:29 - INFO - * -----------
2024-10-20 09:37 - INFO - ---------------------------------------------
2024-10-20 09:37 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 09:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81573
2024-10-20 09:37 - INFO - 	 Train Loss: 0.107
2024-10-20 09:37 - INFO - 	 Val. Loss: 0.080
2024-10-20 09:37 - INFO - 	 ROC-AUC: 0.978
2024-10-20 09:37 - INFO - 	 PR-AUC: 0.816
2024-10-20 09:37 - INFO - 	 Best Val. Loss: 0.080
2024-10-20 09:37 - INFO - 	 Best ROC-AUC: 0.978
2024-10-20 09:37 - INFO - 	 Best PR-AUC: 0.816
2024-10-20 09:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 09:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.806
2024-10-20 09:37 - INFO - ---------------------------------------------
2024-10-20 09:45 - INFO - ---------------------------------------------
2024-10-20 09:45 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 09:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81731
2024-10-20 09:45 - INFO - 	 Train Loss: 0.088
2024-10-20 09:45 - INFO - 	 Val. Loss: 0.078
2024-10-20 09:45 - INFO - 	 ROC-AUC: 0.982
2024-10-20 09:45 - INFO - 	 PR-AUC: 0.817
2024-10-20 09:45 - INFO - 	 Best Val. Loss: 0.078
2024-10-20 09:45 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 09:45 - INFO - 	 Best PR-AUC: 0.817
2024-10-20 09:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 09:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-20 09:45 - INFO - ---------------------------------------------
2024-10-20 09:53 - INFO - ---------------------------------------------
2024-10-20 09:53 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 09:53 - INFO - 	 Train Loss: 0.083
2024-10-20 09:53 - INFO - 	 Val. Loss: 0.078
2024-10-20 09:53 - INFO - 	 ROC-AUC: 0.981
2024-10-20 09:53 - INFO - 	 PR-AUC: 0.798
2024-10-20 09:53 - INFO - 	 Best Val. Loss: 0.078
2024-10-20 09:53 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 09:53 - INFO - 	 Best PR-AUC: 0.817
2024-10-20 09:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 09:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-20 09:53 - INFO - ---------------------------------------------
2024-10-20 10:01 - INFO - ---------------------------------------------
2024-10-20 10:01 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 10:01 - INFO - 	 Train Loss: 0.080
2024-10-20 10:01 - INFO - 	 Val. Loss: 0.074
2024-10-20 10:01 - INFO - 	 ROC-AUC: 0.982
2024-10-20 10:01 - INFO - 	 PR-AUC: 0.817
2024-10-20 10:01 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 10:01 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 10:01 - INFO - 	 Best PR-AUC: 0.817
2024-10-20 10:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 10:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.800
2024-10-20 10:01 - INFO - ---------------------------------------------
2024-10-20 10:09 - INFO - ---------------------------------------------
2024-10-20 10:09 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 10:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82838
2024-10-20 10:09 - INFO - 	 Train Loss: 0.078
2024-10-20 10:09 - INFO - 	 Val. Loss: 0.076
2024-10-20 10:09 - INFO - 	 ROC-AUC: 0.981
2024-10-20 10:09 - INFO - 	 PR-AUC: 0.828
2024-10-20 10:09 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 10:09 - INFO - 	 Best ROC-AUC: 0.982
2024-10-20 10:09 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 10:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 10:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-10-20 10:09 - INFO - ---------------------------------------------
2024-10-20 10:17 - INFO - ---------------------------------------------
2024-10-20 10:17 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 10:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84112
2024-10-20 10:17 - INFO - 	 Train Loss: 0.078
2024-10-20 10:17 - INFO - 	 Val. Loss: 0.070
2024-10-20 10:17 - INFO - 	 ROC-AUC: 0.984
2024-10-20 10:17 - INFO - 	 PR-AUC: 0.841
2024-10-20 10:17 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 10:17 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 10:17 - INFO - 	 Best PR-AUC: 0.841
2024-10-20 10:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 10:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-20 10:17 - INFO - ---------------------------------------------
2024-10-20 10:25 - INFO - ---------------------------------------------
2024-10-20 10:25 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85122
2024-10-20 10:25 - INFO - 	 Train Loss: 0.075
2024-10-20 10:25 - INFO - 	 Val. Loss: 0.066
2024-10-20 10:25 - INFO - 	 ROC-AUC: 0.985
2024-10-20 10:25 - INFO - 	 PR-AUC: 0.851
2024-10-20 10:25 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 10:25 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 10:25 - INFO - 	 Best PR-AUC: 0.851
2024-10-20 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-20 10:25 - INFO - ---------------------------------------------
2024-10-20 10:33 - INFO - ---------------------------------------------
2024-10-20 10:33 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-20 10:33 - INFO - 	 Train Loss: 0.075
2024-10-20 10:33 - INFO - 	 Val. Loss: 0.068
2024-10-20 10:33 - INFO - 	 ROC-AUC: 0.984
2024-10-20 10:33 - INFO - 	 PR-AUC: 0.839
2024-10-20 10:33 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 10:33 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 10:33 - INFO - 	 Best PR-AUC: 0.851
2024-10-20 10:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 10:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-20 10:33 - INFO - ---------------------------------------------
2024-10-20 10:41 - INFO - ---------------------------------------------
2024-10-20 10:41 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 10:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85987
2024-10-20 10:41 - INFO - 	 Train Loss: 0.074
2024-10-20 10:41 - INFO - 	 Val. Loss: 0.066
2024-10-20 10:41 - INFO - 	 ROC-AUC: 0.986
2024-10-20 10:41 - INFO - 	 PR-AUC: 0.860
2024-10-20 10:41 - INFO - 	 Best Val. Loss: 0.066
2024-10-20 10:41 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 10:41 - INFO - 	 Best PR-AUC: 0.860
2024-10-20 10:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 10:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-20 10:41 - INFO - ---------------------------------------------
2024-10-20 10:49 - INFO - ---------------------------------------------
2024-10-20 10:49 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 10:49 - INFO - 	 Train Loss: 0.072
2024-10-20 10:49 - INFO - 	 Val. Loss: 0.065
2024-10-20 10:49 - INFO - 	 ROC-AUC: 0.986
2024-10-20 10:49 - INFO - 	 PR-AUC: 0.856
2024-10-20 10:49 - INFO - 	 Best Val. Loss: 0.065
2024-10-20 10:49 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 10:49 - INFO - 	 Best PR-AUC: 0.860
2024-10-20 10:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 10:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-20 10:49 - INFO - ---------------------------------------------
2024-10-20 10:52 - INFO - Fit the preprocessing pipeline
2024-10-20 10:52 - INFO - Training using device: cuda
2024-10-20 10:52 - INFO - Creating generators
2024-10-20 10:52 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 10:52 - INFO - * Model:
2024-10-20 10:52 - INFO - * -----------
2024-10-20 10:52 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 10:52 - INFO - * -----------
2024-10-20 11:00 - INFO - ---------------------------------------------
2024-10-20 11:00 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 11:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75886
2024-10-20 11:00 - INFO - 	 Train Loss: 0.107
2024-10-20 11:00 - INFO - 	 Val. Loss: 0.088
2024-10-20 11:00 - INFO - 	 ROC-AUC: 0.976
2024-10-20 11:00 - INFO - 	 PR-AUC: 0.759
2024-10-20 11:00 - INFO - 	 Best Val. Loss: 0.088
2024-10-20 11:00 - INFO - 	 Best ROC-AUC: 0.976
2024-10-20 11:00 - INFO - 	 Best PR-AUC: 0.759
2024-10-20 11:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-10-20 11:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.771
2024-10-20 11:00 - INFO - ---------------------------------------------
2024-10-20 11:08 - INFO - ---------------------------------------------
2024-10-20 11:08 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 11:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8
2024-10-20 11:08 - INFO - 	 Train Loss: 0.088
2024-10-20 11:08 - INFO - 	 Val. Loss: 0.077
2024-10-20 11:08 - INFO - 	 ROC-AUC: 0.981
2024-10-20 11:08 - INFO - 	 PR-AUC: 0.800
2024-10-20 11:08 - INFO - 	 Best Val. Loss: 0.077
2024-10-20 11:08 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 11:08 - INFO - 	 Best PR-AUC: 0.800
2024-10-20 11:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 11:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-20 11:08 - INFO - ---------------------------------------------
2024-10-20 11:16 - INFO - ---------------------------------------------
2024-10-20 11:16 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-20 11:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8232
2024-10-20 11:16 - INFO - 	 Train Loss: 0.084
2024-10-20 11:16 - INFO - 	 Val. Loss: 0.074
2024-10-20 11:16 - INFO - 	 ROC-AUC: 0.983
2024-10-20 11:16 - INFO - 	 PR-AUC: 0.823
2024-10-20 11:16 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 11:16 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 11:16 - INFO - 	 Best PR-AUC: 0.823
2024-10-20 11:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 11:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.818
2024-10-20 11:16 - INFO - ---------------------------------------------
2024-10-20 11:24 - INFO - ---------------------------------------------
2024-10-20 11:24 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-20 11:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82802
2024-10-20 11:24 - INFO - 	 Train Loss: 0.079
2024-10-20 11:24 - INFO - 	 Val. Loss: 0.073
2024-10-20 11:24 - INFO - 	 ROC-AUC: 0.983
2024-10-20 11:24 - INFO - 	 PR-AUC: 0.828
2024-10-20 11:24 - INFO - 	 Best Val. Loss: 0.073
2024-10-20 11:24 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 11:24 - INFO - 	 Best PR-AUC: 0.828
2024-10-20 11:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 11:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-10-20 11:24 - INFO - ---------------------------------------------
2024-10-20 11:32 - INFO - ---------------------------------------------
2024-10-20 11:32 - INFO - Epoch: 05 | Time: 8m 2s
2024-10-20 11:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83876
2024-10-20 11:32 - INFO - 	 Train Loss: 0.078
2024-10-20 11:32 - INFO - 	 Val. Loss: 0.070
2024-10-20 11:32 - INFO - 	 ROC-AUC: 0.983
2024-10-20 11:32 - INFO - 	 PR-AUC: 0.839
2024-10-20 11:32 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 11:32 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 11:32 - INFO - 	 Best PR-AUC: 0.839
2024-10-20 11:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-10-20 11:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-20 11:32 - INFO - ---------------------------------------------
2024-10-20 11:40 - INFO - ---------------------------------------------
2024-10-20 11:40 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 11:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84699
2024-10-20 11:40 - INFO - 	 Train Loss: 0.077
2024-10-20 11:40 - INFO - 	 Val. Loss: 0.072
2024-10-20 11:40 - INFO - 	 ROC-AUC: 0.985
2024-10-20 11:40 - INFO - 	 PR-AUC: 0.847
2024-10-20 11:40 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 11:40 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 11:40 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 11:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-20 11:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-20 11:40 - INFO - ---------------------------------------------
2024-10-20 11:48 - INFO - ---------------------------------------------
2024-10-20 11:48 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 11:48 - INFO - 	 Train Loss: 0.076
2024-10-20 11:48 - INFO - 	 Val. Loss: 0.071
2024-10-20 11:48 - INFO - 	 ROC-AUC: 0.983
2024-10-20 11:48 - INFO - 	 PR-AUC: 0.839
2024-10-20 11:48 - INFO - 	 Best Val. Loss: 0.070
2024-10-20 11:48 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 11:48 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 11:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-20 11:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-20 11:48 - INFO - ---------------------------------------------
2024-10-20 11:56 - INFO - ---------------------------------------------
2024-10-20 11:56 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 11:56 - INFO - 	 Train Loss: 0.075
2024-10-20 11:56 - INFO - 	 Val. Loss: 0.069
2024-10-20 11:56 - INFO - 	 ROC-AUC: 0.985
2024-10-20 11:56 - INFO - 	 PR-AUC: 0.844
2024-10-20 11:56 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 11:56 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 11:56 - INFO - 	 Best PR-AUC: 0.847
2024-10-20 11:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-20 11:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-20 11:56 - INFO - ---------------------------------------------
2024-10-20 12:04 - INFO - ---------------------------------------------
2024-10-20 12:04 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 12:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85789
2024-10-20 12:04 - INFO - 	 Train Loss: 0.074
2024-10-20 12:04 - INFO - 	 Val. Loss: 0.065
2024-10-20 12:04 - INFO - 	 ROC-AUC: 0.986
2024-10-20 12:04 - INFO - 	 PR-AUC: 0.858
2024-10-20 12:04 - INFO - 	 Best Val. Loss: 0.065
2024-10-20 12:04 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 12:04 - INFO - 	 Best PR-AUC: 0.858
2024-10-20 12:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 12:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-20 12:04 - INFO - ---------------------------------------------
2024-10-20 12:12 - INFO - ---------------------------------------------
2024-10-20 12:12 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-20 12:12 - INFO - 	 Train Loss: 0.072
2024-10-20 12:12 - INFO - 	 Val. Loss: 0.067
2024-10-20 12:12 - INFO - 	 ROC-AUC: 0.986
2024-10-20 12:12 - INFO - 	 PR-AUC: 0.851
2024-10-20 12:12 - INFO - 	 Best Val. Loss: 0.065
2024-10-20 12:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-20 12:12 - INFO - 	 Best PR-AUC: 0.858
2024-10-20 12:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 12:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-20 12:12 - INFO - ---------------------------------------------
2024-10-20 12:14 - INFO - Fit the preprocessing pipeline
2024-10-20 12:14 - INFO - Training using device: cuda
2024-10-20 12:14 - INFO - Creating generators
2024-10-20 12:14 - INFO - The model has 2,246,929 trainable parameters
2024-10-20 12:14 - INFO - * Model:
2024-10-20 12:14 - INFO - * -----------
2024-10-20 12:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-20 12:14 - INFO - * -----------
2024-10-20 12:22 - INFO - ---------------------------------------------
2024-10-20 12:22 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-20 12:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76998
2024-10-20 12:22 - INFO - 	 Train Loss: 0.107
2024-10-20 12:22 - INFO - 	 Val. Loss: 0.081
2024-10-20 12:22 - INFO - 	 ROC-AUC: 0.979
2024-10-20 12:22 - INFO - 	 PR-AUC: 0.770
2024-10-20 12:22 - INFO - 	 Best Val. Loss: 0.081
2024-10-20 12:22 - INFO - 	 Best ROC-AUC: 0.979
2024-10-20 12:22 - INFO - 	 Best PR-AUC: 0.770
2024-10-20 12:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-10-20 12:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-10-20 12:22 - INFO - ---------------------------------------------
2024-10-20 12:30 - INFO - ---------------------------------------------
2024-10-20 12:30 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-20 12:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80808
2024-10-20 12:30 - INFO - 	 Train Loss: 0.088
2024-10-20 12:30 - INFO - 	 Val. Loss: 0.075
2024-10-20 12:30 - INFO - 	 ROC-AUC: 0.981
2024-10-20 12:30 - INFO - 	 PR-AUC: 0.808
2024-10-20 12:30 - INFO - 	 Best Val. Loss: 0.075
2024-10-20 12:30 - INFO - 	 Best ROC-AUC: 0.981
2024-10-20 12:30 - INFO - 	 Best PR-AUC: 0.808
2024-10-20 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-10-20 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-20 12:30 - INFO - ---------------------------------------------
2024-10-20 12:38 - INFO - ---------------------------------------------
2024-10-20 12:38 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-20 12:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8252
2024-10-20 12:38 - INFO - 	 Train Loss: 0.084
2024-10-20 12:38 - INFO - 	 Val. Loss: 0.074
2024-10-20 12:38 - INFO - 	 ROC-AUC: 0.983
2024-10-20 12:38 - INFO - 	 PR-AUC: 0.825
2024-10-20 12:38 - INFO - 	 Best Val. Loss: 0.074
2024-10-20 12:38 - INFO - 	 Best ROC-AUC: 0.983
2024-10-20 12:38 - INFO - 	 Best PR-AUC: 0.825
2024-10-20 12:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 12:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.823
2024-10-20 12:38 - INFO - ---------------------------------------------
2024-10-20 12:46 - INFO - ---------------------------------------------
2024-10-20 12:46 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-20 12:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84387
2024-10-20 12:46 - INFO - 	 Train Loss: 0.080
2024-10-20 12:46 - INFO - 	 Val. Loss: 0.072
2024-10-20 12:46 - INFO - 	 ROC-AUC: 0.984
2024-10-20 12:46 - INFO - 	 PR-AUC: 0.844
2024-10-20 12:46 - INFO - 	 Best Val. Loss: 0.072
2024-10-20 12:46 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 12:46 - INFO - 	 Best PR-AUC: 0.844
2024-10-20 12:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-20 12:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-20 12:46 - INFO - ---------------------------------------------
2024-10-20 12:54 - INFO - ---------------------------------------------
2024-10-20 12:54 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-20 12:54 - INFO - 	 Train Loss: 0.077
2024-10-20 12:54 - INFO - 	 Val. Loss: 0.071
2024-10-20 12:54 - INFO - 	 ROC-AUC: 0.984
2024-10-20 12:54 - INFO - 	 PR-AUC: 0.840
2024-10-20 12:54 - INFO - 	 Best Val. Loss: 0.071
2024-10-20 12:54 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 12:54 - INFO - 	 Best PR-AUC: 0.844
2024-10-20 12:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 12:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-20 12:54 - INFO - ---------------------------------------------
2024-10-20 13:03 - INFO - ---------------------------------------------
2024-10-20 13:03 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-20 13:03 - INFO - 	 Train Loss: 0.077
2024-10-20 13:03 - INFO - 	 Val. Loss: 0.073
2024-10-20 13:03 - INFO - 	 ROC-AUC: 0.983
2024-10-20 13:03 - INFO - 	 PR-AUC: 0.822
2024-10-20 13:03 - INFO - 	 Best Val. Loss: 0.071
2024-10-20 13:03 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 13:03 - INFO - 	 Best PR-AUC: 0.844
2024-10-20 13:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-20 13:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-20 13:03 - INFO - ---------------------------------------------
2024-10-20 13:11 - INFO - ---------------------------------------------
2024-10-20 13:11 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-20 13:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84405
2024-10-20 13:11 - INFO - 	 Train Loss: 0.076
2024-10-20 13:11 - INFO - 	 Val. Loss: 0.069
2024-10-20 13:11 - INFO - 	 ROC-AUC: 0.984
2024-10-20 13:11 - INFO - 	 PR-AUC: 0.844
2024-10-20 13:11 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 13:11 - INFO - 	 Best ROC-AUC: 0.984
2024-10-20 13:11 - INFO - 	 Best PR-AUC: 0.844
2024-10-20 13:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-20 13:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-20 13:11 - INFO - ---------------------------------------------
2024-10-20 13:19 - INFO - ---------------------------------------------
2024-10-20 13:19 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-20 13:19 - INFO - 	 Train Loss: 0.075
2024-10-20 13:19 - INFO - 	 Val. Loss: 0.069
2024-10-20 13:19 - INFO - 	 ROC-AUC: 0.985
2024-10-20 13:19 - INFO - 	 PR-AUC: 0.838
2024-10-20 13:19 - INFO - 	 Best Val. Loss: 0.069
2024-10-20 13:19 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 13:19 - INFO - 	 Best PR-AUC: 0.844
2024-10-20 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-20 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-20 13:19 - INFO - ---------------------------------------------
2024-10-20 13:27 - INFO - ---------------------------------------------
2024-10-20 13:27 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-20 13:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85825
2024-10-20 13:27 - INFO - 	 Train Loss: 0.074
2024-10-20 13:27 - INFO - 	 Val. Loss: 0.067
2024-10-20 13:27 - INFO - 	 ROC-AUC: 0.985
2024-10-20 13:27 - INFO - 	 PR-AUC: 0.858
2024-10-20 13:27 - INFO - 	 Best Val. Loss: 0.067
2024-10-20 13:27 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 13:27 - INFO - 	 Best PR-AUC: 0.858
2024-10-20 13:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 13:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-20 13:27 - INFO - ---------------------------------------------
2024-10-20 13:35 - INFO - ---------------------------------------------
2024-10-20 13:35 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-20 13:35 - INFO - 	 Train Loss: 0.073
2024-10-20 13:35 - INFO - 	 Val. Loss: 0.068
2024-10-20 13:35 - INFO - 	 ROC-AUC: 0.984
2024-10-20 13:35 - INFO - 	 PR-AUC: 0.857
2024-10-20 13:35 - INFO - 	 Best Val. Loss: 0.067
2024-10-20 13:35 - INFO - 	 Best ROC-AUC: 0.985
2024-10-20 13:35 - INFO - 	 Best PR-AUC: 0.858
2024-10-20 13:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-20 13:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-20 13:35 - INFO - ---------------------------------------------
