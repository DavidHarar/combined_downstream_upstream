2024-11-01 10:49 - INFO - Fit the preprocessing pipeline
2024-11-01 10:49 - INFO - Training using device: cuda
2024-11-01 10:49 - INFO - Creating generators
2024-11-01 10:49 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 10:49 - INFO - * Model:
2024-11-01 10:49 - INFO - * -----------
2024-11-01 10:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 10:49 - INFO - * -----------
2024-11-01 10:57 - INFO - ---------------------------------------------
2024-11-01 10:57 - INFO - Epoch: 01 | Time: 8m 28s
2024-11-01 10:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81901
2024-11-01 10:57 - INFO - 	 Train Loss: 0.153
2024-11-01 10:57 - INFO - 	 Val. Loss: 0.081
2024-11-01 10:57 - INFO - 	 ROC-AUC: 0.979
2024-11-01 10:57 - INFO - 	 PR-AUC: 0.819
2024-11-01 10:57 - INFO - 	 Best Val. Loss: 0.081
2024-11-01 10:57 - INFO - 	 Best ROC-AUC: 0.979
2024-11-01 10:57 - INFO - 	 Best PR-AUC: 0.819
2024-11-01 10:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-01 10:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.777
2024-11-01 10:57 - INFO - ---------------------------------------------
2024-11-01 11:05 - INFO - ---------------------------------------------
2024-11-01 11:05 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-01 11:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86701
2024-11-01 11:05 - INFO - 	 Train Loss: 0.081
2024-11-01 11:05 - INFO - 	 Val. Loss: 0.070
2024-11-01 11:05 - INFO - 	 ROC-AUC: 0.985
2024-11-01 11:05 - INFO - 	 PR-AUC: 0.867
2024-11-01 11:05 - INFO - 	 Best Val. Loss: 0.070
2024-11-01 11:05 - INFO - 	 Best ROC-AUC: 0.985
2024-11-01 11:05 - INFO - 	 Best PR-AUC: 0.867
2024-11-01 11:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 11:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-01 11:05 - INFO - ---------------------------------------------
2024-11-01 11:13 - INFO - ---------------------------------------------
2024-11-01 11:13 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-01 11:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87869
2024-11-01 11:13 - INFO - 	 Train Loss: 0.069
2024-11-01 11:13 - INFO - 	 Val. Loss: 0.063
2024-11-01 11:13 - INFO - 	 ROC-AUC: 0.987
2024-11-01 11:13 - INFO - 	 PR-AUC: 0.879
2024-11-01 11:13 - INFO - 	 Best Val. Loss: 0.063
2024-11-01 11:13 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 11:13 - INFO - 	 Best PR-AUC: 0.879
2024-11-01 11:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 11:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-01 11:13 - INFO - ---------------------------------------------
2024-11-01 11:21 - INFO - ---------------------------------------------
2024-11-01 11:21 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-01 11:21 - INFO - 	 Train Loss: 0.063
2024-11-01 11:21 - INFO - 	 Val. Loss: 0.062
2024-11-01 11:21 - INFO - 	 ROC-AUC: 0.987
2024-11-01 11:21 - INFO - 	 PR-AUC: 0.879
2024-11-01 11:21 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 11:21 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 11:21 - INFO - 	 Best PR-AUC: 0.879
2024-11-01 11:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 11:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-01 11:21 - INFO - ---------------------------------------------
2024-11-01 11:29 - INFO - ---------------------------------------------
2024-11-01 11:29 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-01 11:29 - INFO - 	 Train Loss: 0.058
2024-11-01 11:29 - INFO - 	 Val. Loss: 0.063
2024-11-01 11:29 - INFO - 	 ROC-AUC: 0.988
2024-11-01 11:29 - INFO - 	 PR-AUC: 0.878
2024-11-01 11:29 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 11:29 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 11:29 - INFO - 	 Best PR-AUC: 0.879
2024-11-01 11:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 11:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-01 11:29 - INFO - ---------------------------------------------
2024-11-01 11:37 - INFO - ---------------------------------------------
2024-11-01 11:37 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-01 11:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88864
2024-11-01 11:37 - INFO - 	 Train Loss: 0.055
2024-11-01 11:37 - INFO - 	 Val. Loss: 0.061
2024-11-01 11:37 - INFO - 	 ROC-AUC: 0.989
2024-11-01 11:37 - INFO - 	 PR-AUC: 0.889
2024-11-01 11:37 - INFO - 	 Best Val. Loss: 0.061
2024-11-01 11:37 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 11:37 - INFO - 	 Best PR-AUC: 0.889
2024-11-01 11:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 11:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-01 11:37 - INFO - ---------------------------------------------
2024-11-01 11:46 - INFO - ---------------------------------------------
2024-11-01 11:46 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-01 11:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8929
2024-11-01 11:46 - INFO - 	 Train Loss: 0.052
2024-11-01 11:46 - INFO - 	 Val. Loss: 0.059
2024-11-01 11:46 - INFO - 	 ROC-AUC: 0.989
2024-11-01 11:46 - INFO - 	 PR-AUC: 0.893
2024-11-01 11:46 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 11:46 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 11:46 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 11:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 11:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-01 11:46 - INFO - ---------------------------------------------
2024-11-01 11:54 - INFO - ---------------------------------------------
2024-11-01 11:54 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-01 11:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90301
2024-11-01 11:54 - INFO - 	 Train Loss: 0.050
2024-11-01 11:54 - INFO - 	 Val. Loss: 0.058
2024-11-01 11:54 - INFO - 	 ROC-AUC: 0.989
2024-11-01 11:54 - INFO - 	 PR-AUC: 0.903
2024-11-01 11:54 - INFO - 	 Best Val. Loss: 0.058
2024-11-01 11:54 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 11:54 - INFO - 	 Best PR-AUC: 0.903
2024-11-01 11:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 11:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-11-01 11:54 - INFO - ---------------------------------------------
2024-11-01 12:02 - INFO - ---------------------------------------------
2024-11-01 12:02 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-01 12:02 - INFO - 	 Train Loss: 0.048
2024-11-01 12:02 - INFO - 	 Val. Loss: 0.063
2024-11-01 12:02 - INFO - 	 ROC-AUC: 0.988
2024-11-01 12:02 - INFO - 	 PR-AUC: 0.894
2024-11-01 12:02 - INFO - 	 Best Val. Loss: 0.058
2024-11-01 12:02 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 12:02 - INFO - 	 Best PR-AUC: 0.903
2024-11-01 12:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 12:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-11-01 12:02 - INFO - ---------------------------------------------
2024-11-01 12:10 - INFO - ---------------------------------------------
2024-11-01 12:10 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-01 12:10 - INFO - 	 Train Loss: 0.047
2024-11-01 12:10 - INFO - 	 Val. Loss: 0.063
2024-11-01 12:10 - INFO - 	 ROC-AUC: 0.988
2024-11-01 12:10 - INFO - 	 PR-AUC: 0.895
2024-11-01 12:10 - INFO - 	 Best Val. Loss: 0.058
2024-11-01 12:10 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 12:10 - INFO - 	 Best PR-AUC: 0.903
2024-11-01 12:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 12:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-11-01 12:10 - INFO - ---------------------------------------------
2024-11-01 12:12 - INFO - Fit the preprocessing pipeline
2024-11-01 12:12 - INFO - Training using device: cuda
2024-11-01 12:12 - INFO - Creating generators
2024-11-01 12:12 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 12:12 - INFO - * Model:
2024-11-01 12:12 - INFO - * -----------
2024-11-01 12:12 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 12:12 - INFO - * -----------
2024-11-01 12:20 - INFO - ---------------------------------------------
2024-11-01 12:20 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-01 12:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83911
2024-11-01 12:20 - INFO - 	 Train Loss: 0.146
2024-11-01 12:20 - INFO - 	 Val. Loss: 0.081
2024-11-01 12:20 - INFO - 	 ROC-AUC: 0.980
2024-11-01 12:20 - INFO - 	 PR-AUC: 0.839
2024-11-01 12:20 - INFO - 	 Best Val. Loss: 0.081
2024-11-01 12:20 - INFO - 	 Best ROC-AUC: 0.980
2024-11-01 12:20 - INFO - 	 Best PR-AUC: 0.839
2024-11-01 12:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-01 12:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.812
2024-11-01 12:20 - INFO - ---------------------------------------------
2024-11-01 12:28 - INFO - ---------------------------------------------
2024-11-01 12:28 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-01 12:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87476
2024-11-01 12:28 - INFO - 	 Train Loss: 0.080
2024-11-01 12:28 - INFO - 	 Val. Loss: 0.069
2024-11-01 12:28 - INFO - 	 ROC-AUC: 0.985
2024-11-01 12:28 - INFO - 	 PR-AUC: 0.875
2024-11-01 12:28 - INFO - 	 Best Val. Loss: 0.069
2024-11-01 12:28 - INFO - 	 Best ROC-AUC: 0.985
2024-11-01 12:28 - INFO - 	 Best PR-AUC: 0.875
2024-11-01 12:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 12:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-01 12:28 - INFO - ---------------------------------------------
2024-11-01 12:36 - INFO - ---------------------------------------------
2024-11-01 12:36 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-01 12:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8816
2024-11-01 12:36 - INFO - 	 Train Loss: 0.070
2024-11-01 12:36 - INFO - 	 Val. Loss: 0.069
2024-11-01 12:36 - INFO - 	 ROC-AUC: 0.986
2024-11-01 12:36 - INFO - 	 PR-AUC: 0.882
2024-11-01 12:36 - INFO - 	 Best Val. Loss: 0.069
2024-11-01 12:36 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 12:36 - INFO - 	 Best PR-AUC: 0.882
2024-11-01 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-01 12:36 - INFO - ---------------------------------------------
2024-11-01 12:44 - INFO - ---------------------------------------------
2024-11-01 12:44 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 12:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89206
2024-11-01 12:44 - INFO - 	 Train Loss: 0.064
2024-11-01 12:44 - INFO - 	 Val. Loss: 0.064
2024-11-01 12:44 - INFO - 	 ROC-AUC: 0.988
2024-11-01 12:44 - INFO - 	 PR-AUC: 0.892
2024-11-01 12:44 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 12:44 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 12:44 - INFO - 	 Best PR-AUC: 0.892
2024-11-01 12:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 12:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-01 12:44 - INFO - ---------------------------------------------
2024-11-01 12:52 - INFO - ---------------------------------------------
2024-11-01 12:52 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 12:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89693
2024-11-01 12:52 - INFO - 	 Train Loss: 0.058
2024-11-01 12:52 - INFO - 	 Val. Loss: 0.059
2024-11-01 12:52 - INFO - 	 ROC-AUC: 0.989
2024-11-01 12:52 - INFO - 	 PR-AUC: 0.897
2024-11-01 12:52 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 12:52 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 12:52 - INFO - 	 Best PR-AUC: 0.897
2024-11-01 12:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 12:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-01 12:52 - INFO - ---------------------------------------------
2024-11-01 13:00 - INFO - ---------------------------------------------
2024-11-01 13:00 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 13:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90397
2024-11-01 13:00 - INFO - 	 Train Loss: 0.055
2024-11-01 13:00 - INFO - 	 Val. Loss: 0.057
2024-11-01 13:00 - INFO - 	 ROC-AUC: 0.989
2024-11-01 13:00 - INFO - 	 PR-AUC: 0.904
2024-11-01 13:00 - INFO - 	 Best Val. Loss: 0.057
2024-11-01 13:00 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 13:00 - INFO - 	 Best PR-AUC: 0.904
2024-11-01 13:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 13:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-01 13:00 - INFO - ---------------------------------------------
2024-11-01 13:08 - INFO - ---------------------------------------------
2024-11-01 13:08 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 13:08 - INFO - 	 Train Loss: 0.053
2024-11-01 13:08 - INFO - 	 Val. Loss: 0.059
2024-11-01 13:08 - INFO - 	 ROC-AUC: 0.989
2024-11-01 13:08 - INFO - 	 PR-AUC: 0.902
2024-11-01 13:08 - INFO - 	 Best Val. Loss: 0.057
2024-11-01 13:08 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 13:08 - INFO - 	 Best PR-AUC: 0.904
2024-11-01 13:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 13:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-01 13:08 - INFO - ---------------------------------------------
2024-11-01 13:16 - INFO - ---------------------------------------------
2024-11-01 13:16 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-01 13:16 - INFO - 	 Train Loss: 0.050
2024-11-01 13:16 - INFO - 	 Val. Loss: 0.061
2024-11-01 13:16 - INFO - 	 ROC-AUC: 0.989
2024-11-01 13:16 - INFO - 	 PR-AUC: 0.901
2024-11-01 13:16 - INFO - 	 Best Val. Loss: 0.057
2024-11-01 13:16 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 13:16 - INFO - 	 Best PR-AUC: 0.904
2024-11-01 13:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 13:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-01 13:16 - INFO - ---------------------------------------------
2024-11-01 13:24 - INFO - ---------------------------------------------
2024-11-01 13:24 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 13:24 - INFO - 	 Train Loss: 0.048
2024-11-01 13:24 - INFO - 	 Val. Loss: 0.065
2024-11-01 13:24 - INFO - 	 ROC-AUC: 0.989
2024-11-01 13:24 - INFO - 	 PR-AUC: 0.899
2024-11-01 13:24 - INFO - 	 Best Val. Loss: 0.057
2024-11-01 13:24 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 13:24 - INFO - 	 Best PR-AUC: 0.904
2024-11-01 13:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 13:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-01 13:24 - INFO - ---------------------------------------------
2024-11-01 13:35 - INFO - Fit the preprocessing pipeline
2024-11-01 13:35 - INFO - Training using device: cuda
2024-11-01 13:35 - INFO - Creating generators
2024-11-01 13:35 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 13:35 - INFO - * Model:
2024-11-01 13:35 - INFO - * -----------
2024-11-01 13:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 13:35 - INFO - * -----------
2024-11-01 13:43 - INFO - ---------------------------------------------
2024-11-01 13:43 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 13:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84584
2024-11-01 13:43 - INFO - 	 Train Loss: 0.146
2024-11-01 13:43 - INFO - 	 Val. Loss: 0.077
2024-11-01 13:43 - INFO - 	 ROC-AUC: 0.982
2024-11-01 13:43 - INFO - 	 PR-AUC: 0.846
2024-11-01 13:43 - INFO - 	 Best Val. Loss: 0.077
2024-11-01 13:43 - INFO - 	 Best ROC-AUC: 0.982
2024-11-01 13:43 - INFO - 	 Best PR-AUC: 0.846
2024-11-01 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-01 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-11-01 13:43 - INFO - ---------------------------------------------
2024-11-01 13:51 - INFO - ---------------------------------------------
2024-11-01 13:51 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 13:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88113
2024-11-01 13:51 - INFO - 	 Train Loss: 0.079
2024-11-01 13:51 - INFO - 	 Val. Loss: 0.066
2024-11-01 13:51 - INFO - 	 ROC-AUC: 0.986
2024-11-01 13:51 - INFO - 	 PR-AUC: 0.881
2024-11-01 13:51 - INFO - 	 Best Val. Loss: 0.066
2024-11-01 13:51 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 13:51 - INFO - 	 Best PR-AUC: 0.881
2024-11-01 13:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 13:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-01 13:51 - INFO - ---------------------------------------------
2024-11-01 13:59 - INFO - ---------------------------------------------
2024-11-01 13:59 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 13:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88457
2024-11-01 13:59 - INFO - 	 Train Loss: 0.069
2024-11-01 13:59 - INFO - 	 Val. Loss: 0.062
2024-11-01 13:59 - INFO - 	 ROC-AUC: 0.988
2024-11-01 13:59 - INFO - 	 PR-AUC: 0.885
2024-11-01 13:59 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 13:59 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 13:59 - INFO - 	 Best PR-AUC: 0.885
2024-11-01 13:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 13:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-11-01 13:59 - INFO - ---------------------------------------------
2024-11-01 14:07 - INFO - ---------------------------------------------
2024-11-01 14:07 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 14:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88541
2024-11-01 14:07 - INFO - 	 Train Loss: 0.064
2024-11-01 14:07 - INFO - 	 Val. Loss: 0.062
2024-11-01 14:07 - INFO - 	 ROC-AUC: 0.987
2024-11-01 14:07 - INFO - 	 PR-AUC: 0.885
2024-11-01 14:07 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 14:07 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 14:07 - INFO - 	 Best PR-AUC: 0.885
2024-11-01 14:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 14:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-01 14:07 - INFO - ---------------------------------------------
2024-11-01 14:15 - INFO - ---------------------------------------------
2024-11-01 14:15 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 14:15 - INFO - 	 Train Loss: 0.060
2024-11-01 14:15 - INFO - 	 Val. Loss: 0.061
2024-11-01 14:15 - INFO - 	 ROC-AUC: 0.988
2024-11-01 14:15 - INFO - 	 PR-AUC: 0.883
2024-11-01 14:15 - INFO - 	 Best Val. Loss: 0.061
2024-11-01 14:15 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 14:15 - INFO - 	 Best PR-AUC: 0.885
2024-11-01 14:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 14:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-01 14:15 - INFO - ---------------------------------------------
2024-11-01 14:23 - INFO - ---------------------------------------------
2024-11-01 14:23 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-01 14:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88544
2024-11-01 14:23 - INFO - 	 Train Loss: 0.056
2024-11-01 14:23 - INFO - 	 Val. Loss: 0.060
2024-11-01 14:23 - INFO - 	 ROC-AUC: 0.988
2024-11-01 14:23 - INFO - 	 PR-AUC: 0.885
2024-11-01 14:23 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 14:23 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 14:23 - INFO - 	 Best PR-AUC: 0.885
2024-11-01 14:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 14:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 14:23 - INFO - ---------------------------------------------
2024-11-01 14:31 - INFO - ---------------------------------------------
2024-11-01 14:31 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 14:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88693
2024-11-01 14:31 - INFO - 	 Train Loss: 0.053
2024-11-01 14:31 - INFO - 	 Val. Loss: 0.060
2024-11-01 14:31 - INFO - 	 ROC-AUC: 0.988
2024-11-01 14:31 - INFO - 	 PR-AUC: 0.887
2024-11-01 14:31 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 14:31 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 14:31 - INFO - 	 Best PR-AUC: 0.887
2024-11-01 14:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 14:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-01 14:31 - INFO - ---------------------------------------------
2024-11-01 14:39 - INFO - ---------------------------------------------
2024-11-01 14:39 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-01 14:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88959
2024-11-01 14:39 - INFO - 	 Train Loss: 0.051
2024-11-01 14:39 - INFO - 	 Val. Loss: 0.060
2024-11-01 14:39 - INFO - 	 ROC-AUC: 0.988
2024-11-01 14:39 - INFO - 	 PR-AUC: 0.890
2024-11-01 14:39 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 14:39 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 14:39 - INFO - 	 Best PR-AUC: 0.890
2024-11-01 14:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 14:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-11-01 14:39 - INFO - ---------------------------------------------
2024-11-01 14:47 - INFO - ---------------------------------------------
2024-11-01 14:47 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 14:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89399
2024-11-01 14:47 - INFO - 	 Train Loss: 0.049
2024-11-01 14:47 - INFO - 	 Val. Loss: 0.061
2024-11-01 14:47 - INFO - 	 ROC-AUC: 0.988
2024-11-01 14:47 - INFO - 	 PR-AUC: 0.894
2024-11-01 14:47 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 14:47 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 14:47 - INFO - 	 Best PR-AUC: 0.894
2024-11-01 14:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 14:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.896
2024-11-01 14:47 - INFO - ---------------------------------------------
2024-11-01 14:55 - INFO - ---------------------------------------------
2024-11-01 14:55 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-01 14:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89569
2024-11-01 14:55 - INFO - 	 Train Loss: 0.047
2024-11-01 14:55 - INFO - 	 Val. Loss: 0.063
2024-11-01 14:55 - INFO - 	 ROC-AUC: 0.989
2024-11-01 14:55 - INFO - 	 PR-AUC: 0.896
2024-11-01 14:55 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 14:55 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 14:55 - INFO - 	 Best PR-AUC: 0.896
2024-11-01 14:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 14:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-01 14:55 - INFO - ---------------------------------------------
2024-11-01 14:57 - INFO - Fit the preprocessing pipeline
2024-11-01 14:57 - INFO - Training using device: cuda
2024-11-01 14:57 - INFO - Creating generators
2024-11-01 14:57 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 14:57 - INFO - * Model:
2024-11-01 14:57 - INFO - * -----------
2024-11-01 14:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 14:57 - INFO - * -----------
2024-11-01 15:06 - INFO - ---------------------------------------------
2024-11-01 15:06 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-01 15:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77233
2024-11-01 15:06 - INFO - 	 Train Loss: 0.158
2024-11-01 15:06 - INFO - 	 Val. Loss: 0.102
2024-11-01 15:06 - INFO - 	 ROC-AUC: 0.974
2024-11-01 15:06 - INFO - 	 PR-AUC: 0.772
2024-11-01 15:06 - INFO - 	 Best Val. Loss: 0.102
2024-11-01 15:06 - INFO - 	 Best ROC-AUC: 0.974
2024-11-01 15:06 - INFO - 	 Best PR-AUC: 0.772
2024-11-01 15:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-01 15:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-11-01 15:06 - INFO - ---------------------------------------------
2024-11-01 15:14 - INFO - ---------------------------------------------
2024-11-01 15:14 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-01 15:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86818
2024-11-01 15:14 - INFO - 	 Train Loss: 0.080
2024-11-01 15:14 - INFO - 	 Val. Loss: 0.070
2024-11-01 15:14 - INFO - 	 ROC-AUC: 0.985
2024-11-01 15:14 - INFO - 	 PR-AUC: 0.868
2024-11-01 15:14 - INFO - 	 Best Val. Loss: 0.070
2024-11-01 15:14 - INFO - 	 Best ROC-AUC: 0.985
2024-11-01 15:14 - INFO - 	 Best PR-AUC: 0.868
2024-11-01 15:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-01 15:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-01 15:14 - INFO - ---------------------------------------------
2024-11-01 15:22 - INFO - ---------------------------------------------
2024-11-01 15:22 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-01 15:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88019
2024-11-01 15:22 - INFO - 	 Train Loss: 0.068
2024-11-01 15:22 - INFO - 	 Val. Loss: 0.065
2024-11-01 15:22 - INFO - 	 ROC-AUC: 0.987
2024-11-01 15:22 - INFO - 	 PR-AUC: 0.880
2024-11-01 15:22 - INFO - 	 Best Val. Loss: 0.065
2024-11-01 15:22 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 15:22 - INFO - 	 Best PR-AUC: 0.880
2024-11-01 15:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 15:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-01 15:22 - INFO - ---------------------------------------------
2024-11-01 15:30 - INFO - ---------------------------------------------
2024-11-01 15:30 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 15:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88238
2024-11-01 15:30 - INFO - 	 Train Loss: 0.063
2024-11-01 15:30 - INFO - 	 Val. Loss: 0.062
2024-11-01 15:30 - INFO - 	 ROC-AUC: 0.987
2024-11-01 15:30 - INFO - 	 PR-AUC: 0.882
2024-11-01 15:30 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 15:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 15:30 - INFO - 	 Best PR-AUC: 0.882
2024-11-01 15:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 15:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.871
2024-11-01 15:30 - INFO - ---------------------------------------------
2024-11-01 15:38 - INFO - ---------------------------------------------
2024-11-01 15:38 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 15:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89292
2024-11-01 15:38 - INFO - 	 Train Loss: 0.057
2024-11-01 15:38 - INFO - 	 Val. Loss: 0.059
2024-11-01 15:38 - INFO - 	 ROC-AUC: 0.988
2024-11-01 15:38 - INFO - 	 PR-AUC: 0.893
2024-11-01 15:38 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 15:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 15:38 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 15:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 15:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 15:38 - INFO - ---------------------------------------------
2024-11-01 15:46 - INFO - ---------------------------------------------
2024-11-01 15:46 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-01 15:46 - INFO - 	 Train Loss: 0.054
2024-11-01 15:46 - INFO - 	 Val. Loss: 0.065
2024-11-01 15:46 - INFO - 	 ROC-AUC: 0.986
2024-11-01 15:46 - INFO - 	 PR-AUC: 0.883
2024-11-01 15:46 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 15:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 15:46 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 15:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 15:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 15:46 - INFO - ---------------------------------------------
2024-11-01 15:54 - INFO - ---------------------------------------------
2024-11-01 15:54 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-01 15:54 - INFO - 	 Train Loss: 0.052
2024-11-01 15:54 - INFO - 	 Val. Loss: 0.063
2024-11-01 15:54 - INFO - 	 ROC-AUC: 0.988
2024-11-01 15:54 - INFO - 	 PR-AUC: 0.889
2024-11-01 15:54 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 15:54 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 15:54 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 15:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 15:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 15:54 - INFO - ---------------------------------------------
2024-11-01 16:02 - INFO - ---------------------------------------------
2024-11-01 16:02 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 16:02 - INFO - 	 Train Loss: 0.049
2024-11-01 16:02 - INFO - 	 Val. Loss: 0.066
2024-11-01 16:02 - INFO - 	 ROC-AUC: 0.986
2024-11-01 16:02 - INFO - 	 PR-AUC: 0.885
2024-11-01 16:02 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 16:02 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 16:02 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 16:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 16:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 16:02 - INFO - ---------------------------------------------
2024-11-01 16:12 - INFO - Fit the preprocessing pipeline
2024-11-01 16:12 - INFO - Training using device: cuda
2024-11-01 16:12 - INFO - Creating generators
2024-11-01 16:12 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 16:12 - INFO - * Model:
2024-11-01 16:12 - INFO - * -----------
2024-11-01 16:12 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 16:12 - INFO - * -----------
2024-11-01 16:20 - INFO - ---------------------------------------------
2024-11-01 16:20 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 16:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7884
2024-11-01 16:20 - INFO - 	 Train Loss: 0.151
2024-11-01 16:20 - INFO - 	 Val. Loss: 0.093
2024-11-01 16:20 - INFO - 	 ROC-AUC: 0.973
2024-11-01 16:20 - INFO - 	 PR-AUC: 0.788
2024-11-01 16:20 - INFO - 	 Best Val. Loss: 0.093
2024-11-01 16:20 - INFO - 	 Best ROC-AUC: 0.973
2024-11-01 16:20 - INFO - 	 Best PR-AUC: 0.788
2024-11-01 16:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-01 16:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.752
2024-11-01 16:20 - INFO - ---------------------------------------------
2024-11-01 16:28 - INFO - ---------------------------------------------
2024-11-01 16:28 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 16:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86122
2024-11-01 16:28 - INFO - 	 Train Loss: 0.080
2024-11-01 16:28 - INFO - 	 Val. Loss: 0.069
2024-11-01 16:28 - INFO - 	 ROC-AUC: 0.984
2024-11-01 16:28 - INFO - 	 PR-AUC: 0.861
2024-11-01 16:28 - INFO - 	 Best Val. Loss: 0.069
2024-11-01 16:28 - INFO - 	 Best ROC-AUC: 0.984
2024-11-01 16:28 - INFO - 	 Best PR-AUC: 0.861
2024-11-01 16:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-01 16:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-01 16:28 - INFO - ---------------------------------------------
2024-11-01 16:36 - INFO - ---------------------------------------------
2024-11-01 16:36 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 16:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86897
2024-11-01 16:36 - INFO - 	 Train Loss: 0.069
2024-11-01 16:36 - INFO - 	 Val. Loss: 0.067
2024-11-01 16:36 - INFO - 	 ROC-AUC: 0.986
2024-11-01 16:36 - INFO - 	 PR-AUC: 0.869
2024-11-01 16:36 - INFO - 	 Best Val. Loss: 0.067
2024-11-01 16:36 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 16:36 - INFO - 	 Best PR-AUC: 0.869
2024-11-01 16:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 16:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-01 16:36 - INFO - ---------------------------------------------
2024-11-01 16:44 - INFO - ---------------------------------------------
2024-11-01 16:44 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 16:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88184
2024-11-01 16:44 - INFO - 	 Train Loss: 0.065
2024-11-01 16:44 - INFO - 	 Val. Loss: 0.064
2024-11-01 16:44 - INFO - 	 ROC-AUC: 0.987
2024-11-01 16:44 - INFO - 	 PR-AUC: 0.882
2024-11-01 16:44 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 16:44 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 16:44 - INFO - 	 Best PR-AUC: 0.882
2024-11-01 16:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 16:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.857
2024-11-01 16:44 - INFO - ---------------------------------------------
2024-11-01 16:52 - INFO - ---------------------------------------------
2024-11-01 16:52 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 16:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88601
2024-11-01 16:52 - INFO - 	 Train Loss: 0.059
2024-11-01 16:52 - INFO - 	 Val. Loss: 0.064
2024-11-01 16:52 - INFO - 	 ROC-AUC: 0.988
2024-11-01 16:52 - INFO - 	 PR-AUC: 0.886
2024-11-01 16:52 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 16:52 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 16:52 - INFO - 	 Best PR-AUC: 0.886
2024-11-01 16:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 16:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-01 16:52 - INFO - ---------------------------------------------
2024-11-01 17:00 - INFO - ---------------------------------------------
2024-11-01 17:00 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 17:00 - INFO - 	 Train Loss: 0.055
2024-11-01 17:00 - INFO - 	 Val. Loss: 0.065
2024-11-01 17:00 - INFO - 	 ROC-AUC: 0.988
2024-11-01 17:00 - INFO - 	 PR-AUC: 0.885
2024-11-01 17:00 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 17:00 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 17:00 - INFO - 	 Best PR-AUC: 0.886
2024-11-01 17:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 17:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-01 17:00 - INFO - ---------------------------------------------
2024-11-01 17:09 - INFO - ---------------------------------------------
2024-11-01 17:09 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 17:09 - INFO - 	 Train Loss: 0.051
2024-11-01 17:09 - INFO - 	 Val. Loss: 0.072
2024-11-01 17:09 - INFO - 	 ROC-AUC: 0.987
2024-11-01 17:09 - INFO - 	 PR-AUC: 0.883
2024-11-01 17:09 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 17:09 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 17:09 - INFO - 	 Best PR-AUC: 0.886
2024-11-01 17:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 17:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-01 17:09 - INFO - ---------------------------------------------
2024-11-01 17:17 - INFO - ---------------------------------------------
2024-11-01 17:17 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 17:17 - INFO - 	 Train Loss: 0.049
2024-11-01 17:17 - INFO - 	 Val. Loss: 0.076
2024-11-01 17:17 - INFO - 	 ROC-AUC: 0.987
2024-11-01 17:17 - INFO - 	 PR-AUC: 0.874
2024-11-01 17:17 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 17:17 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 17:17 - INFO - 	 Best PR-AUC: 0.886
2024-11-01 17:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 17:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-01 17:17 - INFO - ---------------------------------------------
2024-11-01 17:25 - INFO - ---------------------------------------------
2024-11-01 17:25 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 17:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89105
2024-11-01 17:25 - INFO - 	 Train Loss: 0.047
2024-11-01 17:25 - INFO - 	 Val. Loss: 0.065
2024-11-01 17:25 - INFO - 	 ROC-AUC: 0.989
2024-11-01 17:25 - INFO - 	 PR-AUC: 0.891
2024-11-01 17:25 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 17:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 17:25 - INFO - 	 Best PR-AUC: 0.891
2024-11-01 17:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 17:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-01 17:25 - INFO - ---------------------------------------------
2024-11-01 17:33 - INFO - ---------------------------------------------
2024-11-01 17:33 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 17:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89654
2024-11-01 17:33 - INFO - 	 Train Loss: 0.045
2024-11-01 17:33 - INFO - 	 Val. Loss: 0.064
2024-11-01 17:33 - INFO - 	 ROC-AUC: 0.989
2024-11-01 17:33 - INFO - 	 PR-AUC: 0.897
2024-11-01 17:33 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 17:33 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 17:33 - INFO - 	 Best PR-AUC: 0.897
2024-11-01 17:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 17:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-01 17:33 - INFO - ---------------------------------------------
2024-11-01 17:35 - INFO - Fit the preprocessing pipeline
2024-11-01 17:35 - INFO - Training using device: cuda
2024-11-01 17:35 - INFO - Creating generators
2024-11-01 17:35 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 17:35 - INFO - * Model:
2024-11-01 17:35 - INFO - * -----------
2024-11-01 17:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 17:35 - INFO - * -----------
2024-11-01 17:43 - INFO - ---------------------------------------------
2024-11-01 17:43 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 17:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84011
2024-11-01 17:43 - INFO - 	 Train Loss: 0.138
2024-11-01 17:43 - INFO - 	 Val. Loss: 0.076
2024-11-01 17:43 - INFO - 	 ROC-AUC: 0.981
2024-11-01 17:43 - INFO - 	 PR-AUC: 0.840
2024-11-01 17:43 - INFO - 	 Best Val. Loss: 0.076
2024-11-01 17:43 - INFO - 	 Best ROC-AUC: 0.981
2024-11-01 17:43 - INFO - 	 Best PR-AUC: 0.840
2024-11-01 17:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-01 17:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.821
2024-11-01 17:43 - INFO - ---------------------------------------------
2024-11-01 17:51 - INFO - ---------------------------------------------
2024-11-01 17:51 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 17:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8486
2024-11-01 17:51 - INFO - 	 Train Loss: 0.079
2024-11-01 17:51 - INFO - 	 Val. Loss: 0.078
2024-11-01 17:51 - INFO - 	 ROC-AUC: 0.982
2024-11-01 17:51 - INFO - 	 PR-AUC: 0.849
2024-11-01 17:51 - INFO - 	 Best Val. Loss: 0.076
2024-11-01 17:51 - INFO - 	 Best ROC-AUC: 0.982
2024-11-01 17:51 - INFO - 	 Best PR-AUC: 0.849
2024-11-01 17:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-01 17:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-01 17:51 - INFO - ---------------------------------------------
2024-11-01 17:59 - INFO - ---------------------------------------------
2024-11-01 17:59 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 17:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87126
2024-11-01 17:59 - INFO - 	 Train Loss: 0.069
2024-11-01 17:59 - INFO - 	 Val. Loss: 0.071
2024-11-01 17:59 - INFO - 	 ROC-AUC: 0.985
2024-11-01 17:59 - INFO - 	 PR-AUC: 0.871
2024-11-01 17:59 - INFO - 	 Best Val. Loss: 0.071
2024-11-01 17:59 - INFO - 	 Best ROC-AUC: 0.985
2024-11-01 17:59 - INFO - 	 Best PR-AUC: 0.871
2024-11-01 17:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-01 17:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.847
2024-11-01 17:59 - INFO - ---------------------------------------------
2024-11-01 18:07 - INFO - ---------------------------------------------
2024-11-01 18:07 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 18:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88265
2024-11-01 18:07 - INFO - 	 Train Loss: 0.063
2024-11-01 18:07 - INFO - 	 Val. Loss: 0.064
2024-11-01 18:07 - INFO - 	 ROC-AUC: 0.986
2024-11-01 18:07 - INFO - 	 PR-AUC: 0.883
2024-11-01 18:07 - INFO - 	 Best Val. Loss: 0.064
2024-11-01 18:07 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 18:07 - INFO - 	 Best PR-AUC: 0.883
2024-11-01 18:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 18:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.874
2024-11-01 18:07 - INFO - ---------------------------------------------
2024-11-01 18:15 - INFO - ---------------------------------------------
2024-11-01 18:15 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-01 18:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89171
2024-11-01 18:15 - INFO - 	 Train Loss: 0.058
2024-11-01 18:15 - INFO - 	 Val. Loss: 0.061
2024-11-01 18:15 - INFO - 	 ROC-AUC: 0.987
2024-11-01 18:15 - INFO - 	 PR-AUC: 0.892
2024-11-01 18:15 - INFO - 	 Best Val. Loss: 0.061
2024-11-01 18:15 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 18:15 - INFO - 	 Best PR-AUC: 0.892
2024-11-01 18:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 18:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-01 18:15 - INFO - ---------------------------------------------
2024-11-01 18:23 - INFO - ---------------------------------------------
2024-11-01 18:23 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 18:23 - INFO - 	 Train Loss: 0.056
2024-11-01 18:23 - INFO - 	 Val. Loss: 0.066
2024-11-01 18:23 - INFO - 	 ROC-AUC: 0.986
2024-11-01 18:23 - INFO - 	 PR-AUC: 0.878
2024-11-01 18:23 - INFO - 	 Best Val. Loss: 0.061
2024-11-01 18:23 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 18:23 - INFO - 	 Best PR-AUC: 0.892
2024-11-01 18:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 18:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-01 18:23 - INFO - ---------------------------------------------
2024-11-01 18:31 - INFO - ---------------------------------------------
2024-11-01 18:31 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 18:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89271
2024-11-01 18:31 - INFO - 	 Train Loss: 0.053
2024-11-01 18:31 - INFO - 	 Val. Loss: 0.060
2024-11-01 18:31 - INFO - 	 ROC-AUC: 0.988
2024-11-01 18:31 - INFO - 	 PR-AUC: 0.893
2024-11-01 18:31 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 18:31 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 18:31 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 18:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 18:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-11-01 18:31 - INFO - ---------------------------------------------
2024-11-01 18:39 - INFO - ---------------------------------------------
2024-11-01 18:39 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 18:39 - INFO - 	 Train Loss: 0.050
2024-11-01 18:39 - INFO - 	 Val. Loss: 0.064
2024-11-01 18:39 - INFO - 	 ROC-AUC: 0.987
2024-11-01 18:39 - INFO - 	 PR-AUC: 0.892
2024-11-01 18:39 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 18:39 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 18:39 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 18:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 18:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-11-01 18:39 - INFO - ---------------------------------------------
2024-11-01 18:47 - INFO - ---------------------------------------------
2024-11-01 18:47 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 18:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90255
2024-11-01 18:47 - INFO - 	 Train Loss: 0.047
2024-11-01 18:47 - INFO - 	 Val. Loss: 0.059
2024-11-01 18:47 - INFO - 	 ROC-AUC: 0.988
2024-11-01 18:47 - INFO - 	 PR-AUC: 0.903
2024-11-01 18:47 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 18:47 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 18:47 - INFO - 	 Best PR-AUC: 0.903
2024-11-01 18:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 18:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-01 18:47 - INFO - ---------------------------------------------
2024-11-01 18:55 - INFO - ---------------------------------------------
2024-11-01 18:55 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 18:55 - INFO - 	 Train Loss: 0.045
2024-11-01 18:55 - INFO - 	 Val. Loss: 0.061
2024-11-01 18:55 - INFO - 	 ROC-AUC: 0.987
2024-11-01 18:55 - INFO - 	 PR-AUC: 0.900
2024-11-01 18:55 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 18:55 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 18:55 - INFO - 	 Best PR-AUC: 0.903
2024-11-01 18:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 18:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-01 18:55 - INFO - ---------------------------------------------
2024-11-01 18:58 - INFO - Fit the preprocessing pipeline
2024-11-01 18:58 - INFO - Training using device: cuda
2024-11-01 18:58 - INFO - Creating generators
2024-11-01 18:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 18:58 - INFO - * Model:
2024-11-01 18:58 - INFO - * -----------
2024-11-01 18:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 18:58 - INFO - * -----------
2024-11-01 19:06 - INFO - ---------------------------------------------
2024-11-01 19:06 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 19:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78255
2024-11-01 19:06 - INFO - 	 Train Loss: 0.148
2024-11-01 19:06 - INFO - 	 Val. Loss: 0.095
2024-11-01 19:06 - INFO - 	 ROC-AUC: 0.976
2024-11-01 19:06 - INFO - 	 PR-AUC: 0.783
2024-11-01 19:06 - INFO - 	 Best Val. Loss: 0.095
2024-11-01 19:06 - INFO - 	 Best ROC-AUC: 0.976
2024-11-01 19:06 - INFO - 	 Best PR-AUC: 0.783
2024-11-01 19:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-01 19:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-11-01 19:06 - INFO - ---------------------------------------------
2024-11-01 19:14 - INFO - ---------------------------------------------
2024-11-01 19:14 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 19:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86696
2024-11-01 19:14 - INFO - 	 Train Loss: 0.080
2024-11-01 19:14 - INFO - 	 Val. Loss: 0.072
2024-11-01 19:14 - INFO - 	 ROC-AUC: 0.985
2024-11-01 19:14 - INFO - 	 PR-AUC: 0.867
2024-11-01 19:14 - INFO - 	 Best Val. Loss: 0.072
2024-11-01 19:14 - INFO - 	 Best ROC-AUC: 0.985
2024-11-01 19:14 - INFO - 	 Best PR-AUC: 0.867
2024-11-01 19:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 19:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-01 19:14 - INFO - ---------------------------------------------
2024-11-01 19:22 - INFO - ---------------------------------------------
2024-11-01 19:22 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-01 19:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88719
2024-11-01 19:22 - INFO - 	 Train Loss: 0.069
2024-11-01 19:22 - INFO - 	 Val. Loss: 0.062
2024-11-01 19:22 - INFO - 	 ROC-AUC: 0.987
2024-11-01 19:22 - INFO - 	 PR-AUC: 0.887
2024-11-01 19:22 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 19:22 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 19:22 - INFO - 	 Best PR-AUC: 0.887
2024-11-01 19:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 19:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-11-01 19:22 - INFO - ---------------------------------------------
2024-11-01 19:30 - INFO - ---------------------------------------------
2024-11-01 19:30 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 19:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89285
2024-11-01 19:30 - INFO - 	 Train Loss: 0.063
2024-11-01 19:30 - INFO - 	 Val. Loss: 0.059
2024-11-01 19:30 - INFO - 	 ROC-AUC: 0.988
2024-11-01 19:30 - INFO - 	 PR-AUC: 0.893
2024-11-01 19:30 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 19:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 19:30 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 19:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 19:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-01 19:30 - INFO - ---------------------------------------------
2024-11-01 19:38 - INFO - ---------------------------------------------
2024-11-01 19:38 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-01 19:38 - INFO - 	 Train Loss: 0.058
2024-11-01 19:38 - INFO - 	 Val. Loss: 0.059
2024-11-01 19:38 - INFO - 	 ROC-AUC: 0.988
2024-11-01 19:38 - INFO - 	 PR-AUC: 0.892
2024-11-01 19:38 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 19:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 19:38 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 19:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 19:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-01 19:38 - INFO - ---------------------------------------------
2024-11-01 19:46 - INFO - ---------------------------------------------
2024-11-01 19:46 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 19:46 - INFO - 	 Train Loss: 0.055
2024-11-01 19:46 - INFO - 	 Val. Loss: 0.061
2024-11-01 19:46 - INFO - 	 ROC-AUC: 0.988
2024-11-01 19:46 - INFO - 	 PR-AUC: 0.890
2024-11-01 19:46 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 19:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 19:46 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 19:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 19:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-01 19:46 - INFO - ---------------------------------------------
2024-11-01 19:54 - INFO - ---------------------------------------------
2024-11-01 19:54 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 19:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89334
2024-11-01 19:54 - INFO - 	 Train Loss: 0.053
2024-11-01 19:54 - INFO - 	 Val. Loss: 0.060
2024-11-01 19:54 - INFO - 	 ROC-AUC: 0.988
2024-11-01 19:54 - INFO - 	 PR-AUC: 0.893
2024-11-01 19:54 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 19:54 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 19:54 - INFO - 	 Best PR-AUC: 0.893
2024-11-01 19:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 19:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.883
2024-11-01 19:54 - INFO - ---------------------------------------------
2024-11-01 20:02 - INFO - ---------------------------------------------
2024-11-01 20:02 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-01 20:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90434
2024-11-01 20:02 - INFO - 	 Train Loss: 0.051
2024-11-01 20:02 - INFO - 	 Val. Loss: 0.056
2024-11-01 20:02 - INFO - 	 ROC-AUC: 0.988
2024-11-01 20:02 - INFO - 	 PR-AUC: 0.904
2024-11-01 20:02 - INFO - 	 Best Val. Loss: 0.056
2024-11-01 20:02 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 20:02 - INFO - 	 Best PR-AUC: 0.904
2024-11-01 20:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 20:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-01 20:02 - INFO - ---------------------------------------------
2024-11-01 20:10 - INFO - ---------------------------------------------
2024-11-01 20:10 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-01 20:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90566
2024-11-01 20:10 - INFO - 	 Train Loss: 0.049
2024-11-01 20:10 - INFO - 	 Val. Loss: 0.058
2024-11-01 20:10 - INFO - 	 ROC-AUC: 0.988
2024-11-01 20:10 - INFO - 	 PR-AUC: 0.906
2024-11-01 20:10 - INFO - 	 Best Val. Loss: 0.056
2024-11-01 20:10 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 20:10 - INFO - 	 Best PR-AUC: 0.906
2024-11-01 20:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 20:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-01 20:10 - INFO - ---------------------------------------------
2024-11-01 20:18 - INFO - ---------------------------------------------
2024-11-01 20:18 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-01 20:18 - INFO - 	 Train Loss: 0.046
2024-11-01 20:18 - INFO - 	 Val. Loss: 0.063
2024-11-01 20:18 - INFO - 	 ROC-AUC: 0.987
2024-11-01 20:18 - INFO - 	 PR-AUC: 0.895
2024-11-01 20:18 - INFO - 	 Best Val. Loss: 0.056
2024-11-01 20:18 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 20:18 - INFO - 	 Best PR-AUC: 0.906
2024-11-01 20:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 20:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-01 20:18 - INFO - ---------------------------------------------
2024-11-01 20:21 - INFO - Fit the preprocessing pipeline
2024-11-01 20:21 - INFO - Training using device: cuda
2024-11-01 20:21 - INFO - Creating generators
2024-11-01 20:21 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 20:21 - INFO - * Model:
2024-11-01 20:21 - INFO - * -----------
2024-11-01 20:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 20:21 - INFO - * -----------
2024-11-01 20:29 - INFO - ---------------------------------------------
2024-11-01 20:29 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-01 20:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82328
2024-11-01 20:29 - INFO - 	 Train Loss: 0.149
2024-11-01 20:29 - INFO - 	 Val. Loss: 0.081
2024-11-01 20:29 - INFO - 	 ROC-AUC: 0.980
2024-11-01 20:29 - INFO - 	 PR-AUC: 0.823
2024-11-01 20:29 - INFO - 	 Best Val. Loss: 0.081
2024-11-01 20:29 - INFO - 	 Best ROC-AUC: 0.980
2024-11-01 20:29 - INFO - 	 Best PR-AUC: 0.823
2024-11-01 20:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-01 20:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-01 20:29 - INFO - ---------------------------------------------
2024-11-01 20:37 - INFO - ---------------------------------------------
2024-11-01 20:37 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 20:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87121
2024-11-01 20:37 - INFO - 	 Train Loss: 0.079
2024-11-01 20:37 - INFO - 	 Val. Loss: 0.068
2024-11-01 20:37 - INFO - 	 ROC-AUC: 0.986
2024-11-01 20:37 - INFO - 	 PR-AUC: 0.871
2024-11-01 20:37 - INFO - 	 Best Val. Loss: 0.068
2024-11-01 20:37 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 20:37 - INFO - 	 Best PR-AUC: 0.871
2024-11-01 20:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 20:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-01 20:37 - INFO - ---------------------------------------------
2024-11-01 20:45 - INFO - ---------------------------------------------
2024-11-01 20:45 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 20:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87131
2024-11-01 20:45 - INFO - 	 Train Loss: 0.068
2024-11-01 20:45 - INFO - 	 Val. Loss: 0.066
2024-11-01 20:45 - INFO - 	 ROC-AUC: 0.986
2024-11-01 20:45 - INFO - 	 PR-AUC: 0.871
2024-11-01 20:45 - INFO - 	 Best Val. Loss: 0.066
2024-11-01 20:45 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 20:45 - INFO - 	 Best PR-AUC: 0.871
2024-11-01 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-01 20:45 - INFO - ---------------------------------------------
2024-11-01 20:53 - INFO - ---------------------------------------------
2024-11-01 20:53 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 20:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8728
2024-11-01 20:53 - INFO - 	 Train Loss: 0.063
2024-11-01 20:53 - INFO - 	 Val. Loss: 0.065
2024-11-01 20:53 - INFO - 	 ROC-AUC: 0.986
2024-11-01 20:53 - INFO - 	 PR-AUC: 0.873
2024-11-01 20:53 - INFO - 	 Best Val. Loss: 0.065
2024-11-01 20:53 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 20:53 - INFO - 	 Best PR-AUC: 0.873
2024-11-01 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-01 20:53 - INFO - ---------------------------------------------
2024-11-01 21:01 - INFO - ---------------------------------------------
2024-11-01 21:01 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-01 21:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87486
2024-11-01 21:01 - INFO - 	 Train Loss: 0.060
2024-11-01 21:01 - INFO - 	 Val. Loss: 0.065
2024-11-01 21:01 - INFO - 	 ROC-AUC: 0.987
2024-11-01 21:01 - INFO - 	 PR-AUC: 0.875
2024-11-01 21:01 - INFO - 	 Best Val. Loss: 0.065
2024-11-01 21:01 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 21:01 - INFO - 	 Best PR-AUC: 0.875
2024-11-01 21:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 21:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-11-01 21:01 - INFO - ---------------------------------------------
2024-11-01 21:09 - INFO - ---------------------------------------------
2024-11-01 21:09 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-01 21:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89422
2024-11-01 21:09 - INFO - 	 Train Loss: 0.056
2024-11-01 21:09 - INFO - 	 Val. Loss: 0.062
2024-11-01 21:09 - INFO - 	 ROC-AUC: 0.988
2024-11-01 21:09 - INFO - 	 PR-AUC: 0.894
2024-11-01 21:09 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 21:09 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 21:09 - INFO - 	 Best PR-AUC: 0.894
2024-11-01 21:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 21:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 21:09 - INFO - ---------------------------------------------
2024-11-01 21:17 - INFO - ---------------------------------------------
2024-11-01 21:17 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 21:17 - INFO - 	 Train Loss: 0.053
2024-11-01 21:17 - INFO - 	 Val. Loss: 0.060
2024-11-01 21:17 - INFO - 	 ROC-AUC: 0.988
2024-11-01 21:17 - INFO - 	 PR-AUC: 0.892
2024-11-01 21:17 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 21:17 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 21:17 - INFO - 	 Best PR-AUC: 0.894
2024-11-01 21:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 21:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 21:17 - INFO - ---------------------------------------------
2024-11-01 21:25 - INFO - ---------------------------------------------
2024-11-01 21:25 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-01 21:25 - INFO - 	 Train Loss: 0.051
2024-11-01 21:25 - INFO - 	 Val. Loss: 0.059
2024-11-01 21:25 - INFO - 	 ROC-AUC: 0.989
2024-11-01 21:25 - INFO - 	 PR-AUC: 0.893
2024-11-01 21:25 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 21:25 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 21:25 - INFO - 	 Best PR-AUC: 0.894
2024-11-01 21:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 21:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 21:25 - INFO - ---------------------------------------------
2024-11-01 21:33 - INFO - ---------------------------------------------
2024-11-01 21:33 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-01 21:33 - INFO - 	 Train Loss: 0.049
2024-11-01 21:33 - INFO - 	 Val. Loss: 0.066
2024-11-01 21:33 - INFO - 	 ROC-AUC: 0.988
2024-11-01 21:33 - INFO - 	 PR-AUC: 0.884
2024-11-01 21:33 - INFO - 	 Best Val. Loss: 0.059
2024-11-01 21:33 - INFO - 	 Best ROC-AUC: 0.989
2024-11-01 21:33 - INFO - 	 Best PR-AUC: 0.894
2024-11-01 21:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 21:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-01 21:33 - INFO - ---------------------------------------------
2024-11-01 21:43 - INFO - Fit the preprocessing pipeline
2024-11-01 21:43 - INFO - Training using device: cuda
2024-11-01 21:43 - INFO - Creating generators
2024-11-01 21:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 21:43 - INFO - * Model:
2024-11-01 21:43 - INFO - * -----------
2024-11-01 21:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 21:43 - INFO - * -----------
2024-11-01 21:51 - INFO - ---------------------------------------------
2024-11-01 21:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-01 21:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81705
2024-11-01 21:51 - INFO - 	 Train Loss: 0.146
2024-11-01 21:51 - INFO - 	 Val. Loss: 0.083
2024-11-01 21:51 - INFO - 	 ROC-AUC: 0.980
2024-11-01 21:51 - INFO - 	 PR-AUC: 0.817
2024-11-01 21:51 - INFO - 	 Best Val. Loss: 0.083
2024-11-01 21:51 - INFO - 	 Best ROC-AUC: 0.980
2024-11-01 21:51 - INFO - 	 Best PR-AUC: 0.817
2024-11-01 21:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-01 21:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.803
2024-11-01 21:51 - INFO - ---------------------------------------------
2024-11-01 22:00 - INFO - ---------------------------------------------
2024-11-01 22:00 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-01 22:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86805
2024-11-01 22:00 - INFO - 	 Train Loss: 0.080
2024-11-01 22:00 - INFO - 	 Val. Loss: 0.068
2024-11-01 22:00 - INFO - 	 ROC-AUC: 0.985
2024-11-01 22:00 - INFO - 	 PR-AUC: 0.868
2024-11-01 22:00 - INFO - 	 Best Val. Loss: 0.068
2024-11-01 22:00 - INFO - 	 Best ROC-AUC: 0.985
2024-11-01 22:00 - INFO - 	 Best PR-AUC: 0.868
2024-11-01 22:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 22:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-01 22:00 - INFO - ---------------------------------------------
2024-11-01 22:08 - INFO - ---------------------------------------------
2024-11-01 22:08 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-01 22:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87231
2024-11-01 22:08 - INFO - 	 Train Loss: 0.070
2024-11-01 22:08 - INFO - 	 Val. Loss: 0.067
2024-11-01 22:08 - INFO - 	 ROC-AUC: 0.986
2024-11-01 22:08 - INFO - 	 PR-AUC: 0.872
2024-11-01 22:08 - INFO - 	 Best Val. Loss: 0.067
2024-11-01 22:08 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 22:08 - INFO - 	 Best PR-AUC: 0.872
2024-11-01 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-01 22:08 - INFO - ---------------------------------------------
2024-11-01 22:16 - INFO - ---------------------------------------------
2024-11-01 22:16 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 22:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87391
2024-11-01 22:16 - INFO - 	 Train Loss: 0.064
2024-11-01 22:16 - INFO - 	 Val. Loss: 0.065
2024-11-01 22:16 - INFO - 	 ROC-AUC: 0.986
2024-11-01 22:16 - INFO - 	 PR-AUC: 0.874
2024-11-01 22:16 - INFO - 	 Best Val. Loss: 0.065
2024-11-01 22:16 - INFO - 	 Best ROC-AUC: 0.986
2024-11-01 22:16 - INFO - 	 Best PR-AUC: 0.874
2024-11-01 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-01 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-01 22:16 - INFO - ---------------------------------------------
2024-11-01 22:24 - INFO - ---------------------------------------------
2024-11-01 22:24 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-01 22:24 - INFO - 	 Train Loss: 0.060
2024-11-01 22:24 - INFO - 	 Val. Loss: 0.063
2024-11-01 22:24 - INFO - 	 ROC-AUC: 0.987
2024-11-01 22:24 - INFO - 	 PR-AUC: 0.870
2024-11-01 22:24 - INFO - 	 Best Val. Loss: 0.063
2024-11-01 22:24 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 22:24 - INFO - 	 Best PR-AUC: 0.874
2024-11-01 22:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 22:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-11-01 22:24 - INFO - ---------------------------------------------
2024-11-01 22:32 - INFO - ---------------------------------------------
2024-11-01 22:32 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 22:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87653
2024-11-01 22:32 - INFO - 	 Train Loss: 0.058
2024-11-01 22:32 - INFO - 	 Val. Loss: 0.063
2024-11-01 22:32 - INFO - 	 ROC-AUC: 0.987
2024-11-01 22:32 - INFO - 	 PR-AUC: 0.877
2024-11-01 22:32 - INFO - 	 Best Val. Loss: 0.063
2024-11-01 22:32 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 22:32 - INFO - 	 Best PR-AUC: 0.877
2024-11-01 22:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 22:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-01 22:32 - INFO - ---------------------------------------------
2024-11-01 22:40 - INFO - ---------------------------------------------
2024-11-01 22:40 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-01 22:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87966
2024-11-01 22:40 - INFO - 	 Train Loss: 0.054
2024-11-01 22:40 - INFO - 	 Val. Loss: 0.063
2024-11-01 22:40 - INFO - 	 ROC-AUC: 0.987
2024-11-01 22:40 - INFO - 	 PR-AUC: 0.880
2024-11-01 22:40 - INFO - 	 Best Val. Loss: 0.063
2024-11-01 22:40 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 22:40 - INFO - 	 Best PR-AUC: 0.880
2024-11-01 22:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-01 22:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-01 22:40 - INFO - ---------------------------------------------
2024-11-01 22:48 - INFO - ---------------------------------------------
2024-11-01 22:48 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-01 22:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89159
2024-11-01 22:48 - INFO - 	 Train Loss: 0.052
2024-11-01 22:48 - INFO - 	 Val. Loss: 0.062
2024-11-01 22:48 - INFO - 	 ROC-AUC: 0.988
2024-11-01 22:48 - INFO - 	 PR-AUC: 0.892
2024-11-01 22:48 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 22:48 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 22:48 - INFO - 	 Best PR-AUC: 0.892
2024-11-01 22:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-01 22:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-01 22:48 - INFO - ---------------------------------------------
2024-11-01 22:56 - INFO - ---------------------------------------------
2024-11-01 22:56 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-01 22:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89385
2024-11-01 22:56 - INFO - 	 Train Loss: 0.049
2024-11-01 22:56 - INFO - 	 Val. Loss: 0.061
2024-11-01 22:56 - INFO - 	 ROC-AUC: 0.988
2024-11-01 22:56 - INFO - 	 PR-AUC: 0.894
2024-11-01 22:56 - INFO - 	 Best Val. Loss: 0.061
2024-11-01 22:56 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 22:56 - INFO - 	 Best PR-AUC: 0.894
2024-11-01 22:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-01 22:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-01 22:56 - INFO - ---------------------------------------------
2024-11-01 23:04 - INFO - ---------------------------------------------
2024-11-01 23:04 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-01 23:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89812
2024-11-01 23:04 - INFO - 	 Train Loss: 0.047
2024-11-01 23:04 - INFO - 	 Val. Loss: 0.060
2024-11-01 23:04 - INFO - 	 ROC-AUC: 0.988
2024-11-01 23:04 - INFO - 	 PR-AUC: 0.898
2024-11-01 23:04 - INFO - 	 Best Val. Loss: 0.060
2024-11-01 23:04 - INFO - 	 Best ROC-AUC: 0.988
2024-11-01 23:04 - INFO - 	 Best PR-AUC: 0.898
2024-11-01 23:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-01 23:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-01 23:04 - INFO - ---------------------------------------------
2024-11-01 23:06 - INFO - Fit the preprocessing pipeline
2024-11-01 23:06 - INFO - Training using device: cuda
2024-11-01 23:06 - INFO - Creating generators
2024-11-01 23:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-01 23:06 - INFO - * Model:
2024-11-01 23:06 - INFO - * -----------
2024-11-01 23:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-01 23:06 - INFO - * -----------
2024-11-01 23:14 - INFO - ---------------------------------------------
2024-11-01 23:14 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-01 23:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82318
2024-11-01 23:14 - INFO - 	 Train Loss: 0.153
2024-11-01 23:14 - INFO - 	 Val. Loss: 0.088
2024-11-01 23:14 - INFO - 	 ROC-AUC: 0.978
2024-11-01 23:14 - INFO - 	 PR-AUC: 0.823
2024-11-01 23:14 - INFO - 	 Best Val. Loss: 0.088
2024-11-01 23:14 - INFO - 	 Best ROC-AUC: 0.978
2024-11-01 23:14 - INFO - 	 Best PR-AUC: 0.823
2024-11-01 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.974
2024-11-01 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-11-01 23:14 - INFO - ---------------------------------------------
2024-11-01 23:22 - INFO - ---------------------------------------------
2024-11-01 23:22 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-01 23:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87053
2024-11-01 23:22 - INFO - 	 Train Loss: 0.080
2024-11-01 23:22 - INFO - 	 Val. Loss: 0.068
2024-11-01 23:22 - INFO - 	 ROC-AUC: 0.984
2024-11-01 23:22 - INFO - 	 PR-AUC: 0.871
2024-11-01 23:22 - INFO - 	 Best Val. Loss: 0.068
2024-11-01 23:22 - INFO - 	 Best ROC-AUC: 0.984
2024-11-01 23:22 - INFO - 	 Best PR-AUC: 0.871
2024-11-01 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-01 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-01 23:22 - INFO - ---------------------------------------------
2024-11-01 23:30 - INFO - ---------------------------------------------
2024-11-01 23:30 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-01 23:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87173
2024-11-01 23:30 - INFO - 	 Train Loss: 0.069
2024-11-01 23:30 - INFO - 	 Val. Loss: 0.067
2024-11-01 23:30 - INFO - 	 ROC-AUC: 0.985
2024-11-01 23:30 - INFO - 	 PR-AUC: 0.872
2024-11-01 23:30 - INFO - 	 Best Val. Loss: 0.067
2024-11-01 23:30 - INFO - 	 Best ROC-AUC: 0.985
2024-11-01 23:30 - INFO - 	 Best PR-AUC: 0.872
2024-11-01 23:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-01 23:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-01 23:30 - INFO - ---------------------------------------------
2024-11-01 23:38 - INFO - ---------------------------------------------
2024-11-01 23:38 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-01 23:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89113
2024-11-01 23:38 - INFO - 	 Train Loss: 0.063
2024-11-01 23:38 - INFO - 	 Val. Loss: 0.062
2024-11-01 23:38 - INFO - 	 ROC-AUC: 0.987
2024-11-01 23:38 - INFO - 	 PR-AUC: 0.891
2024-11-01 23:38 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 23:38 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 23:38 - INFO - 	 Best PR-AUC: 0.891
2024-11-01 23:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-01 23:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-01 23:38 - INFO - ---------------------------------------------
2024-11-01 23:46 - INFO - ---------------------------------------------
2024-11-01 23:46 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-01 23:46 - INFO - 	 Train Loss: 0.059
2024-11-01 23:46 - INFO - 	 Val. Loss: 0.062
2024-11-01 23:46 - INFO - 	 ROC-AUC: 0.986
2024-11-01 23:46 - INFO - 	 PR-AUC: 0.889
2024-11-01 23:46 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 23:46 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 23:46 - INFO - 	 Best PR-AUC: 0.891
2024-11-01 23:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-01 23:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-01 23:46 - INFO - ---------------------------------------------
2024-11-01 23:54 - INFO - ---------------------------------------------
2024-11-01 23:54 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-01 23:54 - INFO - 	 Train Loss: 0.056
2024-11-01 23:54 - INFO - 	 Val. Loss: 0.063
2024-11-01 23:54 - INFO - 	 ROC-AUC: 0.987
2024-11-01 23:54 - INFO - 	 PR-AUC: 0.889
2024-11-01 23:54 - INFO - 	 Best Val. Loss: 0.062
2024-11-01 23:54 - INFO - 	 Best ROC-AUC: 0.987
2024-11-01 23:54 - INFO - 	 Best PR-AUC: 0.891
2024-11-01 23:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-01 23:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-01 23:54 - INFO - ---------------------------------------------
2024-11-02 00:03 - INFO - ---------------------------------------------
2024-11-02 00:03 - INFO - Epoch: 07 | Time: 8m 9s
2024-11-02 00:03 - INFO - 	 Train Loss: 0.053
2024-11-02 00:03 - INFO - 	 Val. Loss: 0.067
2024-11-02 00:03 - INFO - 	 ROC-AUC: 0.986
2024-11-02 00:03 - INFO - 	 PR-AUC: 0.881
2024-11-02 00:03 - INFO - 	 Best Val. Loss: 0.062
2024-11-02 00:03 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 00:03 - INFO - 	 Best PR-AUC: 0.891
2024-11-02 00:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 00:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-11-02 00:03 - INFO - ---------------------------------------------
2024-11-02 00:13 - INFO - Fit the preprocessing pipeline
2024-11-02 00:13 - INFO - Training using device: cuda
2024-11-02 00:13 - INFO - Creating generators
2024-11-02 00:13 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 00:13 - INFO - * Model:
2024-11-02 00:13 - INFO - * -----------
2024-11-02 00:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 00:13 - INFO - * -----------
2024-11-02 00:21 - INFO - ---------------------------------------------
2024-11-02 00:21 - INFO - Epoch: 01 | Time: 8m 7s
2024-11-02 00:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77535
2024-11-02 00:21 - INFO - 	 Train Loss: 0.166
2024-11-02 00:21 - INFO - 	 Val. Loss: 0.109
2024-11-02 00:21 - INFO - 	 ROC-AUC: 0.963
2024-11-02 00:21 - INFO - 	 PR-AUC: 0.775
2024-11-02 00:21 - INFO - 	 Best Val. Loss: 0.109
2024-11-02 00:21 - INFO - 	 Best ROC-AUC: 0.963
2024-11-02 00:21 - INFO - 	 Best PR-AUC: 0.775
2024-11-02 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.956
2024-11-02 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.761
2024-11-02 00:21 - INFO - ---------------------------------------------
2024-11-02 00:30 - INFO - ---------------------------------------------
2024-11-02 00:30 - INFO - Epoch: 02 | Time: 8m 8s
2024-11-02 00:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86802
2024-11-02 00:30 - INFO - 	 Train Loss: 0.084
2024-11-02 00:30 - INFO - 	 Val. Loss: 0.066
2024-11-02 00:30 - INFO - 	 ROC-AUC: 0.986
2024-11-02 00:30 - INFO - 	 PR-AUC: 0.868
2024-11-02 00:30 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 00:30 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 00:30 - INFO - 	 Best PR-AUC: 0.868
2024-11-02 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-02 00:30 - INFO - ---------------------------------------------
2024-11-02 00:38 - INFO - ---------------------------------------------
2024-11-02 00:38 - INFO - Epoch: 03 | Time: 8m 7s
2024-11-02 00:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87641
2024-11-02 00:38 - INFO - 	 Train Loss: 0.069
2024-11-02 00:38 - INFO - 	 Val. Loss: 0.065
2024-11-02 00:38 - INFO - 	 ROC-AUC: 0.986
2024-11-02 00:38 - INFO - 	 PR-AUC: 0.876
2024-11-02 00:38 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 00:38 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 00:38 - INFO - 	 Best PR-AUC: 0.876
2024-11-02 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-02 00:38 - INFO - ---------------------------------------------
2024-11-02 00:46 - INFO - ---------------------------------------------
2024-11-02 00:46 - INFO - Epoch: 04 | Time: 8m 7s
2024-11-02 00:46 - INFO - 	 Train Loss: 0.063
2024-11-02 00:46 - INFO - 	 Val. Loss: 0.067
2024-11-02 00:46 - INFO - 	 ROC-AUC: 0.985
2024-11-02 00:46 - INFO - 	 PR-AUC: 0.872
2024-11-02 00:46 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 00:46 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 00:46 - INFO - 	 Best PR-AUC: 0.876
2024-11-02 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-02 00:46 - INFO - ---------------------------------------------
2024-11-02 00:54 - INFO - ---------------------------------------------
2024-11-02 00:54 - INFO - Epoch: 05 | Time: 8m 6s
2024-11-02 00:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87972
2024-11-02 00:54 - INFO - 	 Train Loss: 0.059
2024-11-02 00:54 - INFO - 	 Val. Loss: 0.063
2024-11-02 00:54 - INFO - 	 ROC-AUC: 0.987
2024-11-02 00:54 - INFO - 	 PR-AUC: 0.880
2024-11-02 00:54 - INFO - 	 Best Val. Loss: 0.063
2024-11-02 00:54 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 00:54 - INFO - 	 Best PR-AUC: 0.880
2024-11-02 00:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 00:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-11-02 00:54 - INFO - ---------------------------------------------
2024-11-02 01:02 - INFO - ---------------------------------------------
2024-11-02 01:02 - INFO - Epoch: 06 | Time: 8m 6s
2024-11-02 01:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88821
2024-11-02 01:02 - INFO - 	 Train Loss: 0.056
2024-11-02 01:02 - INFO - 	 Val. Loss: 0.059
2024-11-02 01:02 - INFO - 	 ROC-AUC: 0.988
2024-11-02 01:02 - INFO - 	 PR-AUC: 0.888
2024-11-02 01:02 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 01:02 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 01:02 - INFO - 	 Best PR-AUC: 0.888
2024-11-02 01:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 01:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.887
2024-11-02 01:02 - INFO - ---------------------------------------------
2024-11-02 01:10 - INFO - ---------------------------------------------
2024-11-02 01:10 - INFO - Epoch: 07 | Time: 8m 6s
2024-11-02 01:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89329
2024-11-02 01:10 - INFO - 	 Train Loss: 0.053
2024-11-02 01:10 - INFO - 	 Val. Loss: 0.059
2024-11-02 01:10 - INFO - 	 ROC-AUC: 0.988
2024-11-02 01:10 - INFO - 	 PR-AUC: 0.893
2024-11-02 01:10 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 01:10 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 01:10 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-02 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-02 01:10 - INFO - ---------------------------------------------
2024-11-02 01:18 - INFO - ---------------------------------------------
2024-11-02 01:18 - INFO - Epoch: 08 | Time: 8m 5s
2024-11-02 01:18 - INFO - 	 Train Loss: 0.050
2024-11-02 01:18 - INFO - 	 Val. Loss: 0.064
2024-11-02 01:18 - INFO - 	 ROC-AUC: 0.987
2024-11-02 01:18 - INFO - 	 PR-AUC: 0.882
2024-11-02 01:18 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 01:18 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 01:18 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 01:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-02 01:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.892
2024-11-02 01:18 - INFO - ---------------------------------------------
2024-11-02 01:26 - INFO - ---------------------------------------------
2024-11-02 01:26 - INFO - Epoch: 09 | Time: 8m 6s
2024-11-02 01:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89335
2024-11-02 01:26 - INFO - 	 Train Loss: 0.049
2024-11-02 01:26 - INFO - 	 Val. Loss: 0.059
2024-11-02 01:26 - INFO - 	 ROC-AUC: 0.988
2024-11-02 01:26 - INFO - 	 PR-AUC: 0.893
2024-11-02 01:26 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 01:26 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 01:26 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 01:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-02 01:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-02 01:26 - INFO - ---------------------------------------------
2024-11-02 01:35 - INFO - ---------------------------------------------
2024-11-02 01:35 - INFO - Epoch: 10 | Time: 8m 6s
2024-11-02 01:35 - INFO - 	 Train Loss: 0.046
2024-11-02 01:35 - INFO - 	 Val. Loss: 0.067
2024-11-02 01:35 - INFO - 	 ROC-AUC: 0.987
2024-11-02 01:35 - INFO - 	 PR-AUC: 0.892
2024-11-02 01:35 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 01:35 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 01:35 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 01:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-02 01:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-02 01:35 - INFO - ---------------------------------------------
2024-11-02 01:37 - INFO - Fit the preprocessing pipeline
2024-11-02 01:37 - INFO - Training using device: cuda
2024-11-02 01:37 - INFO - Creating generators
2024-11-02 01:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 01:37 - INFO - * Model:
2024-11-02 01:37 - INFO - * -----------
2024-11-02 01:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 01:37 - INFO - * -----------
2024-11-02 01:45 - INFO - ---------------------------------------------
2024-11-02 01:45 - INFO - Epoch: 01 | Time: 8m 5s
2024-11-02 01:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82813
2024-11-02 01:45 - INFO - 	 Train Loss: 0.144
2024-11-02 01:45 - INFO - 	 Val. Loss: 0.084
2024-11-02 01:45 - INFO - 	 ROC-AUC: 0.979
2024-11-02 01:45 - INFO - 	 PR-AUC: 0.828
2024-11-02 01:45 - INFO - 	 Best Val. Loss: 0.084
2024-11-02 01:45 - INFO - 	 Best ROC-AUC: 0.979
2024-11-02 01:45 - INFO - 	 Best PR-AUC: 0.828
2024-11-02 01:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 01:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-11-02 01:45 - INFO - ---------------------------------------------
2024-11-02 01:53 - INFO - ---------------------------------------------
2024-11-02 01:53 - INFO - Epoch: 02 | Time: 8m 5s
2024-11-02 01:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8502
2024-11-02 01:53 - INFO - 	 Train Loss: 0.079
2024-11-02 01:53 - INFO - 	 Val. Loss: 0.077
2024-11-02 01:53 - INFO - 	 ROC-AUC: 0.982
2024-11-02 01:53 - INFO - 	 PR-AUC: 0.850
2024-11-02 01:53 - INFO - 	 Best Val. Loss: 0.077
2024-11-02 01:53 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 01:53 - INFO - 	 Best PR-AUC: 0.850
2024-11-02 01:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 01:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.835
2024-11-02 01:53 - INFO - ---------------------------------------------
2024-11-02 02:01 - INFO - ---------------------------------------------
2024-11-02 02:01 - INFO - Epoch: 03 | Time: 8m 4s
2024-11-02 02:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85402
2024-11-02 02:01 - INFO - 	 Train Loss: 0.069
2024-11-02 02:01 - INFO - 	 Val. Loss: 0.074
2024-11-02 02:01 - INFO - 	 ROC-AUC: 0.984
2024-11-02 02:01 - INFO - 	 PR-AUC: 0.854
2024-11-02 02:01 - INFO - 	 Best Val. Loss: 0.074
2024-11-02 02:01 - INFO - 	 Best ROC-AUC: 0.984
2024-11-02 02:01 - INFO - 	 Best PR-AUC: 0.854
2024-11-02 02:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-02 02:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-02 02:01 - INFO - ---------------------------------------------
2024-11-02 02:09 - INFO - ---------------------------------------------
2024-11-02 02:09 - INFO - Epoch: 04 | Time: 8m 4s
2024-11-02 02:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8675
2024-11-02 02:09 - INFO - 	 Train Loss: 0.063
2024-11-02 02:09 - INFO - 	 Val. Loss: 0.070
2024-11-02 02:09 - INFO - 	 ROC-AUC: 0.985
2024-11-02 02:09 - INFO - 	 PR-AUC: 0.867
2024-11-02 02:09 - INFO - 	 Best Val. Loss: 0.070
2024-11-02 02:09 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 02:09 - INFO - 	 Best PR-AUC: 0.867
2024-11-02 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.851
2024-11-02 02:09 - INFO - ---------------------------------------------
2024-11-02 02:17 - INFO - ---------------------------------------------
2024-11-02 02:17 - INFO - Epoch: 05 | Time: 8m 4s
2024-11-02 02:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87017
2024-11-02 02:17 - INFO - 	 Train Loss: 0.058
2024-11-02 02:17 - INFO - 	 Val. Loss: 0.068
2024-11-02 02:17 - INFO - 	 ROC-AUC: 0.986
2024-11-02 02:17 - INFO - 	 PR-AUC: 0.870
2024-11-02 02:17 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 02:17 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 02:17 - INFO - 	 Best PR-AUC: 0.870
2024-11-02 02:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 02:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-11-02 02:17 - INFO - ---------------------------------------------
2024-11-02 02:25 - INFO - ---------------------------------------------
2024-11-02 02:25 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-02 02:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88149
2024-11-02 02:25 - INFO - 	 Train Loss: 0.055
2024-11-02 02:25 - INFO - 	 Val. Loss: 0.065
2024-11-02 02:25 - INFO - 	 ROC-AUC: 0.987
2024-11-02 02:25 - INFO - 	 PR-AUC: 0.881
2024-11-02 02:25 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 02:25 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 02:25 - INFO - 	 Best PR-AUC: 0.881
2024-11-02 02:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 02:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-02 02:25 - INFO - ---------------------------------------------
2024-11-02 02:33 - INFO - ---------------------------------------------
2024-11-02 02:33 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 02:33 - INFO - 	 Train Loss: 0.052
2024-11-02 02:33 - INFO - 	 Val. Loss: 0.072
2024-11-02 02:33 - INFO - 	 ROC-AUC: 0.986
2024-11-02 02:33 - INFO - 	 PR-AUC: 0.877
2024-11-02 02:33 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 02:33 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 02:33 - INFO - 	 Best PR-AUC: 0.881
2024-11-02 02:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 02:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.889
2024-11-02 02:33 - INFO - ---------------------------------------------
2024-11-02 02:41 - INFO - ---------------------------------------------
2024-11-02 02:41 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-02 02:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88588
2024-11-02 02:41 - INFO - 	 Train Loss: 0.049
2024-11-02 02:41 - INFO - 	 Val. Loss: 0.069
2024-11-02 02:41 - INFO - 	 ROC-AUC: 0.987
2024-11-02 02:41 - INFO - 	 PR-AUC: 0.886
2024-11-02 02:41 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 02:41 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 02:41 - INFO - 	 Best PR-AUC: 0.886
2024-11-02 02:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 02:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-02 02:41 - INFO - ---------------------------------------------
2024-11-02 02:50 - INFO - ---------------------------------------------
2024-11-02 02:50 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 02:50 - INFO - 	 Train Loss: 0.047
2024-11-02 02:50 - INFO - 	 Val. Loss: 0.067
2024-11-02 02:50 - INFO - 	 ROC-AUC: 0.987
2024-11-02 02:50 - INFO - 	 PR-AUC: 0.885
2024-11-02 02:50 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 02:50 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 02:50 - INFO - 	 Best PR-AUC: 0.886
2024-11-02 02:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 02:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-02 02:50 - INFO - ---------------------------------------------
2024-11-02 02:58 - INFO - ---------------------------------------------
2024-11-02 02:58 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 02:58 - INFO - 	 Train Loss: 0.045
2024-11-02 02:58 - INFO - 	 Val. Loss: 0.071
2024-11-02 02:58 - INFO - 	 ROC-AUC: 0.986
2024-11-02 02:58 - INFO - 	 PR-AUC: 0.883
2024-11-02 02:58 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 02:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 02:58 - INFO - 	 Best PR-AUC: 0.886
2024-11-02 02:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 02:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-02 02:58 - INFO - ---------------------------------------------
2024-11-02 03:00 - INFO - Fit the preprocessing pipeline
2024-11-02 03:00 - INFO - Training using device: cuda
2024-11-02 03:00 - INFO - Creating generators
2024-11-02 03:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 03:00 - INFO - * Model:
2024-11-02 03:00 - INFO - * -----------
2024-11-02 03:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 03:00 - INFO - * -----------
2024-11-02 03:08 - INFO - ---------------------------------------------
2024-11-02 03:08 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-02 03:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8346
2024-11-02 03:08 - INFO - 	 Train Loss: 0.145
2024-11-02 03:08 - INFO - 	 Val. Loss: 0.080
2024-11-02 03:08 - INFO - 	 ROC-AUC: 0.982
2024-11-02 03:08 - INFO - 	 PR-AUC: 0.835
2024-11-02 03:08 - INFO - 	 Best Val. Loss: 0.080
2024-11-02 03:08 - INFO - 	 Best ROC-AUC: 0.982
2024-11-02 03:08 - INFO - 	 Best PR-AUC: 0.835
2024-11-02 03:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 03:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-02 03:08 - INFO - ---------------------------------------------
2024-11-02 03:16 - INFO - ---------------------------------------------
2024-11-02 03:16 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-02 03:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87469
2024-11-02 03:16 - INFO - 	 Train Loss: 0.078
2024-11-02 03:16 - INFO - 	 Val. Loss: 0.068
2024-11-02 03:16 - INFO - 	 ROC-AUC: 0.986
2024-11-02 03:16 - INFO - 	 PR-AUC: 0.875
2024-11-02 03:16 - INFO - 	 Best Val. Loss: 0.068
2024-11-02 03:16 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 03:16 - INFO - 	 Best PR-AUC: 0.875
2024-11-02 03:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 03:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-02 03:16 - INFO - ---------------------------------------------
2024-11-02 03:24 - INFO - ---------------------------------------------
2024-11-02 03:24 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-02 03:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88989
2024-11-02 03:24 - INFO - 	 Train Loss: 0.067
2024-11-02 03:24 - INFO - 	 Val. Loss: 0.061
2024-11-02 03:24 - INFO - 	 ROC-AUC: 0.987
2024-11-02 03:24 - INFO - 	 PR-AUC: 0.890
2024-11-02 03:24 - INFO - 	 Best Val. Loss: 0.061
2024-11-02 03:24 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 03:24 - INFO - 	 Best PR-AUC: 0.890
2024-11-02 03:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 03:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.884
2024-11-02 03:24 - INFO - ---------------------------------------------
2024-11-02 03:32 - INFO - ---------------------------------------------
2024-11-02 03:32 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-02 03:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8995
2024-11-02 03:32 - INFO - 	 Train Loss: 0.062
2024-11-02 03:32 - INFO - 	 Val. Loss: 0.060
2024-11-02 03:32 - INFO - 	 ROC-AUC: 0.988
2024-11-02 03:32 - INFO - 	 PR-AUC: 0.899
2024-11-02 03:32 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 03:32 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 03:32 - INFO - 	 Best PR-AUC: 0.899
2024-11-02 03:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 03:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-02 03:32 - INFO - ---------------------------------------------
2024-11-02 03:40 - INFO - ---------------------------------------------
2024-11-02 03:40 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-02 03:40 - INFO - 	 Train Loss: 0.057
2024-11-02 03:40 - INFO - 	 Val. Loss: 0.059
2024-11-02 03:40 - INFO - 	 ROC-AUC: 0.988
2024-11-02 03:40 - INFO - 	 PR-AUC: 0.898
2024-11-02 03:40 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 03:40 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 03:40 - INFO - 	 Best PR-AUC: 0.899
2024-11-02 03:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 03:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-02 03:40 - INFO - ---------------------------------------------
2024-11-02 03:48 - INFO - ---------------------------------------------
2024-11-02 03:48 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 03:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90086
2024-11-02 03:48 - INFO - 	 Train Loss: 0.055
2024-11-02 03:48 - INFO - 	 Val. Loss: 0.060
2024-11-02 03:48 - INFO - 	 ROC-AUC: 0.987
2024-11-02 03:48 - INFO - 	 PR-AUC: 0.901
2024-11-02 03:48 - INFO - 	 Best Val. Loss: 0.059
2024-11-02 03:48 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 03:48 - INFO - 	 Best PR-AUC: 0.901
2024-11-02 03:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 03:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-02 03:48 - INFO - ---------------------------------------------
2024-11-02 03:56 - INFO - ---------------------------------------------
2024-11-02 03:56 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 03:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90429
2024-11-02 03:56 - INFO - 	 Train Loss: 0.053
2024-11-02 03:56 - INFO - 	 Val. Loss: 0.058
2024-11-02 03:56 - INFO - 	 ROC-AUC: 0.988
2024-11-02 03:56 - INFO - 	 PR-AUC: 0.904
2024-11-02 03:56 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 03:56 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 03:56 - INFO - 	 Best PR-AUC: 0.904
2024-11-02 03:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 03:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-02 03:56 - INFO - ---------------------------------------------
2024-11-02 04:04 - INFO - ---------------------------------------------
2024-11-02 04:04 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-02 04:04 - INFO - 	 Train Loss: 0.050
2024-11-02 04:04 - INFO - 	 Val. Loss: 0.067
2024-11-02 04:04 - INFO - 	 ROC-AUC: 0.986
2024-11-02 04:04 - INFO - 	 PR-AUC: 0.895
2024-11-02 04:04 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 04:04 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 04:04 - INFO - 	 Best PR-AUC: 0.904
2024-11-02 04:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 04:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-02 04:04 - INFO - ---------------------------------------------
2024-11-02 04:12 - INFO - ---------------------------------------------
2024-11-02 04:12 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 04:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.91043
2024-11-02 04:12 - INFO - 	 Train Loss: 0.050
2024-11-02 04:12 - INFO - 	 Val. Loss: 0.056
2024-11-02 04:12 - INFO - 	 ROC-AUC: 0.990
2024-11-02 04:12 - INFO - 	 PR-AUC: 0.910
2024-11-02 04:12 - INFO - 	 Best Val. Loss: 0.056
2024-11-02 04:12 - INFO - 	 Best ROC-AUC: 0.990
2024-11-02 04:12 - INFO - 	 Best PR-AUC: 0.910
2024-11-02 04:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 04:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-02 04:12 - INFO - ---------------------------------------------
2024-11-02 04:20 - INFO - ---------------------------------------------
2024-11-02 04:20 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 04:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.91257
2024-11-02 04:20 - INFO - 	 Train Loss: 0.046
2024-11-02 04:20 - INFO - 	 Val. Loss: 0.057
2024-11-02 04:20 - INFO - 	 ROC-AUC: 0.990
2024-11-02 04:20 - INFO - 	 PR-AUC: 0.913
2024-11-02 04:20 - INFO - 	 Best Val. Loss: 0.056
2024-11-02 04:20 - INFO - 	 Best ROC-AUC: 0.990
2024-11-02 04:20 - INFO - 	 Best PR-AUC: 0.913
2024-11-02 04:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.988
2024-11-02 04:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-02 04:20 - INFO - ---------------------------------------------
2024-11-02 04:23 - INFO - Fit the preprocessing pipeline
2024-11-02 04:23 - INFO - Training using device: cuda
2024-11-02 04:23 - INFO - Creating generators
2024-11-02 04:23 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 04:23 - INFO - * Model:
2024-11-02 04:23 - INFO - * -----------
2024-11-02 04:23 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 04:23 - INFO - * -----------
2024-11-02 04:31 - INFO - ---------------------------------------------
2024-11-02 04:31 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-02 04:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84203
2024-11-02 04:31 - INFO - 	 Train Loss: 0.142
2024-11-02 04:31 - INFO - 	 Val. Loss: 0.080
2024-11-02 04:31 - INFO - 	 ROC-AUC: 0.980
2024-11-02 04:31 - INFO - 	 PR-AUC: 0.842
2024-11-02 04:31 - INFO - 	 Best Val. Loss: 0.080
2024-11-02 04:31 - INFO - 	 Best ROC-AUC: 0.980
2024-11-02 04:31 - INFO - 	 Best PR-AUC: 0.842
2024-11-02 04:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-02 04:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-02 04:31 - INFO - ---------------------------------------------
2024-11-02 04:39 - INFO - ---------------------------------------------
2024-11-02 04:39 - INFO - Epoch: 02 | Time: 8m 1s
2024-11-02 04:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86624
2024-11-02 04:39 - INFO - 	 Train Loss: 0.080
2024-11-02 04:39 - INFO - 	 Val. Loss: 0.069
2024-11-02 04:39 - INFO - 	 ROC-AUC: 0.985
2024-11-02 04:39 - INFO - 	 PR-AUC: 0.866
2024-11-02 04:39 - INFO - 	 Best Val. Loss: 0.069
2024-11-02 04:39 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 04:39 - INFO - 	 Best PR-AUC: 0.866
2024-11-02 04:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-02 04:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-02 04:39 - INFO - ---------------------------------------------
2024-11-02 04:47 - INFO - ---------------------------------------------
2024-11-02 04:47 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 04:47 - INFO - 	 Train Loss: 0.070
2024-11-02 04:47 - INFO - 	 Val. Loss: 0.066
2024-11-02 04:47 - INFO - 	 ROC-AUC: 0.986
2024-11-02 04:47 - INFO - 	 PR-AUC: 0.866
2024-11-02 04:47 - INFO - 	 Best Val. Loss: 0.066
2024-11-02 04:47 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 04:47 - INFO - 	 Best PR-AUC: 0.866
2024-11-02 04:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 04:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-02 04:47 - INFO - ---------------------------------------------
2024-11-02 04:55 - INFO - ---------------------------------------------
2024-11-02 04:55 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-02 04:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87433
2024-11-02 04:55 - INFO - 	 Train Loss: 0.064
2024-11-02 04:55 - INFO - 	 Val. Loss: 0.064
2024-11-02 04:55 - INFO - 	 ROC-AUC: 0.986
2024-11-02 04:55 - INFO - 	 PR-AUC: 0.874
2024-11-02 04:55 - INFO - 	 Best Val. Loss: 0.064
2024-11-02 04:55 - INFO - 	 Best ROC-AUC: 0.986
2024-11-02 04:55 - INFO - 	 Best PR-AUC: 0.874
2024-11-02 04:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 04:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-11-02 04:55 - INFO - ---------------------------------------------
2024-11-02 05:03 - INFO - ---------------------------------------------
2024-11-02 05:03 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-02 05:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88288
2024-11-02 05:03 - INFO - 	 Train Loss: 0.059
2024-11-02 05:03 - INFO - 	 Val. Loss: 0.064
2024-11-02 05:03 - INFO - 	 ROC-AUC: 0.987
2024-11-02 05:03 - INFO - 	 PR-AUC: 0.883
2024-11-02 05:03 - INFO - 	 Best Val. Loss: 0.064
2024-11-02 05:03 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 05:03 - INFO - 	 Best PR-AUC: 0.883
2024-11-02 05:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 05:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-02 05:03 - INFO - ---------------------------------------------
2024-11-02 05:11 - INFO - ---------------------------------------------
2024-11-02 05:11 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 05:11 - INFO - 	 Train Loss: 0.055
2024-11-02 05:11 - INFO - 	 Val. Loss: 0.066
2024-11-02 05:11 - INFO - 	 ROC-AUC: 0.987
2024-11-02 05:11 - INFO - 	 PR-AUC: 0.882
2024-11-02 05:11 - INFO - 	 Best Val. Loss: 0.064
2024-11-02 05:11 - INFO - 	 Best ROC-AUC: 0.987
2024-11-02 05:11 - INFO - 	 Best PR-AUC: 0.883
2024-11-02 05:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 05:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-02 05:11 - INFO - ---------------------------------------------
2024-11-02 05:19 - INFO - ---------------------------------------------
2024-11-02 05:19 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-02 05:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89409
2024-11-02 05:19 - INFO - 	 Train Loss: 0.052
2024-11-02 05:19 - INFO - 	 Val. Loss: 0.062
2024-11-02 05:19 - INFO - 	 ROC-AUC: 0.988
2024-11-02 05:19 - INFO - 	 PR-AUC: 0.894
2024-11-02 05:19 - INFO - 	 Best Val. Loss: 0.062
2024-11-02 05:19 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 05:19 - INFO - 	 Best PR-AUC: 0.894
2024-11-02 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-02 05:19 - INFO - ---------------------------------------------
2024-11-02 05:27 - INFO - ---------------------------------------------
2024-11-02 05:27 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 05:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89478
2024-11-02 05:27 - INFO - 	 Train Loss: 0.050
2024-11-02 05:27 - INFO - 	 Val. Loss: 0.061
2024-11-02 05:27 - INFO - 	 ROC-AUC: 0.988
2024-11-02 05:27 - INFO - 	 PR-AUC: 0.895
2024-11-02 05:27 - INFO - 	 Best Val. Loss: 0.061
2024-11-02 05:27 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 05:27 - INFO - 	 Best PR-AUC: 0.895
2024-11-02 05:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 05:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-02 05:27 - INFO - ---------------------------------------------
2024-11-02 05:35 - INFO - ---------------------------------------------
2024-11-02 05:35 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 05:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89658
2024-11-02 05:35 - INFO - 	 Train Loss: 0.047
2024-11-02 05:35 - INFO - 	 Val. Loss: 0.061
2024-11-02 05:35 - INFO - 	 ROC-AUC: 0.988
2024-11-02 05:35 - INFO - 	 PR-AUC: 0.897
2024-11-02 05:35 - INFO - 	 Best Val. Loss: 0.061
2024-11-02 05:35 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 05:35 - INFO - 	 Best PR-AUC: 0.897
2024-11-02 05:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 05:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-02 05:35 - INFO - ---------------------------------------------
2024-11-02 05:43 - INFO - ---------------------------------------------
2024-11-02 05:43 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-02 05:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.90368
2024-11-02 05:43 - INFO - 	 Train Loss: 0.046
2024-11-02 05:43 - INFO - 	 Val. Loss: 0.058
2024-11-02 05:43 - INFO - 	 ROC-AUC: 0.989
2024-11-02 05:43 - INFO - 	 PR-AUC: 0.904
2024-11-02 05:43 - INFO - 	 Best Val. Loss: 0.058
2024-11-02 05:43 - INFO - 	 Best ROC-AUC: 0.989
2024-11-02 05:43 - INFO - 	 Best PR-AUC: 0.904
2024-11-02 05:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 05:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-02 05:43 - INFO - ---------------------------------------------
2024-11-02 05:45 - INFO - Fit the preprocessing pipeline
2024-11-02 05:45 - INFO - Training using device: cuda
2024-11-02 05:45 - INFO - Creating generators
2024-11-02 05:45 - INFO - The model has 2,246,929 trainable parameters
2024-11-02 05:45 - INFO - * Model:
2024-11-02 05:45 - INFO - * -----------
2024-11-02 05:45 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-02 05:45 - INFO - * -----------
2024-11-02 05:53 - INFO - ---------------------------------------------
2024-11-02 05:53 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-02 05:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81073
2024-11-02 05:53 - INFO - 	 Train Loss: 0.158
2024-11-02 05:53 - INFO - 	 Val. Loss: 0.098
2024-11-02 05:53 - INFO - 	 ROC-AUC: 0.974
2024-11-02 05:53 - INFO - 	 PR-AUC: 0.811
2024-11-02 05:53 - INFO - 	 Best Val. Loss: 0.098
2024-11-02 05:53 - INFO - 	 Best ROC-AUC: 0.974
2024-11-02 05:53 - INFO - 	 Best PR-AUC: 0.811
2024-11-02 05:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-02 05:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.779
2024-11-02 05:53 - INFO - ---------------------------------------------
2024-11-02 06:01 - INFO - ---------------------------------------------
2024-11-02 06:01 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-02 06:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87409
2024-11-02 06:01 - INFO - 	 Train Loss: 0.081
2024-11-02 06:01 - INFO - 	 Val. Loss: 0.065
2024-11-02 06:01 - INFO - 	 ROC-AUC: 0.985
2024-11-02 06:01 - INFO - 	 PR-AUC: 0.874
2024-11-02 06:01 - INFO - 	 Best Val. Loss: 0.065
2024-11-02 06:01 - INFO - 	 Best ROC-AUC: 0.985
2024-11-02 06:01 - INFO - 	 Best PR-AUC: 0.874
2024-11-02 06:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-02 06:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-02 06:01 - INFO - ---------------------------------------------
2024-11-02 06:10 - INFO - ---------------------------------------------
2024-11-02 06:10 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-02 06:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89204
2024-11-02 06:10 - INFO - 	 Train Loss: 0.069
2024-11-02 06:10 - INFO - 	 Val. Loss: 0.060
2024-11-02 06:10 - INFO - 	 ROC-AUC: 0.988
2024-11-02 06:10 - INFO - 	 PR-AUC: 0.892
2024-11-02 06:10 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 06:10 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 06:10 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 06:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 06:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-02 06:10 - INFO - ---------------------------------------------
2024-11-02 06:18 - INFO - ---------------------------------------------
2024-11-02 06:18 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-02 06:18 - INFO - 	 Train Loss: 0.063
2024-11-02 06:18 - INFO - 	 Val. Loss: 0.061
2024-11-02 06:18 - INFO - 	 ROC-AUC: 0.987
2024-11-02 06:18 - INFO - 	 PR-AUC: 0.888
2024-11-02 06:18 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 06:18 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 06:18 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 06:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 06:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-02 06:18 - INFO - ---------------------------------------------
2024-11-02 06:26 - INFO - ---------------------------------------------
2024-11-02 06:26 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-02 06:26 - INFO - 	 Train Loss: 0.058
2024-11-02 06:26 - INFO - 	 Val. Loss: 0.065
2024-11-02 06:26 - INFO - 	 ROC-AUC: 0.987
2024-11-02 06:26 - INFO - 	 PR-AUC: 0.886
2024-11-02 06:26 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 06:26 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 06:26 - INFO - 	 Best PR-AUC: 0.892
2024-11-02 06:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-02 06:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.879
2024-11-02 06:26 - INFO - ---------------------------------------------
2024-11-02 06:34 - INFO - ---------------------------------------------
2024-11-02 06:34 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-02 06:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89311
2024-11-02 06:34 - INFO - 	 Train Loss: 0.054
2024-11-02 06:34 - INFO - 	 Val. Loss: 0.060
2024-11-02 06:34 - INFO - 	 ROC-AUC: 0.988
2024-11-02 06:34 - INFO - 	 PR-AUC: 0.893
2024-11-02 06:34 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 06:34 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 06:34 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 06:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-02 06:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-02 06:34 - INFO - ---------------------------------------------
2024-11-02 06:42 - INFO - ---------------------------------------------
2024-11-02 06:42 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-02 06:42 - INFO - 	 Train Loss: 0.052
2024-11-02 06:42 - INFO - 	 Val. Loss: 0.061
2024-11-02 06:42 - INFO - 	 ROC-AUC: 0.988
2024-11-02 06:42 - INFO - 	 PR-AUC: 0.892
2024-11-02 06:42 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 06:42 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 06:42 - INFO - 	 Best PR-AUC: 0.893
2024-11-02 06:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 06:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-02 06:42 - INFO - ---------------------------------------------
2024-11-02 06:50 - INFO - ---------------------------------------------
2024-11-02 06:50 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-02 06:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89646
2024-11-02 06:50 - INFO - 	 Train Loss: 0.050
2024-11-02 06:50 - INFO - 	 Val. Loss: 0.064
2024-11-02 06:50 - INFO - 	 ROC-AUC: 0.988
2024-11-02 06:50 - INFO - 	 PR-AUC: 0.896
2024-11-02 06:50 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 06:50 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 06:50 - INFO - 	 Best PR-AUC: 0.896
2024-11-02 06:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 06:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-02 06:50 - INFO - ---------------------------------------------
2024-11-02 06:58 - INFO - ---------------------------------------------
2024-11-02 06:58 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-02 06:58 - INFO - 	 Train Loss: 0.048
2024-11-02 06:58 - INFO - 	 Val. Loss: 0.067
2024-11-02 06:58 - INFO - 	 ROC-AUC: 0.987
2024-11-02 06:58 - INFO - 	 PR-AUC: 0.887
2024-11-02 06:58 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 06:58 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 06:58 - INFO - 	 Best PR-AUC: 0.896
2024-11-02 06:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 06:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.890
2024-11-02 06:58 - INFO - ---------------------------------------------
2024-11-02 07:06 - INFO - ---------------------------------------------
2024-11-02 07:06 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-02 07:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.904
2024-11-02 07:06 - INFO - 	 Train Loss: 0.045
2024-11-02 07:06 - INFO - 	 Val. Loss: 0.060
2024-11-02 07:06 - INFO - 	 ROC-AUC: 0.988
2024-11-02 07:06 - INFO - 	 PR-AUC: 0.904
2024-11-02 07:06 - INFO - 	 Best Val. Loss: 0.060
2024-11-02 07:06 - INFO - 	 Best ROC-AUC: 0.988
2024-11-02 07:06 - INFO - 	 Best PR-AUC: 0.904
2024-11-02 07:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-02 07:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.888
2024-11-02 07:06 - INFO - ---------------------------------------------
