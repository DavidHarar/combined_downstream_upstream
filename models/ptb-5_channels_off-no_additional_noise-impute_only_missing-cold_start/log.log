2024-11-05 16:49 - INFO - Fit the preprocessing pipeline
2024-11-05 16:49 - INFO - Training using device: cuda
2024-11-05 16:49 - INFO - Creating generators
2024-11-05 16:49 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 16:49 - INFO - * Model:
2024-11-05 16:49 - INFO - * -----------
2024-11-05 16:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 16:49 - INFO - * -----------
2024-11-05 16:57 - INFO - ---------------------------------------------
2024-11-05 16:57 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-05 16:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22176
2024-11-05 16:57 - INFO - 	 Train Loss: 0.249
2024-11-05 16:57 - INFO - 	 Val. Loss: 0.334
2024-11-05 16:57 - INFO - 	 ROC-AUC: 0.765
2024-11-05 16:57 - INFO - 	 PR-AUC: 0.222
2024-11-05 16:57 - INFO - 	 Best Val. Loss: 0.334
2024-11-05 16:57 - INFO - 	 Best ROC-AUC: 0.765
2024-11-05 16:57 - INFO - 	 Best PR-AUC: 0.222
2024-11-05 16:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.738
2024-11-05 16:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.264
2024-11-05 16:57 - INFO - ---------------------------------------------
2024-11-05 17:05 - INFO - ---------------------------------------------
2024-11-05 17:05 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 17:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.3854
2024-11-05 17:05 - INFO - 	 Train Loss: 0.188
2024-11-05 17:05 - INFO - 	 Val. Loss: 0.430
2024-11-05 17:05 - INFO - 	 ROC-AUC: 0.891
2024-11-05 17:05 - INFO - 	 PR-AUC: 0.385
2024-11-05 17:05 - INFO - 	 Best Val. Loss: 0.334
2024-11-05 17:05 - INFO - 	 Best ROC-AUC: 0.891
2024-11-05 17:05 - INFO - 	 Best PR-AUC: 0.385
2024-11-05 17:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.887
2024-11-05 17:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.429
2024-11-05 17:05 - INFO - ---------------------------------------------
2024-11-05 17:13 - INFO - ---------------------------------------------
2024-11-05 17:13 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 17:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63534
2024-11-05 17:13 - INFO - 	 Train Loss: 0.133
2024-11-05 17:13 - INFO - 	 Val. Loss: 0.220
2024-11-05 17:13 - INFO - 	 ROC-AUC: 0.948
2024-11-05 17:13 - INFO - 	 PR-AUC: 0.635
2024-11-05 17:13 - INFO - 	 Best Val. Loss: 0.220
2024-11-05 17:13 - INFO - 	 Best ROC-AUC: 0.948
2024-11-05 17:13 - INFO - 	 Best PR-AUC: 0.635
2024-11-05 17:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-05 17:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.629
2024-11-05 17:13 - INFO - ---------------------------------------------
2024-11-05 17:22 - INFO - ---------------------------------------------
2024-11-05 17:22 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-05 17:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73931
2024-11-05 17:22 - INFO - 	 Train Loss: 0.110
2024-11-05 17:22 - INFO - 	 Val. Loss: 0.125
2024-11-05 17:22 - INFO - 	 ROC-AUC: 0.969
2024-11-05 17:22 - INFO - 	 PR-AUC: 0.739
2024-11-05 17:22 - INFO - 	 Best Val. Loss: 0.125
2024-11-05 17:22 - INFO - 	 Best ROC-AUC: 0.969
2024-11-05 17:22 - INFO - 	 Best PR-AUC: 0.739
2024-11-05 17:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-05 17:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.710
2024-11-05 17:22 - INFO - ---------------------------------------------
2024-11-05 17:30 - INFO - ---------------------------------------------
2024-11-05 17:30 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 17:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79087
2024-11-05 17:30 - INFO - 	 Train Loss: 0.097
2024-11-05 17:30 - INFO - 	 Val. Loss: 0.097
2024-11-05 17:30 - INFO - 	 ROC-AUC: 0.976
2024-11-05 17:30 - INFO - 	 PR-AUC: 0.791
2024-11-05 17:30 - INFO - 	 Best Val. Loss: 0.097
2024-11-05 17:30 - INFO - 	 Best ROC-AUC: 0.976
2024-11-05 17:30 - INFO - 	 Best PR-AUC: 0.791
2024-11-05 17:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-05 17:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.762
2024-11-05 17:30 - INFO - ---------------------------------------------
2024-11-05 17:38 - INFO - ---------------------------------------------
2024-11-05 17:38 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 17:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80692
2024-11-05 17:38 - INFO - 	 Train Loss: 0.090
2024-11-05 17:38 - INFO - 	 Val. Loss: 0.079
2024-11-05 17:38 - INFO - 	 ROC-AUC: 0.980
2024-11-05 17:38 - INFO - 	 PR-AUC: 0.807
2024-11-05 17:38 - INFO - 	 Best Val. Loss: 0.079
2024-11-05 17:38 - INFO - 	 Best ROC-AUC: 0.980
2024-11-05 17:38 - INFO - 	 Best PR-AUC: 0.807
2024-11-05 17:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-05 17:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-11-05 17:38 - INFO - ---------------------------------------------
2024-11-05 17:46 - INFO - ---------------------------------------------
2024-11-05 17:46 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 17:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84304
2024-11-05 17:46 - INFO - 	 Train Loss: 0.082
2024-11-05 17:46 - INFO - 	 Val. Loss: 0.074
2024-11-05 17:46 - INFO - 	 ROC-AUC: 0.983
2024-11-05 17:46 - INFO - 	 PR-AUC: 0.843
2024-11-05 17:46 - INFO - 	 Best Val. Loss: 0.074
2024-11-05 17:46 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 17:46 - INFO - 	 Best PR-AUC: 0.843
2024-11-05 17:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-05 17:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-11-05 17:46 - INFO - ---------------------------------------------
2024-11-05 17:54 - INFO - ---------------------------------------------
2024-11-05 17:54 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 17:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84549
2024-11-05 17:54 - INFO - 	 Train Loss: 0.076
2024-11-05 17:54 - INFO - 	 Val. Loss: 0.071
2024-11-05 17:54 - INFO - 	 ROC-AUC: 0.984
2024-11-05 17:54 - INFO - 	 PR-AUC: 0.845
2024-11-05 17:54 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 17:54 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 17:54 - INFO - 	 Best PR-AUC: 0.845
2024-11-05 17:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 17:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-05 17:54 - INFO - ---------------------------------------------
2024-11-05 18:02 - INFO - ---------------------------------------------
2024-11-05 18:02 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 18:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86062
2024-11-05 18:02 - INFO - 	 Train Loss: 0.072
2024-11-05 18:02 - INFO - 	 Val. Loss: 0.066
2024-11-05 18:02 - INFO - 	 ROC-AUC: 0.985
2024-11-05 18:02 - INFO - 	 PR-AUC: 0.861
2024-11-05 18:02 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 18:02 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 18:02 - INFO - 	 Best PR-AUC: 0.861
2024-11-05 18:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 18:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-11-05 18:02 - INFO - ---------------------------------------------
2024-11-05 18:10 - INFO - ---------------------------------------------
2024-11-05 18:10 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-05 18:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86542
2024-11-05 18:10 - INFO - 	 Train Loss: 0.068
2024-11-05 18:10 - INFO - 	 Val. Loss: 0.067
2024-11-05 18:10 - INFO - 	 ROC-AUC: 0.985
2024-11-05 18:10 - INFO - 	 PR-AUC: 0.865
2024-11-05 18:10 - INFO - 	 Best Val. Loss: 0.066
2024-11-05 18:10 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 18:10 - INFO - 	 Best PR-AUC: 0.865
2024-11-05 18:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 18:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-05 18:10 - INFO - ---------------------------------------------
2024-11-05 18:12 - INFO - Fit the preprocessing pipeline
2024-11-05 18:12 - INFO - Training using device: cuda
2024-11-05 18:12 - INFO - Creating generators
2024-11-05 18:12 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 18:12 - INFO - * Model:
2024-11-05 18:12 - INFO - * -----------
2024-11-05 18:12 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 18:12 - INFO - * -----------
2024-11-05 18:20 - INFO - ---------------------------------------------
2024-11-05 18:20 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 18:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.17537
2024-11-05 18:20 - INFO - 	 Train Loss: 0.251
2024-11-05 18:20 - INFO - 	 Val. Loss: 0.489
2024-11-05 18:20 - INFO - 	 ROC-AUC: 0.728
2024-11-05 18:20 - INFO - 	 PR-AUC: 0.175
2024-11-05 18:20 - INFO - 	 Best Val. Loss: 0.489
2024-11-05 18:20 - INFO - 	 Best ROC-AUC: 0.728
2024-11-05 18:20 - INFO - 	 Best PR-AUC: 0.175
2024-11-05 18:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.702
2024-11-05 18:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.217
2024-11-05 18:20 - INFO - ---------------------------------------------
2024-11-05 18:28 - INFO - ---------------------------------------------
2024-11-05 18:28 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 18:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42801
2024-11-05 18:28 - INFO - 	 Train Loss: 0.184
2024-11-05 18:28 - INFO - 	 Val. Loss: 0.329
2024-11-05 18:28 - INFO - 	 ROC-AUC: 0.920
2024-11-05 18:28 - INFO - 	 PR-AUC: 0.428
2024-11-05 18:28 - INFO - 	 Best Val. Loss: 0.329
2024-11-05 18:28 - INFO - 	 Best ROC-AUC: 0.920
2024-11-05 18:28 - INFO - 	 Best PR-AUC: 0.428
2024-11-05 18:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-05 18:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.474
2024-11-05 18:28 - INFO - ---------------------------------------------
2024-11-05 18:36 - INFO - ---------------------------------------------
2024-11-05 18:36 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 18:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.66378
2024-11-05 18:36 - INFO - 	 Train Loss: 0.120
2024-11-05 18:36 - INFO - 	 Val. Loss: 0.132
2024-11-05 18:36 - INFO - 	 ROC-AUC: 0.966
2024-11-05 18:36 - INFO - 	 PR-AUC: 0.664
2024-11-05 18:36 - INFO - 	 Best Val. Loss: 0.132
2024-11-05 18:36 - INFO - 	 Best ROC-AUC: 0.966
2024-11-05 18:36 - INFO - 	 Best PR-AUC: 0.664
2024-11-05 18:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-05 18:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.688
2024-11-05 18:36 - INFO - ---------------------------------------------
2024-11-05 18:44 - INFO - ---------------------------------------------
2024-11-05 18:44 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-05 18:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78566
2024-11-05 18:44 - INFO - 	 Train Loss: 0.098
2024-11-05 18:44 - INFO - 	 Val. Loss: 0.094
2024-11-05 18:44 - INFO - 	 ROC-AUC: 0.977
2024-11-05 18:44 - INFO - 	 PR-AUC: 0.786
2024-11-05 18:44 - INFO - 	 Best Val. Loss: 0.094
2024-11-05 18:44 - INFO - 	 Best ROC-AUC: 0.977
2024-11-05 18:44 - INFO - 	 Best PR-AUC: 0.786
2024-11-05 18:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-05 18:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.767
2024-11-05 18:44 - INFO - ---------------------------------------------
2024-11-05 18:52 - INFO - ---------------------------------------------
2024-11-05 18:52 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 18:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80808
2024-11-05 18:52 - INFO - 	 Train Loss: 0.087
2024-11-05 18:52 - INFO - 	 Val. Loss: 0.079
2024-11-05 18:52 - INFO - 	 ROC-AUC: 0.981
2024-11-05 18:52 - INFO - 	 PR-AUC: 0.808
2024-11-05 18:52 - INFO - 	 Best Val. Loss: 0.079
2024-11-05 18:52 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 18:52 - INFO - 	 Best PR-AUC: 0.808
2024-11-05 18:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-05 18:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-05 18:52 - INFO - ---------------------------------------------
2024-11-05 19:00 - INFO - ---------------------------------------------
2024-11-05 19:00 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 19:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82804
2024-11-05 19:00 - INFO - 	 Train Loss: 0.082
2024-11-05 19:00 - INFO - 	 Val. Loss: 0.076
2024-11-05 19:00 - INFO - 	 ROC-AUC: 0.981
2024-11-05 19:00 - INFO - 	 PR-AUC: 0.828
2024-11-05 19:00 - INFO - 	 Best Val. Loss: 0.076
2024-11-05 19:00 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 19:00 - INFO - 	 Best PR-AUC: 0.828
2024-11-05 19:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-05 19:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-11-05 19:00 - INFO - ---------------------------------------------
2024-11-05 19:08 - INFO - ---------------------------------------------
2024-11-05 19:08 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 19:08 - INFO - 	 Train Loss: 0.079
2024-11-05 19:08 - INFO - 	 Val. Loss: 0.075
2024-11-05 19:08 - INFO - 	 ROC-AUC: 0.982
2024-11-05 19:08 - INFO - 	 PR-AUC: 0.825
2024-11-05 19:08 - INFO - 	 Best Val. Loss: 0.075
2024-11-05 19:08 - INFO - 	 Best ROC-AUC: 0.982
2024-11-05 19:08 - INFO - 	 Best PR-AUC: 0.828
2024-11-05 19:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 19:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-11-05 19:08 - INFO - ---------------------------------------------
2024-11-05 19:16 - INFO - ---------------------------------------------
2024-11-05 19:16 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 19:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85596
2024-11-05 19:16 - INFO - 	 Train Loss: 0.075
2024-11-05 19:16 - INFO - 	 Val. Loss: 0.070
2024-11-05 19:16 - INFO - 	 ROC-AUC: 0.984
2024-11-05 19:16 - INFO - 	 PR-AUC: 0.856
2024-11-05 19:16 - INFO - 	 Best Val. Loss: 0.070
2024-11-05 19:16 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 19:16 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 19:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 19:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-05 19:16 - INFO - ---------------------------------------------
2024-11-05 19:25 - INFO - ---------------------------------------------
2024-11-05 19:25 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 19:25 - INFO - 	 Train Loss: 0.072
2024-11-05 19:25 - INFO - 	 Val. Loss: 0.069
2024-11-05 19:25 - INFO - 	 ROC-AUC: 0.984
2024-11-05 19:25 - INFO - 	 PR-AUC: 0.853
2024-11-05 19:25 - INFO - 	 Best Val. Loss: 0.069
2024-11-05 19:25 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 19:25 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 19:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 19:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-05 19:25 - INFO - ---------------------------------------------
2024-11-05 19:33 - INFO - ---------------------------------------------
2024-11-05 19:33 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-05 19:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8703
2024-11-05 19:33 - INFO - 	 Train Loss: 0.070
2024-11-05 19:33 - INFO - 	 Val. Loss: 0.065
2024-11-05 19:33 - INFO - 	 ROC-AUC: 0.986
2024-11-05 19:33 - INFO - 	 PR-AUC: 0.870
2024-11-05 19:33 - INFO - 	 Best Val. Loss: 0.065
2024-11-05 19:33 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 19:33 - INFO - 	 Best PR-AUC: 0.870
2024-11-05 19:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 19:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-05 19:33 - INFO - ---------------------------------------------
2024-11-05 19:35 - INFO - Fit the preprocessing pipeline
2024-11-05 19:35 - INFO - Training using device: cuda
2024-11-05 19:35 - INFO - Creating generators
2024-11-05 19:35 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 19:35 - INFO - * Model:
2024-11-05 19:35 - INFO - * -----------
2024-11-05 19:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 19:35 - INFO - * -----------
2024-11-05 19:43 - INFO - ---------------------------------------------
2024-11-05 19:43 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-05 19:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19293
2024-11-05 19:43 - INFO - 	 Train Loss: 0.246
2024-11-05 19:43 - INFO - 	 Val. Loss: 0.427
2024-11-05 19:43 - INFO - 	 ROC-AUC: 0.711
2024-11-05 19:43 - INFO - 	 PR-AUC: 0.193
2024-11-05 19:43 - INFO - 	 Best Val. Loss: 0.427
2024-11-05 19:43 - INFO - 	 Best ROC-AUC: 0.711
2024-11-05 19:43 - INFO - 	 Best PR-AUC: 0.193
2024-11-05 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.686
2024-11-05 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.231
2024-11-05 19:43 - INFO - ---------------------------------------------
2024-11-05 19:51 - INFO - ---------------------------------------------
2024-11-05 19:51 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 19:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37001
2024-11-05 19:51 - INFO - 	 Train Loss: 0.181
2024-11-05 19:51 - INFO - 	 Val. Loss: 0.426
2024-11-05 19:51 - INFO - 	 ROC-AUC: 0.892
2024-11-05 19:51 - INFO - 	 PR-AUC: 0.370
2024-11-05 19:51 - INFO - 	 Best Val. Loss: 0.426
2024-11-05 19:51 - INFO - 	 Best ROC-AUC: 0.892
2024-11-05 19:51 - INFO - 	 Best PR-AUC: 0.370
2024-11-05 19:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.890
2024-11-05 19:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.416
2024-11-05 19:51 - INFO - ---------------------------------------------
2024-11-05 19:59 - INFO - ---------------------------------------------
2024-11-05 19:59 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 19:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.70221
2024-11-05 19:59 - INFO - 	 Train Loss: 0.118
2024-11-05 19:59 - INFO - 	 Val. Loss: 0.127
2024-11-05 19:59 - INFO - 	 ROC-AUC: 0.966
2024-11-05 19:59 - INFO - 	 PR-AUC: 0.702
2024-11-05 19:59 - INFO - 	 Best Val. Loss: 0.127
2024-11-05 19:59 - INFO - 	 Best ROC-AUC: 0.966
2024-11-05 19:59 - INFO - 	 Best PR-AUC: 0.702
2024-11-05 19:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-05 19:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.702
2024-11-05 19:59 - INFO - ---------------------------------------------
2024-11-05 20:07 - INFO - ---------------------------------------------
2024-11-05 20:07 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-05 20:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.76622
2024-11-05 20:07 - INFO - 	 Train Loss: 0.100
2024-11-05 20:07 - INFO - 	 Val. Loss: 0.093
2024-11-05 20:07 - INFO - 	 ROC-AUC: 0.977
2024-11-05 20:07 - INFO - 	 PR-AUC: 0.766
2024-11-05 20:07 - INFO - 	 Best Val. Loss: 0.093
2024-11-05 20:07 - INFO - 	 Best ROC-AUC: 0.977
2024-11-05 20:07 - INFO - 	 Best PR-AUC: 0.766
2024-11-05 20:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-05 20:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.759
2024-11-05 20:07 - INFO - ---------------------------------------------
2024-11-05 20:15 - INFO - ---------------------------------------------
2024-11-05 20:15 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 20:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79703
2024-11-05 20:15 - INFO - 	 Train Loss: 0.091
2024-11-05 20:15 - INFO - 	 Val. Loss: 0.087
2024-11-05 20:15 - INFO - 	 ROC-AUC: 0.979
2024-11-05 20:15 - INFO - 	 PR-AUC: 0.797
2024-11-05 20:15 - INFO - 	 Best Val. Loss: 0.087
2024-11-05 20:15 - INFO - 	 Best ROC-AUC: 0.979
2024-11-05 20:15 - INFO - 	 Best PR-AUC: 0.797
2024-11-05 20:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.975
2024-11-05 20:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-11-05 20:15 - INFO - ---------------------------------------------
2024-11-05 20:23 - INFO - ---------------------------------------------
2024-11-05 20:23 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 20:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8216
2024-11-05 20:23 - INFO - 	 Train Loss: 0.085
2024-11-05 20:23 - INFO - 	 Val. Loss: 0.075
2024-11-05 20:23 - INFO - 	 ROC-AUC: 0.981
2024-11-05 20:23 - INFO - 	 PR-AUC: 0.822
2024-11-05 20:23 - INFO - 	 Best Val. Loss: 0.075
2024-11-05 20:23 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 20:23 - INFO - 	 Best PR-AUC: 0.822
2024-11-05 20:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 20:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.809
2024-11-05 20:23 - INFO - ---------------------------------------------
2024-11-05 20:31 - INFO - ---------------------------------------------
2024-11-05 20:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 20:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84654
2024-11-05 20:31 - INFO - 	 Train Loss: 0.079
2024-11-05 20:31 - INFO - 	 Val. Loss: 0.071
2024-11-05 20:31 - INFO - 	 ROC-AUC: 0.984
2024-11-05 20:31 - INFO - 	 PR-AUC: 0.847
2024-11-05 20:31 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 20:31 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 20:31 - INFO - 	 Best PR-AUC: 0.847
2024-11-05 20:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 20:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-11-05 20:31 - INFO - ---------------------------------------------
2024-11-05 20:39 - INFO - ---------------------------------------------
2024-11-05 20:39 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 20:39 - INFO - 	 Train Loss: 0.077
2024-11-05 20:39 - INFO - 	 Val. Loss: 0.072
2024-11-05 20:39 - INFO - 	 ROC-AUC: 0.983
2024-11-05 20:39 - INFO - 	 PR-AUC: 0.839
2024-11-05 20:39 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 20:39 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 20:39 - INFO - 	 Best PR-AUC: 0.847
2024-11-05 20:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-05 20:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-11-05 20:39 - INFO - ---------------------------------------------
2024-11-05 20:47 - INFO - ---------------------------------------------
2024-11-05 20:47 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 20:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84852
2024-11-05 20:47 - INFO - 	 Train Loss: 0.074
2024-11-05 20:47 - INFO - 	 Val. Loss: 0.069
2024-11-05 20:47 - INFO - 	 ROC-AUC: 0.984
2024-11-05 20:47 - INFO - 	 PR-AUC: 0.849
2024-11-05 20:47 - INFO - 	 Best Val. Loss: 0.069
2024-11-05 20:47 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 20:47 - INFO - 	 Best PR-AUC: 0.849
2024-11-05 20:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 20:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.827
2024-11-05 20:47 - INFO - ---------------------------------------------
2024-11-05 20:55 - INFO - ---------------------------------------------
2024-11-05 20:55 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-05 20:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86165
2024-11-05 20:55 - INFO - 	 Train Loss: 0.071
2024-11-05 20:55 - INFO - 	 Val. Loss: 0.068
2024-11-05 20:55 - INFO - 	 ROC-AUC: 0.985
2024-11-05 20:55 - INFO - 	 PR-AUC: 0.862
2024-11-05 20:55 - INFO - 	 Best Val. Loss: 0.068
2024-11-05 20:55 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 20:55 - INFO - 	 Best PR-AUC: 0.862
2024-11-05 20:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-05 20:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-05 20:55 - INFO - ---------------------------------------------
2024-11-05 20:58 - INFO - Fit the preprocessing pipeline
2024-11-05 20:58 - INFO - Training using device: cuda
2024-11-05 20:58 - INFO - Creating generators
2024-11-05 20:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 20:58 - INFO - * Model:
2024-11-05 20:58 - INFO - * -----------
2024-11-05 20:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 20:58 - INFO - * -----------
2024-11-05 21:06 - INFO - ---------------------------------------------
2024-11-05 21:06 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-05 21:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22658
2024-11-05 21:06 - INFO - 	 Train Loss: 0.244
2024-11-05 21:06 - INFO - 	 Val. Loss: 0.427
2024-11-05 21:06 - INFO - 	 ROC-AUC: 0.774
2024-11-05 21:06 - INFO - 	 PR-AUC: 0.227
2024-11-05 21:06 - INFO - 	 Best Val. Loss: 0.427
2024-11-05 21:06 - INFO - 	 Best ROC-AUC: 0.774
2024-11-05 21:06 - INFO - 	 Best PR-AUC: 0.227
2024-11-05 21:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-05 21:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-05 21:06 - INFO - ---------------------------------------------
2024-11-05 21:14 - INFO - ---------------------------------------------
2024-11-05 21:14 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 21:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52581
2024-11-05 21:14 - INFO - 	 Train Loss: 0.165
2024-11-05 21:14 - INFO - 	 Val. Loss: 0.350
2024-11-05 21:14 - INFO - 	 ROC-AUC: 0.942
2024-11-05 21:14 - INFO - 	 PR-AUC: 0.526
2024-11-05 21:14 - INFO - 	 Best Val. Loss: 0.350
2024-11-05 21:14 - INFO - 	 Best ROC-AUC: 0.942
2024-11-05 21:14 - INFO - 	 Best PR-AUC: 0.526
2024-11-05 21:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.939
2024-11-05 21:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.558
2024-11-05 21:14 - INFO - ---------------------------------------------
2024-11-05 21:22 - INFO - ---------------------------------------------
2024-11-05 21:22 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 21:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74758
2024-11-05 21:22 - INFO - 	 Train Loss: 0.115
2024-11-05 21:22 - INFO - 	 Val. Loss: 0.132
2024-11-05 21:22 - INFO - 	 ROC-AUC: 0.974
2024-11-05 21:22 - INFO - 	 PR-AUC: 0.748
2024-11-05 21:22 - INFO - 	 Best Val. Loss: 0.132
2024-11-05 21:22 - INFO - 	 Best ROC-AUC: 0.974
2024-11-05 21:22 - INFO - 	 Best PR-AUC: 0.748
2024-11-05 21:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.971
2024-11-05 21:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.737
2024-11-05 21:22 - INFO - ---------------------------------------------
2024-11-05 21:30 - INFO - ---------------------------------------------
2024-11-05 21:30 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-05 21:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7977
2024-11-05 21:30 - INFO - 	 Train Loss: 0.097
2024-11-05 21:30 - INFO - 	 Val. Loss: 0.088
2024-11-05 21:30 - INFO - 	 ROC-AUC: 0.979
2024-11-05 21:30 - INFO - 	 PR-AUC: 0.798
2024-11-05 21:30 - INFO - 	 Best Val. Loss: 0.088
2024-11-05 21:30 - INFO - 	 Best ROC-AUC: 0.979
2024-11-05 21:30 - INFO - 	 Best PR-AUC: 0.798
2024-11-05 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-05 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.785
2024-11-05 21:30 - INFO - ---------------------------------------------
2024-11-05 21:38 - INFO - ---------------------------------------------
2024-11-05 21:38 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-05 21:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83322
2024-11-05 21:38 - INFO - 	 Train Loss: 0.088
2024-11-05 21:38 - INFO - 	 Val. Loss: 0.076
2024-11-05 21:38 - INFO - 	 ROC-AUC: 0.981
2024-11-05 21:38 - INFO - 	 PR-AUC: 0.833
2024-11-05 21:38 - INFO - 	 Best Val. Loss: 0.076
2024-11-05 21:38 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 21:38 - INFO - 	 Best PR-AUC: 0.833
2024-11-05 21:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-05 21:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.802
2024-11-05 21:38 - INFO - ---------------------------------------------
2024-11-05 21:46 - INFO - ---------------------------------------------
2024-11-05 21:46 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-05 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84723
2024-11-05 21:46 - INFO - 	 Train Loss: 0.082
2024-11-05 21:46 - INFO - 	 Val. Loss: 0.074
2024-11-05 21:46 - INFO - 	 ROC-AUC: 0.983
2024-11-05 21:46 - INFO - 	 PR-AUC: 0.847
2024-11-05 21:46 - INFO - 	 Best Val. Loss: 0.074
2024-11-05 21:46 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 21:46 - INFO - 	 Best PR-AUC: 0.847
2024-11-05 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-05 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-05 21:46 - INFO - ---------------------------------------------
2024-11-05 21:54 - INFO - ---------------------------------------------
2024-11-05 21:54 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-05 21:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85594
2024-11-05 21:54 - INFO - 	 Train Loss: 0.078
2024-11-05 21:54 - INFO - 	 Val. Loss: 0.067
2024-11-05 21:54 - INFO - 	 ROC-AUC: 0.984
2024-11-05 21:54 - INFO - 	 PR-AUC: 0.856
2024-11-05 21:54 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 21:54 - INFO - 	 Best ROC-AUC: 0.984
2024-11-05 21:54 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-05 21:54 - INFO - ---------------------------------------------
2024-11-05 22:02 - INFO - ---------------------------------------------
2024-11-05 22:02 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-05 22:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86407
2024-11-05 22:02 - INFO - 	 Train Loss: 0.075
2024-11-05 22:02 - INFO - 	 Val. Loss: 0.067
2024-11-05 22:02 - INFO - 	 ROC-AUC: 0.985
2024-11-05 22:02 - INFO - 	 PR-AUC: 0.864
2024-11-05 22:02 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 22:02 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 22:02 - INFO - 	 Best PR-AUC: 0.864
2024-11-05 22:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 22:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-05 22:02 - INFO - ---------------------------------------------
2024-11-05 22:10 - INFO - ---------------------------------------------
2024-11-05 22:10 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 22:10 - INFO - 	 Train Loss: 0.071
2024-11-05 22:10 - INFO - 	 Val. Loss: 0.069
2024-11-05 22:10 - INFO - 	 ROC-AUC: 0.983
2024-11-05 22:10 - INFO - 	 PR-AUC: 0.859
2024-11-05 22:10 - INFO - 	 Best Val. Loss: 0.067
2024-11-05 22:10 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 22:10 - INFO - 	 Best PR-AUC: 0.864
2024-11-05 22:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 22:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-05 22:10 - INFO - ---------------------------------------------
2024-11-05 22:18 - INFO - ---------------------------------------------
2024-11-05 22:18 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-05 22:18 - INFO - 	 Train Loss: 0.070
2024-11-05 22:18 - INFO - 	 Val. Loss: 0.065
2024-11-05 22:18 - INFO - 	 ROC-AUC: 0.986
2024-11-05 22:18 - INFO - 	 PR-AUC: 0.862
2024-11-05 22:18 - INFO - 	 Best Val. Loss: 0.065
2024-11-05 22:18 - INFO - 	 Best ROC-AUC: 0.986
2024-11-05 22:18 - INFO - 	 Best PR-AUC: 0.864
2024-11-05 22:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-05 22:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-11-05 22:18 - INFO - ---------------------------------------------
2024-11-05 22:20 - INFO - Fit the preprocessing pipeline
2024-11-05 22:20 - INFO - Training using device: cuda
2024-11-05 22:20 - INFO - Creating generators
2024-11-05 22:20 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 22:20 - INFO - * Model:
2024-11-05 22:20 - INFO - * -----------
2024-11-05 22:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 22:20 - INFO - * -----------
2024-11-05 22:29 - INFO - ---------------------------------------------
2024-11-05 22:29 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-05 22:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.18129
2024-11-05 22:29 - INFO - 	 Train Loss: 0.249
2024-11-05 22:29 - INFO - 	 Val. Loss: 0.490
2024-11-05 22:29 - INFO - 	 ROC-AUC: 0.732
2024-11-05 22:29 - INFO - 	 PR-AUC: 0.181
2024-11-05 22:29 - INFO - 	 Best Val. Loss: 0.490
2024-11-05 22:29 - INFO - 	 Best ROC-AUC: 0.732
2024-11-05 22:29 - INFO - 	 Best PR-AUC: 0.181
2024-11-05 22:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.701
2024-11-05 22:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.215
2024-11-05 22:29 - INFO - ---------------------------------------------
2024-11-05 22:37 - INFO - ---------------------------------------------
2024-11-05 22:37 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 22:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44766
2024-11-05 22:37 - INFO - 	 Train Loss: 0.173
2024-11-05 22:37 - INFO - 	 Val. Loss: 0.350
2024-11-05 22:37 - INFO - 	 ROC-AUC: 0.921
2024-11-05 22:37 - INFO - 	 PR-AUC: 0.448
2024-11-05 22:37 - INFO - 	 Best Val. Loss: 0.350
2024-11-05 22:37 - INFO - 	 Best ROC-AUC: 0.921
2024-11-05 22:37 - INFO - 	 Best PR-AUC: 0.448
2024-11-05 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-05 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.502
2024-11-05 22:37 - INFO - ---------------------------------------------
2024-11-05 22:45 - INFO - ---------------------------------------------
2024-11-05 22:45 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-05 22:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73859
2024-11-05 22:45 - INFO - 	 Train Loss: 0.117
2024-11-05 22:45 - INFO - 	 Val. Loss: 0.113
2024-11-05 22:45 - INFO - 	 ROC-AUC: 0.972
2024-11-05 22:45 - INFO - 	 PR-AUC: 0.739
2024-11-05 22:45 - INFO - 	 Best Val. Loss: 0.113
2024-11-05 22:45 - INFO - 	 Best ROC-AUC: 0.972
2024-11-05 22:45 - INFO - 	 Best PR-AUC: 0.739
2024-11-05 22:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-05 22:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.760
2024-11-05 22:45 - INFO - ---------------------------------------------
2024-11-05 22:53 - INFO - ---------------------------------------------
2024-11-05 22:53 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-05 22:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80967
2024-11-05 22:53 - INFO - 	 Train Loss: 0.098
2024-11-05 22:53 - INFO - 	 Val. Loss: 0.091
2024-11-05 22:53 - INFO - 	 ROC-AUC: 0.979
2024-11-05 22:53 - INFO - 	 PR-AUC: 0.810
2024-11-05 22:53 - INFO - 	 Best Val. Loss: 0.091
2024-11-05 22:53 - INFO - 	 Best ROC-AUC: 0.979
2024-11-05 22:53 - INFO - 	 Best PR-AUC: 0.810
2024-11-05 22:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-05 22:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.792
2024-11-05 22:53 - INFO - ---------------------------------------------
2024-11-05 23:01 - INFO - ---------------------------------------------
2024-11-05 23:01 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-05 23:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82337
2024-11-05 23:01 - INFO - 	 Train Loss: 0.088
2024-11-05 23:01 - INFO - 	 Val. Loss: 0.076
2024-11-05 23:01 - INFO - 	 ROC-AUC: 0.981
2024-11-05 23:01 - INFO - 	 PR-AUC: 0.823
2024-11-05 23:01 - INFO - 	 Best Val. Loss: 0.076
2024-11-05 23:01 - INFO - 	 Best ROC-AUC: 0.981
2024-11-05 23:01 - INFO - 	 Best PR-AUC: 0.823
2024-11-05 23:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-05 23:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.811
2024-11-05 23:01 - INFO - ---------------------------------------------
2024-11-05 23:09 - INFO - ---------------------------------------------
2024-11-05 23:09 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-05 23:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83963
2024-11-05 23:09 - INFO - 	 Train Loss: 0.082
2024-11-05 23:09 - INFO - 	 Val. Loss: 0.071
2024-11-05 23:09 - INFO - 	 ROC-AUC: 0.983
2024-11-05 23:09 - INFO - 	 PR-AUC: 0.840
2024-11-05 23:09 - INFO - 	 Best Val. Loss: 0.071
2024-11-05 23:09 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 23:09 - INFO - 	 Best PR-AUC: 0.840
2024-11-05 23:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 23:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.833
2024-11-05 23:09 - INFO - ---------------------------------------------
2024-11-05 23:17 - INFO - ---------------------------------------------
2024-11-05 23:17 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-05 23:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85525
2024-11-05 23:17 - INFO - 	 Train Loss: 0.078
2024-11-05 23:17 - INFO - 	 Val. Loss: 0.070
2024-11-05 23:17 - INFO - 	 ROC-AUC: 0.983
2024-11-05 23:17 - INFO - 	 PR-AUC: 0.855
2024-11-05 23:17 - INFO - 	 Best Val. Loss: 0.070
2024-11-05 23:17 - INFO - 	 Best ROC-AUC: 0.983
2024-11-05 23:17 - INFO - 	 Best PR-AUC: 0.855
2024-11-05 23:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 23:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-05 23:17 - INFO - ---------------------------------------------
2024-11-05 23:25 - INFO - ---------------------------------------------
2024-11-05 23:25 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-05 23:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85601
2024-11-05 23:25 - INFO - 	 Train Loss: 0.075
2024-11-05 23:25 - INFO - 	 Val. Loss: 0.068
2024-11-05 23:25 - INFO - 	 ROC-AUC: 0.985
2024-11-05 23:25 - INFO - 	 PR-AUC: 0.856
2024-11-05 23:25 - INFO - 	 Best Val. Loss: 0.068
2024-11-05 23:25 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 23:25 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 23:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 23:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-05 23:25 - INFO - ---------------------------------------------
2024-11-05 23:33 - INFO - ---------------------------------------------
2024-11-05 23:33 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-05 23:33 - INFO - 	 Train Loss: 0.070
2024-11-05 23:33 - INFO - 	 Val. Loss: 0.068
2024-11-05 23:33 - INFO - 	 ROC-AUC: 0.984
2024-11-05 23:33 - INFO - 	 PR-AUC: 0.856
2024-11-05 23:33 - INFO - 	 Best Val. Loss: 0.068
2024-11-05 23:33 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 23:33 - INFO - 	 Best PR-AUC: 0.856
2024-11-05 23:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 23:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-11-05 23:33 - INFO - ---------------------------------------------
2024-11-05 23:41 - INFO - ---------------------------------------------
2024-11-05 23:41 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-05 23:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87106
2024-11-05 23:41 - INFO - 	 Train Loss: 0.069
2024-11-05 23:41 - INFO - 	 Val. Loss: 0.065
2024-11-05 23:41 - INFO - 	 ROC-AUC: 0.985
2024-11-05 23:41 - INFO - 	 PR-AUC: 0.871
2024-11-05 23:41 - INFO - 	 Best Val. Loss: 0.065
2024-11-05 23:41 - INFO - 	 Best ROC-AUC: 0.985
2024-11-05 23:41 - INFO - 	 Best PR-AUC: 0.871
2024-11-05 23:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-05 23:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-05 23:41 - INFO - ---------------------------------------------
2024-11-05 23:43 - INFO - Fit the preprocessing pipeline
2024-11-05 23:43 - INFO - Training using device: cuda
2024-11-05 23:43 - INFO - Creating generators
2024-11-05 23:43 - INFO - The model has 2,246,929 trainable parameters
2024-11-05 23:43 - INFO - * Model:
2024-11-05 23:43 - INFO - * -----------
2024-11-05 23:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-05 23:43 - INFO - * -----------
2024-11-05 23:51 - INFO - ---------------------------------------------
2024-11-05 23:51 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-05 23:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21437
2024-11-05 23:51 - INFO - 	 Train Loss: 0.248
2024-11-05 23:51 - INFO - 	 Val. Loss: 0.423
2024-11-05 23:51 - INFO - 	 ROC-AUC: 0.751
2024-11-05 23:51 - INFO - 	 PR-AUC: 0.214
2024-11-05 23:51 - INFO - 	 Best Val. Loss: 0.423
2024-11-05 23:51 - INFO - 	 Best ROC-AUC: 0.751
2024-11-05 23:51 - INFO - 	 Best PR-AUC: 0.214
2024-11-05 23:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-05 23:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.278
2024-11-05 23:51 - INFO - ---------------------------------------------
2024-11-05 23:59 - INFO - ---------------------------------------------
2024-11-05 23:59 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-05 23:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47111
2024-11-05 23:59 - INFO - 	 Train Loss: 0.173
2024-11-05 23:59 - INFO - 	 Val. Loss: 0.415
2024-11-05 23:59 - INFO - 	 ROC-AUC: 0.934
2024-11-05 23:59 - INFO - 	 PR-AUC: 0.471
2024-11-05 23:59 - INFO - 	 Best Val. Loss: 0.415
2024-11-05 23:59 - INFO - 	 Best ROC-AUC: 0.934
2024-11-05 23:59 - INFO - 	 Best PR-AUC: 0.471
2024-11-05 23:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-05 23:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.503
2024-11-05 23:59 - INFO - ---------------------------------------------
2024-11-06 00:07 - INFO - ---------------------------------------------
2024-11-06 00:07 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-06 00:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68329
2024-11-06 00:07 - INFO - 	 Train Loss: 0.126
2024-11-06 00:07 - INFO - 	 Val. Loss: 0.199
2024-11-06 00:07 - INFO - 	 ROC-AUC: 0.958
2024-11-06 00:07 - INFO - 	 PR-AUC: 0.683
2024-11-06 00:07 - INFO - 	 Best Val. Loss: 0.199
2024-11-06 00:07 - INFO - 	 Best ROC-AUC: 0.958
2024-11-06 00:07 - INFO - 	 Best PR-AUC: 0.683
2024-11-06 00:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-06 00:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.680
2024-11-06 00:07 - INFO - ---------------------------------------------
2024-11-06 00:15 - INFO - ---------------------------------------------
2024-11-06 00:15 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-06 00:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77491
2024-11-06 00:15 - INFO - 	 Train Loss: 0.106
2024-11-06 00:15 - INFO - 	 Val. Loss: 0.105
2024-11-06 00:15 - INFO - 	 ROC-AUC: 0.975
2024-11-06 00:15 - INFO - 	 PR-AUC: 0.775
2024-11-06 00:15 - INFO - 	 Best Val. Loss: 0.105
2024-11-06 00:15 - INFO - 	 Best ROC-AUC: 0.975
2024-11-06 00:15 - INFO - 	 Best PR-AUC: 0.775
2024-11-06 00:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-06 00:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.761
2024-11-06 00:15 - INFO - ---------------------------------------------
2024-11-06 00:23 - INFO - ---------------------------------------------
2024-11-06 00:23 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-06 00:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81695
2024-11-06 00:23 - INFO - 	 Train Loss: 0.096
2024-11-06 00:23 - INFO - 	 Val. Loss: 0.082
2024-11-06 00:23 - INFO - 	 ROC-AUC: 0.982
2024-11-06 00:23 - INFO - 	 PR-AUC: 0.817
2024-11-06 00:23 - INFO - 	 Best Val. Loss: 0.082
2024-11-06 00:23 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 00:23 - INFO - 	 Best PR-AUC: 0.817
2024-11-06 00:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 00:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.798
2024-11-06 00:23 - INFO - ---------------------------------------------
2024-11-06 00:31 - INFO - ---------------------------------------------
2024-11-06 00:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-06 00:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83799
2024-11-06 00:31 - INFO - 	 Train Loss: 0.088
2024-11-06 00:31 - INFO - 	 Val. Loss: 0.072
2024-11-06 00:31 - INFO - 	 ROC-AUC: 0.983
2024-11-06 00:31 - INFO - 	 PR-AUC: 0.838
2024-11-06 00:31 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 00:31 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 00:31 - INFO - 	 Best PR-AUC: 0.838
2024-11-06 00:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 00:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-06 00:31 - INFO - ---------------------------------------------
2024-11-06 00:39 - INFO - ---------------------------------------------
2024-11-06 00:39 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-06 00:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84187
2024-11-06 00:39 - INFO - 	 Train Loss: 0.081
2024-11-06 00:39 - INFO - 	 Val. Loss: 0.070
2024-11-06 00:39 - INFO - 	 ROC-AUC: 0.985
2024-11-06 00:39 - INFO - 	 PR-AUC: 0.842
2024-11-06 00:39 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 00:39 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 00:39 - INFO - 	 Best PR-AUC: 0.842
2024-11-06 00:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 00:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-06 00:39 - INFO - ---------------------------------------------
2024-11-06 00:48 - INFO - ---------------------------------------------
2024-11-06 00:48 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-06 00:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85987
2024-11-06 00:48 - INFO - 	 Train Loss: 0.078
2024-11-06 00:48 - INFO - 	 Val. Loss: 0.072
2024-11-06 00:48 - INFO - 	 ROC-AUC: 0.986
2024-11-06 00:48 - INFO - 	 PR-AUC: 0.860
2024-11-06 00:48 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 00:48 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 00:48 - INFO - 	 Best PR-AUC: 0.860
2024-11-06 00:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 00:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-06 00:48 - INFO - ---------------------------------------------
2024-11-06 00:56 - INFO - ---------------------------------------------
2024-11-06 00:56 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 00:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86177
2024-11-06 00:56 - INFO - 	 Train Loss: 0.075
2024-11-06 00:56 - INFO - 	 Val. Loss: 0.066
2024-11-06 00:56 - INFO - 	 ROC-AUC: 0.986
2024-11-06 00:56 - INFO - 	 PR-AUC: 0.862
2024-11-06 00:56 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 00:56 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 00:56 - INFO - 	 Best PR-AUC: 0.862
2024-11-06 00:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 00:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.842
2024-11-06 00:56 - INFO - ---------------------------------------------
2024-11-06 01:04 - INFO - ---------------------------------------------
2024-11-06 01:04 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 01:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86911
2024-11-06 01:04 - INFO - 	 Train Loss: 0.072
2024-11-06 01:04 - INFO - 	 Val. Loss: 0.065
2024-11-06 01:04 - INFO - 	 ROC-AUC: 0.987
2024-11-06 01:04 - INFO - 	 PR-AUC: 0.869
2024-11-06 01:04 - INFO - 	 Best Val. Loss: 0.065
2024-11-06 01:04 - INFO - 	 Best ROC-AUC: 0.987
2024-11-06 01:04 - INFO - 	 Best PR-AUC: 0.869
2024-11-06 01:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 01:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-06 01:04 - INFO - ---------------------------------------------
2024-11-06 01:06 - INFO - Fit the preprocessing pipeline
2024-11-06 01:06 - INFO - Training using device: cuda
2024-11-06 01:06 - INFO - Creating generators
2024-11-06 01:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 01:06 - INFO - * Model:
2024-11-06 01:06 - INFO - * -----------
2024-11-06 01:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 01:06 - INFO - * -----------
2024-11-06 01:14 - INFO - ---------------------------------------------
2024-11-06 01:14 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-06 01:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25563
2024-11-06 01:14 - INFO - 	 Train Loss: 0.247
2024-11-06 01:14 - INFO - 	 Val. Loss: 0.265
2024-11-06 01:14 - INFO - 	 ROC-AUC: 0.789
2024-11-06 01:14 - INFO - 	 PR-AUC: 0.256
2024-11-06 01:14 - INFO - 	 Best Val. Loss: 0.265
2024-11-06 01:14 - INFO - 	 Best ROC-AUC: 0.789
2024-11-06 01:14 - INFO - 	 Best PR-AUC: 0.256
2024-11-06 01:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.779
2024-11-06 01:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.316
2024-11-06 01:14 - INFO - ---------------------------------------------
2024-11-06 01:22 - INFO - ---------------------------------------------
2024-11-06 01:22 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42895
2024-11-06 01:22 - INFO - 	 Train Loss: 0.183
2024-11-06 01:22 - INFO - 	 Val. Loss: 0.271
2024-11-06 01:22 - INFO - 	 ROC-AUC: 0.920
2024-11-06 01:22 - INFO - 	 PR-AUC: 0.429
2024-11-06 01:22 - INFO - 	 Best Val. Loss: 0.265
2024-11-06 01:22 - INFO - 	 Best ROC-AUC: 0.920
2024-11-06 01:22 - INFO - 	 Best PR-AUC: 0.429
2024-11-06 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.923
2024-11-06 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.495
2024-11-06 01:22 - INFO - ---------------------------------------------
2024-11-06 01:30 - INFO - ---------------------------------------------
2024-11-06 01:30 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 01:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68543
2024-11-06 01:30 - INFO - 	 Train Loss: 0.119
2024-11-06 01:30 - INFO - 	 Val. Loss: 0.166
2024-11-06 01:30 - INFO - 	 ROC-AUC: 0.966
2024-11-06 01:30 - INFO - 	 PR-AUC: 0.685
2024-11-06 01:30 - INFO - 	 Best Val. Loss: 0.166
2024-11-06 01:30 - INFO - 	 Best ROC-AUC: 0.966
2024-11-06 01:30 - INFO - 	 Best PR-AUC: 0.685
2024-11-06 01:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-06 01:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.702
2024-11-06 01:30 - INFO - ---------------------------------------------
2024-11-06 01:38 - INFO - ---------------------------------------------
2024-11-06 01:38 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-06 01:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.75145
2024-11-06 01:38 - INFO - 	 Train Loss: 0.101
2024-11-06 01:38 - INFO - 	 Val. Loss: 0.122
2024-11-06 01:38 - INFO - 	 ROC-AUC: 0.975
2024-11-06 01:38 - INFO - 	 PR-AUC: 0.751
2024-11-06 01:38 - INFO - 	 Best Val. Loss: 0.122
2024-11-06 01:38 - INFO - 	 Best ROC-AUC: 0.975
2024-11-06 01:38 - INFO - 	 Best PR-AUC: 0.751
2024-11-06 01:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-06 01:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.756
2024-11-06 01:38 - INFO - ---------------------------------------------
2024-11-06 01:46 - INFO - ---------------------------------------------
2024-11-06 01:46 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-06 01:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81664
2024-11-06 01:46 - INFO - 	 Train Loss: 0.092
2024-11-06 01:46 - INFO - 	 Val. Loss: 0.081
2024-11-06 01:46 - INFO - 	 ROC-AUC: 0.980
2024-11-06 01:46 - INFO - 	 PR-AUC: 0.817
2024-11-06 01:46 - INFO - 	 Best Val. Loss: 0.081
2024-11-06 01:46 - INFO - 	 Best ROC-AUC: 0.980
2024-11-06 01:46 - INFO - 	 Best PR-AUC: 0.817
2024-11-06 01:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 01:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-11-06 01:46 - INFO - ---------------------------------------------
2024-11-06 01:54 - INFO - ---------------------------------------------
2024-11-06 01:54 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-06 01:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8241
2024-11-06 01:54 - INFO - 	 Train Loss: 0.086
2024-11-06 01:54 - INFO - 	 Val. Loss: 0.077
2024-11-06 01:54 - INFO - 	 ROC-AUC: 0.981
2024-11-06 01:54 - INFO - 	 PR-AUC: 0.824
2024-11-06 01:54 - INFO - 	 Best Val. Loss: 0.077
2024-11-06 01:54 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 01:54 - INFO - 	 Best PR-AUC: 0.824
2024-11-06 01:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 01:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-06 01:54 - INFO - ---------------------------------------------
2024-11-06 02:02 - INFO - ---------------------------------------------
2024-11-06 02:02 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 02:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83624
2024-11-06 02:02 - INFO - 	 Train Loss: 0.082
2024-11-06 02:02 - INFO - 	 Val. Loss: 0.072
2024-11-06 02:02 - INFO - 	 ROC-AUC: 0.984
2024-11-06 02:02 - INFO - 	 PR-AUC: 0.836
2024-11-06 02:02 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 02:02 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 02:02 - INFO - 	 Best PR-AUC: 0.836
2024-11-06 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-11-06 02:02 - INFO - ---------------------------------------------
2024-11-06 02:10 - INFO - ---------------------------------------------
2024-11-06 02:10 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 02:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84126
2024-11-06 02:10 - INFO - 	 Train Loss: 0.077
2024-11-06 02:10 - INFO - 	 Val. Loss: 0.070
2024-11-06 02:10 - INFO - 	 ROC-AUC: 0.983
2024-11-06 02:10 - INFO - 	 PR-AUC: 0.841
2024-11-06 02:10 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 02:10 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 02:10 - INFO - 	 Best PR-AUC: 0.841
2024-11-06 02:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 02:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-11-06 02:10 - INFO - ---------------------------------------------
2024-11-06 02:18 - INFO - ---------------------------------------------
2024-11-06 02:18 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 02:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85006
2024-11-06 02:18 - INFO - 	 Train Loss: 0.073
2024-11-06 02:18 - INFO - 	 Val. Loss: 0.068
2024-11-06 02:18 - INFO - 	 ROC-AUC: 0.985
2024-11-06 02:18 - INFO - 	 PR-AUC: 0.850
2024-11-06 02:18 - INFO - 	 Best Val. Loss: 0.068
2024-11-06 02:18 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 02:18 - INFO - 	 Best PR-AUC: 0.850
2024-11-06 02:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 02:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-11-06 02:18 - INFO - ---------------------------------------------
2024-11-06 02:26 - INFO - ---------------------------------------------
2024-11-06 02:26 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 02:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86404
2024-11-06 02:26 - INFO - 	 Train Loss: 0.071
2024-11-06 02:26 - INFO - 	 Val. Loss: 0.066
2024-11-06 02:26 - INFO - 	 ROC-AUC: 0.986
2024-11-06 02:26 - INFO - 	 PR-AUC: 0.864
2024-11-06 02:26 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 02:26 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 02:26 - INFO - 	 Best PR-AUC: 0.864
2024-11-06 02:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 02:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-06 02:26 - INFO - ---------------------------------------------
2024-11-06 02:29 - INFO - Fit the preprocessing pipeline
2024-11-06 02:29 - INFO - Training using device: cuda
2024-11-06 02:29 - INFO - Creating generators
2024-11-06 02:29 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 02:29 - INFO - * Model:
2024-11-06 02:29 - INFO - * -----------
2024-11-06 02:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 02:29 - INFO - * -----------
2024-11-06 02:37 - INFO - ---------------------------------------------
2024-11-06 02:37 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-06 02:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22161
2024-11-06 02:37 - INFO - 	 Train Loss: 0.244
2024-11-06 02:37 - INFO - 	 Val. Loss: 0.385
2024-11-06 02:37 - INFO - 	 ROC-AUC: 0.760
2024-11-06 02:37 - INFO - 	 PR-AUC: 0.222
2024-11-06 02:37 - INFO - 	 Best Val. Loss: 0.385
2024-11-06 02:37 - INFO - 	 Best ROC-AUC: 0.760
2024-11-06 02:37 - INFO - 	 Best PR-AUC: 0.222
2024-11-06 02:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.746
2024-11-06 02:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.271
2024-11-06 02:37 - INFO - ---------------------------------------------
2024-11-06 02:45 - INFO - ---------------------------------------------
2024-11-06 02:45 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 02:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40255
2024-11-06 02:45 - INFO - 	 Train Loss: 0.176
2024-11-06 02:45 - INFO - 	 Val. Loss: 0.440
2024-11-06 02:45 - INFO - 	 ROC-AUC: 0.904
2024-11-06 02:45 - INFO - 	 PR-AUC: 0.403
2024-11-06 02:45 - INFO - 	 Best Val. Loss: 0.385
2024-11-06 02:45 - INFO - 	 Best ROC-AUC: 0.904
2024-11-06 02:45 - INFO - 	 Best PR-AUC: 0.403
2024-11-06 02:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.893
2024-11-06 02:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.437
2024-11-06 02:45 - INFO - ---------------------------------------------
2024-11-06 02:53 - INFO - ---------------------------------------------
2024-11-06 02:53 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 02:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65479
2024-11-06 02:53 - INFO - 	 Train Loss: 0.126
2024-11-06 02:53 - INFO - 	 Val. Loss: 0.211
2024-11-06 02:53 - INFO - 	 ROC-AUC: 0.958
2024-11-06 02:53 - INFO - 	 PR-AUC: 0.655
2024-11-06 02:53 - INFO - 	 Best Val. Loss: 0.211
2024-11-06 02:53 - INFO - 	 Best ROC-AUC: 0.958
2024-11-06 02:53 - INFO - 	 Best PR-AUC: 0.655
2024-11-06 02:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.958
2024-11-06 02:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.665
2024-11-06 02:53 - INFO - ---------------------------------------------
2024-11-06 03:01 - INFO - ---------------------------------------------
2024-11-06 03:01 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-06 03:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71732
2024-11-06 03:01 - INFO - 	 Train Loss: 0.109
2024-11-06 03:01 - INFO - 	 Val. Loss: 0.160
2024-11-06 03:01 - INFO - 	 ROC-AUC: 0.967
2024-11-06 03:01 - INFO - 	 PR-AUC: 0.717
2024-11-06 03:01 - INFO - 	 Best Val. Loss: 0.160
2024-11-06 03:01 - INFO - 	 Best ROC-AUC: 0.967
2024-11-06 03:01 - INFO - 	 Best PR-AUC: 0.717
2024-11-06 03:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-06 03:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.698
2024-11-06 03:01 - INFO - ---------------------------------------------
2024-11-06 03:09 - INFO - ---------------------------------------------
2024-11-06 03:09 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-06 03:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.7545
2024-11-06 03:09 - INFO - 	 Train Loss: 0.099
2024-11-06 03:09 - INFO - 	 Val. Loss: 0.130
2024-11-06 03:09 - INFO - 	 ROC-AUC: 0.973
2024-11-06 03:09 - INFO - 	 PR-AUC: 0.754
2024-11-06 03:09 - INFO - 	 Best Val. Loss: 0.130
2024-11-06 03:09 - INFO - 	 Best ROC-AUC: 0.973
2024-11-06 03:09 - INFO - 	 Best PR-AUC: 0.754
2024-11-06 03:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 03:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.744
2024-11-06 03:09 - INFO - ---------------------------------------------
2024-11-06 03:17 - INFO - ---------------------------------------------
2024-11-06 03:17 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 03:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81282
2024-11-06 03:17 - INFO - 	 Train Loss: 0.091
2024-11-06 03:17 - INFO - 	 Val. Loss: 0.106
2024-11-06 03:17 - INFO - 	 ROC-AUC: 0.977
2024-11-06 03:17 - INFO - 	 PR-AUC: 0.813
2024-11-06 03:17 - INFO - 	 Best Val. Loss: 0.106
2024-11-06 03:17 - INFO - 	 Best ROC-AUC: 0.977
2024-11-06 03:17 - INFO - 	 Best PR-AUC: 0.813
2024-11-06 03:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-06 03:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.778
2024-11-06 03:17 - INFO - ---------------------------------------------
2024-11-06 03:25 - INFO - ---------------------------------------------
2024-11-06 03:25 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 03:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84069
2024-11-06 03:25 - INFO - 	 Train Loss: 0.080
2024-11-06 03:25 - INFO - 	 Val. Loss: 0.080
2024-11-06 03:25 - INFO - 	 ROC-AUC: 0.982
2024-11-06 03:25 - INFO - 	 PR-AUC: 0.841
2024-11-06 03:25 - INFO - 	 Best Val. Loss: 0.080
2024-11-06 03:25 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 03:25 - INFO - 	 Best PR-AUC: 0.841
2024-11-06 03:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 03:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-06 03:25 - INFO - ---------------------------------------------
2024-11-06 03:33 - INFO - ---------------------------------------------
2024-11-06 03:33 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-06 03:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85774
2024-11-06 03:33 - INFO - 	 Train Loss: 0.076
2024-11-06 03:33 - INFO - 	 Val. Loss: 0.072
2024-11-06 03:33 - INFO - 	 ROC-AUC: 0.984
2024-11-06 03:33 - INFO - 	 PR-AUC: 0.858
2024-11-06 03:33 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 03:33 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 03:33 - INFO - 	 Best PR-AUC: 0.858
2024-11-06 03:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 03:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-11-06 03:33 - INFO - ---------------------------------------------
2024-11-06 03:41 - INFO - ---------------------------------------------
2024-11-06 03:41 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 03:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86922
2024-11-06 03:41 - INFO - 	 Train Loss: 0.071
2024-11-06 03:41 - INFO - 	 Val. Loss: 0.067
2024-11-06 03:41 - INFO - 	 ROC-AUC: 0.985
2024-11-06 03:41 - INFO - 	 PR-AUC: 0.869
2024-11-06 03:41 - INFO - 	 Best Val. Loss: 0.067
2024-11-06 03:41 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 03:41 - INFO - 	 Best PR-AUC: 0.869
2024-11-06 03:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 03:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-11-06 03:41 - INFO - ---------------------------------------------
2024-11-06 03:49 - INFO - ---------------------------------------------
2024-11-06 03:49 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 03:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87465
2024-11-06 03:49 - INFO - 	 Train Loss: 0.067
2024-11-06 03:49 - INFO - 	 Val. Loss: 0.066
2024-11-06 03:49 - INFO - 	 ROC-AUC: 0.985
2024-11-06 03:49 - INFO - 	 PR-AUC: 0.875
2024-11-06 03:49 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 03:49 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 03:49 - INFO - 	 Best PR-AUC: 0.875
2024-11-06 03:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 03:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-11-06 03:49 - INFO - ---------------------------------------------
2024-11-06 03:51 - INFO - Fit the preprocessing pipeline
2024-11-06 03:51 - INFO - Training using device: cuda
2024-11-06 03:51 - INFO - Creating generators
2024-11-06 03:51 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 03:51 - INFO - * Model:
2024-11-06 03:51 - INFO - * -----------
2024-11-06 03:51 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 03:51 - INFO - * -----------
2024-11-06 03:59 - INFO - ---------------------------------------------
2024-11-06 03:59 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 03:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.25217
2024-11-06 03:59 - INFO - 	 Train Loss: 0.243
2024-11-06 03:59 - INFO - 	 Val. Loss: 0.385
2024-11-06 03:59 - INFO - 	 ROC-AUC: 0.807
2024-11-06 03:59 - INFO - 	 PR-AUC: 0.252
2024-11-06 03:59 - INFO - 	 Best Val. Loss: 0.385
2024-11-06 03:59 - INFO - 	 Best ROC-AUC: 0.807
2024-11-06 03:59 - INFO - 	 Best PR-AUC: 0.252
2024-11-06 03:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.792
2024-11-06 03:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-06 03:59 - INFO - ---------------------------------------------
2024-11-06 04:07 - INFO - ---------------------------------------------
2024-11-06 04:07 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 04:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45175
2024-11-06 04:07 - INFO - 	 Train Loss: 0.166
2024-11-06 04:07 - INFO - 	 Val. Loss: 0.382
2024-11-06 04:07 - INFO - 	 ROC-AUC: 0.922
2024-11-06 04:07 - INFO - 	 PR-AUC: 0.452
2024-11-06 04:07 - INFO - 	 Best Val. Loss: 0.382
2024-11-06 04:07 - INFO - 	 Best ROC-AUC: 0.922
2024-11-06 04:07 - INFO - 	 Best PR-AUC: 0.452
2024-11-06 04:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.919
2024-11-06 04:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.508
2024-11-06 04:07 - INFO - ---------------------------------------------
2024-11-06 04:15 - INFO - ---------------------------------------------
2024-11-06 04:15 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 04:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71846
2024-11-06 04:15 - INFO - 	 Train Loss: 0.116
2024-11-06 04:15 - INFO - 	 Val. Loss: 0.159
2024-11-06 04:15 - INFO - 	 ROC-AUC: 0.966
2024-11-06 04:15 - INFO - 	 PR-AUC: 0.718
2024-11-06 04:15 - INFO - 	 Best Val. Loss: 0.159
2024-11-06 04:15 - INFO - 	 Best ROC-AUC: 0.966
2024-11-06 04:15 - INFO - 	 Best PR-AUC: 0.718
2024-11-06 04:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.963
2024-11-06 04:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.700
2024-11-06 04:15 - INFO - ---------------------------------------------
2024-11-06 04:24 - INFO - ---------------------------------------------
2024-11-06 04:24 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-06 04:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77704
2024-11-06 04:24 - INFO - 	 Train Loss: 0.101
2024-11-06 04:24 - INFO - 	 Val. Loss: 0.099
2024-11-06 04:24 - INFO - 	 ROC-AUC: 0.975
2024-11-06 04:24 - INFO - 	 PR-AUC: 0.777
2024-11-06 04:24 - INFO - 	 Best Val. Loss: 0.099
2024-11-06 04:24 - INFO - 	 Best ROC-AUC: 0.975
2024-11-06 04:24 - INFO - 	 Best PR-AUC: 0.777
2024-11-06 04:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-06 04:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.750
2024-11-06 04:24 - INFO - ---------------------------------------------
2024-11-06 04:32 - INFO - ---------------------------------------------
2024-11-06 04:32 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 04:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.80744
2024-11-06 04:32 - INFO - 	 Train Loss: 0.092
2024-11-06 04:32 - INFO - 	 Val. Loss: 0.085
2024-11-06 04:32 - INFO - 	 ROC-AUC: 0.980
2024-11-06 04:32 - INFO - 	 PR-AUC: 0.807
2024-11-06 04:32 - INFO - 	 Best Val. Loss: 0.085
2024-11-06 04:32 - INFO - 	 Best ROC-AUC: 0.980
2024-11-06 04:32 - INFO - 	 Best PR-AUC: 0.807
2024-11-06 04:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-06 04:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-11-06 04:32 - INFO - ---------------------------------------------
2024-11-06 04:40 - INFO - ---------------------------------------------
2024-11-06 04:40 - INFO - Epoch: 06 | Time: 8m 3s
2024-11-06 04:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84545
2024-11-06 04:40 - INFO - 	 Train Loss: 0.085
2024-11-06 04:40 - INFO - 	 Val. Loss: 0.073
2024-11-06 04:40 - INFO - 	 ROC-AUC: 0.984
2024-11-06 04:40 - INFO - 	 PR-AUC: 0.845
2024-11-06 04:40 - INFO - 	 Best Val. Loss: 0.073
2024-11-06 04:40 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 04:40 - INFO - 	 Best PR-AUC: 0.845
2024-11-06 04:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 04:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-06 04:40 - INFO - ---------------------------------------------
2024-11-06 04:48 - INFO - ---------------------------------------------
2024-11-06 04:48 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-06 04:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8506
2024-11-06 04:48 - INFO - 	 Train Loss: 0.081
2024-11-06 04:48 - INFO - 	 Val. Loss: 0.077
2024-11-06 04:48 - INFO - 	 ROC-AUC: 0.983
2024-11-06 04:48 - INFO - 	 PR-AUC: 0.851
2024-11-06 04:48 - INFO - 	 Best Val. Loss: 0.073
2024-11-06 04:48 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 04:48 - INFO - 	 Best PR-AUC: 0.851
2024-11-06 04:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 04:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-11-06 04:48 - INFO - ---------------------------------------------
2024-11-06 04:56 - INFO - ---------------------------------------------
2024-11-06 04:56 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 04:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85764
2024-11-06 04:56 - INFO - 	 Train Loss: 0.076
2024-11-06 04:56 - INFO - 	 Val. Loss: 0.070
2024-11-06 04:56 - INFO - 	 ROC-AUC: 0.983
2024-11-06 04:56 - INFO - 	 PR-AUC: 0.858
2024-11-06 04:56 - INFO - 	 Best Val. Loss: 0.070
2024-11-06 04:56 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 04:56 - INFO - 	 Best PR-AUC: 0.858
2024-11-06 04:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 04:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.831
2024-11-06 04:56 - INFO - ---------------------------------------------
2024-11-06 05:04 - INFO - ---------------------------------------------
2024-11-06 05:04 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 05:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86628
2024-11-06 05:04 - INFO - 	 Train Loss: 0.072
2024-11-06 05:04 - INFO - 	 Val. Loss: 0.066
2024-11-06 05:04 - INFO - 	 ROC-AUC: 0.985
2024-11-06 05:04 - INFO - 	 PR-AUC: 0.866
2024-11-06 05:04 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 05:04 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 05:04 - INFO - 	 Best PR-AUC: 0.866
2024-11-06 05:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 05:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-06 05:04 - INFO - ---------------------------------------------
2024-11-06 05:12 - INFO - ---------------------------------------------
2024-11-06 05:12 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 05:12 - INFO - 	 Train Loss: 0.069
2024-11-06 05:12 - INFO - 	 Val. Loss: 0.067
2024-11-06 05:12 - INFO - 	 ROC-AUC: 0.985
2024-11-06 05:12 - INFO - 	 PR-AUC: 0.861
2024-11-06 05:12 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 05:12 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 05:12 - INFO - 	 Best PR-AUC: 0.866
2024-11-06 05:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 05:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-11-06 05:12 - INFO - ---------------------------------------------
2024-11-06 05:14 - INFO - Fit the preprocessing pipeline
2024-11-06 05:14 - INFO - Training using device: cuda
2024-11-06 05:14 - INFO - Creating generators
2024-11-06 05:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 05:14 - INFO - * Model:
2024-11-06 05:14 - INFO - * -----------
2024-11-06 05:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 05:14 - INFO - * -----------
2024-11-06 05:22 - INFO - ---------------------------------------------
2024-11-06 05:22 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 05:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.22459
2024-11-06 05:22 - INFO - 	 Train Loss: 0.248
2024-11-06 05:22 - INFO - 	 Val. Loss: 0.290
2024-11-06 05:22 - INFO - 	 ROC-AUC: 0.769
2024-11-06 05:22 - INFO - 	 PR-AUC: 0.225
2024-11-06 05:22 - INFO - 	 Best Val. Loss: 0.290
2024-11-06 05:22 - INFO - 	 Best ROC-AUC: 0.769
2024-11-06 05:22 - INFO - 	 Best PR-AUC: 0.225
2024-11-06 05:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.767
2024-11-06 05:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.285
2024-11-06 05:22 - INFO - ---------------------------------------------
2024-11-06 05:30 - INFO - ---------------------------------------------
2024-11-06 05:30 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 05:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52197
2024-11-06 05:30 - INFO - 	 Train Loss: 0.179
2024-11-06 05:30 - INFO - 	 Val. Loss: 0.262
2024-11-06 05:30 - INFO - 	 ROC-AUC: 0.935
2024-11-06 05:30 - INFO - 	 PR-AUC: 0.522
2024-11-06 05:30 - INFO - 	 Best Val. Loss: 0.262
2024-11-06 05:30 - INFO - 	 Best ROC-AUC: 0.935
2024-11-06 05:30 - INFO - 	 Best PR-AUC: 0.522
2024-11-06 05:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-06 05:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.547
2024-11-06 05:30 - INFO - ---------------------------------------------
2024-11-06 05:38 - INFO - ---------------------------------------------
2024-11-06 05:38 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 05:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71257
2024-11-06 05:38 - INFO - 	 Train Loss: 0.119
2024-11-06 05:38 - INFO - 	 Val. Loss: 0.134
2024-11-06 05:38 - INFO - 	 ROC-AUC: 0.969
2024-11-06 05:38 - INFO - 	 PR-AUC: 0.713
2024-11-06 05:38 - INFO - 	 Best Val. Loss: 0.134
2024-11-06 05:38 - INFO - 	 Best ROC-AUC: 0.969
2024-11-06 05:38 - INFO - 	 Best PR-AUC: 0.713
2024-11-06 05:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.968
2024-11-06 05:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.708
2024-11-06 05:38 - INFO - ---------------------------------------------
2024-11-06 05:46 - INFO - ---------------------------------------------
2024-11-06 05:46 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 05:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82035
2024-11-06 05:46 - INFO - 	 Train Loss: 0.101
2024-11-06 05:46 - INFO - 	 Val. Loss: 0.082
2024-11-06 05:46 - INFO - 	 ROC-AUC: 0.980
2024-11-06 05:46 - INFO - 	 PR-AUC: 0.820
2024-11-06 05:46 - INFO - 	 Best Val. Loss: 0.082
2024-11-06 05:46 - INFO - 	 Best ROC-AUC: 0.980
2024-11-06 05:46 - INFO - 	 Best PR-AUC: 0.820
2024-11-06 05:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-06 05:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-11-06 05:46 - INFO - ---------------------------------------------
2024-11-06 05:54 - INFO - ---------------------------------------------
2024-11-06 05:54 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-06 05:54 - INFO - 	 Train Loss: 0.090
2024-11-06 05:54 - INFO - 	 Val. Loss: 0.077
2024-11-06 05:54 - INFO - 	 ROC-AUC: 0.981
2024-11-06 05:54 - INFO - 	 PR-AUC: 0.818
2024-11-06 05:54 - INFO - 	 Best Val. Loss: 0.077
2024-11-06 05:54 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 05:54 - INFO - 	 Best PR-AUC: 0.820
2024-11-06 05:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 05:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.793
2024-11-06 05:54 - INFO - ---------------------------------------------
2024-11-06 06:02 - INFO - ---------------------------------------------
2024-11-06 06:02 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 06:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.844
2024-11-06 06:02 - INFO - 	 Train Loss: 0.085
2024-11-06 06:02 - INFO - 	 Val. Loss: 0.072
2024-11-06 06:02 - INFO - 	 ROC-AUC: 0.983
2024-11-06 06:02 - INFO - 	 PR-AUC: 0.844
2024-11-06 06:02 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 06:02 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 06:02 - INFO - 	 Best PR-AUC: 0.844
2024-11-06 06:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.980
2024-11-06 06:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.813
2024-11-06 06:02 - INFO - ---------------------------------------------
2024-11-06 06:10 - INFO - ---------------------------------------------
2024-11-06 06:10 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 06:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85107
2024-11-06 06:10 - INFO - 	 Train Loss: 0.080
2024-11-06 06:10 - INFO - 	 Val. Loss: 0.074
2024-11-06 06:10 - INFO - 	 ROC-AUC: 0.984
2024-11-06 06:10 - INFO - 	 PR-AUC: 0.851
2024-11-06 06:10 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 06:10 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 06:10 - INFO - 	 Best PR-AUC: 0.851
2024-11-06 06:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 06:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.825
2024-11-06 06:10 - INFO - ---------------------------------------------
2024-11-06 06:18 - INFO - ---------------------------------------------
2024-11-06 06:18 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-06 06:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85211
2024-11-06 06:18 - INFO - 	 Train Loss: 0.076
2024-11-06 06:18 - INFO - 	 Val. Loss: 0.068
2024-11-06 06:18 - INFO - 	 ROC-AUC: 0.984
2024-11-06 06:18 - INFO - 	 PR-AUC: 0.852
2024-11-06 06:18 - INFO - 	 Best Val. Loss: 0.068
2024-11-06 06:18 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 06:18 - INFO - 	 Best PR-AUC: 0.852
2024-11-06 06:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 06:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-11-06 06:18 - INFO - ---------------------------------------------
2024-11-06 06:26 - INFO - ---------------------------------------------
2024-11-06 06:26 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 06:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.863
2024-11-06 06:26 - INFO - 	 Train Loss: 0.074
2024-11-06 06:26 - INFO - 	 Val. Loss: 0.066
2024-11-06 06:26 - INFO - 	 ROC-AUC: 0.986
2024-11-06 06:26 - INFO - 	 PR-AUC: 0.863
2024-11-06 06:26 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 06:26 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 06:26 - INFO - 	 Best PR-AUC: 0.863
2024-11-06 06:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 06:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-06 06:26 - INFO - ---------------------------------------------
2024-11-06 06:35 - INFO - ---------------------------------------------
2024-11-06 06:35 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 06:35 - INFO - 	 Train Loss: 0.071
2024-11-06 06:35 - INFO - 	 Val. Loss: 0.066
2024-11-06 06:35 - INFO - 	 ROC-AUC: 0.985
2024-11-06 06:35 - INFO - 	 PR-AUC: 0.861
2024-11-06 06:35 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 06:35 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 06:35 - INFO - 	 Best PR-AUC: 0.863
2024-11-06 06:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 06:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-11-06 06:35 - INFO - ---------------------------------------------
2024-11-06 06:37 - INFO - Fit the preprocessing pipeline
2024-11-06 06:37 - INFO - Training using device: cuda
2024-11-06 06:37 - INFO - Creating generators
2024-11-06 06:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 06:37 - INFO - * Model:
2024-11-06 06:37 - INFO - * -----------
2024-11-06 06:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 06:37 - INFO - * -----------
2024-11-06 06:45 - INFO - ---------------------------------------------
2024-11-06 06:45 - INFO - Epoch: 01 | Time: 8m 1s
2024-11-06 06:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.23055
2024-11-06 06:45 - INFO - 	 Train Loss: 0.244
2024-11-06 06:45 - INFO - 	 Val. Loss: 0.430
2024-11-06 06:45 - INFO - 	 ROC-AUC: 0.795
2024-11-06 06:45 - INFO - 	 PR-AUC: 0.231
2024-11-06 06:45 - INFO - 	 Best Val. Loss: 0.430
2024-11-06 06:45 - INFO - 	 Best ROC-AUC: 0.795
2024-11-06 06:45 - INFO - 	 Best PR-AUC: 0.231
2024-11-06 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.774
2024-11-06 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.267
2024-11-06 06:45 - INFO - ---------------------------------------------
2024-11-06 06:53 - INFO - ---------------------------------------------
2024-11-06 06:53 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 06:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47121
2024-11-06 06:53 - INFO - 	 Train Loss: 0.161
2024-11-06 06:53 - INFO - 	 Val. Loss: 0.397
2024-11-06 06:53 - INFO - 	 ROC-AUC: 0.919
2024-11-06 06:53 - INFO - 	 PR-AUC: 0.471
2024-11-06 06:53 - INFO - 	 Best Val. Loss: 0.397
2024-11-06 06:53 - INFO - 	 Best ROC-AUC: 0.919
2024-11-06 06:53 - INFO - 	 Best PR-AUC: 0.471
2024-11-06 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.913
2024-11-06 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.495
2024-11-06 06:53 - INFO - ---------------------------------------------
2024-11-06 07:01 - INFO - ---------------------------------------------
2024-11-06 07:01 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 07:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65565
2024-11-06 07:01 - INFO - 	 Train Loss: 0.118
2024-11-06 07:01 - INFO - 	 Val. Loss: 0.176
2024-11-06 07:01 - INFO - 	 ROC-AUC: 0.964
2024-11-06 07:01 - INFO - 	 PR-AUC: 0.656
2024-11-06 07:01 - INFO - 	 Best Val. Loss: 0.176
2024-11-06 07:01 - INFO - 	 Best ROC-AUC: 0.964
2024-11-06 07:01 - INFO - 	 Best PR-AUC: 0.656
2024-11-06 07:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.961
2024-11-06 07:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.677
2024-11-06 07:01 - INFO - ---------------------------------------------
2024-11-06 07:09 - INFO - ---------------------------------------------
2024-11-06 07:09 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-06 07:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.77984
2024-11-06 07:09 - INFO - 	 Train Loss: 0.101
2024-11-06 07:09 - INFO - 	 Val. Loss: 0.097
2024-11-06 07:09 - INFO - 	 ROC-AUC: 0.976
2024-11-06 07:09 - INFO - 	 PR-AUC: 0.780
2024-11-06 07:09 - INFO - 	 Best Val. Loss: 0.097
2024-11-06 07:09 - INFO - 	 Best ROC-AUC: 0.976
2024-11-06 07:09 - INFO - 	 Best PR-AUC: 0.780
2024-11-06 07:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.973
2024-11-06 07:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.768
2024-11-06 07:09 - INFO - ---------------------------------------------
2024-11-06 07:17 - INFO - ---------------------------------------------
2024-11-06 07:17 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-06 07:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82221
2024-11-06 07:17 - INFO - 	 Train Loss: 0.091
2024-11-06 07:17 - INFO - 	 Val. Loss: 0.085
2024-11-06 07:17 - INFO - 	 ROC-AUC: 0.981
2024-11-06 07:17 - INFO - 	 PR-AUC: 0.822
2024-11-06 07:17 - INFO - 	 Best Val. Loss: 0.085
2024-11-06 07:17 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 07:17 - INFO - 	 Best PR-AUC: 0.822
2024-11-06 07:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 07:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.799
2024-11-06 07:17 - INFO - ---------------------------------------------
2024-11-06 07:25 - INFO - ---------------------------------------------
2024-11-06 07:25 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83502
2024-11-06 07:25 - INFO - 	 Train Loss: 0.083
2024-11-06 07:25 - INFO - 	 Val. Loss: 0.072
2024-11-06 07:25 - INFO - 	 ROC-AUC: 0.983
2024-11-06 07:25 - INFO - 	 PR-AUC: 0.835
2024-11-06 07:25 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 07:25 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 07:25 - INFO - 	 Best PR-AUC: 0.835
2024-11-06 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.816
2024-11-06 07:25 - INFO - ---------------------------------------------
2024-11-06 07:33 - INFO - ---------------------------------------------
2024-11-06 07:33 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-06 07:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84098
2024-11-06 07:33 - INFO - 	 Train Loss: 0.079
2024-11-06 07:33 - INFO - 	 Val. Loss: 0.077
2024-11-06 07:33 - INFO - 	 ROC-AUC: 0.983
2024-11-06 07:33 - INFO - 	 PR-AUC: 0.841
2024-11-06 07:33 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 07:33 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 07:33 - INFO - 	 Best PR-AUC: 0.841
2024-11-06 07:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 07:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-11-06 07:33 - INFO - ---------------------------------------------
2024-11-06 07:41 - INFO - ---------------------------------------------
2024-11-06 07:41 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-06 07:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85021
2024-11-06 07:41 - INFO - 	 Train Loss: 0.075
2024-11-06 07:41 - INFO - 	 Val. Loss: 0.069
2024-11-06 07:41 - INFO - 	 ROC-AUC: 0.984
2024-11-06 07:41 - INFO - 	 PR-AUC: 0.850
2024-11-06 07:41 - INFO - 	 Best Val. Loss: 0.069
2024-11-06 07:41 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 07:41 - INFO - 	 Best PR-AUC: 0.850
2024-11-06 07:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 07:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-11-06 07:41 - INFO - ---------------------------------------------
2024-11-06 07:49 - INFO - ---------------------------------------------
2024-11-06 07:49 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 07:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8635
2024-11-06 07:49 - INFO - 	 Train Loss: 0.072
2024-11-06 07:49 - INFO - 	 Val. Loss: 0.066
2024-11-06 07:49 - INFO - 	 ROC-AUC: 0.985
2024-11-06 07:49 - INFO - 	 PR-AUC: 0.864
2024-11-06 07:49 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 07:49 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 07:49 - INFO - 	 Best PR-AUC: 0.864
2024-11-06 07:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 07:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-06 07:49 - INFO - ---------------------------------------------
2024-11-06 07:57 - INFO - ---------------------------------------------
2024-11-06 07:57 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 07:57 - INFO - 	 Train Loss: 0.070
2024-11-06 07:57 - INFO - 	 Val. Loss: 0.070
2024-11-06 07:57 - INFO - 	 ROC-AUC: 0.984
2024-11-06 07:57 - INFO - 	 PR-AUC: 0.844
2024-11-06 07:57 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 07:57 - INFO - 	 Best ROC-AUC: 0.985
2024-11-06 07:57 - INFO - 	 Best PR-AUC: 0.864
2024-11-06 07:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 07:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.854
2024-11-06 07:57 - INFO - ---------------------------------------------
2024-11-06 08:00 - INFO - Fit the preprocessing pipeline
2024-11-06 08:00 - INFO - Training using device: cuda
2024-11-06 08:00 - INFO - Creating generators
2024-11-06 08:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 08:00 - INFO - * Model:
2024-11-06 08:00 - INFO - * -----------
2024-11-06 08:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 08:00 - INFO - * -----------
2024-11-06 08:08 - INFO - ---------------------------------------------
2024-11-06 08:08 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 08:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.20843
2024-11-06 08:08 - INFO - 	 Train Loss: 0.250
2024-11-06 08:08 - INFO - 	 Val. Loss: 0.262
2024-11-06 08:08 - INFO - 	 ROC-AUC: 0.762
2024-11-06 08:08 - INFO - 	 PR-AUC: 0.208
2024-11-06 08:08 - INFO - 	 Best Val. Loss: 0.262
2024-11-06 08:08 - INFO - 	 Best ROC-AUC: 0.762
2024-11-06 08:08 - INFO - 	 Best PR-AUC: 0.208
2024-11-06 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.737
2024-11-06 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.258
2024-11-06 08:08 - INFO - ---------------------------------------------
2024-11-06 08:16 - INFO - ---------------------------------------------
2024-11-06 08:16 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 08:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51913
2024-11-06 08:16 - INFO - 	 Train Loss: 0.187
2024-11-06 08:16 - INFO - 	 Val. Loss: 0.237
2024-11-06 08:16 - INFO - 	 ROC-AUC: 0.945
2024-11-06 08:16 - INFO - 	 PR-AUC: 0.519
2024-11-06 08:16 - INFO - 	 Best Val. Loss: 0.237
2024-11-06 08:16 - INFO - 	 Best ROC-AUC: 0.945
2024-11-06 08:16 - INFO - 	 Best PR-AUC: 0.519
2024-11-06 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.938
2024-11-06 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.550
2024-11-06 08:16 - INFO - ---------------------------------------------
2024-11-06 08:24 - INFO - ---------------------------------------------
2024-11-06 08:24 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 08:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.74628
2024-11-06 08:24 - INFO - 	 Train Loss: 0.115
2024-11-06 08:24 - INFO - 	 Val. Loss: 0.116
2024-11-06 08:24 - INFO - 	 ROC-AUC: 0.973
2024-11-06 08:24 - INFO - 	 PR-AUC: 0.746
2024-11-06 08:24 - INFO - 	 Best Val. Loss: 0.116
2024-11-06 08:24 - INFO - 	 Best ROC-AUC: 0.973
2024-11-06 08:24 - INFO - 	 Best PR-AUC: 0.746
2024-11-06 08:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 08:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.734
2024-11-06 08:24 - INFO - ---------------------------------------------
2024-11-06 08:32 - INFO - ---------------------------------------------
2024-11-06 08:32 - INFO - Epoch: 04 | Time: 8m 1s
2024-11-06 08:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81148
2024-11-06 08:32 - INFO - 	 Train Loss: 0.096
2024-11-06 08:32 - INFO - 	 Val. Loss: 0.083
2024-11-06 08:32 - INFO - 	 ROC-AUC: 0.978
2024-11-06 08:32 - INFO - 	 PR-AUC: 0.811
2024-11-06 08:32 - INFO - 	 Best Val. Loss: 0.083
2024-11-06 08:32 - INFO - 	 Best ROC-AUC: 0.978
2024-11-06 08:32 - INFO - 	 Best PR-AUC: 0.811
2024-11-06 08:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 08:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-11-06 08:32 - INFO - ---------------------------------------------
2024-11-06 08:40 - INFO - ---------------------------------------------
2024-11-06 08:40 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 08:40 - INFO - 	 Train Loss: 0.088
2024-11-06 08:40 - INFO - 	 Val. Loss: 0.083
2024-11-06 08:40 - INFO - 	 ROC-AUC: 0.979
2024-11-06 08:40 - INFO - 	 PR-AUC: 0.794
2024-11-06 08:40 - INFO - 	 Best Val. Loss: 0.083
2024-11-06 08:40 - INFO - 	 Best ROC-AUC: 0.979
2024-11-06 08:40 - INFO - 	 Best PR-AUC: 0.811
2024-11-06 08:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 08:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-11-06 08:40 - INFO - ---------------------------------------------
2024-11-06 08:48 - INFO - ---------------------------------------------
2024-11-06 08:48 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-06 08:48 - INFO - 	 Train Loss: 0.084
2024-11-06 08:48 - INFO - 	 Val. Loss: 0.078
2024-11-06 08:48 - INFO - 	 ROC-AUC: 0.981
2024-11-06 08:48 - INFO - 	 PR-AUC: 0.801
2024-11-06 08:48 - INFO - 	 Best Val. Loss: 0.078
2024-11-06 08:48 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 08:48 - INFO - 	 Best PR-AUC: 0.811
2024-11-06 08:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 08:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.797
2024-11-06 08:48 - INFO - ---------------------------------------------
2024-11-06 08:56 - INFO - ---------------------------------------------
2024-11-06 08:56 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 08:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82598
2024-11-06 08:56 - INFO - 	 Train Loss: 0.080
2024-11-06 08:56 - INFO - 	 Val. Loss: 0.075
2024-11-06 08:56 - INFO - 	 ROC-AUC: 0.982
2024-11-06 08:56 - INFO - 	 PR-AUC: 0.826
2024-11-06 08:56 - INFO - 	 Best Val. Loss: 0.075
2024-11-06 08:56 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 08:56 - INFO - 	 Best PR-AUC: 0.826
2024-11-06 08:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 08:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.819
2024-11-06 08:56 - INFO - ---------------------------------------------
2024-11-06 09:04 - INFO - ---------------------------------------------
2024-11-06 09:04 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-06 09:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83787
2024-11-06 09:04 - INFO - 	 Train Loss: 0.077
2024-11-06 09:04 - INFO - 	 Val. Loss: 0.071
2024-11-06 09:04 - INFO - 	 ROC-AUC: 0.984
2024-11-06 09:04 - INFO - 	 PR-AUC: 0.838
2024-11-06 09:04 - INFO - 	 Best Val. Loss: 0.071
2024-11-06 09:04 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 09:04 - INFO - 	 Best PR-AUC: 0.838
2024-11-06 09:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 09:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-11-06 09:04 - INFO - ---------------------------------------------
2024-11-06 09:12 - INFO - ---------------------------------------------
2024-11-06 09:12 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 09:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8527
2024-11-06 09:12 - INFO - 	 Train Loss: 0.075
2024-11-06 09:12 - INFO - 	 Val. Loss: 0.068
2024-11-06 09:12 - INFO - 	 ROC-AUC: 0.984
2024-11-06 09:12 - INFO - 	 PR-AUC: 0.853
2024-11-06 09:12 - INFO - 	 Best Val. Loss: 0.068
2024-11-06 09:12 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 09:12 - INFO - 	 Best PR-AUC: 0.853
2024-11-06 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-06 09:12 - INFO - ---------------------------------------------
2024-11-06 09:20 - INFO - ---------------------------------------------
2024-11-06 09:20 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 09:20 - INFO - 	 Train Loss: 0.072
2024-11-06 09:20 - INFO - 	 Val. Loss: 0.071
2024-11-06 09:20 - INFO - 	 ROC-AUC: 0.984
2024-11-06 09:20 - INFO - 	 PR-AUC: 0.830
2024-11-06 09:20 - INFO - 	 Best Val. Loss: 0.068
2024-11-06 09:20 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 09:20 - INFO - 	 Best PR-AUC: 0.853
2024-11-06 09:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-06 09:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.838
2024-11-06 09:20 - INFO - ---------------------------------------------
2024-11-06 09:22 - INFO - Fit the preprocessing pipeline
2024-11-06 09:22 - INFO - Training using device: cuda
2024-11-06 09:22 - INFO - Creating generators
2024-11-06 09:22 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 09:22 - INFO - * Model:
2024-11-06 09:22 - INFO - * -----------
2024-11-06 09:22 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 09:22 - INFO - * -----------
2024-11-06 09:30 - INFO - ---------------------------------------------
2024-11-06 09:30 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 09:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21787
2024-11-06 09:30 - INFO - 	 Train Loss: 0.246
2024-11-06 09:30 - INFO - 	 Val. Loss: 0.428
2024-11-06 09:30 - INFO - 	 ROC-AUC: 0.776
2024-11-06 09:30 - INFO - 	 PR-AUC: 0.218
2024-11-06 09:30 - INFO - 	 Best Val. Loss: 0.428
2024-11-06 09:30 - INFO - 	 Best ROC-AUC: 0.776
2024-11-06 09:30 - INFO - 	 Best PR-AUC: 0.218
2024-11-06 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.750
2024-11-06 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.266
2024-11-06 09:30 - INFO - ---------------------------------------------
2024-11-06 09:38 - INFO - ---------------------------------------------
2024-11-06 09:38 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 09:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46677
2024-11-06 09:38 - INFO - 	 Train Loss: 0.186
2024-11-06 09:38 - INFO - 	 Val. Loss: 0.250
2024-11-06 09:38 - INFO - 	 ROC-AUC: 0.927
2024-11-06 09:38 - INFO - 	 PR-AUC: 0.467
2024-11-06 09:38 - INFO - 	 Best Val. Loss: 0.250
2024-11-06 09:38 - INFO - 	 Best ROC-AUC: 0.927
2024-11-06 09:38 - INFO - 	 Best PR-AUC: 0.467
2024-11-06 09:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.922
2024-11-06 09:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.512
2024-11-06 09:38 - INFO - ---------------------------------------------
2024-11-06 09:47 - INFO - ---------------------------------------------
2024-11-06 09:47 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 09:47 - INFO - 	 New best val_rocauc loss was found, current best value is 0.68668
2024-11-06 09:47 - INFO - 	 Train Loss: 0.123
2024-11-06 09:47 - INFO - 	 Val. Loss: 0.129
2024-11-06 09:47 - INFO - 	 ROC-AUC: 0.961
2024-11-06 09:47 - INFO - 	 PR-AUC: 0.687
2024-11-06 09:47 - INFO - 	 Best Val. Loss: 0.129
2024-11-06 09:47 - INFO - 	 Best ROC-AUC: 0.961
2024-11-06 09:47 - INFO - 	 Best PR-AUC: 0.687
2024-11-06 09:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-06 09:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.695
2024-11-06 09:47 - INFO - ---------------------------------------------
2024-11-06 09:55 - INFO - ---------------------------------------------
2024-11-06 09:55 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 09:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.79139
2024-11-06 09:55 - INFO - 	 Train Loss: 0.103
2024-11-06 09:55 - INFO - 	 Val. Loss: 0.105
2024-11-06 09:55 - INFO - 	 ROC-AUC: 0.976
2024-11-06 09:55 - INFO - 	 PR-AUC: 0.791
2024-11-06 09:55 - INFO - 	 Best Val. Loss: 0.105
2024-11-06 09:55 - INFO - 	 Best ROC-AUC: 0.976
2024-11-06 09:55 - INFO - 	 Best PR-AUC: 0.791
2024-11-06 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.972
2024-11-06 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.764
2024-11-06 09:55 - INFO - ---------------------------------------------
2024-11-06 10:03 - INFO - ---------------------------------------------
2024-11-06 10:03 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 10:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81689
2024-11-06 10:03 - INFO - 	 Train Loss: 0.090
2024-11-06 10:03 - INFO - 	 Val. Loss: 0.086
2024-11-06 10:03 - INFO - 	 ROC-AUC: 0.979
2024-11-06 10:03 - INFO - 	 PR-AUC: 0.817
2024-11-06 10:03 - INFO - 	 Best Val. Loss: 0.086
2024-11-06 10:03 - INFO - 	 Best ROC-AUC: 0.979
2024-11-06 10:03 - INFO - 	 Best PR-AUC: 0.817
2024-11-06 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.817
2024-11-06 10:03 - INFO - ---------------------------------------------
2024-11-06 10:11 - INFO - ---------------------------------------------
2024-11-06 10:11 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 10:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83796
2024-11-06 10:11 - INFO - 	 Train Loss: 0.084
2024-11-06 10:11 - INFO - 	 Val. Loss: 0.074
2024-11-06 10:11 - INFO - 	 ROC-AUC: 0.982
2024-11-06 10:11 - INFO - 	 PR-AUC: 0.838
2024-11-06 10:11 - INFO - 	 Best Val. Loss: 0.074
2024-11-06 10:11 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 10:11 - INFO - 	 Best PR-AUC: 0.838
2024-11-06 10:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 10:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-06 10:11 - INFO - ---------------------------------------------
2024-11-06 10:19 - INFO - ---------------------------------------------
2024-11-06 10:19 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 10:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84597
2024-11-06 10:19 - INFO - 	 Train Loss: 0.077
2024-11-06 10:19 - INFO - 	 Val. Loss: 0.072
2024-11-06 10:19 - INFO - 	 ROC-AUC: 0.982
2024-11-06 10:19 - INFO - 	 PR-AUC: 0.846
2024-11-06 10:19 - INFO - 	 Best Val. Loss: 0.072
2024-11-06 10:19 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 10:19 - INFO - 	 Best PR-AUC: 0.846
2024-11-06 10:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 10:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.837
2024-11-06 10:19 - INFO - ---------------------------------------------
2024-11-06 10:27 - INFO - ---------------------------------------------
2024-11-06 10:27 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 10:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86428
2024-11-06 10:27 - INFO - 	 Train Loss: 0.074
2024-11-06 10:27 - INFO - 	 Val. Loss: 0.069
2024-11-06 10:27 - INFO - 	 ROC-AUC: 0.984
2024-11-06 10:27 - INFO - 	 PR-AUC: 0.864
2024-11-06 10:27 - INFO - 	 Best Val. Loss: 0.069
2024-11-06 10:27 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 10:27 - INFO - 	 Best PR-AUC: 0.864
2024-11-06 10:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 10:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-06 10:27 - INFO - ---------------------------------------------
2024-11-06 10:35 - INFO - ---------------------------------------------
2024-11-06 10:35 - INFO - Epoch: 09 | Time: 8m 2s
2024-11-06 10:35 - INFO - 	 Train Loss: 0.070
2024-11-06 10:35 - INFO - 	 Val. Loss: 0.065
2024-11-06 10:35 - INFO - 	 ROC-AUC: 0.986
2024-11-06 10:35 - INFO - 	 PR-AUC: 0.859
2024-11-06 10:35 - INFO - 	 Best Val. Loss: 0.065
2024-11-06 10:35 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 10:35 - INFO - 	 Best PR-AUC: 0.864
2024-11-06 10:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 10:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-11-06 10:35 - INFO - ---------------------------------------------
2024-11-06 10:43 - INFO - ---------------------------------------------
2024-11-06 10:43 - INFO - Epoch: 10 | Time: 8m 2s
2024-11-06 10:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88591
2024-11-06 10:43 - INFO - 	 Train Loss: 0.068
2024-11-06 10:43 - INFO - 	 Val. Loss: 0.062
2024-11-06 10:43 - INFO - 	 ROC-AUC: 0.987
2024-11-06 10:43 - INFO - 	 PR-AUC: 0.886
2024-11-06 10:43 - INFO - 	 Best Val. Loss: 0.062
2024-11-06 10:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-06 10:43 - INFO - 	 Best PR-AUC: 0.886
2024-11-06 10:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-06 10:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-11-06 10:43 - INFO - ---------------------------------------------
2024-11-06 10:45 - INFO - Fit the preprocessing pipeline
2024-11-06 10:45 - INFO - Training using device: cuda
2024-11-06 10:45 - INFO - Creating generators
2024-11-06 10:45 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 10:45 - INFO - * Model:
2024-11-06 10:45 - INFO - * -----------
2024-11-06 10:45 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 10:45 - INFO - * -----------
2024-11-06 10:53 - INFO - ---------------------------------------------
2024-11-06 10:53 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 10:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.19987
2024-11-06 10:53 - INFO - 	 Train Loss: 0.243
2024-11-06 10:53 - INFO - 	 Val. Loss: 0.394
2024-11-06 10:53 - INFO - 	 ROC-AUC: 0.749
2024-11-06 10:53 - INFO - 	 PR-AUC: 0.200
2024-11-06 10:53 - INFO - 	 Best Val. Loss: 0.394
2024-11-06 10:53 - INFO - 	 Best ROC-AUC: 0.749
2024-11-06 10:53 - INFO - 	 Best PR-AUC: 0.200
2024-11-06 10:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.727
2024-11-06 10:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.246
2024-11-06 10:53 - INFO - ---------------------------------------------
2024-11-06 11:01 - INFO - ---------------------------------------------
2024-11-06 11:01 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 11:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45098
2024-11-06 11:01 - INFO - 	 Train Loss: 0.171
2024-11-06 11:01 - INFO - 	 Val. Loss: 0.321
2024-11-06 11:01 - INFO - 	 ROC-AUC: 0.925
2024-11-06 11:01 - INFO - 	 PR-AUC: 0.451
2024-11-06 11:01 - INFO - 	 Best Val. Loss: 0.321
2024-11-06 11:01 - INFO - 	 Best ROC-AUC: 0.925
2024-11-06 11:01 - INFO - 	 Best PR-AUC: 0.451
2024-11-06 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.927
2024-11-06 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.512
2024-11-06 11:01 - INFO - ---------------------------------------------
2024-11-06 11:09 - INFO - ---------------------------------------------
2024-11-06 11:09 - INFO - Epoch: 03 | Time: 8m 2s
2024-11-06 11:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.61337
2024-11-06 11:09 - INFO - 	 Train Loss: 0.127
2024-11-06 11:09 - INFO - 	 Val. Loss: 0.217
2024-11-06 11:09 - INFO - 	 ROC-AUC: 0.951
2024-11-06 11:09 - INFO - 	 PR-AUC: 0.613
2024-11-06 11:09 - INFO - 	 Best Val. Loss: 0.217
2024-11-06 11:09 - INFO - 	 Best ROC-AUC: 0.951
2024-11-06 11:09 - INFO - 	 Best PR-AUC: 0.613
2024-11-06 11:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-06 11:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.623
2024-11-06 11:09 - INFO - ---------------------------------------------
2024-11-06 11:17 - INFO - ---------------------------------------------
2024-11-06 11:17 - INFO - Epoch: 04 | Time: 8m 2s
2024-11-06 11:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73936
2024-11-06 11:17 - INFO - 	 Train Loss: 0.109
2024-11-06 11:17 - INFO - 	 Val. Loss: 0.133
2024-11-06 11:17 - INFO - 	 ROC-AUC: 0.971
2024-11-06 11:17 - INFO - 	 PR-AUC: 0.739
2024-11-06 11:17 - INFO - 	 Best Val. Loss: 0.133
2024-11-06 11:17 - INFO - 	 Best ROC-AUC: 0.971
2024-11-06 11:17 - INFO - 	 Best PR-AUC: 0.739
2024-11-06 11:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 11:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-11-06 11:17 - INFO - ---------------------------------------------
2024-11-06 11:25 - INFO - ---------------------------------------------
2024-11-06 11:25 - INFO - Epoch: 05 | Time: 8m 1s
2024-11-06 11:25 - INFO - 	 Train Loss: 0.100
2024-11-06 11:25 - INFO - 	 Val. Loss: 0.126
2024-11-06 11:25 - INFO - 	 ROC-AUC: 0.968
2024-11-06 11:25 - INFO - 	 PR-AUC: 0.734
2024-11-06 11:25 - INFO - 	 Best Val. Loss: 0.126
2024-11-06 11:25 - INFO - 	 Best ROC-AUC: 0.971
2024-11-06 11:25 - INFO - 	 Best PR-AUC: 0.739
2024-11-06 11:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.969
2024-11-06 11:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.730
2024-11-06 11:25 - INFO - ---------------------------------------------
2024-11-06 11:33 - INFO - ---------------------------------------------
2024-11-06 11:33 - INFO - Epoch: 06 | Time: 8m 1s
2024-11-06 11:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82222
2024-11-06 11:33 - INFO - 	 Train Loss: 0.092
2024-11-06 11:33 - INFO - 	 Val. Loss: 0.084
2024-11-06 11:33 - INFO - 	 ROC-AUC: 0.980
2024-11-06 11:33 - INFO - 	 PR-AUC: 0.822
2024-11-06 11:33 - INFO - 	 Best Val. Loss: 0.084
2024-11-06 11:33 - INFO - 	 Best ROC-AUC: 0.980
2024-11-06 11:33 - INFO - 	 Best PR-AUC: 0.822
2024-11-06 11:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-06 11:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.789
2024-11-06 11:33 - INFO - ---------------------------------------------
2024-11-06 11:42 - INFO - ---------------------------------------------
2024-11-06 11:42 - INFO - Epoch: 07 | Time: 8m 2s
2024-11-06 11:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.82991
2024-11-06 11:42 - INFO - 	 Train Loss: 0.085
2024-11-06 11:42 - INFO - 	 Val. Loss: 0.085
2024-11-06 11:42 - INFO - 	 ROC-AUC: 0.981
2024-11-06 11:42 - INFO - 	 PR-AUC: 0.830
2024-11-06 11:42 - INFO - 	 Best Val. Loss: 0.084
2024-11-06 11:42 - INFO - 	 Best ROC-AUC: 0.981
2024-11-06 11:42 - INFO - 	 Best PR-AUC: 0.830
2024-11-06 11:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.978
2024-11-06 11:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.804
2024-11-06 11:42 - INFO - ---------------------------------------------
2024-11-06 11:50 - INFO - ---------------------------------------------
2024-11-06 11:50 - INFO - Epoch: 08 | Time: 8m 1s
2024-11-06 11:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.838
2024-11-06 11:50 - INFO - 	 Train Loss: 0.078
2024-11-06 11:50 - INFO - 	 Val. Loss: 0.078
2024-11-06 11:50 - INFO - 	 ROC-AUC: 0.983
2024-11-06 11:50 - INFO - 	 PR-AUC: 0.838
2024-11-06 11:50 - INFO - 	 Best Val. Loss: 0.078
2024-11-06 11:50 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 11:50 - INFO - 	 Best PR-AUC: 0.838
2024-11-06 11:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 11:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-06 11:50 - INFO - ---------------------------------------------
2024-11-06 11:58 - INFO - ---------------------------------------------
2024-11-06 11:58 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 11:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86118
2024-11-06 11:58 - INFO - 	 Train Loss: 0.074
2024-11-06 11:58 - INFO - 	 Val. Loss: 0.065
2024-11-06 11:58 - INFO - 	 ROC-AUC: 0.986
2024-11-06 11:58 - INFO - 	 PR-AUC: 0.861
2024-11-06 11:58 - INFO - 	 Best Val. Loss: 0.065
2024-11-06 11:58 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 11:58 - INFO - 	 Best PR-AUC: 0.861
2024-11-06 11:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 11:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.868
2024-11-06 11:58 - INFO - ---------------------------------------------
2024-11-06 12:06 - INFO - ---------------------------------------------
2024-11-06 12:06 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 12:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86296
2024-11-06 12:06 - INFO - 	 Train Loss: 0.069
2024-11-06 12:06 - INFO - 	 Val. Loss: 0.066
2024-11-06 12:06 - INFO - 	 ROC-AUC: 0.986
2024-11-06 12:06 - INFO - 	 PR-AUC: 0.863
2024-11-06 12:06 - INFO - 	 Best Val. Loss: 0.065
2024-11-06 12:06 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 12:06 - INFO - 	 Best PR-AUC: 0.863
2024-11-06 12:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 12:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.861
2024-11-06 12:06 - INFO - ---------------------------------------------
2024-11-06 12:08 - INFO - Fit the preprocessing pipeline
2024-11-06 12:08 - INFO - Training using device: cuda
2024-11-06 12:08 - INFO - Creating generators
2024-11-06 12:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-06 12:08 - INFO - * Model:
2024-11-06 12:08 - INFO - * -----------
2024-11-06 12:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-06 12:08 - INFO - * -----------
2024-11-06 12:16 - INFO - ---------------------------------------------
2024-11-06 12:16 - INFO - Epoch: 01 | Time: 8m 2s
2024-11-06 12:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.21839
2024-11-06 12:16 - INFO - 	 Train Loss: 0.246
2024-11-06 12:16 - INFO - 	 Val. Loss: 0.568
2024-11-06 12:16 - INFO - 	 ROC-AUC: 0.764
2024-11-06 12:16 - INFO - 	 PR-AUC: 0.218
2024-11-06 12:16 - INFO - 	 Best Val. Loss: 0.568
2024-11-06 12:16 - INFO - 	 Best ROC-AUC: 0.764
2024-11-06 12:16 - INFO - 	 Best PR-AUC: 0.218
2024-11-06 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.753
2024-11-06 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.265
2024-11-06 12:16 - INFO - ---------------------------------------------
2024-11-06 12:24 - INFO - ---------------------------------------------
2024-11-06 12:24 - INFO - Epoch: 02 | Time: 8m 2s
2024-11-06 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58525
2024-11-06 12:24 - INFO - 	 Train Loss: 0.171
2024-11-06 12:24 - INFO - 	 Val. Loss: 0.162
2024-11-06 12:24 - INFO - 	 ROC-AUC: 0.951
2024-11-06 12:24 - INFO - 	 PR-AUC: 0.585
2024-11-06 12:24 - INFO - 	 Best Val. Loss: 0.162
2024-11-06 12:24 - INFO - 	 Best ROC-AUC: 0.951
2024-11-06 12:24 - INFO - 	 Best PR-AUC: 0.585
2024-11-06 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.952
2024-11-06 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.604
2024-11-06 12:24 - INFO - ---------------------------------------------
2024-11-06 12:32 - INFO - ---------------------------------------------
2024-11-06 12:32 - INFO - Epoch: 03 | Time: 8m 1s
2024-11-06 12:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.71877
2024-11-06 12:32 - INFO - 	 Train Loss: 0.113
2024-11-06 12:32 - INFO - 	 Val. Loss: 0.136
2024-11-06 12:32 - INFO - 	 ROC-AUC: 0.968
2024-11-06 12:32 - INFO - 	 PR-AUC: 0.719
2024-11-06 12:32 - INFO - 	 Best Val. Loss: 0.136
2024-11-06 12:32 - INFO - 	 Best ROC-AUC: 0.968
2024-11-06 12:32 - INFO - 	 Best PR-AUC: 0.719
2024-11-06 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.965
2024-11-06 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.725
2024-11-06 12:32 - INFO - ---------------------------------------------
2024-11-06 12:40 - INFO - ---------------------------------------------
2024-11-06 12:40 - INFO - Epoch: 04 | Time: 8m 3s
2024-11-06 12:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.78157
2024-11-06 12:40 - INFO - 	 Train Loss: 0.096
2024-11-06 12:40 - INFO - 	 Val. Loss: 0.089
2024-11-06 12:40 - INFO - 	 ROC-AUC: 0.978
2024-11-06 12:40 - INFO - 	 PR-AUC: 0.782
2024-11-06 12:40 - INFO - 	 Best Val. Loss: 0.089
2024-11-06 12:40 - INFO - 	 Best ROC-AUC: 0.978
2024-11-06 12:40 - INFO - 	 Best PR-AUC: 0.782
2024-11-06 12:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.976
2024-11-06 12:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.783
2024-11-06 12:40 - INFO - ---------------------------------------------
2024-11-06 12:48 - INFO - ---------------------------------------------
2024-11-06 12:48 - INFO - Epoch: 05 | Time: 8m 2s
2024-11-06 12:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.81731
2024-11-06 12:48 - INFO - 	 Train Loss: 0.088
2024-11-06 12:48 - INFO - 	 Val. Loss: 0.080
2024-11-06 12:48 - INFO - 	 ROC-AUC: 0.982
2024-11-06 12:48 - INFO - 	 PR-AUC: 0.817
2024-11-06 12:48 - INFO - 	 Best Val. Loss: 0.080
2024-11-06 12:48 - INFO - 	 Best ROC-AUC: 0.982
2024-11-06 12:48 - INFO - 	 Best PR-AUC: 0.817
2024-11-06 12:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.977
2024-11-06 12:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.794
2024-11-06 12:48 - INFO - ---------------------------------------------
2024-11-06 12:56 - INFO - ---------------------------------------------
2024-11-06 12:56 - INFO - Epoch: 06 | Time: 8m 2s
2024-11-06 12:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83836
2024-11-06 12:56 - INFO - 	 Train Loss: 0.083
2024-11-06 12:56 - INFO - 	 Val. Loss: 0.077
2024-11-06 12:56 - INFO - 	 ROC-AUC: 0.983
2024-11-06 12:56 - INFO - 	 PR-AUC: 0.838
2024-11-06 12:56 - INFO - 	 Best Val. Loss: 0.077
2024-11-06 12:56 - INFO - 	 Best ROC-AUC: 0.983
2024-11-06 12:56 - INFO - 	 Best PR-AUC: 0.838
2024-11-06 12:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.979
2024-11-06 12:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.795
2024-11-06 12:56 - INFO - ---------------------------------------------
2024-11-06 13:04 - INFO - ---------------------------------------------
2024-11-06 13:04 - INFO - Epoch: 07 | Time: 8m 1s
2024-11-06 13:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85061
2024-11-06 13:04 - INFO - 	 Train Loss: 0.080
2024-11-06 13:04 - INFO - 	 Val. Loss: 0.074
2024-11-06 13:04 - INFO - 	 ROC-AUC: 0.984
2024-11-06 13:04 - INFO - 	 PR-AUC: 0.851
2024-11-06 13:04 - INFO - 	 Best Val. Loss: 0.074
2024-11-06 13:04 - INFO - 	 Best ROC-AUC: 0.984
2024-11-06 13:04 - INFO - 	 Best PR-AUC: 0.851
2024-11-06 13:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.981
2024-11-06 13:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-11-06 13:04 - INFO - ---------------------------------------------
2024-11-06 13:12 - INFO - ---------------------------------------------
2024-11-06 13:12 - INFO - Epoch: 08 | Time: 8m 2s
2024-11-06 13:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86609
2024-11-06 13:12 - INFO - 	 Train Loss: 0.077
2024-11-06 13:12 - INFO - 	 Val. Loss: 0.066
2024-11-06 13:12 - INFO - 	 ROC-AUC: 0.986
2024-11-06 13:12 - INFO - 	 PR-AUC: 0.866
2024-11-06 13:12 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 13:12 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 13:12 - INFO - 	 Best PR-AUC: 0.866
2024-11-06 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-06 13:12 - INFO - ---------------------------------------------
2024-11-06 13:20 - INFO - ---------------------------------------------
2024-11-06 13:20 - INFO - Epoch: 09 | Time: 8m 1s
2024-11-06 13:20 - INFO - 	 Train Loss: 0.074
2024-11-06 13:20 - INFO - 	 Val. Loss: 0.068
2024-11-06 13:20 - INFO - 	 ROC-AUC: 0.985
2024-11-06 13:20 - INFO - 	 PR-AUC: 0.859
2024-11-06 13:20 - INFO - 	 Best Val. Loss: 0.066
2024-11-06 13:20 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 13:20 - INFO - 	 Best PR-AUC: 0.866
2024-11-06 13:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 13:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-11-06 13:20 - INFO - ---------------------------------------------
2024-11-06 13:28 - INFO - ---------------------------------------------
2024-11-06 13:28 - INFO - Epoch: 10 | Time: 8m 1s
2024-11-06 13:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87038
2024-11-06 13:28 - INFO - 	 Train Loss: 0.072
2024-11-06 13:28 - INFO - 	 Val. Loss: 0.065
2024-11-06 13:28 - INFO - 	 ROC-AUC: 0.985
2024-11-06 13:28 - INFO - 	 PR-AUC: 0.870
2024-11-06 13:28 - INFO - 	 Best Val. Loss: 0.065
2024-11-06 13:28 - INFO - 	 Best ROC-AUC: 0.986
2024-11-06 13:28 - INFO - 	 Best PR-AUC: 0.870
2024-11-06 13:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-06 13:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-11-06 13:28 - INFO - ---------------------------------------------
