2024-10-18 00:35 - INFO - Fit the preprocessing pipeline
2024-10-18 00:35 - INFO - Training using device: cuda
2024-10-18 00:35 - INFO - Creating generators
2024-10-18 00:35 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 00:35 - INFO - * Model:
2024-10-18 00:35 - INFO - * -----------
2024-10-18 00:35 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 00:35 - INFO - * -----------
2024-10-18 00:43 - INFO - ---------------------------------------------
2024-10-18 00:43 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 00:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83934
2024-10-18 00:43 - INFO - 	 Train Loss: 0.086
2024-10-18 00:43 - INFO - 	 Val. Loss: 0.070
2024-10-18 00:43 - INFO - 	 ROC-AUC: 0.984
2024-10-18 00:43 - INFO - 	 PR-AUC: 0.839
2024-10-18 00:43 - INFO - 	 Best Val. Loss: 0.070
2024-10-18 00:43 - INFO - 	 Best ROC-AUC: 0.984
2024-10-18 00:43 - INFO - 	 Best PR-AUC: 0.839
2024-10-18 00:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 00:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.824
2024-10-18 00:43 - INFO - ---------------------------------------------
2024-10-18 00:51 - INFO - ---------------------------------------------
2024-10-18 00:51 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 00:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85507
2024-10-18 00:51 - INFO - 	 Train Loss: 0.073
2024-10-18 00:51 - INFO - 	 Val. Loss: 0.066
2024-10-18 00:51 - INFO - 	 ROC-AUC: 0.985
2024-10-18 00:51 - INFO - 	 PR-AUC: 0.855
2024-10-18 00:51 - INFO - 	 Best Val. Loss: 0.066
2024-10-18 00:51 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 00:51 - INFO - 	 Best PR-AUC: 0.855
2024-10-18 00:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 00:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-18 00:51 - INFO - ---------------------------------------------
2024-10-18 00:59 - INFO - ---------------------------------------------
2024-10-18 00:59 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 00:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86587
2024-10-18 00:59 - INFO - 	 Train Loss: 0.070
2024-10-18 00:59 - INFO - 	 Val. Loss: 0.063
2024-10-18 00:59 - INFO - 	 ROC-AUC: 0.987
2024-10-18 00:59 - INFO - 	 PR-AUC: 0.866
2024-10-18 00:59 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 00:59 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 00:59 - INFO - 	 Best PR-AUC: 0.866
2024-10-18 00:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 00:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.856
2024-10-18 00:59 - INFO - ---------------------------------------------
2024-10-18 01:07 - INFO - ---------------------------------------------
2024-10-18 01:07 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 01:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86924
2024-10-18 01:07 - INFO - 	 Train Loss: 0.068
2024-10-18 01:07 - INFO - 	 Val. Loss: 0.062
2024-10-18 01:07 - INFO - 	 ROC-AUC: 0.987
2024-10-18 01:07 - INFO - 	 PR-AUC: 0.869
2024-10-18 01:07 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 01:07 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 01:07 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 01:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 01:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-18 01:07 - INFO - ---------------------------------------------
2024-10-18 01:15 - INFO - ---------------------------------------------
2024-10-18 01:15 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 01:15 - INFO - 	 Train Loss: 0.066
2024-10-18 01:15 - INFO - 	 Val. Loss: 0.063
2024-10-18 01:15 - INFO - 	 ROC-AUC: 0.986
2024-10-18 01:15 - INFO - 	 PR-AUC: 0.867
2024-10-18 01:15 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 01:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 01:15 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 01:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 01:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-18 01:15 - INFO - ---------------------------------------------
2024-10-18 01:23 - INFO - ---------------------------------------------
2024-10-18 01:23 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-18 01:23 - INFO - 	 Train Loss: 0.066
2024-10-18 01:23 - INFO - 	 Val. Loss: 0.062
2024-10-18 01:23 - INFO - 	 ROC-AUC: 0.987
2024-10-18 01:23 - INFO - 	 PR-AUC: 0.862
2024-10-18 01:23 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 01:23 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 01:23 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 01:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 01:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-18 01:23 - INFO - ---------------------------------------------
2024-10-18 01:31 - INFO - ---------------------------------------------
2024-10-18 01:31 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 01:31 - INFO - 	 Train Loss: 0.065
2024-10-18 01:31 - INFO - 	 Val. Loss: 0.063
2024-10-18 01:31 - INFO - 	 ROC-AUC: 0.986
2024-10-18 01:31 - INFO - 	 PR-AUC: 0.865
2024-10-18 01:31 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 01:31 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 01:31 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-18 01:31 - INFO - ---------------------------------------------
2024-10-18 01:39 - INFO - ---------------------------------------------
2024-10-18 01:39 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-18 01:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87627
2024-10-18 01:39 - INFO - 	 Train Loss: 0.063
2024-10-18 01:39 - INFO - 	 Val. Loss: 0.061
2024-10-18 01:39 - INFO - 	 ROC-AUC: 0.986
2024-10-18 01:39 - INFO - 	 PR-AUC: 0.876
2024-10-18 01:39 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 01:39 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 01:39 - INFO - 	 Best PR-AUC: 0.876
2024-10-18 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-18 01:39 - INFO - ---------------------------------------------
2024-10-18 01:48 - INFO - ---------------------------------------------
2024-10-18 01:48 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 01:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88155
2024-10-18 01:48 - INFO - 	 Train Loss: 0.062
2024-10-18 01:48 - INFO - 	 Val. Loss: 0.058
2024-10-18 01:48 - INFO - 	 ROC-AUC: 0.988
2024-10-18 01:48 - INFO - 	 PR-AUC: 0.882
2024-10-18 01:48 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 01:48 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 01:48 - INFO - 	 Best PR-AUC: 0.882
2024-10-18 01:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 01:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-18 01:48 - INFO - ---------------------------------------------
2024-10-18 01:56 - INFO - ---------------------------------------------
2024-10-18 01:56 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-18 01:56 - INFO - 	 Train Loss: 0.061
2024-10-18 01:56 - INFO - 	 Val. Loss: 0.061
2024-10-18 01:56 - INFO - 	 ROC-AUC: 0.987
2024-10-18 01:56 - INFO - 	 PR-AUC: 0.874
2024-10-18 01:56 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 01:56 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 01:56 - INFO - 	 Best PR-AUC: 0.882
2024-10-18 01:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 01:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.886
2024-10-18 01:56 - INFO - ---------------------------------------------
2024-10-18 01:58 - INFO - Fit the preprocessing pipeline
2024-10-18 01:58 - INFO - Training using device: cuda
2024-10-18 01:58 - INFO - Creating generators
2024-10-18 01:58 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 01:58 - INFO - * Model:
2024-10-18 01:58 - INFO - * -----------
2024-10-18 01:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 01:58 - INFO - * -----------
2024-10-18 02:06 - INFO - ---------------------------------------------
2024-10-18 02:06 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 02:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85351
2024-10-18 02:06 - INFO - 	 Train Loss: 0.086
2024-10-18 02:06 - INFO - 	 Val. Loss: 0.068
2024-10-18 02:06 - INFO - 	 ROC-AUC: 0.986
2024-10-18 02:06 - INFO - 	 PR-AUC: 0.854
2024-10-18 02:06 - INFO - 	 Best Val. Loss: 0.068
2024-10-18 02:06 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 02:06 - INFO - 	 Best PR-AUC: 0.854
2024-10-18 02:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-18 02:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-18 02:06 - INFO - ---------------------------------------------
2024-10-18 02:14 - INFO - ---------------------------------------------
2024-10-18 02:14 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-18 02:14 - INFO - 	 Train Loss: 0.075
2024-10-18 02:14 - INFO - 	 Val. Loss: 0.068
2024-10-18 02:14 - INFO - 	 ROC-AUC: 0.986
2024-10-18 02:14 - INFO - 	 PR-AUC: 0.842
2024-10-18 02:14 - INFO - 	 Best Val. Loss: 0.068
2024-10-18 02:14 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 02:14 - INFO - 	 Best PR-AUC: 0.854
2024-10-18 02:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 02:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-18 02:14 - INFO - ---------------------------------------------
2024-10-18 02:22 - INFO - ---------------------------------------------
2024-10-18 02:22 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-18 02:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86084
2024-10-18 02:22 - INFO - 	 Train Loss: 0.070
2024-10-18 02:22 - INFO - 	 Val. Loss: 0.063
2024-10-18 02:22 - INFO - 	 ROC-AUC: 0.987
2024-10-18 02:22 - INFO - 	 PR-AUC: 0.861
2024-10-18 02:22 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 02:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 02:22 - INFO - 	 Best PR-AUC: 0.861
2024-10-18 02:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 02:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-18 02:22 - INFO - ---------------------------------------------
2024-10-18 02:30 - INFO - ---------------------------------------------
2024-10-18 02:30 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-18 02:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87244
2024-10-18 02:30 - INFO - 	 Train Loss: 0.067
2024-10-18 02:30 - INFO - 	 Val. Loss: 0.062
2024-10-18 02:30 - INFO - 	 ROC-AUC: 0.986
2024-10-18 02:30 - INFO - 	 PR-AUC: 0.872
2024-10-18 02:30 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 02:30 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 02:30 - INFO - 	 Best PR-AUC: 0.872
2024-10-18 02:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 02:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-18 02:30 - INFO - ---------------------------------------------
2024-10-18 02:38 - INFO - ---------------------------------------------
2024-10-18 02:38 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-18 02:38 - INFO - 	 Train Loss: 0.066
2024-10-18 02:38 - INFO - 	 Val. Loss: 0.062
2024-10-18 02:38 - INFO - 	 ROC-AUC: 0.988
2024-10-18 02:38 - INFO - 	 PR-AUC: 0.869
2024-10-18 02:38 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 02:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 02:38 - INFO - 	 Best PR-AUC: 0.872
2024-10-18 02:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 02:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-18 02:38 - INFO - ---------------------------------------------
2024-10-18 02:46 - INFO - ---------------------------------------------
2024-10-18 02:46 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-18 02:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87622
2024-10-18 02:46 - INFO - 	 Train Loss: 0.064
2024-10-18 02:46 - INFO - 	 Val. Loss: 0.061
2024-10-18 02:46 - INFO - 	 ROC-AUC: 0.986
2024-10-18 02:46 - INFO - 	 PR-AUC: 0.876
2024-10-18 02:46 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 02:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 02:46 - INFO - 	 Best PR-AUC: 0.876
2024-10-18 02:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 02:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 02:46 - INFO - ---------------------------------------------
2024-10-18 02:54 - INFO - ---------------------------------------------
2024-10-18 02:54 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-18 02:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8832
2024-10-18 02:54 - INFO - 	 Train Loss: 0.064
2024-10-18 02:54 - INFO - 	 Val. Loss: 0.060
2024-10-18 02:54 - INFO - 	 ROC-AUC: 0.986
2024-10-18 02:54 - INFO - 	 PR-AUC: 0.883
2024-10-18 02:54 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 02:54 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 02:54 - INFO - 	 Best PR-AUC: 0.883
2024-10-18 02:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 02:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 02:54 - INFO - ---------------------------------------------
2024-10-18 03:02 - INFO - ---------------------------------------------
2024-10-18 03:02 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-18 03:02 - INFO - 	 Train Loss: 0.064
2024-10-18 03:02 - INFO - 	 Val. Loss: 0.061
2024-10-18 03:02 - INFO - 	 ROC-AUC: 0.987
2024-10-18 03:02 - INFO - 	 PR-AUC: 0.874
2024-10-18 03:02 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 03:02 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 03:02 - INFO - 	 Best PR-AUC: 0.883
2024-10-18 03:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 03:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 03:02 - INFO - ---------------------------------------------
2024-10-18 03:10 - INFO - ---------------------------------------------
2024-10-18 03:10 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-18 03:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88459
2024-10-18 03:10 - INFO - 	 Train Loss: 0.062
2024-10-18 03:10 - INFO - 	 Val. Loss: 0.059
2024-10-18 03:10 - INFO - 	 ROC-AUC: 0.987
2024-10-18 03:10 - INFO - 	 PR-AUC: 0.885
2024-10-18 03:10 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 03:10 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 03:10 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 03:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 03:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-18 03:10 - INFO - ---------------------------------------------
2024-10-18 03:18 - INFO - ---------------------------------------------
2024-10-18 03:18 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-18 03:18 - INFO - 	 Train Loss: 0.061
2024-10-18 03:18 - INFO - 	 Val. Loss: 0.062
2024-10-18 03:18 - INFO - 	 ROC-AUC: 0.986
2024-10-18 03:18 - INFO - 	 PR-AUC: 0.867
2024-10-18 03:18 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 03:18 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 03:18 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 03:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 03:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-18 03:18 - INFO - ---------------------------------------------
2024-10-18 03:20 - INFO - Fit the preprocessing pipeline
2024-10-18 03:20 - INFO - Training using device: cuda
2024-10-18 03:20 - INFO - Creating generators
2024-10-18 03:20 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 03:20 - INFO - * Model:
2024-10-18 03:20 - INFO - * -----------
2024-10-18 03:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 03:20 - INFO - * -----------
2024-10-18 03:28 - INFO - ---------------------------------------------
2024-10-18 03:28 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-18 03:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84584
2024-10-18 03:28 - INFO - 	 Train Loss: 0.086
2024-10-18 03:28 - INFO - 	 Val. Loss: 0.069
2024-10-18 03:28 - INFO - 	 ROC-AUC: 0.985
2024-10-18 03:28 - INFO - 	 PR-AUC: 0.846
2024-10-18 03:28 - INFO - 	 Best Val. Loss: 0.069
2024-10-18 03:28 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 03:28 - INFO - 	 Best PR-AUC: 0.846
2024-10-18 03:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 03:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.839
2024-10-18 03:28 - INFO - ---------------------------------------------
2024-10-18 03:36 - INFO - ---------------------------------------------
2024-10-18 03:36 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-18 03:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86562
2024-10-18 03:36 - INFO - 	 Train Loss: 0.073
2024-10-18 03:36 - INFO - 	 Val. Loss: 0.063
2024-10-18 03:36 - INFO - 	 ROC-AUC: 0.987
2024-10-18 03:36 - INFO - 	 PR-AUC: 0.866
2024-10-18 03:36 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 03:36 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 03:36 - INFO - 	 Best PR-AUC: 0.866
2024-10-18 03:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 03:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-18 03:36 - INFO - ---------------------------------------------
2024-10-18 03:44 - INFO - ---------------------------------------------
2024-10-18 03:44 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-18 03:44 - INFO - 	 Train Loss: 0.069
2024-10-18 03:44 - INFO - 	 Val. Loss: 0.064
2024-10-18 03:44 - INFO - 	 ROC-AUC: 0.987
2024-10-18 03:44 - INFO - 	 PR-AUC: 0.863
2024-10-18 03:44 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 03:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 03:44 - INFO - 	 Best PR-AUC: 0.866
2024-10-18 03:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 03:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.844
2024-10-18 03:44 - INFO - ---------------------------------------------
2024-10-18 03:52 - INFO - ---------------------------------------------
2024-10-18 03:52 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-18 03:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86852
2024-10-18 03:52 - INFO - 	 Train Loss: 0.068
2024-10-18 03:52 - INFO - 	 Val. Loss: 0.060
2024-10-18 03:52 - INFO - 	 ROC-AUC: 0.988
2024-10-18 03:52 - INFO - 	 PR-AUC: 0.869
2024-10-18 03:52 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 03:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 03:52 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 03:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 03:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-18 03:52 - INFO - ---------------------------------------------
2024-10-18 04:00 - INFO - ---------------------------------------------
2024-10-18 04:00 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-18 04:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87786
2024-10-18 04:00 - INFO - 	 Train Loss: 0.067
2024-10-18 04:00 - INFO - 	 Val. Loss: 0.059
2024-10-18 04:00 - INFO - 	 ROC-AUC: 0.987
2024-10-18 04:00 - INFO - 	 PR-AUC: 0.878
2024-10-18 04:00 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 04:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 04:00 - INFO - 	 Best PR-AUC: 0.878
2024-10-18 04:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 04:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-18 04:00 - INFO - ---------------------------------------------
2024-10-18 04:08 - INFO - ---------------------------------------------
2024-10-18 04:08 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-18 04:08 - INFO - 	 Train Loss: 0.065
2024-10-18 04:08 - INFO - 	 Val. Loss: 0.060
2024-10-18 04:08 - INFO - 	 ROC-AUC: 0.987
2024-10-18 04:08 - INFO - 	 PR-AUC: 0.873
2024-10-18 04:08 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 04:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 04:08 - INFO - 	 Best PR-AUC: 0.878
2024-10-18 04:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 04:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-18 04:08 - INFO - ---------------------------------------------
2024-10-18 04:16 - INFO - ---------------------------------------------
2024-10-18 04:16 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-18 04:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88492
2024-10-18 04:16 - INFO - 	 Train Loss: 0.064
2024-10-18 04:16 - INFO - 	 Val. Loss: 0.060
2024-10-18 04:16 - INFO - 	 ROC-AUC: 0.988
2024-10-18 04:16 - INFO - 	 PR-AUC: 0.885
2024-10-18 04:16 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 04:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 04:16 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 04:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 04:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-18 04:16 - INFO - ---------------------------------------------
2024-10-18 04:24 - INFO - ---------------------------------------------
2024-10-18 04:24 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-18 04:24 - INFO - 	 Train Loss: 0.064
2024-10-18 04:24 - INFO - 	 Val. Loss: 0.061
2024-10-18 04:24 - INFO - 	 ROC-AUC: 0.986
2024-10-18 04:24 - INFO - 	 PR-AUC: 0.877
2024-10-18 04:24 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 04:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 04:24 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 04:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 04:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-18 04:24 - INFO - ---------------------------------------------
2024-10-18 04:32 - INFO - ---------------------------------------------
2024-10-18 04:32 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-18 04:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88543
2024-10-18 04:32 - INFO - 	 Train Loss: 0.062
2024-10-18 04:32 - INFO - 	 Val. Loss: 0.060
2024-10-18 04:32 - INFO - 	 ROC-AUC: 0.988
2024-10-18 04:32 - INFO - 	 PR-AUC: 0.885
2024-10-18 04:32 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 04:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 04:32 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 04:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 04:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-18 04:32 - INFO - ---------------------------------------------
2024-10-18 04:40 - INFO - ---------------------------------------------
2024-10-18 04:40 - INFO - Epoch: 10 | Time: 7m 59s
2024-10-18 04:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89084
2024-10-18 04:40 - INFO - 	 Train Loss: 0.062
2024-10-18 04:40 - INFO - 	 Val. Loss: 0.058
2024-10-18 04:40 - INFO - 	 ROC-AUC: 0.988
2024-10-18 04:40 - INFO - 	 PR-AUC: 0.891
2024-10-18 04:40 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 04:40 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 04:40 - INFO - 	 Best PR-AUC: 0.891
2024-10-18 04:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 04:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-18 04:40 - INFO - ---------------------------------------------
2024-10-18 04:43 - INFO - Fit the preprocessing pipeline
2024-10-18 04:43 - INFO - Training using device: cuda
2024-10-18 04:43 - INFO - Creating generators
2024-10-18 04:43 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 04:43 - INFO - * Model:
2024-10-18 04:43 - INFO - * -----------
2024-10-18 04:43 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 04:43 - INFO - * -----------
2024-10-18 04:51 - INFO - ---------------------------------------------
2024-10-18 04:51 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-18 04:51 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8374
2024-10-18 04:51 - INFO - 	 Train Loss: 0.086
2024-10-18 04:51 - INFO - 	 Val. Loss: 0.069
2024-10-18 04:51 - INFO - 	 ROC-AUC: 0.985
2024-10-18 04:51 - INFO - 	 PR-AUC: 0.837
2024-10-18 04:51 - INFO - 	 Best Val. Loss: 0.069
2024-10-18 04:51 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 04:51 - INFO - 	 Best PR-AUC: 0.837
2024-10-18 04:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 04:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-18 04:51 - INFO - ---------------------------------------------
2024-10-18 04:59 - INFO - ---------------------------------------------
2024-10-18 04:59 - INFO - Epoch: 02 | Time: 7m 59s
2024-10-18 04:59 - INFO - 	 Train Loss: 0.074
2024-10-18 04:59 - INFO - 	 Val. Loss: 0.070
2024-10-18 04:59 - INFO - 	 ROC-AUC: 0.984
2024-10-18 04:59 - INFO - 	 PR-AUC: 0.834
2024-10-18 04:59 - INFO - 	 Best Val. Loss: 0.069
2024-10-18 04:59 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 04:59 - INFO - 	 Best PR-AUC: 0.837
2024-10-18 04:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 04:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-18 04:59 - INFO - ---------------------------------------------
2024-10-18 05:07 - INFO - ---------------------------------------------
2024-10-18 05:07 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-18 05:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8725
2024-10-18 05:07 - INFO - 	 Train Loss: 0.070
2024-10-18 05:07 - INFO - 	 Val. Loss: 0.063
2024-10-18 05:07 - INFO - 	 ROC-AUC: 0.987
2024-10-18 05:07 - INFO - 	 PR-AUC: 0.872
2024-10-18 05:07 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 05:07 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 05:07 - INFO - 	 Best PR-AUC: 0.872
2024-10-18 05:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 05:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-18 05:07 - INFO - ---------------------------------------------
2024-10-18 05:15 - INFO - ---------------------------------------------
2024-10-18 05:15 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-18 05:15 - INFO - 	 Train Loss: 0.068
2024-10-18 05:15 - INFO - 	 Val. Loss: 0.064
2024-10-18 05:15 - INFO - 	 ROC-AUC: 0.987
2024-10-18 05:15 - INFO - 	 PR-AUC: 0.865
2024-10-18 05:15 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 05:15 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 05:15 - INFO - 	 Best PR-AUC: 0.872
2024-10-18 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.836
2024-10-18 05:15 - INFO - ---------------------------------------------
2024-10-18 05:23 - INFO - ---------------------------------------------
2024-10-18 05:23 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-18 05:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88547
2024-10-18 05:23 - INFO - 	 Train Loss: 0.066
2024-10-18 05:23 - INFO - 	 Val. Loss: 0.058
2024-10-18 05:23 - INFO - 	 ROC-AUC: 0.988
2024-10-18 05:23 - INFO - 	 PR-AUC: 0.885
2024-10-18 05:23 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 05:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 05:23 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 05:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 05:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 05:23 - INFO - ---------------------------------------------
2024-10-18 05:31 - INFO - ---------------------------------------------
2024-10-18 05:31 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-18 05:31 - INFO - 	 Train Loss: 0.066
2024-10-18 05:31 - INFO - 	 Val. Loss: 0.061
2024-10-18 05:31 - INFO - 	 ROC-AUC: 0.986
2024-10-18 05:31 - INFO - 	 PR-AUC: 0.879
2024-10-18 05:31 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 05:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 05:31 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 05:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 05:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 05:31 - INFO - ---------------------------------------------
2024-10-18 05:39 - INFO - ---------------------------------------------
2024-10-18 05:39 - INFO - Epoch: 07 | Time: 7m 59s
2024-10-18 05:39 - INFO - 	 Train Loss: 0.064
2024-10-18 05:39 - INFO - 	 Val. Loss: 0.060
2024-10-18 05:39 - INFO - 	 ROC-AUC: 0.988
2024-10-18 05:39 - INFO - 	 PR-AUC: 0.885
2024-10-18 05:39 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 05:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 05:39 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 05:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 05:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 05:39 - INFO - ---------------------------------------------
2024-10-18 05:47 - INFO - ---------------------------------------------
2024-10-18 05:47 - INFO - Epoch: 08 | Time: 7m 59s
2024-10-18 05:47 - INFO - 	 Train Loss: 0.065
2024-10-18 05:47 - INFO - 	 Val. Loss: 0.061
2024-10-18 05:47 - INFO - 	 ROC-AUC: 0.987
2024-10-18 05:47 - INFO - 	 PR-AUC: 0.881
2024-10-18 05:47 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 05:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 05:47 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 05:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 05:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 05:47 - INFO - ---------------------------------------------
2024-10-18 05:55 - INFO - ---------------------------------------------
2024-10-18 05:55 - INFO - Epoch: 09 | Time: 7m 59s
2024-10-18 05:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88926
2024-10-18 05:55 - INFO - 	 Train Loss: 0.062
2024-10-18 05:55 - INFO - 	 Val. Loss: 0.058
2024-10-18 05:55 - INFO - 	 ROC-AUC: 0.988
2024-10-18 05:55 - INFO - 	 PR-AUC: 0.889
2024-10-18 05:55 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 05:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 05:55 - INFO - 	 Best PR-AUC: 0.889
2024-10-18 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-18 05:55 - INFO - ---------------------------------------------
2024-10-18 06:03 - INFO - ---------------------------------------------
2024-10-18 06:03 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-18 06:03 - INFO - 	 Train Loss: 0.063
2024-10-18 06:03 - INFO - 	 Val. Loss: 0.058
2024-10-18 06:03 - INFO - 	 ROC-AUC: 0.988
2024-10-18 06:03 - INFO - 	 PR-AUC: 0.884
2024-10-18 06:03 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 06:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 06:03 - INFO - 	 Best PR-AUC: 0.889
2024-10-18 06:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 06:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-18 06:03 - INFO - ---------------------------------------------
2024-10-18 06:05 - INFO - Fit the preprocessing pipeline
2024-10-18 06:05 - INFO - Training using device: cuda
2024-10-18 06:05 - INFO - Creating generators
2024-10-18 06:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 06:05 - INFO - * Model:
2024-10-18 06:05 - INFO - * -----------
2024-10-18 06:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 06:05 - INFO - * -----------
2024-10-18 06:13 - INFO - ---------------------------------------------
2024-10-18 06:13 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-18 06:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85252
2024-10-18 06:13 - INFO - 	 Train Loss: 0.085
2024-10-18 06:13 - INFO - 	 Val. Loss: 0.068
2024-10-18 06:13 - INFO - 	 ROC-AUC: 0.984
2024-10-18 06:13 - INFO - 	 PR-AUC: 0.853
2024-10-18 06:13 - INFO - 	 Best Val. Loss: 0.068
2024-10-18 06:13 - INFO - 	 Best ROC-AUC: 0.984
2024-10-18 06:13 - INFO - 	 Best PR-AUC: 0.853
2024-10-18 06:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 06:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-18 06:13 - INFO - ---------------------------------------------
2024-10-18 06:21 - INFO - ---------------------------------------------
2024-10-18 06:21 - INFO - Epoch: 02 | Time: 7m 59s
2024-10-18 06:21 - INFO - 	 Train Loss: 0.072
2024-10-18 06:21 - INFO - 	 Val. Loss: 0.069
2024-10-18 06:21 - INFO - 	 ROC-AUC: 0.985
2024-10-18 06:21 - INFO - 	 PR-AUC: 0.851
2024-10-18 06:21 - INFO - 	 Best Val. Loss: 0.068
2024-10-18 06:21 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 06:21 - INFO - 	 Best PR-AUC: 0.853
2024-10-18 06:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 06:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-18 06:21 - INFO - ---------------------------------------------
2024-10-18 06:29 - INFO - ---------------------------------------------
2024-10-18 06:29 - INFO - Epoch: 03 | Time: 7m 59s
2024-10-18 06:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87969
2024-10-18 06:29 - INFO - 	 Train Loss: 0.070
2024-10-18 06:29 - INFO - 	 Val. Loss: 0.062
2024-10-18 06:29 - INFO - 	 ROC-AUC: 0.987
2024-10-18 06:29 - INFO - 	 PR-AUC: 0.880
2024-10-18 06:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 06:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 06:29 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 06:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 06:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 06:29 - INFO - ---------------------------------------------
2024-10-18 06:37 - INFO - ---------------------------------------------
2024-10-18 06:37 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-18 06:37 - INFO - 	 Train Loss: 0.069
2024-10-18 06:37 - INFO - 	 Val. Loss: 0.063
2024-10-18 06:37 - INFO - 	 ROC-AUC: 0.986
2024-10-18 06:37 - INFO - 	 PR-AUC: 0.871
2024-10-18 06:37 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 06:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 06:37 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 06:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 06:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 06:37 - INFO - ---------------------------------------------
2024-10-18 06:45 - INFO - ---------------------------------------------
2024-10-18 06:45 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-18 06:45 - INFO - 	 Train Loss: 0.066
2024-10-18 06:45 - INFO - 	 Val. Loss: 0.062
2024-10-18 06:45 - INFO - 	 ROC-AUC: 0.987
2024-10-18 06:45 - INFO - 	 PR-AUC: 0.871
2024-10-18 06:45 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 06:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 06:45 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 06:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 06:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 06:45 - INFO - ---------------------------------------------
2024-10-18 06:53 - INFO - ---------------------------------------------
2024-10-18 06:53 - INFO - Epoch: 06 | Time: 7m 59s
2024-10-18 06:53 - INFO - 	 Train Loss: 0.065
2024-10-18 06:53 - INFO - 	 Val. Loss: 0.061
2024-10-18 06:53 - INFO - 	 ROC-AUC: 0.987
2024-10-18 06:53 - INFO - 	 PR-AUC: 0.874
2024-10-18 06:53 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 06:53 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 06:53 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 06:53 - INFO - ---------------------------------------------
2024-10-18 07:04 - INFO - Fit the preprocessing pipeline
2024-10-18 07:04 - INFO - Training using device: cuda
2024-10-18 07:04 - INFO - Creating generators
2024-10-18 07:04 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 07:04 - INFO - * Model:
2024-10-18 07:04 - INFO - * -----------
2024-10-18 07:04 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 07:04 - INFO - * -----------
2024-10-18 07:12 - INFO - ---------------------------------------------
2024-10-18 07:12 - INFO - Epoch: 01 | Time: 8m 0s
2024-10-18 07:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83856
2024-10-18 07:12 - INFO - 	 Train Loss: 0.086
2024-10-18 07:12 - INFO - 	 Val. Loss: 0.070
2024-10-18 07:12 - INFO - 	 ROC-AUC: 0.986
2024-10-18 07:12 - INFO - 	 PR-AUC: 0.839
2024-10-18 07:12 - INFO - 	 Best Val. Loss: 0.070
2024-10-18 07:12 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 07:12 - INFO - 	 Best PR-AUC: 0.839
2024-10-18 07:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 07:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-18 07:12 - INFO - ---------------------------------------------
2024-10-18 07:20 - INFO - ---------------------------------------------
2024-10-18 07:20 - INFO - Epoch: 02 | Time: 8m 0s
2024-10-18 07:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87711
2024-10-18 07:20 - INFO - 	 Train Loss: 0.073
2024-10-18 07:20 - INFO - 	 Val. Loss: 0.063
2024-10-18 07:20 - INFO - 	 ROC-AUC: 0.987
2024-10-18 07:20 - INFO - 	 PR-AUC: 0.877
2024-10-18 07:20 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 07:20 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 07:20 - INFO - 	 Best PR-AUC: 0.877
2024-10-18 07:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 07:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-18 07:20 - INFO - ---------------------------------------------
2024-10-18 07:28 - INFO - ---------------------------------------------
2024-10-18 07:28 - INFO - Epoch: 03 | Time: 7m 59s
2024-10-18 07:28 - INFO - 	 Train Loss: 0.070
2024-10-18 07:28 - INFO - 	 Val. Loss: 0.064
2024-10-18 07:28 - INFO - 	 ROC-AUC: 0.987
2024-10-18 07:28 - INFO - 	 PR-AUC: 0.859
2024-10-18 07:28 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 07:28 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 07:28 - INFO - 	 Best PR-AUC: 0.877
2024-10-18 07:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 07:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.840
2024-10-18 07:28 - INFO - ---------------------------------------------
2024-10-18 07:36 - INFO - ---------------------------------------------
2024-10-18 07:36 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-18 07:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88388
2024-10-18 07:36 - INFO - 	 Train Loss: 0.067
2024-10-18 07:36 - INFO - 	 Val. Loss: 0.060
2024-10-18 07:36 - INFO - 	 ROC-AUC: 0.988
2024-10-18 07:36 - INFO - 	 PR-AUC: 0.884
2024-10-18 07:36 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 07:36 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 07:36 - INFO - 	 Best PR-AUC: 0.884
2024-10-18 07:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 07:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-18 07:36 - INFO - ---------------------------------------------
2024-10-18 07:44 - INFO - ---------------------------------------------
2024-10-18 07:44 - INFO - Epoch: 05 | Time: 8m 0s
2024-10-18 07:44 - INFO - 	 Train Loss: 0.067
2024-10-18 07:44 - INFO - 	 Val. Loss: 0.062
2024-10-18 07:44 - INFO - 	 ROC-AUC: 0.986
2024-10-18 07:44 - INFO - 	 PR-AUC: 0.869
2024-10-18 07:44 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 07:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 07:44 - INFO - 	 Best PR-AUC: 0.884
2024-10-18 07:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 07:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-18 07:44 - INFO - ---------------------------------------------
2024-10-18 07:52 - INFO - ---------------------------------------------
2024-10-18 07:52 - INFO - Epoch: 06 | Time: 8m 0s
2024-10-18 07:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88837
2024-10-18 07:52 - INFO - 	 Train Loss: 0.066
2024-10-18 07:52 - INFO - 	 Val. Loss: 0.058
2024-10-18 07:52 - INFO - 	 ROC-AUC: 0.988
2024-10-18 07:52 - INFO - 	 PR-AUC: 0.888
2024-10-18 07:52 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 07:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 07:52 - INFO - 	 Best PR-AUC: 0.888
2024-10-18 07:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 07:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 07:52 - INFO - ---------------------------------------------
2024-10-18 08:00 - INFO - ---------------------------------------------
2024-10-18 08:00 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-18 08:00 - INFO - 	 Train Loss: 0.064
2024-10-18 08:00 - INFO - 	 Val. Loss: 0.061
2024-10-18 08:00 - INFO - 	 ROC-AUC: 0.987
2024-10-18 08:00 - INFO - 	 PR-AUC: 0.875
2024-10-18 08:00 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 08:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 08:00 - INFO - 	 Best PR-AUC: 0.888
2024-10-18 08:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 08:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 08:00 - INFO - ---------------------------------------------
2024-10-18 08:08 - INFO - ---------------------------------------------
2024-10-18 08:08 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 08:08 - INFO - 	 Train Loss: 0.064
2024-10-18 08:08 - INFO - 	 Val. Loss: 0.062
2024-10-18 08:08 - INFO - 	 ROC-AUC: 0.987
2024-10-18 08:08 - INFO - 	 PR-AUC: 0.861
2024-10-18 08:08 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 08:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 08:08 - INFO - 	 Best PR-AUC: 0.888
2024-10-18 08:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 08:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 08:08 - INFO - ---------------------------------------------
2024-10-18 08:16 - INFO - ---------------------------------------------
2024-10-18 08:16 - INFO - Epoch: 09 | Time: 8m 0s
2024-10-18 08:16 - INFO - 	 Train Loss: 0.063
2024-10-18 08:16 - INFO - 	 Val. Loss: 0.060
2024-10-18 08:16 - INFO - 	 ROC-AUC: 0.987
2024-10-18 08:16 - INFO - 	 PR-AUC: 0.878
2024-10-18 08:16 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 08:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 08:16 - INFO - 	 Best PR-AUC: 0.888
2024-10-18 08:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 08:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 08:16 - INFO - ---------------------------------------------
2024-10-18 08:26 - INFO - Fit the preprocessing pipeline
2024-10-18 08:26 - INFO - Training using device: cuda
2024-10-18 08:26 - INFO - Creating generators
2024-10-18 08:26 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 08:26 - INFO - * Model:
2024-10-18 08:26 - INFO - * -----------
2024-10-18 08:26 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 08:26 - INFO - * -----------
2024-10-18 08:34 - INFO - ---------------------------------------------
2024-10-18 08:34 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 08:34 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85503
2024-10-18 08:34 - INFO - 	 Train Loss: 0.086
2024-10-18 08:34 - INFO - 	 Val. Loss: 0.070
2024-10-18 08:34 - INFO - 	 ROC-AUC: 0.985
2024-10-18 08:34 - INFO - 	 PR-AUC: 0.855
2024-10-18 08:34 - INFO - 	 Best Val. Loss: 0.070
2024-10-18 08:34 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 08:34 - INFO - 	 Best PR-AUC: 0.855
2024-10-18 08:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 08:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.830
2024-10-18 08:34 - INFO - ---------------------------------------------
2024-10-18 08:42 - INFO - ---------------------------------------------
2024-10-18 08:42 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 08:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86264
2024-10-18 08:42 - INFO - 	 Train Loss: 0.073
2024-10-18 08:42 - INFO - 	 Val. Loss: 0.064
2024-10-18 08:42 - INFO - 	 ROC-AUC: 0.987
2024-10-18 08:42 - INFO - 	 PR-AUC: 0.863
2024-10-18 08:42 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 08:42 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 08:42 - INFO - 	 Best PR-AUC: 0.863
2024-10-18 08:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 08:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-18 08:42 - INFO - ---------------------------------------------
2024-10-18 08:50 - INFO - ---------------------------------------------
2024-10-18 08:50 - INFO - Epoch: 03 | Time: 8m 0s
2024-10-18 08:50 - INFO - 	 Train Loss: 0.070
2024-10-18 08:50 - INFO - 	 Val. Loss: 0.066
2024-10-18 08:50 - INFO - 	 ROC-AUC: 0.985
2024-10-18 08:50 - INFO - 	 PR-AUC: 0.854
2024-10-18 08:50 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 08:50 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 08:50 - INFO - 	 Best PR-AUC: 0.863
2024-10-18 08:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 08:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-18 08:50 - INFO - ---------------------------------------------
2024-10-18 08:58 - INFO - ---------------------------------------------
2024-10-18 08:58 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 08:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86269
2024-10-18 08:58 - INFO - 	 Train Loss: 0.068
2024-10-18 08:58 - INFO - 	 Val. Loss: 0.065
2024-10-18 08:58 - INFO - 	 ROC-AUC: 0.986
2024-10-18 08:58 - INFO - 	 PR-AUC: 0.863
2024-10-18 08:58 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 08:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 08:58 - INFO - 	 Best PR-AUC: 0.863
2024-10-18 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-18 08:58 - INFO - ---------------------------------------------
2024-10-18 09:06 - INFO - ---------------------------------------------
2024-10-18 09:06 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 09:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87247
2024-10-18 09:06 - INFO - 	 Train Loss: 0.067
2024-10-18 09:06 - INFO - 	 Val. Loss: 0.061
2024-10-18 09:06 - INFO - 	 ROC-AUC: 0.988
2024-10-18 09:06 - INFO - 	 PR-AUC: 0.872
2024-10-18 09:06 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 09:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 09:06 - INFO - 	 Best PR-AUC: 0.872
2024-10-18 09:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 09:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-18 09:06 - INFO - ---------------------------------------------
2024-10-18 09:14 - INFO - ---------------------------------------------
2024-10-18 09:14 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 09:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87402
2024-10-18 09:14 - INFO - 	 Train Loss: 0.065
2024-10-18 09:14 - INFO - 	 Val. Loss: 0.061
2024-10-18 09:14 - INFO - 	 ROC-AUC: 0.986
2024-10-18 09:14 - INFO - 	 PR-AUC: 0.874
2024-10-18 09:14 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 09:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 09:14 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 09:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 09:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-18 09:14 - INFO - ---------------------------------------------
2024-10-18 09:22 - INFO - ---------------------------------------------
2024-10-18 09:22 - INFO - Epoch: 07 | Time: 8m 0s
2024-10-18 09:22 - INFO - 	 Train Loss: 0.065
2024-10-18 09:22 - INFO - 	 Val. Loss: 0.063
2024-10-18 09:22 - INFO - 	 ROC-AUC: 0.986
2024-10-18 09:22 - INFO - 	 PR-AUC: 0.871
2024-10-18 09:22 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 09:22 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 09:22 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 09:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 09:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.878
2024-10-18 09:22 - INFO - ---------------------------------------------
2024-10-18 09:30 - INFO - ---------------------------------------------
2024-10-18 09:30 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 09:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87996
2024-10-18 09:30 - INFO - 	 Train Loss: 0.064
2024-10-18 09:30 - INFO - 	 Val. Loss: 0.060
2024-10-18 09:30 - INFO - 	 ROC-AUC: 0.987
2024-10-18 09:30 - INFO - 	 PR-AUC: 0.880
2024-10-18 09:30 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 09:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 09:30 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 09:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 09:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.873
2024-10-18 09:30 - INFO - ---------------------------------------------
2024-10-18 09:38 - INFO - ---------------------------------------------
2024-10-18 09:38 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 09:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88683
2024-10-18 09:38 - INFO - 	 Train Loss: 0.063
2024-10-18 09:38 - INFO - 	 Val. Loss: 0.059
2024-10-18 09:38 - INFO - 	 ROC-AUC: 0.987
2024-10-18 09:38 - INFO - 	 PR-AUC: 0.887
2024-10-18 09:38 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 09:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 09:38 - INFO - 	 Best PR-AUC: 0.887
2024-10-18 09:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 09:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.891
2024-10-18 09:38 - INFO - ---------------------------------------------
2024-10-18 09:46 - INFO - ---------------------------------------------
2024-10-18 09:46 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-18 09:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89154
2024-10-18 09:46 - INFO - 	 Train Loss: 0.062
2024-10-18 09:46 - INFO - 	 Val. Loss: 0.056
2024-10-18 09:46 - INFO - 	 ROC-AUC: 0.988
2024-10-18 09:46 - INFO - 	 PR-AUC: 0.892
2024-10-18 09:46 - INFO - 	 Best Val. Loss: 0.056
2024-10-18 09:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 09:46 - INFO - 	 Best PR-AUC: 0.892
2024-10-18 09:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 09:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.877
2024-10-18 09:46 - INFO - ---------------------------------------------
2024-10-18 09:49 - INFO - Fit the preprocessing pipeline
2024-10-18 09:49 - INFO - Training using device: cuda
2024-10-18 09:49 - INFO - Creating generators
2024-10-18 09:49 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 09:49 - INFO - * Model:
2024-10-18 09:49 - INFO - * -----------
2024-10-18 09:49 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 09:49 - INFO - * -----------
2024-10-18 09:57 - INFO - ---------------------------------------------
2024-10-18 09:57 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 09:57 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84805
2024-10-18 09:57 - INFO - 	 Train Loss: 0.087
2024-10-18 09:57 - INFO - 	 Val. Loss: 0.069
2024-10-18 09:57 - INFO - 	 ROC-AUC: 0.985
2024-10-18 09:57 - INFO - 	 PR-AUC: 0.848
2024-10-18 09:57 - INFO - 	 Best Val. Loss: 0.069
2024-10-18 09:57 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 09:57 - INFO - 	 Best PR-AUC: 0.848
2024-10-18 09:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 09:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-18 09:57 - INFO - ---------------------------------------------
2024-10-18 10:05 - INFO - ---------------------------------------------
2024-10-18 10:05 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 10:05 - INFO - 	 Train Loss: 0.073
2024-10-18 10:05 - INFO - 	 Val. Loss: 0.067
2024-10-18 10:05 - INFO - 	 ROC-AUC: 0.985
2024-10-18 10:05 - INFO - 	 PR-AUC: 0.846
2024-10-18 10:05 - INFO - 	 Best Val. Loss: 0.067
2024-10-18 10:05 - INFO - 	 Best ROC-AUC: 0.985
2024-10-18 10:05 - INFO - 	 Best PR-AUC: 0.848
2024-10-18 10:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 10:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.822
2024-10-18 10:05 - INFO - ---------------------------------------------
2024-10-18 10:13 - INFO - ---------------------------------------------
2024-10-18 10:13 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 10:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8589
2024-10-18 10:13 - INFO - 	 Train Loss: 0.071
2024-10-18 10:13 - INFO - 	 Val. Loss: 0.063
2024-10-18 10:13 - INFO - 	 ROC-AUC: 0.988
2024-10-18 10:13 - INFO - 	 PR-AUC: 0.859
2024-10-18 10:13 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 10:13 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 10:13 - INFO - 	 Best PR-AUC: 0.859
2024-10-18 10:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 10:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.850
2024-10-18 10:13 - INFO - ---------------------------------------------
2024-10-18 10:21 - INFO - ---------------------------------------------
2024-10-18 10:21 - INFO - Epoch: 04 | Time: 8m 0s
2024-10-18 10:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86427
2024-10-18 10:21 - INFO - 	 Train Loss: 0.067
2024-10-18 10:21 - INFO - 	 Val. Loss: 0.064
2024-10-18 10:21 - INFO - 	 ROC-AUC: 0.987
2024-10-18 10:21 - INFO - 	 PR-AUC: 0.864
2024-10-18 10:21 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 10:21 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 10:21 - INFO - 	 Best PR-AUC: 0.864
2024-10-18 10:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 10:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.849
2024-10-18 10:21 - INFO - ---------------------------------------------
2024-10-18 10:29 - INFO - ---------------------------------------------
2024-10-18 10:29 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 10:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8698
2024-10-18 10:29 - INFO - 	 Train Loss: 0.066
2024-10-18 10:29 - INFO - 	 Val. Loss: 0.062
2024-10-18 10:29 - INFO - 	 ROC-AUC: 0.987
2024-10-18 10:29 - INFO - 	 PR-AUC: 0.870
2024-10-18 10:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 10:29 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 10:29 - INFO - 	 Best PR-AUC: 0.870
2024-10-18 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 10:29 - INFO - ---------------------------------------------
2024-10-18 10:37 - INFO - ---------------------------------------------
2024-10-18 10:37 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 10:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88967
2024-10-18 10:37 - INFO - 	 Train Loss: 0.066
2024-10-18 10:37 - INFO - 	 Val. Loss: 0.058
2024-10-18 10:37 - INFO - 	 ROC-AUC: 0.988
2024-10-18 10:37 - INFO - 	 PR-AUC: 0.890
2024-10-18 10:37 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 10:37 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 10:37 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-18 10:37 - INFO - ---------------------------------------------
2024-10-18 10:45 - INFO - ---------------------------------------------
2024-10-18 10:45 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 10:45 - INFO - 	 Train Loss: 0.063
2024-10-18 10:45 - INFO - 	 Val. Loss: 0.060
2024-10-18 10:45 - INFO - 	 ROC-AUC: 0.987
2024-10-18 10:45 - INFO - 	 PR-AUC: 0.879
2024-10-18 10:45 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 10:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 10:45 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-18 10:45 - INFO - ---------------------------------------------
2024-10-18 10:53 - INFO - ---------------------------------------------
2024-10-18 10:53 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-18 10:53 - INFO - 	 Train Loss: 0.063
2024-10-18 10:53 - INFO - 	 Val. Loss: 0.058
2024-10-18 10:53 - INFO - 	 ROC-AUC: 0.988
2024-10-18 10:53 - INFO - 	 PR-AUC: 0.880
2024-10-18 10:53 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 10:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 10:53 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 10:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 10:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-18 10:53 - INFO - ---------------------------------------------
2024-10-18 11:01 - INFO - ---------------------------------------------
2024-10-18 11:01 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 11:01 - INFO - 	 Train Loss: 0.063
2024-10-18 11:01 - INFO - 	 Val. Loss: 0.061
2024-10-18 11:01 - INFO - 	 ROC-AUC: 0.987
2024-10-18 11:01 - INFO - 	 PR-AUC: 0.877
2024-10-18 11:01 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 11:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 11:01 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 11:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 11:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-18 11:01 - INFO - ---------------------------------------------
2024-10-18 11:11 - INFO - Fit the preprocessing pipeline
2024-10-18 11:11 - INFO - Training using device: cuda
2024-10-18 11:11 - INFO - Creating generators
2024-10-18 11:11 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 11:11 - INFO - * Model:
2024-10-18 11:11 - INFO - * -----------
2024-10-18 11:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 11:11 - INFO - * -----------
2024-10-18 11:20 - INFO - ---------------------------------------------
2024-10-18 11:20 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 11:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83717
2024-10-18 11:20 - INFO - 	 Train Loss: 0.087
2024-10-18 11:20 - INFO - 	 Val. Loss: 0.073
2024-10-18 11:20 - INFO - 	 ROC-AUC: 0.983
2024-10-18 11:20 - INFO - 	 PR-AUC: 0.837
2024-10-18 11:20 - INFO - 	 Best Val. Loss: 0.073
2024-10-18 11:20 - INFO - 	 Best ROC-AUC: 0.983
2024-10-18 11:20 - INFO - 	 Best PR-AUC: 0.837
2024-10-18 11:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 11:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.829
2024-10-18 11:20 - INFO - ---------------------------------------------
2024-10-18 11:28 - INFO - ---------------------------------------------
2024-10-18 11:28 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 11:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8481
2024-10-18 11:28 - INFO - 	 Train Loss: 0.075
2024-10-18 11:28 - INFO - 	 Val. Loss: 0.067
2024-10-18 11:28 - INFO - 	 ROC-AUC: 0.986
2024-10-18 11:28 - INFO - 	 PR-AUC: 0.848
2024-10-18 11:28 - INFO - 	 Best Val. Loss: 0.067
2024-10-18 11:28 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 11:28 - INFO - 	 Best PR-AUC: 0.848
2024-10-18 11:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 11:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.853
2024-10-18 11:28 - INFO - ---------------------------------------------
2024-10-18 11:36 - INFO - ---------------------------------------------
2024-10-18 11:36 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 11:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86351
2024-10-18 11:36 - INFO - 	 Train Loss: 0.069
2024-10-18 11:36 - INFO - 	 Val. Loss: 0.065
2024-10-18 11:36 - INFO - 	 ROC-AUC: 0.986
2024-10-18 11:36 - INFO - 	 PR-AUC: 0.864
2024-10-18 11:36 - INFO - 	 Best Val. Loss: 0.065
2024-10-18 11:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 11:36 - INFO - 	 Best PR-AUC: 0.864
2024-10-18 11:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-18 11:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.843
2024-10-18 11:36 - INFO - ---------------------------------------------
2024-10-18 11:44 - INFO - ---------------------------------------------
2024-10-18 11:44 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 11:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86361
2024-10-18 11:44 - INFO - 	 Train Loss: 0.068
2024-10-18 11:44 - INFO - 	 Val. Loss: 0.065
2024-10-18 11:44 - INFO - 	 ROC-AUC: 0.986
2024-10-18 11:44 - INFO - 	 PR-AUC: 0.864
2024-10-18 11:44 - INFO - 	 Best Val. Loss: 0.065
2024-10-18 11:44 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 11:44 - INFO - 	 Best PR-AUC: 0.864
2024-10-18 11:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-10-18 11:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.867
2024-10-18 11:44 - INFO - ---------------------------------------------
2024-10-18 11:52 - INFO - ---------------------------------------------
2024-10-18 11:52 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 11:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87706
2024-10-18 11:52 - INFO - 	 Train Loss: 0.067
2024-10-18 11:52 - INFO - 	 Val. Loss: 0.060
2024-10-18 11:52 - INFO - 	 ROC-AUC: 0.988
2024-10-18 11:52 - INFO - 	 PR-AUC: 0.877
2024-10-18 11:52 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 11:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 11:52 - INFO - 	 Best PR-AUC: 0.877
2024-10-18 11:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 11:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.859
2024-10-18 11:52 - INFO - ---------------------------------------------
2024-10-18 12:00 - INFO - ---------------------------------------------
2024-10-18 12:00 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 12:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88017
2024-10-18 12:00 - INFO - 	 Train Loss: 0.066
2024-10-18 12:00 - INFO - 	 Val. Loss: 0.059
2024-10-18 12:00 - INFO - 	 ROC-AUC: 0.989
2024-10-18 12:00 - INFO - 	 PR-AUC: 0.880
2024-10-18 12:00 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 12:00 - INFO - 	 Best ROC-AUC: 0.989
2024-10-18 12:00 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 12:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 12:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 12:00 - INFO - ---------------------------------------------
2024-10-18 12:08 - INFO - ---------------------------------------------
2024-10-18 12:08 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 12:08 - INFO - 	 Train Loss: 0.064
2024-10-18 12:08 - INFO - 	 Val. Loss: 0.058
2024-10-18 12:08 - INFO - 	 ROC-AUC: 0.989
2024-10-18 12:08 - INFO - 	 PR-AUC: 0.878
2024-10-18 12:08 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 12:08 - INFO - 	 Best ROC-AUC: 0.989
2024-10-18 12:08 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 12:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 12:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 12:08 - INFO - ---------------------------------------------
2024-10-18 12:16 - INFO - ---------------------------------------------
2024-10-18 12:16 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 12:16 - INFO - 	 Train Loss: 0.064
2024-10-18 12:16 - INFO - 	 Val. Loss: 0.059
2024-10-18 12:16 - INFO - 	 ROC-AUC: 0.987
2024-10-18 12:16 - INFO - 	 PR-AUC: 0.878
2024-10-18 12:16 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 12:16 - INFO - 	 Best ROC-AUC: 0.989
2024-10-18 12:16 - INFO - 	 Best PR-AUC: 0.880
2024-10-18 12:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 12:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 12:16 - INFO - ---------------------------------------------
2024-10-18 12:24 - INFO - ---------------------------------------------
2024-10-18 12:24 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 12:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89029
2024-10-18 12:24 - INFO - 	 Train Loss: 0.063
2024-10-18 12:24 - INFO - 	 Val. Loss: 0.057
2024-10-18 12:24 - INFO - 	 ROC-AUC: 0.988
2024-10-18 12:24 - INFO - 	 PR-AUC: 0.890
2024-10-18 12:24 - INFO - 	 Best Val. Loss: 0.057
2024-10-18 12:24 - INFO - 	 Best ROC-AUC: 0.989
2024-10-18 12:24 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 12:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 12:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-18 12:24 - INFO - ---------------------------------------------
2024-10-18 12:32 - INFO - ---------------------------------------------
2024-10-18 12:32 - INFO - Epoch: 10 | Time: 8m 0s
2024-10-18 12:32 - INFO - 	 Train Loss: 0.061
2024-10-18 12:32 - INFO - 	 Val. Loss: 0.058
2024-10-18 12:32 - INFO - 	 ROC-AUC: 0.988
2024-10-18 12:32 - INFO - 	 PR-AUC: 0.883
2024-10-18 12:32 - INFO - 	 Best Val. Loss: 0.057
2024-10-18 12:32 - INFO - 	 Best ROC-AUC: 0.989
2024-10-18 12:32 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 12:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 12:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.885
2024-10-18 12:32 - INFO - ---------------------------------------------
2024-10-18 12:34 - INFO - Fit the preprocessing pipeline
2024-10-18 12:34 - INFO - Training using device: cuda
2024-10-18 12:34 - INFO - Creating generators
2024-10-18 12:34 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 12:34 - INFO - * Model:
2024-10-18 12:34 - INFO - * -----------
2024-10-18 12:34 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 12:34 - INFO - * -----------
2024-10-18 12:42 - INFO - ---------------------------------------------
2024-10-18 12:42 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 12:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8529
2024-10-18 12:42 - INFO - 	 Train Loss: 0.085
2024-10-18 12:42 - INFO - 	 Val. Loss: 0.067
2024-10-18 12:42 - INFO - 	 ROC-AUC: 0.986
2024-10-18 12:42 - INFO - 	 PR-AUC: 0.853
2024-10-18 12:42 - INFO - 	 Best Val. Loss: 0.067
2024-10-18 12:42 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 12:42 - INFO - 	 Best PR-AUC: 0.853
2024-10-18 12:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 12:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.820
2024-10-18 12:42 - INFO - ---------------------------------------------
2024-10-18 12:50 - INFO - ---------------------------------------------
2024-10-18 12:50 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 12:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86249
2024-10-18 12:50 - INFO - 	 Train Loss: 0.074
2024-10-18 12:50 - INFO - 	 Val. Loss: 0.064
2024-10-18 12:50 - INFO - 	 ROC-AUC: 0.986
2024-10-18 12:50 - INFO - 	 PR-AUC: 0.862
2024-10-18 12:50 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 12:50 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 12:50 - INFO - 	 Best PR-AUC: 0.862
2024-10-18 12:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 12:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-18 12:50 - INFO - ---------------------------------------------
2024-10-18 12:58 - INFO - ---------------------------------------------
2024-10-18 12:58 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 12:58 - INFO - 	 Train Loss: 0.071
2024-10-18 12:58 - INFO - 	 Val. Loss: 0.062
2024-10-18 12:58 - INFO - 	 ROC-AUC: 0.987
2024-10-18 12:58 - INFO - 	 PR-AUC: 0.861
2024-10-18 12:58 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 12:58 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 12:58 - INFO - 	 Best PR-AUC: 0.862
2024-10-18 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.858
2024-10-18 12:58 - INFO - ---------------------------------------------
2024-10-18 13:06 - INFO - ---------------------------------------------
2024-10-18 13:06 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 13:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87538
2024-10-18 13:06 - INFO - 	 Train Loss: 0.068
2024-10-18 13:06 - INFO - 	 Val. Loss: 0.062
2024-10-18 13:06 - INFO - 	 ROC-AUC: 0.986
2024-10-18 13:06 - INFO - 	 PR-AUC: 0.875
2024-10-18 13:06 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 13:06 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 13:06 - INFO - 	 Best PR-AUC: 0.875
2024-10-18 13:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 13:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-18 13:06 - INFO - ---------------------------------------------
2024-10-18 13:14 - INFO - ---------------------------------------------
2024-10-18 13:14 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 13:14 - INFO - 	 Train Loss: 0.067
2024-10-18 13:14 - INFO - 	 Val. Loss: 0.061
2024-10-18 13:14 - INFO - 	 ROC-AUC: 0.987
2024-10-18 13:14 - INFO - 	 PR-AUC: 0.875
2024-10-18 13:14 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 13:14 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 13:14 - INFO - 	 Best PR-AUC: 0.875
2024-10-18 13:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 13:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.860
2024-10-18 13:14 - INFO - ---------------------------------------------
2024-10-18 13:22 - INFO - ---------------------------------------------
2024-10-18 13:22 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 13:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88432
2024-10-18 13:22 - INFO - 	 Train Loss: 0.066
2024-10-18 13:22 - INFO - 	 Val. Loss: 0.059
2024-10-18 13:22 - INFO - 	 ROC-AUC: 0.987
2024-10-18 13:22 - INFO - 	 PR-AUC: 0.884
2024-10-18 13:22 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 13:22 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 13:22 - INFO - 	 Best PR-AUC: 0.884
2024-10-18 13:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 13:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-18 13:22 - INFO - ---------------------------------------------
2024-10-18 13:30 - INFO - ---------------------------------------------
2024-10-18 13:30 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 13:30 - INFO - 	 Train Loss: 0.064
2024-10-18 13:30 - INFO - 	 Val. Loss: 0.058
2024-10-18 13:30 - INFO - 	 ROC-AUC: 0.988
2024-10-18 13:30 - INFO - 	 PR-AUC: 0.877
2024-10-18 13:30 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 13:30 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 13:30 - INFO - 	 Best PR-AUC: 0.884
2024-10-18 13:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 13:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-18 13:30 - INFO - ---------------------------------------------
2024-10-18 13:38 - INFO - ---------------------------------------------
2024-10-18 13:38 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 13:38 - INFO - 	 Train Loss: 0.064
2024-10-18 13:38 - INFO - 	 Val. Loss: 0.064
2024-10-18 13:38 - INFO - 	 ROC-AUC: 0.986
2024-10-18 13:38 - INFO - 	 PR-AUC: 0.867
2024-10-18 13:38 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 13:38 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 13:38 - INFO - 	 Best PR-AUC: 0.884
2024-10-18 13:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 13:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-18 13:38 - INFO - ---------------------------------------------
2024-10-18 13:46 - INFO - ---------------------------------------------
2024-10-18 13:46 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 13:46 - INFO - 	 Train Loss: 0.062
2024-10-18 13:46 - INFO - 	 Val. Loss: 0.060
2024-10-18 13:46 - INFO - 	 ROC-AUC: 0.987
2024-10-18 13:46 - INFO - 	 PR-AUC: 0.879
2024-10-18 13:46 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 13:46 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 13:46 - INFO - 	 Best PR-AUC: 0.884
2024-10-18 13:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 13:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.872
2024-10-18 13:46 - INFO - ---------------------------------------------
2024-10-18 13:57 - INFO - Fit the preprocessing pipeline
2024-10-18 13:57 - INFO - Training using device: cuda
2024-10-18 13:57 - INFO - Creating generators
2024-10-18 13:57 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 13:57 - INFO - * Model:
2024-10-18 13:57 - INFO - * -----------
2024-10-18 13:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 13:57 - INFO - * -----------
2024-10-18 14:05 - INFO - ---------------------------------------------
2024-10-18 14:05 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 14:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84271
2024-10-18 14:05 - INFO - 	 Train Loss: 0.086
2024-10-18 14:05 - INFO - 	 Val. Loss: 0.071
2024-10-18 14:05 - INFO - 	 ROC-AUC: 0.984
2024-10-18 14:05 - INFO - 	 PR-AUC: 0.843
2024-10-18 14:05 - INFO - 	 Best Val. Loss: 0.071
2024-10-18 14:05 - INFO - 	 Best ROC-AUC: 0.984
2024-10-18 14:05 - INFO - 	 Best PR-AUC: 0.843
2024-10-18 14:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 14:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.826
2024-10-18 14:05 - INFO - ---------------------------------------------
2024-10-18 14:13 - INFO - ---------------------------------------------
2024-10-18 14:13 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 14:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85881
2024-10-18 14:13 - INFO - 	 Train Loss: 0.073
2024-10-18 14:13 - INFO - 	 Val. Loss: 0.066
2024-10-18 14:13 - INFO - 	 ROC-AUC: 0.986
2024-10-18 14:13 - INFO - 	 PR-AUC: 0.859
2024-10-18 14:13 - INFO - 	 Best Val. Loss: 0.066
2024-10-18 14:13 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 14:13 - INFO - 	 Best PR-AUC: 0.859
2024-10-18 14:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 14:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-18 14:13 - INFO - ---------------------------------------------
2024-10-18 14:21 - INFO - ---------------------------------------------
2024-10-18 14:21 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 14:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86862
2024-10-18 14:21 - INFO - 	 Train Loss: 0.070
2024-10-18 14:21 - INFO - 	 Val. Loss: 0.063
2024-10-18 14:21 - INFO - 	 ROC-AUC: 0.987
2024-10-18 14:21 - INFO - 	 PR-AUC: 0.869
2024-10-18 14:21 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 14:21 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 14:21 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 14:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 14:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-18 14:21 - INFO - ---------------------------------------------
2024-10-18 14:29 - INFO - ---------------------------------------------
2024-10-18 14:29 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 14:29 - INFO - 	 Train Loss: 0.067
2024-10-18 14:29 - INFO - 	 Val. Loss: 0.064
2024-10-18 14:29 - INFO - 	 ROC-AUC: 0.986
2024-10-18 14:29 - INFO - 	 PR-AUC: 0.861
2024-10-18 14:29 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 14:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 14:29 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 14:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 14:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-18 14:29 - INFO - ---------------------------------------------
2024-10-18 14:37 - INFO - ---------------------------------------------
2024-10-18 14:37 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 14:37 - INFO - 	 Train Loss: 0.066
2024-10-18 14:37 - INFO - 	 Val. Loss: 0.063
2024-10-18 14:37 - INFO - 	 ROC-AUC: 0.986
2024-10-18 14:37 - INFO - 	 PR-AUC: 0.861
2024-10-18 14:37 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 14:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 14:37 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 14:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 14:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-18 14:37 - INFO - ---------------------------------------------
2024-10-18 14:45 - INFO - ---------------------------------------------
2024-10-18 14:45 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 14:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88471
2024-10-18 14:45 - INFO - 	 Train Loss: 0.066
2024-10-18 14:45 - INFO - 	 Val. Loss: 0.061
2024-10-18 14:45 - INFO - 	 ROC-AUC: 0.987
2024-10-18 14:45 - INFO - 	 PR-AUC: 0.885
2024-10-18 14:45 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 14:45 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 14:45 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 14:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 14:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-18 14:45 - INFO - ---------------------------------------------
2024-10-18 14:53 - INFO - ---------------------------------------------
2024-10-18 14:53 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 14:53 - INFO - 	 Train Loss: 0.064
2024-10-18 14:53 - INFO - 	 Val. Loss: 0.061
2024-10-18 14:53 - INFO - 	 ROC-AUC: 0.988
2024-10-18 14:53 - INFO - 	 PR-AUC: 0.872
2024-10-18 14:53 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 14:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 14:53 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 14:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 14:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-18 14:53 - INFO - ---------------------------------------------
2024-10-18 15:01 - INFO - ---------------------------------------------
2024-10-18 15:01 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 15:01 - INFO - 	 Train Loss: 0.063
2024-10-18 15:01 - INFO - 	 Val. Loss: 0.062
2024-10-18 15:01 - INFO - 	 ROC-AUC: 0.988
2024-10-18 15:01 - INFO - 	 PR-AUC: 0.867
2024-10-18 15:01 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 15:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 15:01 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 15:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 15:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-18 15:01 - INFO - ---------------------------------------------
2024-10-18 15:09 - INFO - ---------------------------------------------
2024-10-18 15:09 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 15:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88954
2024-10-18 15:09 - INFO - 	 Train Loss: 0.063
2024-10-18 15:09 - INFO - 	 Val. Loss: 0.057
2024-10-18 15:09 - INFO - 	 ROC-AUC: 0.989
2024-10-18 15:09 - INFO - 	 PR-AUC: 0.890
2024-10-18 15:09 - INFO - 	 Best Val. Loss: 0.057
2024-10-18 15:09 - INFO - 	 Best ROC-AUC: 0.989
2024-10-18 15:09 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 15:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 15:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-18 15:09 - INFO - ---------------------------------------------
2024-10-18 15:17 - INFO - ---------------------------------------------
2024-10-18 15:17 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-18 15:17 - INFO - 	 Train Loss: 0.061
2024-10-18 15:17 - INFO - 	 Val. Loss: 0.060
2024-10-18 15:17 - INFO - 	 ROC-AUC: 0.987
2024-10-18 15:17 - INFO - 	 PR-AUC: 0.887
2024-10-18 15:17 - INFO - 	 Best Val. Loss: 0.057
2024-10-18 15:17 - INFO - 	 Best ROC-AUC: 0.989
2024-10-18 15:17 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 15:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 15:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.881
2024-10-18 15:17 - INFO - ---------------------------------------------
2024-10-18 15:20 - INFO - Fit the preprocessing pipeline
2024-10-18 15:20 - INFO - Training using device: cuda
2024-10-18 15:20 - INFO - Creating generators
2024-10-18 15:20 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 15:20 - INFO - * Model:
2024-10-18 15:20 - INFO - * -----------
2024-10-18 15:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 15:20 - INFO - * -----------
2024-10-18 15:28 - INFO - ---------------------------------------------
2024-10-18 15:28 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 15:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83182
2024-10-18 15:28 - INFO - 	 Train Loss: 0.087
2024-10-18 15:28 - INFO - 	 Val. Loss: 0.071
2024-10-18 15:28 - INFO - 	 ROC-AUC: 0.984
2024-10-18 15:28 - INFO - 	 PR-AUC: 0.832
2024-10-18 15:28 - INFO - 	 Best Val. Loss: 0.071
2024-10-18 15:28 - INFO - 	 Best ROC-AUC: 0.984
2024-10-18 15:28 - INFO - 	 Best PR-AUC: 0.832
2024-10-18 15:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 15:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.814
2024-10-18 15:28 - INFO - ---------------------------------------------
2024-10-18 15:36 - INFO - ---------------------------------------------
2024-10-18 15:36 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 15:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86215
2024-10-18 15:36 - INFO - 	 Train Loss: 0.074
2024-10-18 15:36 - INFO - 	 Val. Loss: 0.064
2024-10-18 15:36 - INFO - 	 ROC-AUC: 0.986
2024-10-18 15:36 - INFO - 	 PR-AUC: 0.862
2024-10-18 15:36 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 15:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 15:36 - INFO - 	 Best PR-AUC: 0.862
2024-10-18 15:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 15:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-18 15:36 - INFO - ---------------------------------------------
2024-10-18 15:44 - INFO - ---------------------------------------------
2024-10-18 15:44 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 15:44 - INFO - 	 Train Loss: 0.069
2024-10-18 15:44 - INFO - 	 Val. Loss: 0.061
2024-10-18 15:44 - INFO - 	 ROC-AUC: 0.988
2024-10-18 15:44 - INFO - 	 PR-AUC: 0.856
2024-10-18 15:44 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 15:44 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 15:44 - INFO - 	 Best PR-AUC: 0.862
2024-10-18 15:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 15:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-18 15:44 - INFO - ---------------------------------------------
2024-10-18 15:52 - INFO - ---------------------------------------------
2024-10-18 15:52 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 15:52 - INFO - 	 Train Loss: 0.068
2024-10-18 15:52 - INFO - 	 Val. Loss: 0.064
2024-10-18 15:52 - INFO - 	 ROC-AUC: 0.986
2024-10-18 15:52 - INFO - 	 PR-AUC: 0.862
2024-10-18 15:52 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 15:52 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 15:52 - INFO - 	 Best PR-AUC: 0.862
2024-10-18 15:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 15:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.846
2024-10-18 15:52 - INFO - ---------------------------------------------
2024-10-18 16:00 - INFO - ---------------------------------------------
2024-10-18 16:00 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 16:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87873
2024-10-18 16:00 - INFO - 	 Train Loss: 0.067
2024-10-18 16:00 - INFO - 	 Val. Loss: 0.061
2024-10-18 16:00 - INFO - 	 ROC-AUC: 0.987
2024-10-18 16:00 - INFO - 	 PR-AUC: 0.879
2024-10-18 16:00 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 16:00 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 16:00 - INFO - 	 Best PR-AUC: 0.879
2024-10-18 16:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 16:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 16:00 - INFO - ---------------------------------------------
2024-10-18 16:08 - INFO - ---------------------------------------------
2024-10-18 16:08 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 16:08 - INFO - 	 Train Loss: 0.066
2024-10-18 16:08 - INFO - 	 Val. Loss: 0.060
2024-10-18 16:08 - INFO - 	 ROC-AUC: 0.988
2024-10-18 16:08 - INFO - 	 PR-AUC: 0.876
2024-10-18 16:08 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 16:08 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 16:08 - INFO - 	 Best PR-AUC: 0.879
2024-10-18 16:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 16:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 16:08 - INFO - ---------------------------------------------
2024-10-18 16:16 - INFO - ---------------------------------------------
2024-10-18 16:16 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 16:16 - INFO - 	 Train Loss: 0.065
2024-10-18 16:16 - INFO - 	 Val. Loss: 0.060
2024-10-18 16:16 - INFO - 	 ROC-AUC: 0.987
2024-10-18 16:16 - INFO - 	 PR-AUC: 0.875
2024-10-18 16:16 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 16:16 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 16:16 - INFO - 	 Best PR-AUC: 0.879
2024-10-18 16:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 16:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.864
2024-10-18 16:16 - INFO - ---------------------------------------------
2024-10-18 16:24 - INFO - ---------------------------------------------
2024-10-18 16:24 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-18 16:24 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88051
2024-10-18 16:24 - INFO - 	 Train Loss: 0.064
2024-10-18 16:24 - INFO - 	 Val. Loss: 0.062
2024-10-18 16:24 - INFO - 	 ROC-AUC: 0.986
2024-10-18 16:24 - INFO - 	 PR-AUC: 0.881
2024-10-18 16:24 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 16:24 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 16:24 - INFO - 	 Best PR-AUC: 0.881
2024-10-18 16:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 16:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-18 16:24 - INFO - ---------------------------------------------
2024-10-18 16:32 - INFO - ---------------------------------------------
2024-10-18 16:32 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 16:32 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88554
2024-10-18 16:32 - INFO - 	 Train Loss: 0.063
2024-10-18 16:32 - INFO - 	 Val. Loss: 0.060
2024-10-18 16:32 - INFO - 	 ROC-AUC: 0.986
2024-10-18 16:32 - INFO - 	 PR-AUC: 0.886
2024-10-18 16:32 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 16:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 16:32 - INFO - 	 Best PR-AUC: 0.886
2024-10-18 16:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 16:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-18 16:32 - INFO - ---------------------------------------------
2024-10-18 16:40 - INFO - ---------------------------------------------
2024-10-18 16:40 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-18 16:40 - INFO - 	 Train Loss: 0.062
2024-10-18 16:40 - INFO - 	 Val. Loss: 0.061
2024-10-18 16:40 - INFO - 	 ROC-AUC: 0.986
2024-10-18 16:40 - INFO - 	 PR-AUC: 0.882
2024-10-18 16:40 - INFO - 	 Best Val. Loss: 0.060
2024-10-18 16:40 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 16:40 - INFO - 	 Best PR-AUC: 0.886
2024-10-18 16:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 16:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.869
2024-10-18 16:40 - INFO - ---------------------------------------------
2024-10-18 16:42 - INFO - Fit the preprocessing pipeline
2024-10-18 16:42 - INFO - Training using device: cuda
2024-10-18 16:42 - INFO - Creating generators
2024-10-18 16:42 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 16:42 - INFO - * Model:
2024-10-18 16:42 - INFO - * -----------
2024-10-18 16:42 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 16:42 - INFO - * -----------
2024-10-18 16:50 - INFO - ---------------------------------------------
2024-10-18 16:50 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 16:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84187
2024-10-18 16:50 - INFO - 	 Train Loss: 0.086
2024-10-18 16:50 - INFO - 	 Val. Loss: 0.071
2024-10-18 16:50 - INFO - 	 ROC-AUC: 0.983
2024-10-18 16:50 - INFO - 	 PR-AUC: 0.842
2024-10-18 16:50 - INFO - 	 Best Val. Loss: 0.071
2024-10-18 16:50 - INFO - 	 Best ROC-AUC: 0.983
2024-10-18 16:50 - INFO - 	 Best PR-AUC: 0.842
2024-10-18 16:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 16:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.808
2024-10-18 16:50 - INFO - ---------------------------------------------
2024-10-18 16:58 - INFO - ---------------------------------------------
2024-10-18 16:58 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 16:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86502
2024-10-18 16:58 - INFO - 	 Train Loss: 0.073
2024-10-18 16:58 - INFO - 	 Val. Loss: 0.064
2024-10-18 16:58 - INFO - 	 ROC-AUC: 0.988
2024-10-18 16:58 - INFO - 	 PR-AUC: 0.865
2024-10-18 16:58 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 16:58 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 16:58 - INFO - 	 Best PR-AUC: 0.865
2024-10-18 16:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 16:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-18 16:58 - INFO - ---------------------------------------------
2024-10-18 17:06 - INFO - ---------------------------------------------
2024-10-18 17:06 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 17:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86683
2024-10-18 17:06 - INFO - 	 Train Loss: 0.070
2024-10-18 17:06 - INFO - 	 Val. Loss: 0.065
2024-10-18 17:06 - INFO - 	 ROC-AUC: 0.985
2024-10-18 17:06 - INFO - 	 PR-AUC: 0.867
2024-10-18 17:06 - INFO - 	 Best Val. Loss: 0.064
2024-10-18 17:06 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 17:06 - INFO - 	 Best PR-AUC: 0.867
2024-10-18 17:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 17:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-18 17:06 - INFO - ---------------------------------------------
2024-10-18 17:14 - INFO - ---------------------------------------------
2024-10-18 17:14 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 17:14 - INFO - 	 Train Loss: 0.068
2024-10-18 17:14 - INFO - 	 Val. Loss: 0.063
2024-10-18 17:14 - INFO - 	 ROC-AUC: 0.987
2024-10-18 17:14 - INFO - 	 PR-AUC: 0.862
2024-10-18 17:14 - INFO - 	 Best Val. Loss: 0.063
2024-10-18 17:14 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 17:14 - INFO - 	 Best PR-AUC: 0.867
2024-10-18 17:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 17:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.848
2024-10-18 17:14 - INFO - ---------------------------------------------
2024-10-18 17:23 - INFO - ---------------------------------------------
2024-10-18 17:23 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 17:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87619
2024-10-18 17:23 - INFO - 	 Train Loss: 0.066
2024-10-18 17:23 - INFO - 	 Val. Loss: 0.061
2024-10-18 17:23 - INFO - 	 ROC-AUC: 0.987
2024-10-18 17:23 - INFO - 	 PR-AUC: 0.876
2024-10-18 17:23 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 17:23 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 17:23 - INFO - 	 Best PR-AUC: 0.876
2024-10-18 17:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 17:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-18 17:23 - INFO - ---------------------------------------------
2024-10-18 17:31 - INFO - ---------------------------------------------
2024-10-18 17:31 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 17:31 - INFO - 	 Train Loss: 0.066
2024-10-18 17:31 - INFO - 	 Val. Loss: 0.064
2024-10-18 17:31 - INFO - 	 ROC-AUC: 0.986
2024-10-18 17:31 - INFO - 	 PR-AUC: 0.861
2024-10-18 17:31 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 17:31 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 17:31 - INFO - 	 Best PR-AUC: 0.876
2024-10-18 17:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 17:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-18 17:31 - INFO - ---------------------------------------------
2024-10-18 17:39 - INFO - ---------------------------------------------
2024-10-18 17:39 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 17:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88237
2024-10-18 17:39 - INFO - 	 Train Loss: 0.064
2024-10-18 17:39 - INFO - 	 Val. Loss: 0.058
2024-10-18 17:39 - INFO - 	 ROC-AUC: 0.988
2024-10-18 17:39 - INFO - 	 PR-AUC: 0.882
2024-10-18 17:39 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 17:39 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 17:39 - INFO - 	 Best PR-AUC: 0.882
2024-10-18 17:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 17:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-18 17:39 - INFO - ---------------------------------------------
2024-10-18 17:47 - INFO - ---------------------------------------------
2024-10-18 17:47 - INFO - Epoch: 08 | Time: 8m 1s
2024-10-18 17:47 - INFO - 	 Train Loss: 0.064
2024-10-18 17:47 - INFO - 	 Val. Loss: 0.060
2024-10-18 17:47 - INFO - 	 ROC-AUC: 0.986
2024-10-18 17:47 - INFO - 	 PR-AUC: 0.879
2024-10-18 17:47 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 17:47 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 17:47 - INFO - 	 Best PR-AUC: 0.882
2024-10-18 17:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 17:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.866
2024-10-18 17:47 - INFO - ---------------------------------------------
2024-10-18 17:55 - INFO - ---------------------------------------------
2024-10-18 17:55 - INFO - Epoch: 09 | Time: 8m 2s
2024-10-18 17:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88473
2024-10-18 17:55 - INFO - 	 Train Loss: 0.062
2024-10-18 17:55 - INFO - 	 Val. Loss: 0.059
2024-10-18 17:55 - INFO - 	 ROC-AUC: 0.987
2024-10-18 17:55 - INFO - 	 PR-AUC: 0.885
2024-10-18 17:55 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 17:55 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 17:55 - INFO - 	 Best PR-AUC: 0.885
2024-10-18 17:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 17:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.880
2024-10-18 17:55 - INFO - ---------------------------------------------
2024-10-18 18:03 - INFO - ---------------------------------------------
2024-10-18 18:03 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-18 18:03 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88612
2024-10-18 18:03 - INFO - 	 Train Loss: 0.062
2024-10-18 18:03 - INFO - 	 Val. Loss: 0.058
2024-10-18 18:03 - INFO - 	 ROC-AUC: 0.988
2024-10-18 18:03 - INFO - 	 PR-AUC: 0.886
2024-10-18 18:03 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 18:03 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 18:03 - INFO - 	 Best PR-AUC: 0.886
2024-10-18 18:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 18:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.870
2024-10-18 18:03 - INFO - ---------------------------------------------
2024-10-18 18:05 - INFO - Fit the preprocessing pipeline
2024-10-18 18:05 - INFO - Training using device: cuda
2024-10-18 18:05 - INFO - Creating generators
2024-10-18 18:05 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 18:05 - INFO - * Model:
2024-10-18 18:05 - INFO - * -----------
2024-10-18 18:05 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 18:05 - INFO - * -----------
2024-10-18 18:13 - INFO - ---------------------------------------------
2024-10-18 18:13 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 18:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.84135
2024-10-18 18:13 - INFO - 	 Train Loss: 0.086
2024-10-18 18:13 - INFO - 	 Val. Loss: 0.070
2024-10-18 18:13 - INFO - 	 ROC-AUC: 0.983
2024-10-18 18:13 - INFO - 	 PR-AUC: 0.841
2024-10-18 18:13 - INFO - 	 Best Val. Loss: 0.070
2024-10-18 18:13 - INFO - 	 Best ROC-AUC: 0.983
2024-10-18 18:13 - INFO - 	 Best PR-AUC: 0.841
2024-10-18 18:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 18:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-18 18:13 - INFO - ---------------------------------------------
2024-10-18 18:21 - INFO - ---------------------------------------------
2024-10-18 18:21 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 18:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85936
2024-10-18 18:21 - INFO - 	 Train Loss: 0.074
2024-10-18 18:21 - INFO - 	 Val. Loss: 0.065
2024-10-18 18:21 - INFO - 	 ROC-AUC: 0.986
2024-10-18 18:21 - INFO - 	 PR-AUC: 0.859
2024-10-18 18:21 - INFO - 	 Best Val. Loss: 0.065
2024-10-18 18:21 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 18:21 - INFO - 	 Best PR-AUC: 0.859
2024-10-18 18:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-10-18 18:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.841
2024-10-18 18:21 - INFO - ---------------------------------------------
2024-10-18 18:29 - INFO - ---------------------------------------------
2024-10-18 18:29 - INFO - Epoch: 03 | Time: 8m 2s
2024-10-18 18:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86897
2024-10-18 18:29 - INFO - 	 Train Loss: 0.071
2024-10-18 18:29 - INFO - 	 Val. Loss: 0.062
2024-10-18 18:29 - INFO - 	 ROC-AUC: 0.987
2024-10-18 18:29 - INFO - 	 PR-AUC: 0.869
2024-10-18 18:29 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 18:29 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 18:29 - INFO - 	 Best PR-AUC: 0.869
2024-10-18 18:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 18:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.852
2024-10-18 18:29 - INFO - ---------------------------------------------
2024-10-18 18:37 - INFO - ---------------------------------------------
2024-10-18 18:37 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 18:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.86953
2024-10-18 18:37 - INFO - 	 Train Loss: 0.067
2024-10-18 18:37 - INFO - 	 Val. Loss: 0.061
2024-10-18 18:37 - INFO - 	 ROC-AUC: 0.987
2024-10-18 18:37 - INFO - 	 PR-AUC: 0.870
2024-10-18 18:37 - INFO - 	 Best Val. Loss: 0.061
2024-10-18 18:37 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 18:37 - INFO - 	 Best PR-AUC: 0.870
2024-10-18 18:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 18:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.862
2024-10-18 18:37 - INFO - ---------------------------------------------
2024-10-18 18:45 - INFO - ---------------------------------------------
2024-10-18 18:45 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 18:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88972
2024-10-18 18:45 - INFO - 	 Train Loss: 0.065
2024-10-18 18:45 - INFO - 	 Val. Loss: 0.059
2024-10-18 18:45 - INFO - 	 ROC-AUC: 0.988
2024-10-18 18:45 - INFO - 	 PR-AUC: 0.890
2024-10-18 18:45 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 18:45 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 18:45 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 18:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-10-18 18:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 18:45 - INFO - ---------------------------------------------
2024-10-18 18:53 - INFO - ---------------------------------------------
2024-10-18 18:53 - INFO - Epoch: 06 | Time: 8m 1s
2024-10-18 18:53 - INFO - 	 Train Loss: 0.065
2024-10-18 18:53 - INFO - 	 Val. Loss: 0.060
2024-10-18 18:53 - INFO - 	 ROC-AUC: 0.988
2024-10-18 18:53 - INFO - 	 PR-AUC: 0.881
2024-10-18 18:53 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 18:53 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 18:53 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 18:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 18:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 18:53 - INFO - ---------------------------------------------
2024-10-18 19:01 - INFO - ---------------------------------------------
2024-10-18 19:01 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 19:01 - INFO - 	 Train Loss: 0.065
2024-10-18 19:01 - INFO - 	 Val. Loss: 0.061
2024-10-18 19:01 - INFO - 	 ROC-AUC: 0.987
2024-10-18 19:01 - INFO - 	 PR-AUC: 0.872
2024-10-18 19:01 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 19:01 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 19:01 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 19:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 19:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 19:01 - INFO - ---------------------------------------------
2024-10-18 19:09 - INFO - ---------------------------------------------
2024-10-18 19:09 - INFO - Epoch: 08 | Time: 8m 2s
2024-10-18 19:09 - INFO - 	 Train Loss: 0.063
2024-10-18 19:09 - INFO - 	 Val. Loss: 0.063
2024-10-18 19:09 - INFO - 	 ROC-AUC: 0.986
2024-10-18 19:09 - INFO - 	 PR-AUC: 0.864
2024-10-18 19:09 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 19:09 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 19:09 - INFO - 	 Best PR-AUC: 0.890
2024-10-18 19:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-10-18 19:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 19:09 - INFO - ---------------------------------------------
2024-10-18 19:20 - INFO - Fit the preprocessing pipeline
2024-10-18 19:20 - INFO - Training using device: cuda
2024-10-18 19:20 - INFO - Creating generators
2024-10-18 19:20 - INFO - The model has 2,246,929 trainable parameters
2024-10-18 19:20 - INFO - * Model:
2024-10-18 19:20 - INFO - * -----------
2024-10-18 19:20 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-10-18 19:20 - INFO - * -----------
2024-10-18 19:28 - INFO - ---------------------------------------------
2024-10-18 19:28 - INFO - Epoch: 01 | Time: 8m 1s
2024-10-18 19:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.83126
2024-10-18 19:28 - INFO - 	 Train Loss: 0.086
2024-10-18 19:28 - INFO - 	 Val. Loss: 0.072
2024-10-18 19:28 - INFO - 	 ROC-AUC: 0.982
2024-10-18 19:28 - INFO - 	 PR-AUC: 0.831
2024-10-18 19:28 - INFO - 	 Best Val. Loss: 0.072
2024-10-18 19:28 - INFO - 	 Best ROC-AUC: 0.982
2024-10-18 19:28 - INFO - 	 Best PR-AUC: 0.831
2024-10-18 19:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 19:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.834
2024-10-18 19:28 - INFO - ---------------------------------------------
2024-10-18 19:36 - INFO - ---------------------------------------------
2024-10-18 19:36 - INFO - Epoch: 02 | Time: 8m 1s
2024-10-18 19:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.85782
2024-10-18 19:36 - INFO - 	 Train Loss: 0.073
2024-10-18 19:36 - INFO - 	 Val. Loss: 0.067
2024-10-18 19:36 - INFO - 	 ROC-AUC: 0.986
2024-10-18 19:36 - INFO - 	 PR-AUC: 0.858
2024-10-18 19:36 - INFO - 	 Best Val. Loss: 0.067
2024-10-18 19:36 - INFO - 	 Best ROC-AUC: 0.986
2024-10-18 19:36 - INFO - 	 Best PR-AUC: 0.858
2024-10-18 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.845
2024-10-18 19:36 - INFO - ---------------------------------------------
2024-10-18 19:44 - INFO - ---------------------------------------------
2024-10-18 19:44 - INFO - Epoch: 03 | Time: 8m 1s
2024-10-18 19:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87368
2024-10-18 19:44 - INFO - 	 Train Loss: 0.070
2024-10-18 19:44 - INFO - 	 Val. Loss: 0.062
2024-10-18 19:44 - INFO - 	 ROC-AUC: 0.987
2024-10-18 19:44 - INFO - 	 PR-AUC: 0.874
2024-10-18 19:44 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 19:44 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 19:44 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 19:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 19:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 19:44 - INFO - ---------------------------------------------
2024-10-18 19:52 - INFO - ---------------------------------------------
2024-10-18 19:52 - INFO - Epoch: 04 | Time: 8m 1s
2024-10-18 19:52 - INFO - 	 Train Loss: 0.069
2024-10-18 19:52 - INFO - 	 Val. Loss: 0.062
2024-10-18 19:52 - INFO - 	 ROC-AUC: 0.987
2024-10-18 19:52 - INFO - 	 PR-AUC: 0.869
2024-10-18 19:52 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 19:52 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 19:52 - INFO - 	 Best PR-AUC: 0.874
2024-10-18 19:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 19:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.863
2024-10-18 19:52 - INFO - ---------------------------------------------
2024-10-18 20:00 - INFO - ---------------------------------------------
2024-10-18 20:00 - INFO - Epoch: 05 | Time: 8m 1s
2024-10-18 20:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.87599
2024-10-18 20:00 - INFO - 	 Train Loss: 0.066
2024-10-18 20:00 - INFO - 	 Val. Loss: 0.062
2024-10-18 20:00 - INFO - 	 ROC-AUC: 0.987
2024-10-18 20:00 - INFO - 	 PR-AUC: 0.876
2024-10-18 20:00 - INFO - 	 Best Val. Loss: 0.062
2024-10-18 20:00 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 20:00 - INFO - 	 Best PR-AUC: 0.876
2024-10-18 20:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 20:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.855
2024-10-18 20:00 - INFO - ---------------------------------------------
2024-10-18 20:08 - INFO - ---------------------------------------------
2024-10-18 20:08 - INFO - Epoch: 06 | Time: 8m 2s
2024-10-18 20:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88269
2024-10-18 20:08 - INFO - 	 Train Loss: 0.064
2024-10-18 20:08 - INFO - 	 Val. Loss: 0.059
2024-10-18 20:08 - INFO - 	 ROC-AUC: 0.987
2024-10-18 20:08 - INFO - 	 PR-AUC: 0.883
2024-10-18 20:08 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 20:08 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 20:08 - INFO - 	 Best PR-AUC: 0.883
2024-10-18 20:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 20:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-18 20:08 - INFO - ---------------------------------------------
2024-10-18 20:16 - INFO - ---------------------------------------------
2024-10-18 20:16 - INFO - Epoch: 07 | Time: 8m 1s
2024-10-18 20:16 - INFO - 	 Train Loss: 0.065
2024-10-18 20:16 - INFO - 	 Val. Loss: 0.061
2024-10-18 20:16 - INFO - 	 ROC-AUC: 0.987
2024-10-18 20:16 - INFO - 	 PR-AUC: 0.876
2024-10-18 20:16 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 20:16 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 20:16 - INFO - 	 Best PR-AUC: 0.883
2024-10-18 20:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 20:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-18 20:16 - INFO - ---------------------------------------------
2024-10-18 20:24 - INFO - ---------------------------------------------
2024-10-18 20:24 - INFO - Epoch: 08 | Time: 8m 0s
2024-10-18 20:24 - INFO - 	 Train Loss: 0.064
2024-10-18 20:24 - INFO - 	 Val. Loss: 0.061
2024-10-18 20:24 - INFO - 	 ROC-AUC: 0.987
2024-10-18 20:24 - INFO - 	 PR-AUC: 0.873
2024-10-18 20:24 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 20:24 - INFO - 	 Best ROC-AUC: 0.987
2024-10-18 20:24 - INFO - 	 Best PR-AUC: 0.883
2024-10-18 20:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-10-18 20:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-18 20:24 - INFO - ---------------------------------------------
2024-10-18 20:32 - INFO - ---------------------------------------------
2024-10-18 20:32 - INFO - Epoch: 09 | Time: 8m 1s
2024-10-18 20:32 - INFO - 	 Train Loss: 0.063
2024-10-18 20:32 - INFO - 	 Val. Loss: 0.059
2024-10-18 20:32 - INFO - 	 ROC-AUC: 0.988
2024-10-18 20:32 - INFO - 	 PR-AUC: 0.882
2024-10-18 20:32 - INFO - 	 Best Val. Loss: 0.059
2024-10-18 20:32 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 20:32 - INFO - 	 Best PR-AUC: 0.883
2024-10-18 20:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 20:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.865
2024-10-18 20:32 - INFO - ---------------------------------------------
2024-10-18 20:40 - INFO - ---------------------------------------------
2024-10-18 20:40 - INFO - Epoch: 10 | Time: 8m 1s
2024-10-18 20:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89074
2024-10-18 20:40 - INFO - 	 Train Loss: 0.061
2024-10-18 20:40 - INFO - 	 Val. Loss: 0.058
2024-10-18 20:40 - INFO - 	 ROC-AUC: 0.988
2024-10-18 20:40 - INFO - 	 PR-AUC: 0.891
2024-10-18 20:40 - INFO - 	 Best Val. Loss: 0.058
2024-10-18 20:40 - INFO - 	 Best ROC-AUC: 0.988
2024-10-18 20:40 - INFO - 	 Best PR-AUC: 0.891
2024-10-18 20:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-10-18 20:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.876
2024-10-18 20:40 - INFO - ---------------------------------------------
