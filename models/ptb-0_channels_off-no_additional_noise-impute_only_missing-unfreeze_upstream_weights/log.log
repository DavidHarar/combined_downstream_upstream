2024-11-22 23:11 - INFO - Fit the preprocessing pipeline
2024-11-22 23:11 - INFO - Training using device: cuda
2024-11-22 23:11 - INFO - Creating generators
2024-11-22 23:11 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 23:11 - INFO - * Model:
2024-11-22 23:11 - INFO - * -----------
2024-11-22 23:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 23:11 - INFO - * -----------
2024-11-22 23:20 - INFO - ---------------------------------------------
2024-11-22 23:20 - INFO - Epoch: 01 | Time: 8m 35s
2024-11-22 23:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8974
2024-11-22 23:20 - INFO - 	 Train Loss: 0.046
2024-11-22 23:20 - INFO - 	 Val. Loss: 0.064
2024-11-22 23:20 - INFO - 	 ROC-AUC: 0.987
2024-11-22 23:20 - INFO - 	 PR-AUC: 0.897
2024-11-22 23:20 - INFO - 	 Best Val. Loss: 0.064
2024-11-22 23:20 - INFO - 	 Best ROC-AUC: 0.987
2024-11-22 23:20 - INFO - 	 Best PR-AUC: 0.897
2024-11-22 23:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-22 23:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-22 23:20 - INFO - ---------------------------------------------
2024-11-22 23:28 - INFO - ---------------------------------------------
2024-11-22 23:28 - INFO - Epoch: 02 | Time: 8m 29s
2024-11-22 23:28 - INFO - 	 Train Loss: 0.043
2024-11-22 23:28 - INFO - 	 Val. Loss: 0.071
2024-11-22 23:28 - INFO - 	 ROC-AUC: 0.986
2024-11-22 23:28 - INFO - 	 PR-AUC: 0.885
2024-11-22 23:28 - INFO - 	 Best Val. Loss: 0.064
2024-11-22 23:28 - INFO - 	 Best ROC-AUC: 0.987
2024-11-22 23:28 - INFO - 	 Best PR-AUC: 0.897
2024-11-22 23:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-22 23:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-22 23:28 - INFO - ---------------------------------------------
2024-11-22 23:37 - INFO - ---------------------------------------------
2024-11-22 23:37 - INFO - Epoch: 03 | Time: 8m 28s
2024-11-22 23:37 - INFO - 	 Train Loss: 0.042
2024-11-22 23:37 - INFO - 	 Val. Loss: 0.069
2024-11-22 23:37 - INFO - 	 ROC-AUC: 0.986
2024-11-22 23:37 - INFO - 	 PR-AUC: 0.892
2024-11-22 23:37 - INFO - 	 Best Val. Loss: 0.064
2024-11-22 23:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-22 23:37 - INFO - 	 Best PR-AUC: 0.897
2024-11-22 23:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-22 23:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-22 23:37 - INFO - ---------------------------------------------
2024-11-22 23:45 - INFO - ---------------------------------------------
2024-11-22 23:45 - INFO - Epoch: 04 | Time: 8m 27s
2024-11-22 23:45 - INFO - 	 Train Loss: 0.040
2024-11-22 23:45 - INFO - 	 Val. Loss: 0.071
2024-11-22 23:45 - INFO - 	 ROC-AUC: 0.986
2024-11-22 23:45 - INFO - 	 PR-AUC: 0.882
2024-11-22 23:45 - INFO - 	 Best Val. Loss: 0.064
2024-11-22 23:45 - INFO - 	 Best ROC-AUC: 0.987
2024-11-22 23:45 - INFO - 	 Best PR-AUC: 0.897
2024-11-22 23:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-22 23:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-22 23:45 - INFO - ---------------------------------------------
2024-11-22 23:56 - INFO - Fit the preprocessing pipeline
2024-11-22 23:56 - INFO - Training using device: cuda
2024-11-22 23:56 - INFO - Creating generators
2024-11-22 23:56 - INFO - The model has 2,246,929 trainable parameters
2024-11-22 23:56 - INFO - * Model:
2024-11-22 23:56 - INFO - * -----------
2024-11-22 23:56 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-22 23:56 - INFO - * -----------
2024-11-23 00:05 - INFO - ---------------------------------------------
2024-11-23 00:05 - INFO - Epoch: 01 | Time: 8m 28s
2024-11-23 00:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88941
2024-11-23 00:05 - INFO - 	 Train Loss: 0.046
2024-11-23 00:05 - INFO - 	 Val. Loss: 0.069
2024-11-23 00:05 - INFO - 	 ROC-AUC: 0.987
2024-11-23 00:05 - INFO - 	 PR-AUC: 0.889
2024-11-23 00:05 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 00:05 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 00:05 - INFO - 	 Best PR-AUC: 0.889
2024-11-23 00:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 00:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-23 00:05 - INFO - ---------------------------------------------
2024-11-23 00:13 - INFO - ---------------------------------------------
2024-11-23 00:13 - INFO - Epoch: 02 | Time: 8m 22s
2024-11-23 00:13 - INFO - 	 Train Loss: 0.043
2024-11-23 00:13 - INFO - 	 Val. Loss: 0.070
2024-11-23 00:13 - INFO - 	 ROC-AUC: 0.986
2024-11-23 00:13 - INFO - 	 PR-AUC: 0.887
2024-11-23 00:13 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 00:13 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 00:13 - INFO - 	 Best PR-AUC: 0.889
2024-11-23 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-23 00:13 - INFO - ---------------------------------------------
2024-11-23 00:21 - INFO - ---------------------------------------------
2024-11-23 00:21 - INFO - Epoch: 03 | Time: 8m 23s
2024-11-23 00:21 - INFO - 	 Train Loss: 0.041
2024-11-23 00:21 - INFO - 	 Val. Loss: 0.069
2024-11-23 00:21 - INFO - 	 ROC-AUC: 0.987
2024-11-23 00:21 - INFO - 	 PR-AUC: 0.887
2024-11-23 00:21 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 00:21 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 00:21 - INFO - 	 Best PR-AUC: 0.889
2024-11-23 00:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 00:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-23 00:21 - INFO - ---------------------------------------------
2024-11-23 00:30 - INFO - ---------------------------------------------
2024-11-23 00:30 - INFO - Epoch: 04 | Time: 8m 21s
2024-11-23 00:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89313
2024-11-23 00:30 - INFO - 	 Train Loss: 0.040
2024-11-23 00:30 - INFO - 	 Val. Loss: 0.064
2024-11-23 00:30 - INFO - 	 ROC-AUC: 0.988
2024-11-23 00:30 - INFO - 	 PR-AUC: 0.893
2024-11-23 00:30 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 00:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 00:30 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 00:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 00:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 00:30 - INFO - ---------------------------------------------
2024-11-23 00:38 - INFO - ---------------------------------------------
2024-11-23 00:38 - INFO - Epoch: 05 | Time: 8m 22s
2024-11-23 00:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89473
2024-11-23 00:38 - INFO - 	 Train Loss: 0.038
2024-11-23 00:38 - INFO - 	 Val. Loss: 0.067
2024-11-23 00:38 - INFO - 	 ROC-AUC: 0.987
2024-11-23 00:38 - INFO - 	 PR-AUC: 0.895
2024-11-23 00:38 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 00:38 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 00:38 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 00:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 00:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-23 00:38 - INFO - ---------------------------------------------
2024-11-23 00:46 - INFO - ---------------------------------------------
2024-11-23 00:46 - INFO - Epoch: 06 | Time: 8m 21s
2024-11-23 00:46 - INFO - 	 Train Loss: 0.037
2024-11-23 00:46 - INFO - 	 Val. Loss: 0.068
2024-11-23 00:46 - INFO - 	 ROC-AUC: 0.987
2024-11-23 00:46 - INFO - 	 PR-AUC: 0.892
2024-11-23 00:46 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 00:46 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 00:46 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 00:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 00:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-23 00:46 - INFO - ---------------------------------------------
2024-11-23 00:55 - INFO - ---------------------------------------------
2024-11-23 00:55 - INFO - Epoch: 07 | Time: 8m 21s
2024-11-23 00:55 - INFO - 	 Train Loss: 0.038
2024-11-23 00:55 - INFO - 	 Val. Loss: 0.073
2024-11-23 00:55 - INFO - 	 ROC-AUC: 0.985
2024-11-23 00:55 - INFO - 	 PR-AUC: 0.881
2024-11-23 00:55 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 00:55 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 00:55 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 00:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 00:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-23 00:55 - INFO - ---------------------------------------------
2024-11-23 01:03 - INFO - ---------------------------------------------
2024-11-23 01:03 - INFO - Epoch: 08 | Time: 8m 20s
2024-11-23 01:03 - INFO - 	 Train Loss: 0.035
2024-11-23 01:03 - INFO - 	 Val. Loss: 0.079
2024-11-23 01:03 - INFO - 	 ROC-AUC: 0.985
2024-11-23 01:03 - INFO - 	 PR-AUC: 0.874
2024-11-23 01:03 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 01:03 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 01:03 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-23 01:03 - INFO - ---------------------------------------------
2024-11-23 01:14 - INFO - Fit the preprocessing pipeline
2024-11-23 01:14 - INFO - Training using device: cuda
2024-11-23 01:14 - INFO - Creating generators
2024-11-23 01:14 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 01:14 - INFO - * Model:
2024-11-23 01:14 - INFO - * -----------
2024-11-23 01:14 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 01:14 - INFO - * -----------
2024-11-23 01:22 - INFO - ---------------------------------------------
2024-11-23 01:22 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 01:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89449
2024-11-23 01:22 - INFO - 	 Train Loss: 0.046
2024-11-23 01:22 - INFO - 	 Val. Loss: 0.066
2024-11-23 01:22 - INFO - 	 ROC-AUC: 0.987
2024-11-23 01:22 - INFO - 	 PR-AUC: 0.894
2024-11-23 01:22 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 01:22 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 01:22 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 01:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 01:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-23 01:22 - INFO - ---------------------------------------------
2024-11-23 01:31 - INFO - ---------------------------------------------
2024-11-23 01:31 - INFO - Epoch: 02 | Time: 8m 20s
2024-11-23 01:31 - INFO - 	 Train Loss: 0.043
2024-11-23 01:31 - INFO - 	 Val. Loss: 0.079
2024-11-23 01:31 - INFO - 	 ROC-AUC: 0.986
2024-11-23 01:31 - INFO - 	 PR-AUC: 0.879
2024-11-23 01:31 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 01:31 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 01:31 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 01:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 01:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-23 01:31 - INFO - ---------------------------------------------
2024-11-23 01:39 - INFO - ---------------------------------------------
2024-11-23 01:39 - INFO - Epoch: 03 | Time: 8m 22s
2024-11-23 01:39 - INFO - 	 Train Loss: 0.042
2024-11-23 01:39 - INFO - 	 Val. Loss: 0.066
2024-11-23 01:39 - INFO - 	 ROC-AUC: 0.987
2024-11-23 01:39 - INFO - 	 PR-AUC: 0.887
2024-11-23 01:39 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 01:39 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 01:39 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 01:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 01:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-23 01:39 - INFO - ---------------------------------------------
2024-11-23 01:47 - INFO - ---------------------------------------------
2024-11-23 01:47 - INFO - Epoch: 04 | Time: 8m 21s
2024-11-23 01:47 - INFO - 	 Train Loss: 0.039
2024-11-23 01:47 - INFO - 	 Val. Loss: 0.078
2024-11-23 01:47 - INFO - 	 ROC-AUC: 0.985
2024-11-23 01:47 - INFO - 	 PR-AUC: 0.882
2024-11-23 01:47 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 01:47 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 01:47 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 01:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 01:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.898
2024-11-23 01:47 - INFO - ---------------------------------------------
2024-11-23 01:56 - INFO - ---------------------------------------------
2024-11-23 01:56 - INFO - Epoch: 05 | Time: 8m 20s
2024-11-23 01:56 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89923
2024-11-23 01:56 - INFO - 	 Train Loss: 0.039
2024-11-23 01:56 - INFO - 	 Val. Loss: 0.068
2024-11-23 01:56 - INFO - 	 ROC-AUC: 0.987
2024-11-23 01:56 - INFO - 	 PR-AUC: 0.899
2024-11-23 01:56 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 01:56 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 01:56 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 01:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 01:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-23 01:56 - INFO - ---------------------------------------------
2024-11-23 02:04 - INFO - ---------------------------------------------
2024-11-23 02:04 - INFO - Epoch: 06 | Time: 8m 20s
2024-11-23 02:04 - INFO - 	 Train Loss: 0.037
2024-11-23 02:04 - INFO - 	 Val. Loss: 0.076
2024-11-23 02:04 - INFO - 	 ROC-AUC: 0.986
2024-11-23 02:04 - INFO - 	 PR-AUC: 0.881
2024-11-23 02:04 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 02:04 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 02:04 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 02:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 02:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-23 02:04 - INFO - ---------------------------------------------
2024-11-23 02:12 - INFO - ---------------------------------------------
2024-11-23 02:12 - INFO - Epoch: 07 | Time: 8m 20s
2024-11-23 02:12 - INFO - 	 Train Loss: 0.036
2024-11-23 02:12 - INFO - 	 Val. Loss: 0.078
2024-11-23 02:12 - INFO - 	 ROC-AUC: 0.986
2024-11-23 02:12 - INFO - 	 PR-AUC: 0.879
2024-11-23 02:12 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 02:12 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 02:12 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 02:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 02:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-23 02:12 - INFO - ---------------------------------------------
2024-11-23 02:21 - INFO - ---------------------------------------------
2024-11-23 02:21 - INFO - Epoch: 08 | Time: 8m 50s
2024-11-23 02:21 - INFO - 	 Train Loss: 0.036
2024-11-23 02:21 - INFO - 	 Val. Loss: 0.071
2024-11-23 02:21 - INFO - 	 ROC-AUC: 0.987
2024-11-23 02:21 - INFO - 	 PR-AUC: 0.894
2024-11-23 02:21 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 02:21 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 02:21 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 02:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 02:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-23 02:21 - INFO - ---------------------------------------------
2024-11-23 02:32 - INFO - Fit the preprocessing pipeline
2024-11-23 02:32 - INFO - Training using device: cuda
2024-11-23 02:32 - INFO - Creating generators
2024-11-23 02:32 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 02:32 - INFO - * Model:
2024-11-23 02:32 - INFO - * -----------
2024-11-23 02:32 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 02:32 - INFO - * -----------
2024-11-23 02:40 - INFO - ---------------------------------------------
2024-11-23 02:40 - INFO - Epoch: 01 | Time: 8m 22s
2024-11-23 02:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88719
2024-11-23 02:40 - INFO - 	 Train Loss: 0.046
2024-11-23 02:40 - INFO - 	 Val. Loss: 0.068
2024-11-23 02:40 - INFO - 	 ROC-AUC: 0.987
2024-11-23 02:40 - INFO - 	 PR-AUC: 0.887
2024-11-23 02:40 - INFO - 	 Best Val. Loss: 0.068
2024-11-23 02:40 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 02:40 - INFO - 	 Best PR-AUC: 0.887
2024-11-23 02:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 02:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.897
2024-11-23 02:40 - INFO - ---------------------------------------------
2024-11-23 02:49 - INFO - ---------------------------------------------
2024-11-23 02:49 - INFO - Epoch: 02 | Time: 8m 20s
2024-11-23 02:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89417
2024-11-23 02:49 - INFO - 	 Train Loss: 0.042
2024-11-23 02:49 - INFO - 	 Val. Loss: 0.064
2024-11-23 02:49 - INFO - 	 ROC-AUC: 0.988
2024-11-23 02:49 - INFO - 	 PR-AUC: 0.894
2024-11-23 02:49 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 02:49 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 02:49 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 02:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 02:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-11-23 02:49 - INFO - ---------------------------------------------
2024-11-23 02:57 - INFO - ---------------------------------------------
2024-11-23 02:57 - INFO - Epoch: 03 | Time: 8m 22s
2024-11-23 02:57 - INFO - 	 Train Loss: 0.041
2024-11-23 02:57 - INFO - 	 Val. Loss: 0.065
2024-11-23 02:57 - INFO - 	 ROC-AUC: 0.988
2024-11-23 02:57 - INFO - 	 PR-AUC: 0.894
2024-11-23 02:57 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 02:57 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 02:57 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 02:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 02:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.906
2024-11-23 02:57 - INFO - ---------------------------------------------
2024-11-23 03:05 - INFO - ---------------------------------------------
2024-11-23 03:05 - INFO - Epoch: 04 | Time: 8m 20s
2024-11-23 03:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8946
2024-11-23 03:05 - INFO - 	 Train Loss: 0.040
2024-11-23 03:05 - INFO - 	 Val. Loss: 0.066
2024-11-23 03:05 - INFO - 	 ROC-AUC: 0.988
2024-11-23 03:05 - INFO - 	 PR-AUC: 0.895
2024-11-23 03:05 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 03:05 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 03:05 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 03:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 03:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 03:05 - INFO - ---------------------------------------------
2024-11-23 03:14 - INFO - ---------------------------------------------
2024-11-23 03:14 - INFO - Epoch: 05 | Time: 8m 21s
2024-11-23 03:14 - INFO - 	 Train Loss: 0.037
2024-11-23 03:14 - INFO - 	 Val. Loss: 0.074
2024-11-23 03:14 - INFO - 	 ROC-AUC: 0.987
2024-11-23 03:14 - INFO - 	 PR-AUC: 0.885
2024-11-23 03:14 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 03:14 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 03:14 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 03:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 03:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 03:14 - INFO - ---------------------------------------------
2024-11-23 03:22 - INFO - ---------------------------------------------
2024-11-23 03:22 - INFO - Epoch: 06 | Time: 8m 20s
2024-11-23 03:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89754
2024-11-23 03:22 - INFO - 	 Train Loss: 0.037
2024-11-23 03:22 - INFO - 	 Val. Loss: 0.065
2024-11-23 03:22 - INFO - 	 ROC-AUC: 0.988
2024-11-23 03:22 - INFO - 	 PR-AUC: 0.898
2024-11-23 03:22 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 03:22 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 03:22 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 03:22 - INFO - ---------------------------------------------
2024-11-23 03:30 - INFO - ---------------------------------------------
2024-11-23 03:30 - INFO - Epoch: 07 | Time: 8m 21s
2024-11-23 03:30 - INFO - 	 Train Loss: 0.037
2024-11-23 03:30 - INFO - 	 Val. Loss: 0.092
2024-11-23 03:30 - INFO - 	 ROC-AUC: 0.984
2024-11-23 03:30 - INFO - 	 PR-AUC: 0.859
2024-11-23 03:30 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 03:30 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 03:30 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 03:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 03:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 03:30 - INFO - ---------------------------------------------
2024-11-23 03:39 - INFO - ---------------------------------------------
2024-11-23 03:39 - INFO - Epoch: 08 | Time: 8m 21s
2024-11-23 03:39 - INFO - 	 Train Loss: 0.037
2024-11-23 03:39 - INFO - 	 Val. Loss: 0.072
2024-11-23 03:39 - INFO - 	 ROC-AUC: 0.987
2024-11-23 03:39 - INFO - 	 PR-AUC: 0.889
2024-11-23 03:39 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 03:39 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 03:39 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 03:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 03:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 03:39 - INFO - ---------------------------------------------
2024-11-23 03:47 - INFO - ---------------------------------------------
2024-11-23 03:47 - INFO - Epoch: 09 | Time: 8m 20s
2024-11-23 03:47 - INFO - 	 Train Loss: 0.034
2024-11-23 03:47 - INFO - 	 Val. Loss: 0.080
2024-11-23 03:47 - INFO - 	 ROC-AUC: 0.984
2024-11-23 03:47 - INFO - 	 PR-AUC: 0.875
2024-11-23 03:47 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 03:47 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 03:47 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 03:47 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 03:47 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 03:47 - INFO - ---------------------------------------------
2024-11-23 03:58 - INFO - Fit the preprocessing pipeline
2024-11-23 03:58 - INFO - Training using device: cuda
2024-11-23 03:58 - INFO - Creating generators
2024-11-23 03:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 03:58 - INFO - * Model:
2024-11-23 03:58 - INFO - * -----------
2024-11-23 03:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 03:58 - INFO - * -----------
2024-11-23 04:06 - INFO - ---------------------------------------------
2024-11-23 04:06 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 04:06 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89547
2024-11-23 04:06 - INFO - 	 Train Loss: 0.046
2024-11-23 04:06 - INFO - 	 Val. Loss: 0.065
2024-11-23 04:06 - INFO - 	 ROC-AUC: 0.987
2024-11-23 04:06 - INFO - 	 PR-AUC: 0.895
2024-11-23 04:06 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 04:06 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 04:06 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 04:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 04:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-23 04:06 - INFO - ---------------------------------------------
2024-11-23 04:15 - INFO - ---------------------------------------------
2024-11-23 04:15 - INFO - Epoch: 02 | Time: 8m 19s
2024-11-23 04:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89924
2024-11-23 04:15 - INFO - 	 Train Loss: 0.044
2024-11-23 04:15 - INFO - 	 Val. Loss: 0.064
2024-11-23 04:15 - INFO - 	 ROC-AUC: 0.989
2024-11-23 04:15 - INFO - 	 PR-AUC: 0.899
2024-11-23 04:15 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 04:15 - INFO - 	 Best ROC-AUC: 0.989
2024-11-23 04:15 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 04:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 04:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 04:15 - INFO - ---------------------------------------------
2024-11-23 04:23 - INFO - ---------------------------------------------
2024-11-23 04:23 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 04:23 - INFO - 	 Train Loss: 0.041
2024-11-23 04:23 - INFO - 	 Val. Loss: 0.066
2024-11-23 04:23 - INFO - 	 ROC-AUC: 0.988
2024-11-23 04:23 - INFO - 	 PR-AUC: 0.892
2024-11-23 04:23 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 04:23 - INFO - 	 Best ROC-AUC: 0.989
2024-11-23 04:23 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 04:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 04:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 04:23 - INFO - ---------------------------------------------
2024-11-23 04:31 - INFO - ---------------------------------------------
2024-11-23 04:31 - INFO - Epoch: 04 | Time: 8m 20s
2024-11-23 04:31 - INFO - 	 Train Loss: 0.040
2024-11-23 04:31 - INFO - 	 Val. Loss: 0.072
2024-11-23 04:31 - INFO - 	 ROC-AUC: 0.986
2024-11-23 04:31 - INFO - 	 PR-AUC: 0.881
2024-11-23 04:31 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 04:31 - INFO - 	 Best ROC-AUC: 0.989
2024-11-23 04:31 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 04:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 04:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 04:31 - INFO - ---------------------------------------------
2024-11-23 04:40 - INFO - ---------------------------------------------
2024-11-23 04:40 - INFO - Epoch: 05 | Time: 8m 19s
2024-11-23 04:40 - INFO - 	 Train Loss: 0.038
2024-11-23 04:40 - INFO - 	 Val. Loss: 0.074
2024-11-23 04:40 - INFO - 	 ROC-AUC: 0.985
2024-11-23 04:40 - INFO - 	 PR-AUC: 0.882
2024-11-23 04:40 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 04:40 - INFO - 	 Best ROC-AUC: 0.989
2024-11-23 04:40 - INFO - 	 Best PR-AUC: 0.899
2024-11-23 04:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 04:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 04:40 - INFO - ---------------------------------------------
2024-11-23 04:50 - INFO - Fit the preprocessing pipeline
2024-11-23 04:50 - INFO - Training using device: cuda
2024-11-23 04:50 - INFO - Creating generators
2024-11-23 04:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 04:50 - INFO - * Model:
2024-11-23 04:50 - INFO - * -----------
2024-11-23 04:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 04:50 - INFO - * -----------
2024-11-23 04:59 - INFO - ---------------------------------------------
2024-11-23 04:59 - INFO - Epoch: 01 | Time: 8m 22s
2024-11-23 04:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89088
2024-11-23 04:59 - INFO - 	 Train Loss: 0.046
2024-11-23 04:59 - INFO - 	 Val. Loss: 0.067
2024-11-23 04:59 - INFO - 	 ROC-AUC: 0.987
2024-11-23 04:59 - INFO - 	 PR-AUC: 0.891
2024-11-23 04:59 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 04:59 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 04:59 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 04:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 04:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-23 04:59 - INFO - ---------------------------------------------
2024-11-23 05:07 - INFO - ---------------------------------------------
2024-11-23 05:07 - INFO - Epoch: 02 | Time: 8m 20s
2024-11-23 05:07 - INFO - 	 Train Loss: 0.043
2024-11-23 05:07 - INFO - 	 Val. Loss: 0.067
2024-11-23 05:07 - INFO - 	 ROC-AUC: 0.987
2024-11-23 05:07 - INFO - 	 PR-AUC: 0.888
2024-11-23 05:07 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 05:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 05:07 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 05:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 05:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-23 05:07 - INFO - ---------------------------------------------
2024-11-23 05:15 - INFO - ---------------------------------------------
2024-11-23 05:15 - INFO - Epoch: 03 | Time: 8m 21s
2024-11-23 05:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89203
2024-11-23 05:15 - INFO - 	 Train Loss: 0.041
2024-11-23 05:15 - INFO - 	 Val. Loss: 0.066
2024-11-23 05:15 - INFO - 	 ROC-AUC: 0.986
2024-11-23 05:15 - INFO - 	 PR-AUC: 0.892
2024-11-23 05:15 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 05:15 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 05:15 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 05:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 05:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 05:15 - INFO - ---------------------------------------------
2024-11-23 05:24 - INFO - ---------------------------------------------
2024-11-23 05:24 - INFO - Epoch: 04 | Time: 8m 21s
2024-11-23 05:24 - INFO - 	 Train Loss: 0.040
2024-11-23 05:24 - INFO - 	 Val. Loss: 0.073
2024-11-23 05:24 - INFO - 	 ROC-AUC: 0.987
2024-11-23 05:24 - INFO - 	 PR-AUC: 0.882
2024-11-23 05:24 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 05:24 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 05:24 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 05:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 05:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 05:24 - INFO - ---------------------------------------------
2024-11-23 05:32 - INFO - ---------------------------------------------
2024-11-23 05:32 - INFO - Epoch: 05 | Time: 8m 21s
2024-11-23 05:32 - INFO - 	 Train Loss: 0.038
2024-11-23 05:32 - INFO - 	 Val. Loss: 0.078
2024-11-23 05:32 - INFO - 	 ROC-AUC: 0.987
2024-11-23 05:32 - INFO - 	 PR-AUC: 0.877
2024-11-23 05:32 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 05:32 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 05:32 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 05:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 05:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 05:32 - INFO - ---------------------------------------------
2024-11-23 05:40 - INFO - ---------------------------------------------
2024-11-23 05:40 - INFO - Epoch: 06 | Time: 8m 21s
2024-11-23 05:40 - INFO - 	 Train Loss: 0.038
2024-11-23 05:40 - INFO - 	 Val. Loss: 0.071
2024-11-23 05:40 - INFO - 	 ROC-AUC: 0.986
2024-11-23 05:40 - INFO - 	 PR-AUC: 0.885
2024-11-23 05:40 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 05:40 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 05:40 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 05:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 05:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 05:40 - INFO - ---------------------------------------------
2024-11-23 05:49 - INFO - ---------------------------------------------
2024-11-23 05:49 - INFO - Epoch: 07 | Time: 8m 20s
2024-11-23 05:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89454
2024-11-23 05:49 - INFO - 	 Train Loss: 0.036
2024-11-23 05:49 - INFO - 	 Val. Loss: 0.071
2024-11-23 05:49 - INFO - 	 ROC-AUC: 0.987
2024-11-23 05:49 - INFO - 	 PR-AUC: 0.895
2024-11-23 05:49 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 05:49 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 05:49 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 05:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 05:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 05:49 - INFO - ---------------------------------------------
2024-11-23 05:57 - INFO - ---------------------------------------------
2024-11-23 05:57 - INFO - Epoch: 08 | Time: 8m 20s
2024-11-23 05:57 - INFO - 	 Train Loss: 0.036
2024-11-23 05:57 - INFO - 	 Val. Loss: 0.081
2024-11-23 05:57 - INFO - 	 ROC-AUC: 0.986
2024-11-23 05:57 - INFO - 	 PR-AUC: 0.892
2024-11-23 05:57 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 05:57 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 05:57 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 05:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 05:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 05:57 - INFO - ---------------------------------------------
2024-11-23 06:05 - INFO - ---------------------------------------------
2024-11-23 06:05 - INFO - Epoch: 09 | Time: 8m 19s
2024-11-23 06:05 - INFO - 	 Train Loss: 0.034
2024-11-23 06:05 - INFO - 	 Val. Loss: 0.077
2024-11-23 06:05 - INFO - 	 ROC-AUC: 0.986
2024-11-23 06:05 - INFO - 	 PR-AUC: 0.884
2024-11-23 06:05 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 06:05 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 06:05 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 06:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 06:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 06:05 - INFO - ---------------------------------------------
2024-11-23 06:14 - INFO - ---------------------------------------------
2024-11-23 06:14 - INFO - Epoch: 10 | Time: 8m 20s
2024-11-23 06:14 - INFO - 	 Train Loss: 0.035
2024-11-23 06:14 - INFO - 	 Val. Loss: 0.079
2024-11-23 06:14 - INFO - 	 ROC-AUC: 0.987
2024-11-23 06:14 - INFO - 	 PR-AUC: 0.890
2024-11-23 06:14 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 06:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 06:14 - INFO - 	 Best PR-AUC: 0.895
2024-11-23 06:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 06:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 06:14 - INFO - ---------------------------------------------
2024-11-23 06:16 - INFO - Fit the preprocessing pipeline
2024-11-23 06:16 - INFO - Training using device: cuda
2024-11-23 06:16 - INFO - Creating generators
2024-11-23 06:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 06:16 - INFO - * Model:
2024-11-23 06:16 - INFO - * -----------
2024-11-23 06:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 06:16 - INFO - * -----------
2024-11-23 06:25 - INFO - ---------------------------------------------
2024-11-23 06:25 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 06:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89831
2024-11-23 06:25 - INFO - 	 Train Loss: 0.046
2024-11-23 06:25 - INFO - 	 Val. Loss: 0.064
2024-11-23 06:25 - INFO - 	 ROC-AUC: 0.988
2024-11-23 06:25 - INFO - 	 PR-AUC: 0.898
2024-11-23 06:25 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 06:25 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 06:25 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 06:25 - INFO - ---------------------------------------------
2024-11-23 06:33 - INFO - ---------------------------------------------
2024-11-23 06:33 - INFO - Epoch: 02 | Time: 8m 21s
2024-11-23 06:33 - INFO - 	 Train Loss: 0.042
2024-11-23 06:33 - INFO - 	 Val. Loss: 0.073
2024-11-23 06:33 - INFO - 	 ROC-AUC: 0.986
2024-11-23 06:33 - INFO - 	 PR-AUC: 0.886
2024-11-23 06:33 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 06:33 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 06:33 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 06:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 06:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 06:33 - INFO - ---------------------------------------------
2024-11-23 06:41 - INFO - ---------------------------------------------
2024-11-23 06:41 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 06:41 - INFO - 	 Train Loss: 0.042
2024-11-23 06:41 - INFO - 	 Val. Loss: 0.066
2024-11-23 06:41 - INFO - 	 ROC-AUC: 0.986
2024-11-23 06:41 - INFO - 	 PR-AUC: 0.885
2024-11-23 06:41 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 06:41 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 06:41 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 06:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 06:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 06:41 - INFO - ---------------------------------------------
2024-11-23 06:50 - INFO - ---------------------------------------------
2024-11-23 06:50 - INFO - Epoch: 04 | Time: 8m 21s
2024-11-23 06:50 - INFO - 	 Train Loss: 0.040
2024-11-23 06:50 - INFO - 	 Val. Loss: 0.064
2024-11-23 06:50 - INFO - 	 ROC-AUC: 0.987
2024-11-23 06:50 - INFO - 	 PR-AUC: 0.895
2024-11-23 06:50 - INFO - 	 Best Val. Loss: 0.064
2024-11-23 06:50 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 06:50 - INFO - 	 Best PR-AUC: 0.898
2024-11-23 06:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 06:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 06:50 - INFO - ---------------------------------------------
2024-11-23 07:00 - INFO - Fit the preprocessing pipeline
2024-11-23 07:00 - INFO - Training using device: cuda
2024-11-23 07:00 - INFO - Creating generators
2024-11-23 07:00 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 07:00 - INFO - * Model:
2024-11-23 07:00 - INFO - * -----------
2024-11-23 07:00 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 07:00 - INFO - * -----------
2024-11-23 07:09 - INFO - ---------------------------------------------
2024-11-23 07:09 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 07:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8814
2024-11-23 07:09 - INFO - 	 Train Loss: 0.046
2024-11-23 07:09 - INFO - 	 Val. Loss: 0.077
2024-11-23 07:09 - INFO - 	 ROC-AUC: 0.986
2024-11-23 07:09 - INFO - 	 PR-AUC: 0.881
2024-11-23 07:09 - INFO - 	 Best Val. Loss: 0.077
2024-11-23 07:09 - INFO - 	 Best ROC-AUC: 0.986
2024-11-23 07:09 - INFO - 	 Best PR-AUC: 0.881
2024-11-23 07:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 07:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.895
2024-11-23 07:09 - INFO - ---------------------------------------------
2024-11-23 07:17 - INFO - ---------------------------------------------
2024-11-23 07:17 - INFO - Epoch: 02 | Time: 8m 20s
2024-11-23 07:17 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89046
2024-11-23 07:17 - INFO - 	 Train Loss: 0.043
2024-11-23 07:17 - INFO - 	 Val. Loss: 0.069
2024-11-23 07:17 - INFO - 	 ROC-AUC: 0.987
2024-11-23 07:17 - INFO - 	 PR-AUC: 0.890
2024-11-23 07:17 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 07:17 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 07:17 - INFO - 	 Best PR-AUC: 0.890
2024-11-23 07:17 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-23 07:17 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.894
2024-11-23 07:17 - INFO - ---------------------------------------------
2024-11-23 07:25 - INFO - ---------------------------------------------
2024-11-23 07:25 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 07:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89744
2024-11-23 07:25 - INFO - 	 Train Loss: 0.041
2024-11-23 07:25 - INFO - 	 Val. Loss: 0.065
2024-11-23 07:25 - INFO - 	 ROC-AUC: 0.987
2024-11-23 07:25 - INFO - 	 PR-AUC: 0.897
2024-11-23 07:25 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 07:25 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 07:25 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 07:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 07:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 07:25 - INFO - ---------------------------------------------
2024-11-23 07:34 - INFO - ---------------------------------------------
2024-11-23 07:34 - INFO - Epoch: 04 | Time: 8m 20s
2024-11-23 07:34 - INFO - 	 Train Loss: 0.039
2024-11-23 07:34 - INFO - 	 Val. Loss: 0.080
2024-11-23 07:34 - INFO - 	 ROC-AUC: 0.985
2024-11-23 07:34 - INFO - 	 PR-AUC: 0.869
2024-11-23 07:34 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 07:34 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 07:34 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 07:34 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 07:34 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 07:34 - INFO - ---------------------------------------------
2024-11-23 07:42 - INFO - ---------------------------------------------
2024-11-23 07:42 - INFO - Epoch: 05 | Time: 8m 20s
2024-11-23 07:42 - INFO - 	 Train Loss: 0.038
2024-11-23 07:42 - INFO - 	 Val. Loss: 0.085
2024-11-23 07:42 - INFO - 	 ROC-AUC: 0.986
2024-11-23 07:42 - INFO - 	 PR-AUC: 0.879
2024-11-23 07:42 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 07:42 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 07:42 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 07:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 07:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 07:42 - INFO - ---------------------------------------------
2024-11-23 07:50 - INFO - ---------------------------------------------
2024-11-23 07:50 - INFO - Epoch: 06 | Time: 8m 20s
2024-11-23 07:50 - INFO - 	 Train Loss: 0.037
2024-11-23 07:50 - INFO - 	 Val. Loss: 0.071
2024-11-23 07:50 - INFO - 	 ROC-AUC: 0.985
2024-11-23 07:50 - INFO - 	 PR-AUC: 0.876
2024-11-23 07:50 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 07:50 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 07:50 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 07:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 07:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 07:50 - INFO - ---------------------------------------------
2024-11-23 08:01 - INFO - Fit the preprocessing pipeline
2024-11-23 08:01 - INFO - Training using device: cuda
2024-11-23 08:01 - INFO - Creating generators
2024-11-23 08:01 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 08:01 - INFO - * Model:
2024-11-23 08:01 - INFO - * -----------
2024-11-23 08:01 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 08:01 - INFO - * -----------
2024-11-23 08:10 - INFO - ---------------------------------------------
2024-11-23 08:10 - INFO - Epoch: 01 | Time: 8m 22s
2024-11-23 08:10 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89067
2024-11-23 08:10 - INFO - 	 Train Loss: 0.046
2024-11-23 08:10 - INFO - 	 Val. Loss: 0.067
2024-11-23 08:10 - INFO - 	 ROC-AUC: 0.987
2024-11-23 08:10 - INFO - 	 PR-AUC: 0.891
2024-11-23 08:10 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 08:10 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 08:10 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 08:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 08:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-23 08:10 - INFO - ---------------------------------------------
2024-11-23 08:18 - INFO - ---------------------------------------------
2024-11-23 08:18 - INFO - Epoch: 02 | Time: 8m 21s
2024-11-23 08:18 - INFO - 	 Train Loss: 0.045
2024-11-23 08:18 - INFO - 	 Val. Loss: 0.069
2024-11-23 08:18 - INFO - 	 ROC-AUC: 0.986
2024-11-23 08:18 - INFO - 	 PR-AUC: 0.883
2024-11-23 08:18 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 08:18 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 08:18 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 08:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 08:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.900
2024-11-23 08:18 - INFO - ---------------------------------------------
2024-11-23 08:26 - INFO - ---------------------------------------------
2024-11-23 08:26 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 08:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89343
2024-11-23 08:26 - INFO - 	 Train Loss: 0.040
2024-11-23 08:26 - INFO - 	 Val. Loss: 0.065
2024-11-23 08:26 - INFO - 	 ROC-AUC: 0.987
2024-11-23 08:26 - INFO - 	 PR-AUC: 0.893
2024-11-23 08:26 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 08:26 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 08:26 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 08:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 08:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 08:26 - INFO - ---------------------------------------------
2024-11-23 08:35 - INFO - ---------------------------------------------
2024-11-23 08:35 - INFO - Epoch: 04 | Time: 8m 21s
2024-11-23 08:35 - INFO - 	 Train Loss: 0.040
2024-11-23 08:35 - INFO - 	 Val. Loss: 0.073
2024-11-23 08:35 - INFO - 	 ROC-AUC: 0.986
2024-11-23 08:35 - INFO - 	 PR-AUC: 0.882
2024-11-23 08:35 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 08:35 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 08:35 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 08:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 08:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 08:35 - INFO - ---------------------------------------------
2024-11-23 08:43 - INFO - ---------------------------------------------
2024-11-23 08:43 - INFO - Epoch: 05 | Time: 8m 22s
2024-11-23 08:43 - INFO - 	 Train Loss: 0.039
2024-11-23 08:43 - INFO - 	 Val. Loss: 0.071
2024-11-23 08:43 - INFO - 	 ROC-AUC: 0.985
2024-11-23 08:43 - INFO - 	 PR-AUC: 0.893
2024-11-23 08:43 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 08:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 08:43 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 08:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 08:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 08:43 - INFO - ---------------------------------------------
2024-11-23 08:51 - INFO - ---------------------------------------------
2024-11-23 08:51 - INFO - Epoch: 06 | Time: 8m 20s
2024-11-23 08:51 - INFO - 	 Train Loss: 0.039
2024-11-23 08:51 - INFO - 	 Val. Loss: 0.076
2024-11-23 08:51 - INFO - 	 ROC-AUC: 0.986
2024-11-23 08:51 - INFO - 	 PR-AUC: 0.879
2024-11-23 08:51 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 08:51 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 08:51 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 08:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 08:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.904
2024-11-23 08:51 - INFO - ---------------------------------------------
2024-11-23 09:02 - INFO - Fit the preprocessing pipeline
2024-11-23 09:02 - INFO - Training using device: cuda
2024-11-23 09:02 - INFO - Creating generators
2024-11-23 09:02 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 09:02 - INFO - * Model:
2024-11-23 09:02 - INFO - * -----------
2024-11-23 09:02 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 09:02 - INFO - * -----------
2024-11-23 09:11 - INFO - ---------------------------------------------
2024-11-23 09:11 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 09:11 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89106
2024-11-23 09:11 - INFO - 	 Train Loss: 0.046
2024-11-23 09:11 - INFO - 	 Val. Loss: 0.065
2024-11-23 09:11 - INFO - 	 ROC-AUC: 0.988
2024-11-23 09:11 - INFO - 	 PR-AUC: 0.891
2024-11-23 09:11 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 09:11 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 09:11 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 09:11 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 09:11 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-11-23 09:11 - INFO - ---------------------------------------------
2024-11-23 09:19 - INFO - ---------------------------------------------
2024-11-23 09:19 - INFO - Epoch: 02 | Time: 8m 20s
2024-11-23 09:19 - INFO - 	 Train Loss: 0.043
2024-11-23 09:19 - INFO - 	 Val. Loss: 0.067
2024-11-23 09:19 - INFO - 	 ROC-AUC: 0.987
2024-11-23 09:19 - INFO - 	 PR-AUC: 0.888
2024-11-23 09:19 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 09:19 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 09:19 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-11-23 09:19 - INFO - ---------------------------------------------
2024-11-23 09:27 - INFO - ---------------------------------------------
2024-11-23 09:27 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 09:27 - INFO - 	 Train Loss: 0.041
2024-11-23 09:27 - INFO - 	 Val. Loss: 0.066
2024-11-23 09:27 - INFO - 	 ROC-AUC: 0.987
2024-11-23 09:27 - INFO - 	 PR-AUC: 0.889
2024-11-23 09:27 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 09:27 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 09:27 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 09:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 09:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-11-23 09:27 - INFO - ---------------------------------------------
2024-11-23 09:36 - INFO - ---------------------------------------------
2024-11-23 09:36 - INFO - Epoch: 04 | Time: 8m 20s
2024-11-23 09:36 - INFO - 	 Train Loss: 0.040
2024-11-23 09:36 - INFO - 	 Val. Loss: 0.072
2024-11-23 09:36 - INFO - 	 ROC-AUC: 0.986
2024-11-23 09:36 - INFO - 	 PR-AUC: 0.882
2024-11-23 09:36 - INFO - 	 Best Val. Loss: 0.065
2024-11-23 09:36 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 09:36 - INFO - 	 Best PR-AUC: 0.891
2024-11-23 09:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 09:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.908
2024-11-23 09:36 - INFO - ---------------------------------------------
2024-11-23 09:46 - INFO - Fit the preprocessing pipeline
2024-11-23 09:46 - INFO - Training using device: cuda
2024-11-23 09:46 - INFO - Creating generators
2024-11-23 09:46 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 09:46 - INFO - * Model:
2024-11-23 09:46 - INFO - * -----------
2024-11-23 09:46 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 09:46 - INFO - * -----------
2024-11-23 09:55 - INFO - ---------------------------------------------
2024-11-23 09:55 - INFO - Epoch: 01 | Time: 8m 52s
2024-11-23 09:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8839
2024-11-23 09:55 - INFO - 	 Train Loss: 0.046
2024-11-23 09:55 - INFO - 	 Val. Loss: 0.070
2024-11-23 09:55 - INFO - 	 ROC-AUC: 0.987
2024-11-23 09:55 - INFO - 	 PR-AUC: 0.884
2024-11-23 09:55 - INFO - 	 Best Val. Loss: 0.070
2024-11-23 09:55 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 09:55 - INFO - 	 Best PR-AUC: 0.884
2024-11-23 09:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.987
2024-11-23 09:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 09:55 - INFO - ---------------------------------------------
2024-11-23 10:04 - INFO - ---------------------------------------------
2024-11-23 10:04 - INFO - Epoch: 02 | Time: 8m 21s
2024-11-23 10:04 - INFO - 	 Train Loss: 0.043
2024-11-23 10:04 - INFO - 	 Val. Loss: 0.073
2024-11-23 10:04 - INFO - 	 ROC-AUC: 0.987
2024-11-23 10:04 - INFO - 	 PR-AUC: 0.884
2024-11-23 10:04 - INFO - 	 Best Val. Loss: 0.070
2024-11-23 10:04 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 10:04 - INFO - 	 Best PR-AUC: 0.884
2024-11-23 10:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 10:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 10:04 - INFO - ---------------------------------------------
2024-11-23 10:12 - INFO - ---------------------------------------------
2024-11-23 10:12 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 10:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88461
2024-11-23 10:12 - INFO - 	 Train Loss: 0.041
2024-11-23 10:12 - INFO - 	 Val. Loss: 0.073
2024-11-23 10:12 - INFO - 	 ROC-AUC: 0.986
2024-11-23 10:12 - INFO - 	 PR-AUC: 0.885
2024-11-23 10:12 - INFO - 	 Best Val. Loss: 0.070
2024-11-23 10:12 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 10:12 - INFO - 	 Best PR-AUC: 0.885
2024-11-23 10:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 10:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 10:12 - INFO - ---------------------------------------------
2024-11-23 10:20 - INFO - ---------------------------------------------
2024-11-23 10:20 - INFO - Epoch: 04 | Time: 8m 20s
2024-11-23 10:20 - INFO - 	 Train Loss: 0.039
2024-11-23 10:20 - INFO - 	 Val. Loss: 0.074
2024-11-23 10:20 - INFO - 	 ROC-AUC: 0.986
2024-11-23 10:20 - INFO - 	 PR-AUC: 0.869
2024-11-23 10:20 - INFO - 	 Best Val. Loss: 0.070
2024-11-23 10:20 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 10:20 - INFO - 	 Best PR-AUC: 0.885
2024-11-23 10:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 10:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 10:20 - INFO - ---------------------------------------------
2024-11-23 10:29 - INFO - ---------------------------------------------
2024-11-23 10:29 - INFO - Epoch: 05 | Time: 8m 21s
2024-11-23 10:29 - INFO - 	 Train Loss: 0.038
2024-11-23 10:29 - INFO - 	 Val. Loss: 0.072
2024-11-23 10:29 - INFO - 	 ROC-AUC: 0.985
2024-11-23 10:29 - INFO - 	 PR-AUC: 0.881
2024-11-23 10:29 - INFO - 	 Best Val. Loss: 0.070
2024-11-23 10:29 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 10:29 - INFO - 	 Best PR-AUC: 0.885
2024-11-23 10:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 10:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 10:29 - INFO - ---------------------------------------------
2024-11-23 10:37 - INFO - ---------------------------------------------
2024-11-23 10:37 - INFO - Epoch: 06 | Time: 8m 21s
2024-11-23 10:37 - INFO - 	 Train Loss: 0.039
2024-11-23 10:37 - INFO - 	 Val. Loss: 0.069
2024-11-23 10:37 - INFO - 	 ROC-AUC: 0.987
2024-11-23 10:37 - INFO - 	 PR-AUC: 0.882
2024-11-23 10:37 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 10:37 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 10:37 - INFO - 	 Best PR-AUC: 0.885
2024-11-23 10:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.983
2024-11-23 10:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 10:37 - INFO - ---------------------------------------------
2024-11-23 10:45 - INFO - ---------------------------------------------
2024-11-23 10:45 - INFO - Epoch: 07 | Time: 8m 20s
2024-11-23 10:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88637
2024-11-23 10:45 - INFO - 	 Train Loss: 0.037
2024-11-23 10:45 - INFO - 	 Val. Loss: 0.071
2024-11-23 10:45 - INFO - 	 ROC-AUC: 0.987
2024-11-23 10:45 - INFO - 	 PR-AUC: 0.886
2024-11-23 10:45 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 10:45 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 10:45 - INFO - 	 Best PR-AUC: 0.886
2024-11-23 10:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 10:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-11-23 10:45 - INFO - ---------------------------------------------
2024-11-23 10:54 - INFO - ---------------------------------------------
2024-11-23 10:54 - INFO - Epoch: 08 | Time: 8m 20s
2024-11-23 10:54 - INFO - 	 Train Loss: 0.035
2024-11-23 10:54 - INFO - 	 Val. Loss: 0.087
2024-11-23 10:54 - INFO - 	 ROC-AUC: 0.984
2024-11-23 10:54 - INFO - 	 PR-AUC: 0.863
2024-11-23 10:54 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 10:54 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 10:54 - INFO - 	 Best PR-AUC: 0.886
2024-11-23 10:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 10:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-11-23 10:54 - INFO - ---------------------------------------------
2024-11-23 11:02 - INFO - ---------------------------------------------
2024-11-23 11:02 - INFO - Epoch: 09 | Time: 8m 20s
2024-11-23 11:02 - INFO - 	 Train Loss: 0.035
2024-11-23 11:02 - INFO - 	 Val. Loss: 0.079
2024-11-23 11:02 - INFO - 	 ROC-AUC: 0.985
2024-11-23 11:02 - INFO - 	 PR-AUC: 0.866
2024-11-23 11:02 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 11:02 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 11:02 - INFO - 	 Best PR-AUC: 0.886
2024-11-23 11:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 11:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-11-23 11:02 - INFO - ---------------------------------------------
2024-11-23 11:10 - INFO - ---------------------------------------------
2024-11-23 11:10 - INFO - Epoch: 10 | Time: 8m 22s
2024-11-23 11:10 - INFO - 	 Train Loss: 0.034
2024-11-23 11:10 - INFO - 	 Val. Loss: 0.078
2024-11-23 11:10 - INFO - 	 ROC-AUC: 0.983
2024-11-23 11:10 - INFO - 	 PR-AUC: 0.866
2024-11-23 11:10 - INFO - 	 Best Val. Loss: 0.069
2024-11-23 11:10 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 11:10 - INFO - 	 Best PR-AUC: 0.886
2024-11-23 11:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 11:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.909
2024-11-23 11:10 - INFO - ---------------------------------------------
2024-11-23 11:13 - INFO - Fit the preprocessing pipeline
2024-11-23 11:13 - INFO - Training using device: cuda
2024-11-23 11:13 - INFO - Creating generators
2024-11-23 11:13 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 11:13 - INFO - * Model:
2024-11-23 11:13 - INFO - * -----------
2024-11-23 11:13 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 11:13 - INFO - * -----------
2024-11-23 11:21 - INFO - ---------------------------------------------
2024-11-23 11:21 - INFO - Epoch: 01 | Time: 8m 21s
2024-11-23 11:21 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89668
2024-11-23 11:21 - INFO - 	 Train Loss: 0.046
2024-11-23 11:21 - INFO - 	 Val. Loss: 0.066
2024-11-23 11:21 - INFO - 	 ROC-AUC: 0.987
2024-11-23 11:21 - INFO - 	 PR-AUC: 0.897
2024-11-23 11:21 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 11:21 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 11:21 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 11:21 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 11:21 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 11:21 - INFO - ---------------------------------------------
2024-11-23 11:30 - INFO - ---------------------------------------------
2024-11-23 11:30 - INFO - Epoch: 02 | Time: 8m 21s
2024-11-23 11:30 - INFO - 	 Train Loss: 0.044
2024-11-23 11:30 - INFO - 	 Val. Loss: 0.070
2024-11-23 11:30 - INFO - 	 ROC-AUC: 0.986
2024-11-23 11:30 - INFO - 	 PR-AUC: 0.886
2024-11-23 11:30 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 11:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 11:30 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 11:30 - INFO - ---------------------------------------------
2024-11-23 11:38 - INFO - ---------------------------------------------
2024-11-23 11:38 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 11:38 - INFO - 	 Train Loss: 0.041
2024-11-23 11:38 - INFO - 	 Val. Loss: 0.081
2024-11-23 11:38 - INFO - 	 ROC-AUC: 0.985
2024-11-23 11:38 - INFO - 	 PR-AUC: 0.865
2024-11-23 11:38 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 11:38 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 11:38 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 11:38 - INFO - ---------------------------------------------
2024-11-23 11:46 - INFO - ---------------------------------------------
2024-11-23 11:46 - INFO - Epoch: 04 | Time: 8m 23s
2024-11-23 11:46 - INFO - 	 Train Loss: 0.039
2024-11-23 11:46 - INFO - 	 Val. Loss: 0.075
2024-11-23 11:46 - INFO - 	 ROC-AUC: 0.986
2024-11-23 11:46 - INFO - 	 PR-AUC: 0.882
2024-11-23 11:46 - INFO - 	 Best Val. Loss: 0.066
2024-11-23 11:46 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 11:46 - INFO - 	 Best PR-AUC: 0.897
2024-11-23 11:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.984
2024-11-23 11:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.899
2024-11-23 11:46 - INFO - ---------------------------------------------
2024-11-23 11:57 - INFO - Fit the preprocessing pipeline
2024-11-23 11:57 - INFO - Training using device: cuda
2024-11-23 11:57 - INFO - Creating generators
2024-11-23 11:57 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 11:57 - INFO - * Model:
2024-11-23 11:57 - INFO - * -----------
2024-11-23 11:57 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 11:57 - INFO - * -----------
2024-11-23 12:05 - INFO - ---------------------------------------------
2024-11-23 12:05 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 12:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.88672
2024-11-23 12:05 - INFO - 	 Train Loss: 0.046
2024-11-23 12:05 - INFO - 	 Val. Loss: 0.067
2024-11-23 12:05 - INFO - 	 ROC-AUC: 0.986
2024-11-23 12:05 - INFO - 	 PR-AUC: 0.887
2024-11-23 12:05 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 12:05 - INFO - 	 Best ROC-AUC: 0.986
2024-11-23 12:05 - INFO - 	 Best PR-AUC: 0.887
2024-11-23 12:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 12:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 12:05 - INFO - ---------------------------------------------
2024-11-23 12:14 - INFO - ---------------------------------------------
2024-11-23 12:14 - INFO - Epoch: 02 | Time: 8m 20s
2024-11-23 12:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89368
2024-11-23 12:14 - INFO - 	 Train Loss: 0.043
2024-11-23 12:14 - INFO - 	 Val. Loss: 0.067
2024-11-23 12:14 - INFO - 	 ROC-AUC: 0.987
2024-11-23 12:14 - INFO - 	 PR-AUC: 0.894
2024-11-23 12:14 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 12:14 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 12:14 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 12:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-23 12:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 12:14 - INFO - ---------------------------------------------
2024-11-23 12:22 - INFO - ---------------------------------------------
2024-11-23 12:22 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 12:22 - INFO - 	 Train Loss: 0.041
2024-11-23 12:22 - INFO - 	 Val. Loss: 0.069
2024-11-23 12:22 - INFO - 	 ROC-AUC: 0.985
2024-11-23 12:22 - INFO - 	 PR-AUC: 0.884
2024-11-23 12:22 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 12:22 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 12:22 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 12:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-23 12:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 12:22 - INFO - ---------------------------------------------
2024-11-23 12:30 - INFO - ---------------------------------------------
2024-11-23 12:30 - INFO - Epoch: 04 | Time: 8m 20s
2024-11-23 12:30 - INFO - 	 Train Loss: 0.040
2024-11-23 12:30 - INFO - 	 Val. Loss: 0.068
2024-11-23 12:30 - INFO - 	 ROC-AUC: 0.986
2024-11-23 12:30 - INFO - 	 PR-AUC: 0.891
2024-11-23 12:30 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 12:30 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 12:30 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 12:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-23 12:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 12:30 - INFO - ---------------------------------------------
2024-11-23 12:39 - INFO - ---------------------------------------------
2024-11-23 12:39 - INFO - Epoch: 05 | Time: 8m 20s
2024-11-23 12:39 - INFO - 	 Train Loss: 0.039
2024-11-23 12:39 - INFO - 	 Val. Loss: 0.072
2024-11-23 12:39 - INFO - 	 ROC-AUC: 0.986
2024-11-23 12:39 - INFO - 	 PR-AUC: 0.885
2024-11-23 12:39 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 12:39 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 12:39 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 12:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.982
2024-11-23 12:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.893
2024-11-23 12:39 - INFO - ---------------------------------------------
2024-11-23 12:50 - INFO - Fit the preprocessing pipeline
2024-11-23 12:50 - INFO - Training using device: cuda
2024-11-23 12:50 - INFO - Creating generators
2024-11-23 12:50 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 12:50 - INFO - * Model:
2024-11-23 12:50 - INFO - * -----------
2024-11-23 12:50 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 12:50 - INFO - * -----------
2024-11-23 12:58 - INFO - ---------------------------------------------
2024-11-23 12:58 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 12:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89333
2024-11-23 12:58 - INFO - 	 Train Loss: 0.047
2024-11-23 12:58 - INFO - 	 Val. Loss: 0.063
2024-11-23 12:58 - INFO - 	 ROC-AUC: 0.987
2024-11-23 12:58 - INFO - 	 PR-AUC: 0.893
2024-11-23 12:58 - INFO - 	 Best Val. Loss: 0.063
2024-11-23 12:58 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 12:58 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 12:58 - INFO - ---------------------------------------------
2024-11-23 13:07 - INFO - ---------------------------------------------
2024-11-23 13:07 - INFO - Epoch: 02 | Time: 8m 53s
2024-11-23 13:07 - INFO - 	 Train Loss: 0.043
2024-11-23 13:07 - INFO - 	 Val. Loss: 0.067
2024-11-23 13:07 - INFO - 	 ROC-AUC: 0.987
2024-11-23 13:07 - INFO - 	 PR-AUC: 0.891
2024-11-23 13:07 - INFO - 	 Best Val. Loss: 0.063
2024-11-23 13:07 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 13:07 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 13:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 13:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 13:07 - INFO - ---------------------------------------------
2024-11-23 13:15 - INFO - ---------------------------------------------
2024-11-23 13:15 - INFO - Epoch: 03 | Time: 8m 21s
2024-11-23 13:15 - INFO - 	 Train Loss: 0.040
2024-11-23 13:15 - INFO - 	 Val. Loss: 0.069
2024-11-23 13:15 - INFO - 	 ROC-AUC: 0.987
2024-11-23 13:15 - INFO - 	 PR-AUC: 0.892
2024-11-23 13:15 - INFO - 	 Best Val. Loss: 0.063
2024-11-23 13:15 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 13:15 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 13:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 13:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 13:15 - INFO - ---------------------------------------------
2024-11-23 13:24 - INFO - ---------------------------------------------
2024-11-23 13:24 - INFO - Epoch: 04 | Time: 8m 20s
2024-11-23 13:24 - INFO - 	 Train Loss: 0.039
2024-11-23 13:24 - INFO - 	 Val. Loss: 0.079
2024-11-23 13:24 - INFO - 	 ROC-AUC: 0.985
2024-11-23 13:24 - INFO - 	 PR-AUC: 0.875
2024-11-23 13:24 - INFO - 	 Best Val. Loss: 0.063
2024-11-23 13:24 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 13:24 - INFO - 	 Best PR-AUC: 0.893
2024-11-23 13:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 13:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.901
2024-11-23 13:24 - INFO - ---------------------------------------------
2024-11-23 13:34 - INFO - Fit the preprocessing pipeline
2024-11-23 13:34 - INFO - Training using device: cuda
2024-11-23 13:34 - INFO - Creating generators
2024-11-23 13:34 - INFO - The model has 2,246,929 trainable parameters
2024-11-23 13:34 - INFO - * Model:
2024-11-23 13:34 - INFO - * -----------
2024-11-23 13:34 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-23 13:34 - INFO - * -----------
2024-11-23 13:43 - INFO - ---------------------------------------------
2024-11-23 13:43 - INFO - Epoch: 01 | Time: 8m 20s
2024-11-23 13:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.8917
2024-11-23 13:43 - INFO - 	 Train Loss: 0.046
2024-11-23 13:43 - INFO - 	 Val. Loss: 0.067
2024-11-23 13:43 - INFO - 	 ROC-AUC: 0.987
2024-11-23 13:43 - INFO - 	 PR-AUC: 0.892
2024-11-23 13:43 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 13:43 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 13:43 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 13:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 13:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 13:43 - INFO - ---------------------------------------------
2024-11-23 13:51 - INFO - ---------------------------------------------
2024-11-23 13:51 - INFO - Epoch: 02 | Time: 8m 21s
2024-11-23 13:51 - INFO - 	 Train Loss: 0.043
2024-11-23 13:51 - INFO - 	 Val. Loss: 0.074
2024-11-23 13:51 - INFO - 	 ROC-AUC: 0.986
2024-11-23 13:51 - INFO - 	 PR-AUC: 0.872
2024-11-23 13:51 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 13:51 - INFO - 	 Best ROC-AUC: 0.987
2024-11-23 13:51 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 13:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.985
2024-11-23 13:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 13:51 - INFO - ---------------------------------------------
2024-11-23 13:59 - INFO - ---------------------------------------------
2024-11-23 13:59 - INFO - Epoch: 03 | Time: 8m 20s
2024-11-23 13:59 - INFO - 	 Train Loss: 0.042
2024-11-23 13:59 - INFO - 	 Val. Loss: 0.067
2024-11-23 13:59 - INFO - 	 ROC-AUC: 0.988
2024-11-23 13:59 - INFO - 	 PR-AUC: 0.886
2024-11-23 13:59 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 13:59 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 13:59 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 13:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 13:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 13:59 - INFO - ---------------------------------------------
2024-11-23 14:08 - INFO - ---------------------------------------------
2024-11-23 14:08 - INFO - Epoch: 04 | Time: 8m 21s
2024-11-23 14:08 - INFO - 	 Train Loss: 0.041
2024-11-23 14:08 - INFO - 	 Val. Loss: 0.073
2024-11-23 14:08 - INFO - 	 ROC-AUC: 0.985
2024-11-23 14:08 - INFO - 	 PR-AUC: 0.878
2024-11-23 14:08 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 14:08 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 14:08 - INFO - 	 Best PR-AUC: 0.892
2024-11-23 14:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 14:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.902
2024-11-23 14:08 - INFO - ---------------------------------------------
2024-11-23 14:16 - INFO - ---------------------------------------------
2024-11-23 14:16 - INFO - Epoch: 05 | Time: 8m 20s
2024-11-23 14:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.89441
2024-11-23 14:16 - INFO - 	 Train Loss: 0.038
2024-11-23 14:16 - INFO - 	 Val. Loss: 0.069
2024-11-23 14:16 - INFO - 	 ROC-AUC: 0.987
2024-11-23 14:16 - INFO - 	 PR-AUC: 0.894
2024-11-23 14:16 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 14:16 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 14:16 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 14:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 14:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 14:16 - INFO - ---------------------------------------------
2024-11-23 14:24 - INFO - ---------------------------------------------
2024-11-23 14:24 - INFO - Epoch: 06 | Time: 8m 20s
2024-11-23 14:24 - INFO - 	 Train Loss: 0.038
2024-11-23 14:24 - INFO - 	 Val. Loss: 0.078
2024-11-23 14:24 - INFO - 	 ROC-AUC: 0.985
2024-11-23 14:24 - INFO - 	 PR-AUC: 0.871
2024-11-23 14:24 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 14:24 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 14:24 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 14:24 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 14:24 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 14:24 - INFO - ---------------------------------------------
2024-11-23 14:33 - INFO - ---------------------------------------------
2024-11-23 14:33 - INFO - Epoch: 07 | Time: 8m 20s
2024-11-23 14:33 - INFO - 	 Train Loss: 0.037
2024-11-23 14:33 - INFO - 	 Val. Loss: 0.070
2024-11-23 14:33 - INFO - 	 ROC-AUC: 0.986
2024-11-23 14:33 - INFO - 	 PR-AUC: 0.894
2024-11-23 14:33 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 14:33 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 14:33 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 14:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 14:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 14:33 - INFO - ---------------------------------------------
2024-11-23 14:41 - INFO - ---------------------------------------------
2024-11-23 14:41 - INFO - Epoch: 08 | Time: 8m 21s
2024-11-23 14:41 - INFO - 	 Train Loss: 0.036
2024-11-23 14:41 - INFO - 	 Val. Loss: 0.079
2024-11-23 14:41 - INFO - 	 ROC-AUC: 0.985
2024-11-23 14:41 - INFO - 	 PR-AUC: 0.866
2024-11-23 14:41 - INFO - 	 Best Val. Loss: 0.067
2024-11-23 14:41 - INFO - 	 Best ROC-AUC: 0.988
2024-11-23 14:41 - INFO - 	 Best PR-AUC: 0.894
2024-11-23 14:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.986
2024-11-23 14:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.907
2024-11-23 14:41 - INFO - ---------------------------------------------
