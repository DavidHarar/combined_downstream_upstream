2024-11-11 19:21 - INFO - Fit the preprocessing pipeline
2024-11-11 19:21 - INFO - Training using device: cuda
2024-11-11 19:21 - INFO - Creating generators
2024-11-11 19:21 - INFO - The model has 2,246,929 trainable parameters
2024-11-11 19:21 - INFO - * Model:
2024-11-11 19:21 - INFO - * -----------
2024-11-11 19:21 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-11 19:21 - INFO - * -----------
2024-11-11 19:29 - INFO - ---------------------------------------------
2024-11-11 19:29 - INFO - Epoch: 01 | Time: 7m 10s
2024-11-11 19:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42983
2024-11-11 19:29 - INFO - 	 Train Loss: 0.144
2024-11-11 19:29 - INFO - 	 Val. Loss: 0.138
2024-11-11 19:29 - INFO - 	 ROC-AUC: 0.913
2024-11-11 19:29 - INFO - 	 PR-AUC: 0.430
2024-11-11 19:29 - INFO - 	 Best Val. Loss: 0.138
2024-11-11 19:29 - INFO - 	 Best ROC-AUC: 0.913
2024-11-11 19:29 - INFO - 	 Best PR-AUC: 0.430
2024-11-11 19:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.840
2024-11-11 19:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.217
2024-11-11 19:29 - INFO - ---------------------------------------------
2024-11-11 19:36 - INFO - ---------------------------------------------
2024-11-11 19:36 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-11 19:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43373
2024-11-11 19:36 - INFO - 	 Train Loss: 0.132
2024-11-11 19:36 - INFO - 	 Val. Loss: 0.179
2024-11-11 19:36 - INFO - 	 ROC-AUC: 0.906
2024-11-11 19:36 - INFO - 	 PR-AUC: 0.434
2024-11-11 19:36 - INFO - 	 Best Val. Loss: 0.138
2024-11-11 19:36 - INFO - 	 Best ROC-AUC: 0.913
2024-11-11 19:36 - INFO - 	 Best PR-AUC: 0.434
2024-11-11 19:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.840
2024-11-11 19:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.245
2024-11-11 19:36 - INFO - ---------------------------------------------
2024-11-11 19:43 - INFO - ---------------------------------------------
2024-11-11 19:43 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-11 19:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4829
2024-11-11 19:43 - INFO - 	 Train Loss: 0.118
2024-11-11 19:43 - INFO - 	 Val. Loss: 0.124
2024-11-11 19:43 - INFO - 	 ROC-AUC: 0.954
2024-11-11 19:43 - INFO - 	 PR-AUC: 0.483
2024-11-11 19:43 - INFO - 	 Best Val. Loss: 0.124
2024-11-11 19:43 - INFO - 	 Best ROC-AUC: 0.954
2024-11-11 19:43 - INFO - 	 Best PR-AUC: 0.483
2024-11-11 19:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.892
2024-11-11 19:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.260
2024-11-11 19:43 - INFO - ---------------------------------------------
2024-11-11 19:50 - INFO - ---------------------------------------------
2024-11-11 19:50 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-11 19:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55926
2024-11-11 19:50 - INFO - 	 Train Loss: 0.110
2024-11-11 19:50 - INFO - 	 Val. Loss: 0.115
2024-11-11 19:50 - INFO - 	 ROC-AUC: 0.968
2024-11-11 19:50 - INFO - 	 PR-AUC: 0.559
2024-11-11 19:50 - INFO - 	 Best Val. Loss: 0.115
2024-11-11 19:50 - INFO - 	 Best ROC-AUC: 0.968
2024-11-11 19:50 - INFO - 	 Best PR-AUC: 0.559
2024-11-11 19:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.930
2024-11-11 19:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.335
2024-11-11 19:50 - INFO - ---------------------------------------------
2024-11-11 19:57 - INFO - ---------------------------------------------
2024-11-11 19:57 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-11 19:57 - INFO - 	 Train Loss: 0.104
2024-11-11 19:57 - INFO - 	 Val. Loss: 0.109
2024-11-11 19:57 - INFO - 	 ROC-AUC: 0.972
2024-11-11 19:57 - INFO - 	 PR-AUC: 0.543
2024-11-11 19:57 - INFO - 	 Best Val. Loss: 0.109
2024-11-11 19:57 - INFO - 	 Best ROC-AUC: 0.972
2024-11-11 19:57 - INFO - 	 Best PR-AUC: 0.559
2024-11-11 19:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-11 19:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.335
2024-11-11 19:57 - INFO - ---------------------------------------------
2024-11-11 20:04 - INFO - ---------------------------------------------
2024-11-11 20:04 - INFO - Epoch: 06 | Time: 7m 9s
2024-11-11 20:04 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59618
2024-11-11 20:04 - INFO - 	 Train Loss: 0.103
2024-11-11 20:04 - INFO - 	 Val. Loss: 0.083
2024-11-11 20:04 - INFO - 	 ROC-AUC: 0.980
2024-11-11 20:04 - INFO - 	 PR-AUC: 0.596
2024-11-11 20:04 - INFO - 	 Best Val. Loss: 0.083
2024-11-11 20:04 - INFO - 	 Best ROC-AUC: 0.980
2024-11-11 20:04 - INFO - 	 Best PR-AUC: 0.596
2024-11-11 20:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-11 20:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.391
2024-11-11 20:04 - INFO - ---------------------------------------------
2024-11-11 20:12 - INFO - ---------------------------------------------
2024-11-11 20:12 - INFO - Epoch: 07 | Time: 7m 15s
2024-11-11 20:12 - INFO - 	 Train Loss: 0.097
2024-11-11 20:12 - INFO - 	 Val. Loss: 0.097
2024-11-11 20:12 - INFO - 	 ROC-AUC: 0.972
2024-11-11 20:12 - INFO - 	 PR-AUC: 0.564
2024-11-11 20:12 - INFO - 	 Best Val. Loss: 0.083
2024-11-11 20:12 - INFO - 	 Best ROC-AUC: 0.980
2024-11-11 20:12 - INFO - 	 Best PR-AUC: 0.596
2024-11-11 20:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-11 20:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.391
2024-11-11 20:12 - INFO - ---------------------------------------------
2024-11-11 20:19 - INFO - ---------------------------------------------
2024-11-11 20:19 - INFO - Epoch: 08 | Time: 7m 21s
2024-11-11 20:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60916
2024-11-11 20:19 - INFO - 	 Train Loss: 0.099
2024-11-11 20:19 - INFO - 	 Val. Loss: 0.090
2024-11-11 20:19 - INFO - 	 ROC-AUC: 0.974
2024-11-11 20:19 - INFO - 	 PR-AUC: 0.609
2024-11-11 20:19 - INFO - 	 Best Val. Loss: 0.083
2024-11-11 20:19 - INFO - 	 Best ROC-AUC: 0.980
2024-11-11 20:19 - INFO - 	 Best PR-AUC: 0.609
2024-11-11 20:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-11 20:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.367
2024-11-11 20:19 - INFO - ---------------------------------------------
2024-11-11 20:27 - INFO - ---------------------------------------------
2024-11-11 20:27 - INFO - Epoch: 09 | Time: 7m 39s
2024-11-11 20:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.73181
2024-11-11 20:27 - INFO - 	 Train Loss: 0.097
2024-11-11 20:27 - INFO - 	 Val. Loss: 0.082
2024-11-11 20:27 - INFO - 	 ROC-AUC: 0.969
2024-11-11 20:27 - INFO - 	 PR-AUC: 0.732
2024-11-11 20:27 - INFO - 	 Best Val. Loss: 0.082
2024-11-11 20:27 - INFO - 	 Best ROC-AUC: 0.980
2024-11-11 20:27 - INFO - 	 Best PR-AUC: 0.732
2024-11-11 20:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-11 20:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.451
2024-11-11 20:27 - INFO - ---------------------------------------------
2024-11-11 20:35 - INFO - ---------------------------------------------
2024-11-11 20:35 - INFO - Epoch: 10 | Time: 8m 3s
2024-11-11 20:35 - INFO - 	 Train Loss: 0.095
2024-11-11 20:35 - INFO - 	 Val. Loss: 0.097
2024-11-11 20:35 - INFO - 	 ROC-AUC: 0.959
2024-11-11 20:35 - INFO - 	 PR-AUC: 0.677
2024-11-11 20:35 - INFO - 	 Best Val. Loss: 0.082
2024-11-11 20:35 - INFO - 	 Best ROC-AUC: 0.980
2024-11-11 20:35 - INFO - 	 Best PR-AUC: 0.732
2024-11-11 20:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-11 20:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.451
2024-11-11 20:35 - INFO - ---------------------------------------------
2024-11-11 20:37 - INFO - Fit the preprocessing pipeline
2024-11-11 20:37 - INFO - Training using device: cuda
2024-11-11 20:37 - INFO - Creating generators
2024-11-11 20:37 - INFO - The model has 2,246,929 trainable parameters
2024-11-11 20:37 - INFO - * Model:
2024-11-11 20:37 - INFO - * -----------
2024-11-11 20:37 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-11 20:37 - INFO - * -----------
2024-11-11 20:45 - INFO - ---------------------------------------------
2024-11-11 20:45 - INFO - Epoch: 01 | Time: 8m 9s
2024-11-11 20:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.30768
2024-11-11 20:45 - INFO - 	 Train Loss: 0.147
2024-11-11 20:45 - INFO - 	 Val. Loss: 0.166
2024-11-11 20:45 - INFO - 	 ROC-AUC: 0.861
2024-11-11 20:45 - INFO - 	 PR-AUC: 0.308
2024-11-11 20:45 - INFO - 	 Best Val. Loss: 0.166
2024-11-11 20:45 - INFO - 	 Best ROC-AUC: 0.861
2024-11-11 20:45 - INFO - 	 Best PR-AUC: 0.308
2024-11-11 20:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.761
2024-11-11 20:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.137
2024-11-11 20:45 - INFO - ---------------------------------------------
2024-11-11 20:53 - INFO - ---------------------------------------------
2024-11-11 20:53 - INFO - Epoch: 02 | Time: 7m 52s
2024-11-11 20:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40448
2024-11-11 20:53 - INFO - 	 Train Loss: 0.130
2024-11-11 20:53 - INFO - 	 Val. Loss: 0.160
2024-11-11 20:53 - INFO - 	 ROC-AUC: 0.931
2024-11-11 20:53 - INFO - 	 PR-AUC: 0.404
2024-11-11 20:53 - INFO - 	 Best Val. Loss: 0.160
2024-11-11 20:53 - INFO - 	 Best ROC-AUC: 0.931
2024-11-11 20:53 - INFO - 	 Best PR-AUC: 0.404
2024-11-11 20:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.861
2024-11-11 20:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.216
2024-11-11 20:53 - INFO - ---------------------------------------------
2024-11-11 21:01 - INFO - ---------------------------------------------
2024-11-11 21:01 - INFO - Epoch: 03 | Time: 7m 33s
2024-11-11 21:01 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4815
2024-11-11 21:01 - INFO - 	 Train Loss: 0.117
2024-11-11 21:01 - INFO - 	 Val. Loss: 0.117
2024-11-11 21:01 - INFO - 	 ROC-AUC: 0.951
2024-11-11 21:01 - INFO - 	 PR-AUC: 0.482
2024-11-11 21:01 - INFO - 	 Best Val. Loss: 0.117
2024-11-11 21:01 - INFO - 	 Best ROC-AUC: 0.951
2024-11-11 21:01 - INFO - 	 Best PR-AUC: 0.482
2024-11-11 21:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-11 21:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.269
2024-11-11 21:01 - INFO - ---------------------------------------------
2024-11-11 21:08 - INFO - ---------------------------------------------
2024-11-11 21:08 - INFO - Epoch: 04 | Time: 7m 27s
2024-11-11 21:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56963
2024-11-11 21:08 - INFO - 	 Train Loss: 0.110
2024-11-11 21:08 - INFO - 	 Val. Loss: 0.101
2024-11-11 21:08 - INFO - 	 ROC-AUC: 0.970
2024-11-11 21:08 - INFO - 	 PR-AUC: 0.570
2024-11-11 21:08 - INFO - 	 Best Val. Loss: 0.101
2024-11-11 21:08 - INFO - 	 Best ROC-AUC: 0.970
2024-11-11 21:08 - INFO - 	 Best PR-AUC: 0.570
2024-11-11 21:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-11 21:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-11 21:08 - INFO - ---------------------------------------------
2024-11-11 21:15 - INFO - ---------------------------------------------
2024-11-11 21:15 - INFO - Epoch: 05 | Time: 7m 22s
2024-11-11 21:15 - INFO - 	 Train Loss: 0.106
2024-11-11 21:15 - INFO - 	 Val. Loss: 0.126
2024-11-11 21:15 - INFO - 	 ROC-AUC: 0.967
2024-11-11 21:15 - INFO - 	 PR-AUC: 0.493
2024-11-11 21:15 - INFO - 	 Best Val. Loss: 0.101
2024-11-11 21:15 - INFO - 	 Best ROC-AUC: 0.970
2024-11-11 21:15 - INFO - 	 Best PR-AUC: 0.570
2024-11-11 21:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-11 21:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-11 21:15 - INFO - ---------------------------------------------
2024-11-11 21:23 - INFO - ---------------------------------------------
2024-11-11 21:23 - INFO - Epoch: 06 | Time: 7m 22s
2024-11-11 21:23 - INFO - 	 Train Loss: 0.102
2024-11-11 21:23 - INFO - 	 Val. Loss: 0.127
2024-11-11 21:23 - INFO - 	 ROC-AUC: 0.962
2024-11-11 21:23 - INFO - 	 PR-AUC: 0.485
2024-11-11 21:23 - INFO - 	 Best Val. Loss: 0.101
2024-11-11 21:23 - INFO - 	 Best ROC-AUC: 0.970
2024-11-11 21:23 - INFO - 	 Best PR-AUC: 0.570
2024-11-11 21:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-11 21:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-11 21:23 - INFO - ---------------------------------------------
2024-11-11 21:30 - INFO - ---------------------------------------------
2024-11-11 21:30 - INFO - Epoch: 07 | Time: 7m 23s
2024-11-11 21:30 - INFO - 	 Train Loss: 0.099
2024-11-11 21:30 - INFO - 	 Val. Loss: 0.184
2024-11-11 21:30 - INFO - 	 ROC-AUC: 0.931
2024-11-11 21:30 - INFO - 	 PR-AUC: 0.378
2024-11-11 21:30 - INFO - 	 Best Val. Loss: 0.101
2024-11-11 21:30 - INFO - 	 Best ROC-AUC: 0.970
2024-11-11 21:30 - INFO - 	 Best PR-AUC: 0.570
2024-11-11 21:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.931
2024-11-11 21:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-11 21:30 - INFO - ---------------------------------------------
2024-11-11 21:39 - INFO - Fit the preprocessing pipeline
2024-11-11 21:39 - INFO - Training using device: cuda
2024-11-11 21:39 - INFO - Creating generators
2024-11-11 21:39 - INFO - The model has 2,246,929 trainable parameters
2024-11-11 21:39 - INFO - * Model:
2024-11-11 21:39 - INFO - * -----------
2024-11-11 21:39 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-11 21:39 - INFO - * -----------
2024-11-11 21:46 - INFO - ---------------------------------------------
2024-11-11 21:46 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-11 21:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39876
2024-11-11 21:46 - INFO - 	 Train Loss: 0.145
2024-11-11 21:46 - INFO - 	 Val. Loss: 0.150
2024-11-11 21:46 - INFO - 	 ROC-AUC: 0.894
2024-11-11 21:46 - INFO - 	 PR-AUC: 0.399
2024-11-11 21:46 - INFO - 	 Best Val. Loss: 0.150
2024-11-11 21:46 - INFO - 	 Best ROC-AUC: 0.894
2024-11-11 21:46 - INFO - 	 Best PR-AUC: 0.399
2024-11-11 21:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.818
2024-11-11 21:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.189
2024-11-11 21:46 - INFO - ---------------------------------------------
2024-11-11 21:54 - INFO - ---------------------------------------------
2024-11-11 21:54 - INFO - Epoch: 02 | Time: 7m 20s
2024-11-11 21:54 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42751
2024-11-11 21:54 - INFO - 	 Train Loss: 0.132
2024-11-11 21:54 - INFO - 	 Val. Loss: 0.142
2024-11-11 21:54 - INFO - 	 ROC-AUC: 0.929
2024-11-11 21:54 - INFO - 	 PR-AUC: 0.428
2024-11-11 21:54 - INFO - 	 Best Val. Loss: 0.142
2024-11-11 21:54 - INFO - 	 Best ROC-AUC: 0.929
2024-11-11 21:54 - INFO - 	 Best PR-AUC: 0.428
2024-11-11 21:54 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.889
2024-11-11 21:54 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.261
2024-11-11 21:54 - INFO - ---------------------------------------------
2024-11-11 22:01 - INFO - ---------------------------------------------
2024-11-11 22:01 - INFO - Epoch: 03 | Time: 7m 23s
2024-11-11 22:01 - INFO - 	 Train Loss: 0.118
2024-11-11 22:01 - INFO - 	 Val. Loss: 0.138
2024-11-11 22:01 - INFO - 	 ROC-AUC: 0.935
2024-11-11 22:01 - INFO - 	 PR-AUC: 0.421
2024-11-11 22:01 - INFO - 	 Best Val. Loss: 0.138
2024-11-11 22:01 - INFO - 	 Best ROC-AUC: 0.935
2024-11-11 22:01 - INFO - 	 Best PR-AUC: 0.428
2024-11-11 22:01 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.892
2024-11-11 22:01 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.261
2024-11-11 22:01 - INFO - ---------------------------------------------
2024-11-11 22:08 - INFO - ---------------------------------------------
2024-11-11 22:08 - INFO - Epoch: 04 | Time: 7m 29s
2024-11-11 22:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46972
2024-11-11 22:08 - INFO - 	 Train Loss: 0.110
2024-11-11 22:08 - INFO - 	 Val. Loss: 0.112
2024-11-11 22:08 - INFO - 	 ROC-AUC: 0.944
2024-11-11 22:08 - INFO - 	 PR-AUC: 0.470
2024-11-11 22:08 - INFO - 	 Best Val. Loss: 0.112
2024-11-11 22:08 - INFO - 	 Best ROC-AUC: 0.944
2024-11-11 22:08 - INFO - 	 Best PR-AUC: 0.470
2024-11-11 22:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.915
2024-11-11 22:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.294
2024-11-11 22:08 - INFO - ---------------------------------------------
2024-11-11 22:16 - INFO - ---------------------------------------------
2024-11-11 22:16 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-11 22:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51065
2024-11-11 22:16 - INFO - 	 Train Loss: 0.102
2024-11-11 22:16 - INFO - 	 Val. Loss: 0.115
2024-11-11 22:16 - INFO - 	 ROC-AUC: 0.960
2024-11-11 22:16 - INFO - 	 PR-AUC: 0.511
2024-11-11 22:16 - INFO - 	 Best Val. Loss: 0.112
2024-11-11 22:16 - INFO - 	 Best ROC-AUC: 0.960
2024-11-11 22:16 - INFO - 	 Best PR-AUC: 0.511
2024-11-11 22:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.932
2024-11-11 22:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.341
2024-11-11 22:16 - INFO - ---------------------------------------------
2024-11-11 22:23 - INFO - ---------------------------------------------
2024-11-11 22:23 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-11 22:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51494
2024-11-11 22:23 - INFO - 	 Train Loss: 0.101
2024-11-11 22:23 - INFO - 	 Val. Loss: 0.109
2024-11-11 22:23 - INFO - 	 ROC-AUC: 0.964
2024-11-11 22:23 - INFO - 	 PR-AUC: 0.515
2024-11-11 22:23 - INFO - 	 Best Val. Loss: 0.109
2024-11-11 22:23 - INFO - 	 Best ROC-AUC: 0.964
2024-11-11 22:23 - INFO - 	 Best PR-AUC: 0.515
2024-11-11 22:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.933
2024-11-11 22:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.341
2024-11-11 22:23 - INFO - ---------------------------------------------
2024-11-11 22:30 - INFO - ---------------------------------------------
2024-11-11 22:30 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-11 22:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.51636
2024-11-11 22:30 - INFO - 	 Train Loss: 0.098
2024-11-11 22:30 - INFO - 	 Val. Loss: 0.117
2024-11-11 22:30 - INFO - 	 ROC-AUC: 0.966
2024-11-11 22:30 - INFO - 	 PR-AUC: 0.516
2024-11-11 22:30 - INFO - 	 Best Val. Loss: 0.109
2024-11-11 22:30 - INFO - 	 Best ROC-AUC: 0.966
2024-11-11 22:30 - INFO - 	 Best PR-AUC: 0.516
2024-11-11 22:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-11 22:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.271
2024-11-11 22:30 - INFO - ---------------------------------------------
2024-11-11 22:37 - INFO - ---------------------------------------------
2024-11-11 22:37 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-11 22:37 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58744
2024-11-11 22:37 - INFO - 	 Train Loss: 0.098
2024-11-11 22:37 - INFO - 	 Val. Loss: 0.088
2024-11-11 22:37 - INFO - 	 ROC-AUC: 0.977
2024-11-11 22:37 - INFO - 	 PR-AUC: 0.587
2024-11-11 22:37 - INFO - 	 Best Val. Loss: 0.088
2024-11-11 22:37 - INFO - 	 Best ROC-AUC: 0.977
2024-11-11 22:37 - INFO - 	 Best PR-AUC: 0.587
2024-11-11 22:37 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-11 22:37 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.368
2024-11-11 22:37 - INFO - ---------------------------------------------
2024-11-11 22:44 - INFO - ---------------------------------------------
2024-11-11 22:44 - INFO - Epoch: 09 | Time: 7m 8s
2024-11-11 22:44 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59636
2024-11-11 22:44 - INFO - 	 Train Loss: 0.096
2024-11-11 22:44 - INFO - 	 Val. Loss: 0.093
2024-11-11 22:44 - INFO - 	 ROC-AUC: 0.967
2024-11-11 22:44 - INFO - 	 PR-AUC: 0.596
2024-11-11 22:44 - INFO - 	 Best Val. Loss: 0.088
2024-11-11 22:44 - INFO - 	 Best ROC-AUC: 0.977
2024-11-11 22:44 - INFO - 	 Best PR-AUC: 0.596
2024-11-11 22:44 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-11 22:44 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.425
2024-11-11 22:44 - INFO - ---------------------------------------------
2024-11-11 22:51 - INFO - ---------------------------------------------
2024-11-11 22:51 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-11 22:51 - INFO - 	 Train Loss: 0.099
2024-11-11 22:51 - INFO - 	 Val. Loss: 0.137
2024-11-11 22:51 - INFO - 	 ROC-AUC: 0.961
2024-11-11 22:51 - INFO - 	 PR-AUC: 0.558
2024-11-11 22:51 - INFO - 	 Best Val. Loss: 0.088
2024-11-11 22:51 - INFO - 	 Best ROC-AUC: 0.977
2024-11-11 22:51 - INFO - 	 Best PR-AUC: 0.596
2024-11-11 22:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-11 22:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.425
2024-11-11 22:51 - INFO - ---------------------------------------------
2024-11-11 22:53 - INFO - Fit the preprocessing pipeline
2024-11-11 22:53 - INFO - Training using device: cuda
2024-11-11 22:53 - INFO - Creating generators
2024-11-11 22:53 - INFO - The model has 2,246,929 trainable parameters
2024-11-11 22:53 - INFO - * Model:
2024-11-11 22:53 - INFO - * -----------
2024-11-11 22:53 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-11 22:53 - INFO - * -----------
2024-11-11 23:00 - INFO - ---------------------------------------------
2024-11-11 23:00 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-11 23:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.32412
2024-11-11 23:00 - INFO - 	 Train Loss: 0.147
2024-11-11 23:00 - INFO - 	 Val. Loss: 0.165
2024-11-11 23:00 - INFO - 	 ROC-AUC: 0.877
2024-11-11 23:00 - INFO - 	 PR-AUC: 0.324
2024-11-11 23:00 - INFO - 	 Best Val. Loss: 0.165
2024-11-11 23:00 - INFO - 	 Best ROC-AUC: 0.877
2024-11-11 23:00 - INFO - 	 Best PR-AUC: 0.324
2024-11-11 23:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.759
2024-11-11 23:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-11 23:00 - INFO - ---------------------------------------------
2024-11-11 23:07 - INFO - ---------------------------------------------
2024-11-11 23:07 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-11 23:07 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40763
2024-11-11 23:07 - INFO - 	 Train Loss: 0.132
2024-11-11 23:07 - INFO - 	 Val. Loss: 0.138
2024-11-11 23:07 - INFO - 	 ROC-AUC: 0.915
2024-11-11 23:07 - INFO - 	 PR-AUC: 0.408
2024-11-11 23:07 - INFO - 	 Best Val. Loss: 0.138
2024-11-11 23:07 - INFO - 	 Best ROC-AUC: 0.915
2024-11-11 23:07 - INFO - 	 Best PR-AUC: 0.408
2024-11-11 23:07 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.866
2024-11-11 23:07 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.242
2024-11-11 23:07 - INFO - ---------------------------------------------
2024-11-11 23:14 - INFO - ---------------------------------------------
2024-11-11 23:14 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-11 23:14 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43237
2024-11-11 23:14 - INFO - 	 Train Loss: 0.122
2024-11-11 23:14 - INFO - 	 Val. Loss: 0.147
2024-11-11 23:14 - INFO - 	 ROC-AUC: 0.947
2024-11-11 23:14 - INFO - 	 PR-AUC: 0.432
2024-11-11 23:14 - INFO - 	 Best Val. Loss: 0.138
2024-11-11 23:14 - INFO - 	 Best ROC-AUC: 0.947
2024-11-11 23:14 - INFO - 	 Best PR-AUC: 0.432
2024-11-11 23:14 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.889
2024-11-11 23:14 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.253
2024-11-11 23:14 - INFO - ---------------------------------------------
2024-11-11 23:22 - INFO - ---------------------------------------------
2024-11-11 23:22 - INFO - Epoch: 04 | Time: 7m 9s
2024-11-11 23:22 - INFO - 	 Train Loss: 0.110
2024-11-11 23:22 - INFO - 	 Val. Loss: 0.141
2024-11-11 23:22 - INFO - 	 ROC-AUC: 0.936
2024-11-11 23:22 - INFO - 	 PR-AUC: 0.421
2024-11-11 23:22 - INFO - 	 Best Val. Loss: 0.138
2024-11-11 23:22 - INFO - 	 Best ROC-AUC: 0.947
2024-11-11 23:22 - INFO - 	 Best PR-AUC: 0.432
2024-11-11 23:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.889
2024-11-11 23:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.253
2024-11-11 23:22 - INFO - ---------------------------------------------
2024-11-11 23:29 - INFO - ---------------------------------------------
2024-11-11 23:29 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-11 23:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48512
2024-11-11 23:29 - INFO - 	 Train Loss: 0.107
2024-11-11 23:29 - INFO - 	 Val. Loss: 0.113
2024-11-11 23:29 - INFO - 	 ROC-AUC: 0.963
2024-11-11 23:29 - INFO - 	 PR-AUC: 0.485
2024-11-11 23:29 - INFO - 	 Best Val. Loss: 0.113
2024-11-11 23:29 - INFO - 	 Best ROC-AUC: 0.963
2024-11-11 23:29 - INFO - 	 Best PR-AUC: 0.485
2024-11-11 23:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.929
2024-11-11 23:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.330
2024-11-11 23:29 - INFO - ---------------------------------------------
2024-11-11 23:36 - INFO - ---------------------------------------------
2024-11-11 23:36 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-11 23:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50299
2024-11-11 23:36 - INFO - 	 Train Loss: 0.103
2024-11-11 23:36 - INFO - 	 Val. Loss: 0.099
2024-11-11 23:36 - INFO - 	 ROC-AUC: 0.970
2024-11-11 23:36 - INFO - 	 PR-AUC: 0.503
2024-11-11 23:36 - INFO - 	 Best Val. Loss: 0.099
2024-11-11 23:36 - INFO - 	 Best ROC-AUC: 0.970
2024-11-11 23:36 - INFO - 	 Best PR-AUC: 0.503
2024-11-11 23:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-11 23:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.348
2024-11-11 23:36 - INFO - ---------------------------------------------
2024-11-11 23:43 - INFO - ---------------------------------------------
2024-11-11 23:43 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-11 23:43 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60085
2024-11-11 23:43 - INFO - 	 Train Loss: 0.100
2024-11-11 23:43 - INFO - 	 Val. Loss: 0.087
2024-11-11 23:43 - INFO - 	 ROC-AUC: 0.973
2024-11-11 23:43 - INFO - 	 PR-AUC: 0.601
2024-11-11 23:43 - INFO - 	 Best Val. Loss: 0.087
2024-11-11 23:43 - INFO - 	 Best ROC-AUC: 0.973
2024-11-11 23:43 - INFO - 	 Best PR-AUC: 0.601
2024-11-11 23:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.955
2024-11-11 23:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.448
2024-11-11 23:43 - INFO - ---------------------------------------------
2024-11-11 23:50 - INFO - ---------------------------------------------
2024-11-11 23:50 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-11 23:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.63205
2024-11-11 23:50 - INFO - 	 Train Loss: 0.099
2024-11-11 23:50 - INFO - 	 Val. Loss: 0.082
2024-11-11 23:50 - INFO - 	 ROC-AUC: 0.977
2024-11-11 23:50 - INFO - 	 PR-AUC: 0.632
2024-11-11 23:50 - INFO - 	 Best Val. Loss: 0.082
2024-11-11 23:50 - INFO - 	 Best ROC-AUC: 0.977
2024-11-11 23:50 - INFO - 	 Best PR-AUC: 0.632
2024-11-11 23:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.967
2024-11-11 23:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.531
2024-11-11 23:50 - INFO - ---------------------------------------------
2024-11-11 23:57 - INFO - ---------------------------------------------
2024-11-11 23:57 - INFO - Epoch: 09 | Time: 7m 9s
2024-11-11 23:57 - INFO - 	 Train Loss: 0.099
2024-11-11 23:57 - INFO - 	 Val. Loss: 0.078
2024-11-11 23:57 - INFO - 	 ROC-AUC: 0.981
2024-11-11 23:57 - INFO - 	 PR-AUC: 0.620
2024-11-11 23:57 - INFO - 	 Best Val. Loss: 0.078
2024-11-11 23:57 - INFO - 	 Best ROC-AUC: 0.981
2024-11-11 23:57 - INFO - 	 Best PR-AUC: 0.632
2024-11-11 23:57 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-11 23:57 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.531
2024-11-11 23:57 - INFO - ---------------------------------------------
2024-11-12 00:04 - INFO - ---------------------------------------------
2024-11-12 00:04 - INFO - Epoch: 10 | Time: 7m 9s
2024-11-12 00:04 - INFO - 	 Train Loss: 0.095
2024-11-12 00:04 - INFO - 	 Val. Loss: 0.095
2024-11-12 00:04 - INFO - 	 ROC-AUC: 0.971
2024-11-12 00:04 - INFO - 	 PR-AUC: 0.624
2024-11-12 00:04 - INFO - 	 Best Val. Loss: 0.078
2024-11-12 00:04 - INFO - 	 Best ROC-AUC: 0.981
2024-11-12 00:04 - INFO - 	 Best PR-AUC: 0.632
2024-11-12 00:04 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.966
2024-11-12 00:04 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.531
2024-11-12 00:04 - INFO - ---------------------------------------------
2024-11-12 00:06 - INFO - Fit the preprocessing pipeline
2024-11-12 00:06 - INFO - Training using device: cuda
2024-11-12 00:06 - INFO - Creating generators
2024-11-12 00:06 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 00:06 - INFO - * Model:
2024-11-12 00:06 - INFO - * -----------
2024-11-12 00:06 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 00:06 - INFO - * -----------
2024-11-12 00:13 - INFO - ---------------------------------------------
2024-11-12 00:13 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-12 00:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34894
2024-11-12 00:13 - INFO - 	 Train Loss: 0.150
2024-11-12 00:13 - INFO - 	 Val. Loss: 0.168
2024-11-12 00:13 - INFO - 	 ROC-AUC: 0.858
2024-11-12 00:13 - INFO - 	 PR-AUC: 0.349
2024-11-12 00:13 - INFO - 	 Best Val. Loss: 0.168
2024-11-12 00:13 - INFO - 	 Best ROC-AUC: 0.858
2024-11-12 00:13 - INFO - 	 Best PR-AUC: 0.349
2024-11-12 00:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.764
2024-11-12 00:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.132
2024-11-12 00:13 - INFO - ---------------------------------------------
2024-11-12 00:20 - INFO - ---------------------------------------------
2024-11-12 00:20 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-12 00:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40612
2024-11-12 00:20 - INFO - 	 Train Loss: 0.132
2024-11-12 00:20 - INFO - 	 Val. Loss: 0.156
2024-11-12 00:20 - INFO - 	 ROC-AUC: 0.915
2024-11-12 00:20 - INFO - 	 PR-AUC: 0.406
2024-11-12 00:20 - INFO - 	 Best Val. Loss: 0.156
2024-11-12 00:20 - INFO - 	 Best ROC-AUC: 0.915
2024-11-12 00:20 - INFO - 	 Best PR-AUC: 0.406
2024-11-12 00:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.872
2024-11-12 00:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.249
2024-11-12 00:20 - INFO - ---------------------------------------------
2024-11-12 00:27 - INFO - ---------------------------------------------
2024-11-12 00:27 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-12 00:27 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47364
2024-11-12 00:27 - INFO - 	 Train Loss: 0.120
2024-11-12 00:27 - INFO - 	 Val. Loss: 0.148
2024-11-12 00:27 - INFO - 	 ROC-AUC: 0.935
2024-11-12 00:27 - INFO - 	 PR-AUC: 0.474
2024-11-12 00:27 - INFO - 	 Best Val. Loss: 0.148
2024-11-12 00:27 - INFO - 	 Best ROC-AUC: 0.935
2024-11-12 00:27 - INFO - 	 Best PR-AUC: 0.474
2024-11-12 00:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.902
2024-11-12 00:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.306
2024-11-12 00:27 - INFO - ---------------------------------------------
2024-11-12 00:35 - INFO - ---------------------------------------------
2024-11-12 00:35 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-12 00:35 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48615
2024-11-12 00:35 - INFO - 	 Train Loss: 0.112
2024-11-12 00:35 - INFO - 	 Val. Loss: 0.117
2024-11-12 00:35 - INFO - 	 ROC-AUC: 0.958
2024-11-12 00:35 - INFO - 	 PR-AUC: 0.486
2024-11-12 00:35 - INFO - 	 Best Val. Loss: 0.117
2024-11-12 00:35 - INFO - 	 Best ROC-AUC: 0.958
2024-11-12 00:35 - INFO - 	 Best PR-AUC: 0.486
2024-11-12 00:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-12 00:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.294
2024-11-12 00:35 - INFO - ---------------------------------------------
2024-11-12 00:42 - INFO - ---------------------------------------------
2024-11-12 00:42 - INFO - Epoch: 05 | Time: 7m 9s
2024-11-12 00:42 - INFO - 	 Train Loss: 0.105
2024-11-12 00:42 - INFO - 	 Val. Loss: 0.133
2024-11-12 00:42 - INFO - 	 ROC-AUC: 0.963
2024-11-12 00:42 - INFO - 	 PR-AUC: 0.477
2024-11-12 00:42 - INFO - 	 Best Val. Loss: 0.117
2024-11-12 00:42 - INFO - 	 Best ROC-AUC: 0.963
2024-11-12 00:42 - INFO - 	 Best PR-AUC: 0.486
2024-11-12 00:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.918
2024-11-12 00:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.294
2024-11-12 00:42 - INFO - ---------------------------------------------
2024-11-12 00:49 - INFO - ---------------------------------------------
2024-11-12 00:49 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-12 00:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6183
2024-11-12 00:49 - INFO - 	 Train Loss: 0.104
2024-11-12 00:49 - INFO - 	 Val. Loss: 0.105
2024-11-12 00:49 - INFO - 	 ROC-AUC: 0.972
2024-11-12 00:49 - INFO - 	 PR-AUC: 0.618
2024-11-12 00:49 - INFO - 	 Best Val. Loss: 0.105
2024-11-12 00:49 - INFO - 	 Best ROC-AUC: 0.972
2024-11-12 00:49 - INFO - 	 Best PR-AUC: 0.618
2024-11-12 00:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-12 00:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-11-12 00:49 - INFO - ---------------------------------------------
2024-11-12 00:56 - INFO - ---------------------------------------------
2024-11-12 00:56 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-12 00:56 - INFO - 	 Train Loss: 0.103
2024-11-12 00:56 - INFO - 	 Val. Loss: 0.111
2024-11-12 00:56 - INFO - 	 ROC-AUC: 0.970
2024-11-12 00:56 - INFO - 	 PR-AUC: 0.528
2024-11-12 00:56 - INFO - 	 Best Val. Loss: 0.105
2024-11-12 00:56 - INFO - 	 Best ROC-AUC: 0.972
2024-11-12 00:56 - INFO - 	 Best PR-AUC: 0.618
2024-11-12 00:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.946
2024-11-12 00:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-11-12 00:56 - INFO - ---------------------------------------------
2024-11-12 01:03 - INFO - ---------------------------------------------
2024-11-12 01:03 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-12 01:03 - INFO - 	 Train Loss: 0.097
2024-11-12 01:03 - INFO - 	 Val. Loss: 0.109
2024-11-12 01:03 - INFO - 	 ROC-AUC: 0.973
2024-11-12 01:03 - INFO - 	 PR-AUC: 0.542
2024-11-12 01:03 - INFO - 	 Best Val. Loss: 0.105
2024-11-12 01:03 - INFO - 	 Best ROC-AUC: 0.973
2024-11-12 01:03 - INFO - 	 Best PR-AUC: 0.618
2024-11-12 01:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-12 01:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-11-12 01:03 - INFO - ---------------------------------------------
2024-11-12 01:10 - INFO - ---------------------------------------------
2024-11-12 01:10 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-12 01:10 - INFO - 	 Train Loss: 0.095
2024-11-12 01:10 - INFO - 	 Val. Loss: 0.112
2024-11-12 01:10 - INFO - 	 ROC-AUC: 0.966
2024-11-12 01:10 - INFO - 	 PR-AUC: 0.562
2024-11-12 01:10 - INFO - 	 Best Val. Loss: 0.105
2024-11-12 01:10 - INFO - 	 Best ROC-AUC: 0.973
2024-11-12 01:10 - INFO - 	 Best PR-AUC: 0.618
2024-11-12 01:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-12 01:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.427
2024-11-12 01:10 - INFO - ---------------------------------------------
2024-11-12 01:19 - INFO - Fit the preprocessing pipeline
2024-11-12 01:19 - INFO - Training using device: cuda
2024-11-12 01:19 - INFO - Creating generators
2024-11-12 01:19 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 01:19 - INFO - * Model:
2024-11-12 01:19 - INFO - * -----------
2024-11-12 01:19 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 01:19 - INFO - * -----------
2024-11-12 01:26 - INFO - ---------------------------------------------
2024-11-12 01:26 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-12 01:26 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42159
2024-11-12 01:26 - INFO - 	 Train Loss: 0.146
2024-11-12 01:26 - INFO - 	 Val. Loss: 0.164
2024-11-12 01:26 - INFO - 	 ROC-AUC: 0.900
2024-11-12 01:26 - INFO - 	 PR-AUC: 0.422
2024-11-12 01:26 - INFO - 	 Best Val. Loss: 0.164
2024-11-12 01:26 - INFO - 	 Best ROC-AUC: 0.900
2024-11-12 01:26 - INFO - 	 Best PR-AUC: 0.422
2024-11-12 01:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.811
2024-11-12 01:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.197
2024-11-12 01:26 - INFO - ---------------------------------------------
2024-11-12 01:33 - INFO - ---------------------------------------------
2024-11-12 01:33 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 01:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43809
2024-11-12 01:33 - INFO - 	 Train Loss: 0.128
2024-11-12 01:33 - INFO - 	 Val. Loss: 0.145
2024-11-12 01:33 - INFO - 	 ROC-AUC: 0.935
2024-11-12 01:33 - INFO - 	 PR-AUC: 0.438
2024-11-12 01:33 - INFO - 	 Best Val. Loss: 0.145
2024-11-12 01:33 - INFO - 	 Best ROC-AUC: 0.935
2024-11-12 01:33 - INFO - 	 Best PR-AUC: 0.438
2024-11-12 01:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.881
2024-11-12 01:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.257
2024-11-12 01:33 - INFO - ---------------------------------------------
2024-11-12 01:40 - INFO - ---------------------------------------------
2024-11-12 01:40 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-12 01:40 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45107
2024-11-12 01:40 - INFO - 	 Train Loss: 0.117
2024-11-12 01:40 - INFO - 	 Val. Loss: 0.136
2024-11-12 01:40 - INFO - 	 ROC-AUC: 0.944
2024-11-12 01:40 - INFO - 	 PR-AUC: 0.451
2024-11-12 01:40 - INFO - 	 Best Val. Loss: 0.136
2024-11-12 01:40 - INFO - 	 Best ROC-AUC: 0.944
2024-11-12 01:40 - INFO - 	 Best PR-AUC: 0.451
2024-11-12 01:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.889
2024-11-12 01:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.259
2024-11-12 01:40 - INFO - ---------------------------------------------
2024-11-12 01:48 - INFO - ---------------------------------------------
2024-11-12 01:48 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-12 01:48 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45147
2024-11-12 01:48 - INFO - 	 Train Loss: 0.113
2024-11-12 01:48 - INFO - 	 Val. Loss: 0.120
2024-11-12 01:48 - INFO - 	 ROC-AUC: 0.962
2024-11-12 01:48 - INFO - 	 PR-AUC: 0.451
2024-11-12 01:48 - INFO - 	 Best Val. Loss: 0.120
2024-11-12 01:48 - INFO - 	 Best ROC-AUC: 0.962
2024-11-12 01:48 - INFO - 	 Best PR-AUC: 0.451
2024-11-12 01:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-12 01:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.325
2024-11-12 01:48 - INFO - ---------------------------------------------
2024-11-12 01:55 - INFO - ---------------------------------------------
2024-11-12 01:55 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-12 01:55 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57753
2024-11-12 01:55 - INFO - 	 Train Loss: 0.107
2024-11-12 01:55 - INFO - 	 Val. Loss: 0.102
2024-11-12 01:55 - INFO - 	 ROC-AUC: 0.956
2024-11-12 01:55 - INFO - 	 PR-AUC: 0.578
2024-11-12 01:55 - INFO - 	 Best Val. Loss: 0.102
2024-11-12 01:55 - INFO - 	 Best ROC-AUC: 0.962
2024-11-12 01:55 - INFO - 	 Best PR-AUC: 0.578
2024-11-12 01:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.920
2024-11-12 01:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-11-12 01:55 - INFO - ---------------------------------------------
2024-11-12 02:02 - INFO - ---------------------------------------------
2024-11-12 02:02 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-12 02:02 - INFO - 	 Train Loss: 0.103
2024-11-12 02:02 - INFO - 	 Val. Loss: 0.112
2024-11-12 02:02 - INFO - 	 ROC-AUC: 0.971
2024-11-12 02:02 - INFO - 	 PR-AUC: 0.537
2024-11-12 02:02 - INFO - 	 Best Val. Loss: 0.102
2024-11-12 02:02 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 02:02 - INFO - 	 Best PR-AUC: 0.578
2024-11-12 02:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 02:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-11-12 02:02 - INFO - ---------------------------------------------
2024-11-12 02:09 - INFO - ---------------------------------------------
2024-11-12 02:09 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-12 02:09 - INFO - 	 Train Loss: 0.098
2024-11-12 02:09 - INFO - 	 Val. Loss: 0.143
2024-11-12 02:09 - INFO - 	 ROC-AUC: 0.947
2024-11-12 02:09 - INFO - 	 PR-AUC: 0.409
2024-11-12 02:09 - INFO - 	 Best Val. Loss: 0.102
2024-11-12 02:09 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 02:09 - INFO - 	 Best PR-AUC: 0.578
2024-11-12 02:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 02:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-11-12 02:09 - INFO - ---------------------------------------------
2024-11-12 02:16 - INFO - ---------------------------------------------
2024-11-12 02:16 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-12 02:16 - INFO - 	 Train Loss: 0.098
2024-11-12 02:16 - INFO - 	 Val. Loss: 0.128
2024-11-12 02:16 - INFO - 	 ROC-AUC: 0.954
2024-11-12 02:16 - INFO - 	 PR-AUC: 0.527
2024-11-12 02:16 - INFO - 	 Best Val. Loss: 0.102
2024-11-12 02:16 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 02:16 - INFO - 	 Best PR-AUC: 0.578
2024-11-12 02:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 02:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.435
2024-11-12 02:16 - INFO - ---------------------------------------------
2024-11-12 02:23 - INFO - ---------------------------------------------
2024-11-12 02:23 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-12 02:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59895
2024-11-12 02:23 - INFO - 	 Train Loss: 0.097
2024-11-12 02:23 - INFO - 	 Val. Loss: 0.097
2024-11-12 02:23 - INFO - 	 ROC-AUC: 0.971
2024-11-12 02:23 - INFO - 	 PR-AUC: 0.599
2024-11-12 02:23 - INFO - 	 Best Val. Loss: 0.097
2024-11-12 02:23 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 02:23 - INFO - 	 Best PR-AUC: 0.599
2024-11-12 02:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 02:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.440
2024-11-12 02:23 - INFO - ---------------------------------------------
2024-11-12 02:30 - INFO - ---------------------------------------------
2024-11-12 02:30 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-12 02:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60831
2024-11-12 02:30 - INFO - 	 Train Loss: 0.095
2024-11-12 02:30 - INFO - 	 Val. Loss: 0.107
2024-11-12 02:30 - INFO - 	 ROC-AUC: 0.980
2024-11-12 02:30 - INFO - 	 PR-AUC: 0.608
2024-11-12 02:30 - INFO - 	 Best Val. Loss: 0.097
2024-11-12 02:30 - INFO - 	 Best ROC-AUC: 0.980
2024-11-12 02:30 - INFO - 	 Best PR-AUC: 0.608
2024-11-12 02:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-12 02:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.459
2024-11-12 02:30 - INFO - ---------------------------------------------
2024-11-12 02:32 - INFO - Fit the preprocessing pipeline
2024-11-12 02:32 - INFO - Training using device: cuda
2024-11-12 02:32 - INFO - Creating generators
2024-11-12 02:32 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 02:32 - INFO - * Model:
2024-11-12 02:32 - INFO - * -----------
2024-11-12 02:32 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 02:32 - INFO - * -----------
2024-11-12 02:39 - INFO - ---------------------------------------------
2024-11-12 02:39 - INFO - Epoch: 01 | Time: 7m 8s
2024-11-12 02:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41015
2024-11-12 02:39 - INFO - 	 Train Loss: 0.146
2024-11-12 02:39 - INFO - 	 Val. Loss: 0.148
2024-11-12 02:39 - INFO - 	 ROC-AUC: 0.902
2024-11-12 02:39 - INFO - 	 PR-AUC: 0.410
2024-11-12 02:39 - INFO - 	 Best Val. Loss: 0.148
2024-11-12 02:39 - INFO - 	 Best ROC-AUC: 0.902
2024-11-12 02:39 - INFO - 	 Best PR-AUC: 0.410
2024-11-12 02:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.826
2024-11-12 02:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.207
2024-11-12 02:39 - INFO - ---------------------------------------------
2024-11-12 02:46 - INFO - ---------------------------------------------
2024-11-12 02:46 - INFO - Epoch: 02 | Time: 7m 8s
2024-11-12 02:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44067
2024-11-12 02:46 - INFO - 	 Train Loss: 0.130
2024-11-12 02:46 - INFO - 	 Val. Loss: 0.181
2024-11-12 02:46 - INFO - 	 ROC-AUC: 0.927
2024-11-12 02:46 - INFO - 	 PR-AUC: 0.441
2024-11-12 02:46 - INFO - 	 Best Val. Loss: 0.148
2024-11-12 02:46 - INFO - 	 Best ROC-AUC: 0.927
2024-11-12 02:46 - INFO - 	 Best PR-AUC: 0.441
2024-11-12 02:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.876
2024-11-12 02:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.245
2024-11-12 02:46 - INFO - ---------------------------------------------
2024-11-12 02:53 - INFO - ---------------------------------------------
2024-11-12 02:53 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-12 02:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.46629
2024-11-12 02:53 - INFO - 	 Train Loss: 0.118
2024-11-12 02:53 - INFO - 	 Val. Loss: 0.125
2024-11-12 02:53 - INFO - 	 ROC-AUC: 0.943
2024-11-12 02:53 - INFO - 	 PR-AUC: 0.466
2024-11-12 02:53 - INFO - 	 Best Val. Loss: 0.125
2024-11-12 02:53 - INFO - 	 Best ROC-AUC: 0.943
2024-11-12 02:53 - INFO - 	 Best PR-AUC: 0.466
2024-11-12 02:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-12 02:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.332
2024-11-12 02:53 - INFO - ---------------------------------------------
2024-11-12 03:00 - INFO - ---------------------------------------------
2024-11-12 03:00 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-12 03:00 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52544
2024-11-12 03:00 - INFO - 	 Train Loss: 0.111
2024-11-12 03:00 - INFO - 	 Val. Loss: 0.132
2024-11-12 03:00 - INFO - 	 ROC-AUC: 0.954
2024-11-12 03:00 - INFO - 	 PR-AUC: 0.525
2024-11-12 03:00 - INFO - 	 Best Val. Loss: 0.125
2024-11-12 03:00 - INFO - 	 Best ROC-AUC: 0.954
2024-11-12 03:00 - INFO - 	 Best PR-AUC: 0.525
2024-11-12 03:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.926
2024-11-12 03:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.356
2024-11-12 03:00 - INFO - ---------------------------------------------
2024-11-12 03:08 - INFO - ---------------------------------------------
2024-11-12 03:08 - INFO - Epoch: 05 | Time: 7m 8s
2024-11-12 03:08 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60895
2024-11-12 03:08 - INFO - 	 Train Loss: 0.107
2024-11-12 03:08 - INFO - 	 Val. Loss: 0.100
2024-11-12 03:08 - INFO - 	 ROC-AUC: 0.972
2024-11-12 03:08 - INFO - 	 PR-AUC: 0.609
2024-11-12 03:08 - INFO - 	 Best Val. Loss: 0.100
2024-11-12 03:08 - INFO - 	 Best ROC-AUC: 0.972
2024-11-12 03:08 - INFO - 	 Best PR-AUC: 0.609
2024-11-12 03:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-12 03:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.386
2024-11-12 03:08 - INFO - ---------------------------------------------
2024-11-12 03:15 - INFO - ---------------------------------------------
2024-11-12 03:15 - INFO - Epoch: 06 | Time: 7m 6s
2024-11-12 03:15 - INFO - 	 Train Loss: 0.104
2024-11-12 03:15 - INFO - 	 Val. Loss: 0.095
2024-11-12 03:15 - INFO - 	 ROC-AUC: 0.974
2024-11-12 03:15 - INFO - 	 PR-AUC: 0.538
2024-11-12 03:15 - INFO - 	 Best Val. Loss: 0.095
2024-11-12 03:15 - INFO - 	 Best ROC-AUC: 0.974
2024-11-12 03:15 - INFO - 	 Best PR-AUC: 0.609
2024-11-12 03:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-12 03:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.386
2024-11-12 03:15 - INFO - ---------------------------------------------
2024-11-12 03:22 - INFO - ---------------------------------------------
2024-11-12 03:22 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-12 03:22 - INFO - 	 Train Loss: 0.100
2024-11-12 03:22 - INFO - 	 Val. Loss: 0.115
2024-11-12 03:22 - INFO - 	 ROC-AUC: 0.956
2024-11-12 03:22 - INFO - 	 PR-AUC: 0.517
2024-11-12 03:22 - INFO - 	 Best Val. Loss: 0.095
2024-11-12 03:22 - INFO - 	 Best ROC-AUC: 0.974
2024-11-12 03:22 - INFO - 	 Best PR-AUC: 0.609
2024-11-12 03:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-12 03:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.386
2024-11-12 03:22 - INFO - ---------------------------------------------
2024-11-12 03:29 - INFO - ---------------------------------------------
2024-11-12 03:29 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-12 03:29 - INFO - 	 Train Loss: 0.099
2024-11-12 03:29 - INFO - 	 Val. Loss: 0.090
2024-11-12 03:29 - INFO - 	 ROC-AUC: 0.973
2024-11-12 03:29 - INFO - 	 PR-AUC: 0.595
2024-11-12 03:29 - INFO - 	 Best Val. Loss: 0.090
2024-11-12 03:29 - INFO - 	 Best ROC-AUC: 0.974
2024-11-12 03:29 - INFO - 	 Best PR-AUC: 0.609
2024-11-12 03:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-12 03:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.386
2024-11-12 03:29 - INFO - ---------------------------------------------
2024-11-12 03:36 - INFO - ---------------------------------------------
2024-11-12 03:36 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-12 03:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.64126
2024-11-12 03:36 - INFO - 	 Train Loss: 0.096
2024-11-12 03:36 - INFO - 	 Val. Loss: 0.088
2024-11-12 03:36 - INFO - 	 ROC-AUC: 0.972
2024-11-12 03:36 - INFO - 	 PR-AUC: 0.641
2024-11-12 03:36 - INFO - 	 Best Val. Loss: 0.088
2024-11-12 03:36 - INFO - 	 Best ROC-AUC: 0.974
2024-11-12 03:36 - INFO - 	 Best PR-AUC: 0.641
2024-11-12 03:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-12 03:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.482
2024-11-12 03:36 - INFO - ---------------------------------------------
2024-11-12 03:43 - INFO - ---------------------------------------------
2024-11-12 03:43 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-12 03:43 - INFO - 	 Train Loss: 0.092
2024-11-12 03:43 - INFO - 	 Val. Loss: 0.107
2024-11-12 03:43 - INFO - 	 ROC-AUC: 0.970
2024-11-12 03:43 - INFO - 	 PR-AUC: 0.618
2024-11-12 03:43 - INFO - 	 Best Val. Loss: 0.088
2024-11-12 03:43 - INFO - 	 Best ROC-AUC: 0.974
2024-11-12 03:43 - INFO - 	 Best PR-AUC: 0.641
2024-11-12 03:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.949
2024-11-12 03:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.482
2024-11-12 03:43 - INFO - ---------------------------------------------
2024-11-12 03:45 - INFO - Fit the preprocessing pipeline
2024-11-12 03:45 - INFO - Training using device: cuda
2024-11-12 03:45 - INFO - Creating generators
2024-11-12 03:45 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 03:45 - INFO - * Model:
2024-11-12 03:45 - INFO - * -----------
2024-11-12 03:45 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 03:45 - INFO - * -----------
2024-11-12 03:52 - INFO - ---------------------------------------------
2024-11-12 03:52 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-12 03:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40746
2024-11-12 03:52 - INFO - 	 Train Loss: 0.144
2024-11-12 03:52 - INFO - 	 Val. Loss: 0.155
2024-11-12 03:52 - INFO - 	 ROC-AUC: 0.902
2024-11-12 03:52 - INFO - 	 PR-AUC: 0.407
2024-11-12 03:52 - INFO - 	 Best Val. Loss: 0.155
2024-11-12 03:52 - INFO - 	 Best ROC-AUC: 0.902
2024-11-12 03:52 - INFO - 	 Best PR-AUC: 0.407
2024-11-12 03:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.819
2024-11-12 03:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.199
2024-11-12 03:52 - INFO - ---------------------------------------------
2024-11-12 03:59 - INFO - ---------------------------------------------
2024-11-12 03:59 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 03:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.44827
2024-11-12 03:59 - INFO - 	 Train Loss: 0.130
2024-11-12 03:59 - INFO - 	 Val. Loss: 0.180
2024-11-12 03:59 - INFO - 	 ROC-AUC: 0.926
2024-11-12 03:59 - INFO - 	 PR-AUC: 0.448
2024-11-12 03:59 - INFO - 	 Best Val. Loss: 0.155
2024-11-12 03:59 - INFO - 	 Best ROC-AUC: 0.926
2024-11-12 03:59 - INFO - 	 Best PR-AUC: 0.448
2024-11-12 03:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.891
2024-11-12 03:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-12 03:59 - INFO - ---------------------------------------------
2024-11-12 04:06 - INFO - ---------------------------------------------
2024-11-12 04:06 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-12 04:06 - INFO - 	 Train Loss: 0.116
2024-11-12 04:06 - INFO - 	 Val. Loss: 0.162
2024-11-12 04:06 - INFO - 	 ROC-AUC: 0.910
2024-11-12 04:06 - INFO - 	 PR-AUC: 0.362
2024-11-12 04:06 - INFO - 	 Best Val. Loss: 0.155
2024-11-12 04:06 - INFO - 	 Best ROC-AUC: 0.926
2024-11-12 04:06 - INFO - 	 Best PR-AUC: 0.448
2024-11-12 04:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.891
2024-11-12 04:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-12 04:06 - INFO - ---------------------------------------------
2024-11-12 04:13 - INFO - ---------------------------------------------
2024-11-12 04:13 - INFO - Epoch: 04 | Time: 7m 6s
2024-11-12 04:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.4937
2024-11-12 04:13 - INFO - 	 Train Loss: 0.109
2024-11-12 04:13 - INFO - 	 Val. Loss: 0.124
2024-11-12 04:13 - INFO - 	 ROC-AUC: 0.958
2024-11-12 04:13 - INFO - 	 PR-AUC: 0.494
2024-11-12 04:13 - INFO - 	 Best Val. Loss: 0.124
2024-11-12 04:13 - INFO - 	 Best ROC-AUC: 0.958
2024-11-12 04:13 - INFO - 	 Best PR-AUC: 0.494
2024-11-12 04:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.910
2024-11-12 04:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-12 04:13 - INFO - ---------------------------------------------
2024-11-12 04:20 - INFO - ---------------------------------------------
2024-11-12 04:20 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-12 04:20 - INFO - 	 Train Loss: 0.105
2024-11-12 04:20 - INFO - 	 Val. Loss: 0.112
2024-11-12 04:20 - INFO - 	 ROC-AUC: 0.956
2024-11-12 04:20 - INFO - 	 PR-AUC: 0.464
2024-11-12 04:20 - INFO - 	 Best Val. Loss: 0.112
2024-11-12 04:20 - INFO - 	 Best ROC-AUC: 0.958
2024-11-12 04:20 - INFO - 	 Best PR-AUC: 0.494
2024-11-12 04:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.910
2024-11-12 04:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.272
2024-11-12 04:20 - INFO - ---------------------------------------------
2024-11-12 04:28 - INFO - ---------------------------------------------
2024-11-12 04:28 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-12 04:28 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49583
2024-11-12 04:28 - INFO - 	 Train Loss: 0.101
2024-11-12 04:28 - INFO - 	 Val. Loss: 0.115
2024-11-12 04:28 - INFO - 	 ROC-AUC: 0.962
2024-11-12 04:28 - INFO - 	 PR-AUC: 0.496
2024-11-12 04:28 - INFO - 	 Best Val. Loss: 0.112
2024-11-12 04:28 - INFO - 	 Best ROC-AUC: 0.962
2024-11-12 04:28 - INFO - 	 Best PR-AUC: 0.496
2024-11-12 04:28 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-12 04:28 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.406
2024-11-12 04:28 - INFO - ---------------------------------------------
2024-11-12 04:35 - INFO - ---------------------------------------------
2024-11-12 04:35 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-12 04:35 - INFO - 	 Train Loss: 0.105
2024-11-12 04:35 - INFO - 	 Val. Loss: 0.224
2024-11-12 04:35 - INFO - 	 ROC-AUC: 0.902
2024-11-12 04:35 - INFO - 	 PR-AUC: 0.343
2024-11-12 04:35 - INFO - 	 Best Val. Loss: 0.112
2024-11-12 04:35 - INFO - 	 Best ROC-AUC: 0.962
2024-11-12 04:35 - INFO - 	 Best PR-AUC: 0.496
2024-11-12 04:35 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.951
2024-11-12 04:35 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.406
2024-11-12 04:35 - INFO - ---------------------------------------------
2024-11-12 04:42 - INFO - ---------------------------------------------
2024-11-12 04:42 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-12 04:42 - INFO - 	 New best val_rocauc loss was found, current best value is 0.52678
2024-11-12 04:42 - INFO - 	 Train Loss: 0.100
2024-11-12 04:42 - INFO - 	 Val. Loss: 0.133
2024-11-12 04:42 - INFO - 	 ROC-AUC: 0.966
2024-11-12 04:42 - INFO - 	 PR-AUC: 0.527
2024-11-12 04:42 - INFO - 	 Best Val. Loss: 0.112
2024-11-12 04:42 - INFO - 	 Best ROC-AUC: 0.966
2024-11-12 04:42 - INFO - 	 Best PR-AUC: 0.527
2024-11-12 04:42 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-12 04:42 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.338
2024-11-12 04:42 - INFO - ---------------------------------------------
2024-11-12 04:49 - INFO - ---------------------------------------------
2024-11-12 04:49 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-12 04:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67418
2024-11-12 04:49 - INFO - 	 Train Loss: 0.097
2024-11-12 04:49 - INFO - 	 Val. Loss: 0.086
2024-11-12 04:49 - INFO - 	 ROC-AUC: 0.979
2024-11-12 04:49 - INFO - 	 PR-AUC: 0.674
2024-11-12 04:49 - INFO - 	 Best Val. Loss: 0.086
2024-11-12 04:49 - INFO - 	 Best ROC-AUC: 0.979
2024-11-12 04:49 - INFO - 	 Best PR-AUC: 0.674
2024-11-12 04:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-12 04:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.486
2024-11-12 04:49 - INFO - ---------------------------------------------
2024-11-12 04:56 - INFO - ---------------------------------------------
2024-11-12 04:56 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-12 04:56 - INFO - 	 Train Loss: 0.095
2024-11-12 04:56 - INFO - 	 Val. Loss: 0.156
2024-11-12 04:56 - INFO - 	 ROC-AUC: 0.894
2024-11-12 04:56 - INFO - 	 PR-AUC: 0.397
2024-11-12 04:56 - INFO - 	 Best Val. Loss: 0.086
2024-11-12 04:56 - INFO - 	 Best ROC-AUC: 0.979
2024-11-12 04:56 - INFO - 	 Best PR-AUC: 0.674
2024-11-12 04:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.960
2024-11-12 04:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.486
2024-11-12 04:56 - INFO - ---------------------------------------------
2024-11-12 04:58 - INFO - Fit the preprocessing pipeline
2024-11-12 04:58 - INFO - Training using device: cuda
2024-11-12 04:58 - INFO - Creating generators
2024-11-12 04:58 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 04:58 - INFO - * Model:
2024-11-12 04:58 - INFO - * -----------
2024-11-12 04:58 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 04:58 - INFO - * -----------
2024-11-12 05:05 - INFO - ---------------------------------------------
2024-11-12 05:05 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-12 05:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42038
2024-11-12 05:05 - INFO - 	 Train Loss: 0.144
2024-11-12 05:05 - INFO - 	 Val. Loss: 0.141
2024-11-12 05:05 - INFO - 	 ROC-AUC: 0.909
2024-11-12 05:05 - INFO - 	 PR-AUC: 0.420
2024-11-12 05:05 - INFO - 	 Best Val. Loss: 0.141
2024-11-12 05:05 - INFO - 	 Best ROC-AUC: 0.909
2024-11-12 05:05 - INFO - 	 Best PR-AUC: 0.420
2024-11-12 05:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.843
2024-11-12 05:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.220
2024-11-12 05:05 - INFO - ---------------------------------------------
2024-11-12 05:12 - INFO - ---------------------------------------------
2024-11-12 05:12 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 05:12 - INFO - 	 Train Loss: 0.128
2024-11-12 05:12 - INFO - 	 Val. Loss: 0.129
2024-11-12 05:12 - INFO - 	 ROC-AUC: 0.917
2024-11-12 05:12 - INFO - 	 PR-AUC: 0.404
2024-11-12 05:12 - INFO - 	 Best Val. Loss: 0.129
2024-11-12 05:12 - INFO - 	 Best ROC-AUC: 0.917
2024-11-12 05:12 - INFO - 	 Best PR-AUC: 0.420
2024-11-12 05:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.884
2024-11-12 05:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.220
2024-11-12 05:12 - INFO - ---------------------------------------------
2024-11-12 05:19 - INFO - ---------------------------------------------
2024-11-12 05:19 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-12 05:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43682
2024-11-12 05:19 - INFO - 	 Train Loss: 0.118
2024-11-12 05:19 - INFO - 	 Val. Loss: 0.175
2024-11-12 05:19 - INFO - 	 ROC-AUC: 0.920
2024-11-12 05:19 - INFO - 	 PR-AUC: 0.437
2024-11-12 05:19 - INFO - 	 Best Val. Loss: 0.129
2024-11-12 05:19 - INFO - 	 Best ROC-AUC: 0.920
2024-11-12 05:19 - INFO - 	 Best PR-AUC: 0.437
2024-11-12 05:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.921
2024-11-12 05:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-12 05:19 - INFO - ---------------------------------------------
2024-11-12 05:26 - INFO - ---------------------------------------------
2024-11-12 05:26 - INFO - Epoch: 04 | Time: 7m 8s
2024-11-12 05:26 - INFO - 	 Train Loss: 0.107
2024-11-12 05:26 - INFO - 	 Val. Loss: 0.132
2024-11-12 05:26 - INFO - 	 ROC-AUC: 0.937
2024-11-12 05:26 - INFO - 	 PR-AUC: 0.431
2024-11-12 05:26 - INFO - 	 Best Val. Loss: 0.129
2024-11-12 05:26 - INFO - 	 Best ROC-AUC: 0.937
2024-11-12 05:26 - INFO - 	 Best PR-AUC: 0.437
2024-11-12 05:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-12 05:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-12 05:26 - INFO - ---------------------------------------------
2024-11-12 05:33 - INFO - ---------------------------------------------
2024-11-12 05:33 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-12 05:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58927
2024-11-12 05:33 - INFO - 	 Train Loss: 0.103
2024-11-12 05:33 - INFO - 	 Val. Loss: 0.106
2024-11-12 05:33 - INFO - 	 ROC-AUC: 0.968
2024-11-12 05:33 - INFO - 	 PR-AUC: 0.589
2024-11-12 05:33 - INFO - 	 Best Val. Loss: 0.106
2024-11-12 05:33 - INFO - 	 Best ROC-AUC: 0.968
2024-11-12 05:33 - INFO - 	 Best PR-AUC: 0.589
2024-11-12 05:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-12 05:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.416
2024-11-12 05:33 - INFO - ---------------------------------------------
2024-11-12 05:41 - INFO - ---------------------------------------------
2024-11-12 05:41 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-12 05:41 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62018
2024-11-12 05:41 - INFO - 	 Train Loss: 0.101
2024-11-12 05:41 - INFO - 	 Val. Loss: 0.091
2024-11-12 05:41 - INFO - 	 ROC-AUC: 0.960
2024-11-12 05:41 - INFO - 	 PR-AUC: 0.620
2024-11-12 05:41 - INFO - 	 Best Val. Loss: 0.091
2024-11-12 05:41 - INFO - 	 Best ROC-AUC: 0.968
2024-11-12 05:41 - INFO - 	 Best PR-AUC: 0.620
2024-11-12 05:41 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-12 05:41 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-12 05:41 - INFO - ---------------------------------------------
2024-11-12 05:48 - INFO - ---------------------------------------------
2024-11-12 05:48 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-12 05:48 - INFO - 	 Train Loss: 0.099
2024-11-12 05:48 - INFO - 	 Val. Loss: 0.155
2024-11-12 05:48 - INFO - 	 ROC-AUC: 0.937
2024-11-12 05:48 - INFO - 	 PR-AUC: 0.456
2024-11-12 05:48 - INFO - 	 Best Val. Loss: 0.091
2024-11-12 05:48 - INFO - 	 Best ROC-AUC: 0.968
2024-11-12 05:48 - INFO - 	 Best PR-AUC: 0.620
2024-11-12 05:48 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-12 05:48 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-12 05:48 - INFO - ---------------------------------------------
2024-11-12 05:55 - INFO - ---------------------------------------------
2024-11-12 05:55 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-12 05:55 - INFO - 	 Train Loss: 0.101
2024-11-12 05:55 - INFO - 	 Val. Loss: 0.096
2024-11-12 05:55 - INFO - 	 ROC-AUC: 0.946
2024-11-12 05:55 - INFO - 	 PR-AUC: 0.619
2024-11-12 05:55 - INFO - 	 Best Val. Loss: 0.091
2024-11-12 05:55 - INFO - 	 Best ROC-AUC: 0.968
2024-11-12 05:55 - INFO - 	 Best PR-AUC: 0.620
2024-11-12 05:55 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-12 05:55 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-12 05:55 - INFO - ---------------------------------------------
2024-11-12 06:02 - INFO - ---------------------------------------------
2024-11-12 06:02 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-12 06:02 - INFO - 	 Train Loss: 0.099
2024-11-12 06:02 - INFO - 	 Val. Loss: 0.089
2024-11-12 06:02 - INFO - 	 ROC-AUC: 0.964
2024-11-12 06:02 - INFO - 	 PR-AUC: 0.618
2024-11-12 06:02 - INFO - 	 Best Val. Loss: 0.089
2024-11-12 06:02 - INFO - 	 Best ROC-AUC: 0.968
2024-11-12 06:02 - INFO - 	 Best PR-AUC: 0.620
2024-11-12 06:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.942
2024-11-12 06:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.450
2024-11-12 06:02 - INFO - ---------------------------------------------
2024-11-12 06:11 - INFO - Fit the preprocessing pipeline
2024-11-12 06:11 - INFO - Training using device: cuda
2024-11-12 06:11 - INFO - Creating generators
2024-11-12 06:11 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 06:11 - INFO - * Model:
2024-11-12 06:11 - INFO - * -----------
2024-11-12 06:11 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 06:11 - INFO - * -----------
2024-11-12 06:18 - INFO - ---------------------------------------------
2024-11-12 06:18 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-12 06:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.34146
2024-11-12 06:18 - INFO - 	 Train Loss: 0.147
2024-11-12 06:18 - INFO - 	 Val. Loss: 0.167
2024-11-12 06:18 - INFO - 	 ROC-AUC: 0.882
2024-11-12 06:18 - INFO - 	 PR-AUC: 0.341
2024-11-12 06:18 - INFO - 	 Best Val. Loss: 0.167
2024-11-12 06:18 - INFO - 	 Best ROC-AUC: 0.882
2024-11-12 06:18 - INFO - 	 Best PR-AUC: 0.341
2024-11-12 06:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.789
2024-11-12 06:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.149
2024-11-12 06:18 - INFO - ---------------------------------------------
2024-11-12 06:25 - INFO - ---------------------------------------------
2024-11-12 06:25 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 06:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.37922
2024-11-12 06:25 - INFO - 	 Train Loss: 0.130
2024-11-12 06:25 - INFO - 	 Val. Loss: 0.147
2024-11-12 06:25 - INFO - 	 ROC-AUC: 0.916
2024-11-12 06:25 - INFO - 	 PR-AUC: 0.379
2024-11-12 06:25 - INFO - 	 Best Val. Loss: 0.147
2024-11-12 06:25 - INFO - 	 Best ROC-AUC: 0.916
2024-11-12 06:25 - INFO - 	 Best PR-AUC: 0.379
2024-11-12 06:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.897
2024-11-12 06:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.286
2024-11-12 06:25 - INFO - ---------------------------------------------
2024-11-12 06:32 - INFO - ---------------------------------------------
2024-11-12 06:32 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-12 06:32 - INFO - 	 Train Loss: 0.121
2024-11-12 06:32 - INFO - 	 Val. Loss: 0.168
2024-11-12 06:32 - INFO - 	 ROC-AUC: 0.927
2024-11-12 06:32 - INFO - 	 PR-AUC: 0.373
2024-11-12 06:32 - INFO - 	 Best Val. Loss: 0.147
2024-11-12 06:32 - INFO - 	 Best ROC-AUC: 0.927
2024-11-12 06:32 - INFO - 	 Best PR-AUC: 0.379
2024-11-12 06:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.877
2024-11-12 06:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.286
2024-11-12 06:32 - INFO - ---------------------------------------------
2024-11-12 06:39 - INFO - ---------------------------------------------
2024-11-12 06:39 - INFO - Epoch: 04 | Time: 7m 6s
2024-11-12 06:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.47403
2024-11-12 06:39 - INFO - 	 Train Loss: 0.112
2024-11-12 06:39 - INFO - 	 Val. Loss: 0.121
2024-11-12 06:39 - INFO - 	 ROC-AUC: 0.961
2024-11-12 06:39 - INFO - 	 PR-AUC: 0.474
2024-11-12 06:39 - INFO - 	 Best Val. Loss: 0.121
2024-11-12 06:39 - INFO - 	 Best ROC-AUC: 0.961
2024-11-12 06:39 - INFO - 	 Best PR-AUC: 0.474
2024-11-12 06:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.924
2024-11-12 06:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.302
2024-11-12 06:39 - INFO - ---------------------------------------------
2024-11-12 06:46 - INFO - ---------------------------------------------
2024-11-12 06:46 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-12 06:46 - INFO - 	 New best val_rocauc loss was found, current best value is 0.49157
2024-11-12 06:46 - INFO - 	 Train Loss: 0.104
2024-11-12 06:46 - INFO - 	 Val. Loss: 0.117
2024-11-12 06:46 - INFO - 	 ROC-AUC: 0.964
2024-11-12 06:46 - INFO - 	 PR-AUC: 0.492
2024-11-12 06:46 - INFO - 	 Best Val. Loss: 0.117
2024-11-12 06:46 - INFO - 	 Best ROC-AUC: 0.964
2024-11-12 06:46 - INFO - 	 Best PR-AUC: 0.492
2024-11-12 06:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.934
2024-11-12 06:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-12 06:46 - INFO - ---------------------------------------------
2024-11-12 06:53 - INFO - ---------------------------------------------
2024-11-12 06:53 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-12 06:53 - INFO - 	 Train Loss: 0.101
2024-11-12 06:53 - INFO - 	 Val. Loss: 0.118
2024-11-12 06:53 - INFO - 	 ROC-AUC: 0.969
2024-11-12 06:53 - INFO - 	 PR-AUC: 0.472
2024-11-12 06:53 - INFO - 	 Best Val. Loss: 0.117
2024-11-12 06:53 - INFO - 	 Best ROC-AUC: 0.969
2024-11-12 06:53 - INFO - 	 Best PR-AUC: 0.492
2024-11-12 06:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-12 06:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-12 06:53 - INFO - ---------------------------------------------
2024-11-12 07:00 - INFO - ---------------------------------------------
2024-11-12 07:00 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-12 07:00 - INFO - 	 Train Loss: 0.099
2024-11-12 07:00 - INFO - 	 Val. Loss: 0.111
2024-11-12 07:00 - INFO - 	 ROC-AUC: 0.965
2024-11-12 07:00 - INFO - 	 PR-AUC: 0.457
2024-11-12 07:00 - INFO - 	 Best Val. Loss: 0.111
2024-11-12 07:00 - INFO - 	 Best ROC-AUC: 0.969
2024-11-12 07:00 - INFO - 	 Best PR-AUC: 0.492
2024-11-12 07:00 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-12 07:00 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-12 07:00 - INFO - ---------------------------------------------
2024-11-12 07:08 - INFO - ---------------------------------------------
2024-11-12 07:08 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-12 07:08 - INFO - 	 Train Loss: 0.096
2024-11-12 07:08 - INFO - 	 Val. Loss: 0.153
2024-11-12 07:08 - INFO - 	 ROC-AUC: 0.958
2024-11-12 07:08 - INFO - 	 PR-AUC: 0.416
2024-11-12 07:08 - INFO - 	 Best Val. Loss: 0.111
2024-11-12 07:08 - INFO - 	 Best ROC-AUC: 0.969
2024-11-12 07:08 - INFO - 	 Best PR-AUC: 0.492
2024-11-12 07:08 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.936
2024-11-12 07:08 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-12 07:08 - INFO - ---------------------------------------------
2024-11-12 07:16 - INFO - Fit the preprocessing pipeline
2024-11-12 07:16 - INFO - Training using device: cuda
2024-11-12 07:16 - INFO - Creating generators
2024-11-12 07:16 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 07:16 - INFO - * Model:
2024-11-12 07:16 - INFO - * -----------
2024-11-12 07:16 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 07:16 - INFO - * -----------
2024-11-12 07:23 - INFO - ---------------------------------------------
2024-11-12 07:23 - INFO - Epoch: 01 | Time: 7m 5s
2024-11-12 07:23 - INFO - 	 New best val_rocauc loss was found, current best value is 0.39846
2024-11-12 07:23 - INFO - 	 Train Loss: 0.146
2024-11-12 07:23 - INFO - 	 Val. Loss: 0.147
2024-11-12 07:23 - INFO - 	 ROC-AUC: 0.892
2024-11-12 07:23 - INFO - 	 PR-AUC: 0.398
2024-11-12 07:23 - INFO - 	 Best Val. Loss: 0.147
2024-11-12 07:23 - INFO - 	 Best ROC-AUC: 0.892
2024-11-12 07:23 - INFO - 	 Best PR-AUC: 0.398
2024-11-12 07:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.822
2024-11-12 07:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.207
2024-11-12 07:23 - INFO - ---------------------------------------------
2024-11-12 07:31 - INFO - ---------------------------------------------
2024-11-12 07:31 - INFO - Epoch: 02 | Time: 7m 6s
2024-11-12 07:31 - INFO - 	 New best val_rocauc loss was found, current best value is 0.41973
2024-11-12 07:31 - INFO - 	 Train Loss: 0.132
2024-11-12 07:31 - INFO - 	 Val. Loss: 0.196
2024-11-12 07:31 - INFO - 	 ROC-AUC: 0.899
2024-11-12 07:31 - INFO - 	 PR-AUC: 0.420
2024-11-12 07:31 - INFO - 	 Best Val. Loss: 0.147
2024-11-12 07:31 - INFO - 	 Best ROC-AUC: 0.899
2024-11-12 07:31 - INFO - 	 Best PR-AUC: 0.420
2024-11-12 07:31 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.849
2024-11-12 07:31 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.221
2024-11-12 07:31 - INFO - ---------------------------------------------
2024-11-12 07:38 - INFO - ---------------------------------------------
2024-11-12 07:38 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-12 07:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48305
2024-11-12 07:38 - INFO - 	 Train Loss: 0.120
2024-11-12 07:38 - INFO - 	 Val. Loss: 0.134
2024-11-12 07:38 - INFO - 	 ROC-AUC: 0.950
2024-11-12 07:38 - INFO - 	 PR-AUC: 0.483
2024-11-12 07:38 - INFO - 	 Best Val. Loss: 0.134
2024-11-12 07:38 - INFO - 	 Best ROC-AUC: 0.950
2024-11-12 07:38 - INFO - 	 Best PR-AUC: 0.483
2024-11-12 07:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-12 07:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-12 07:38 - INFO - ---------------------------------------------
2024-11-12 07:45 - INFO - ---------------------------------------------
2024-11-12 07:45 - INFO - Epoch: 04 | Time: 7m 5s
2024-11-12 07:45 - INFO - 	 Train Loss: 0.111
2024-11-12 07:45 - INFO - 	 Val. Loss: 0.183
2024-11-12 07:45 - INFO - 	 ROC-AUC: 0.923
2024-11-12 07:45 - INFO - 	 PR-AUC: 0.416
2024-11-12 07:45 - INFO - 	 Best Val. Loss: 0.134
2024-11-12 07:45 - INFO - 	 Best ROC-AUC: 0.950
2024-11-12 07:45 - INFO - 	 Best PR-AUC: 0.483
2024-11-12 07:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.908
2024-11-12 07:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.320
2024-11-12 07:45 - INFO - ---------------------------------------------
2024-11-12 07:52 - INFO - ---------------------------------------------
2024-11-12 07:52 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-12 07:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.54499
2024-11-12 07:52 - INFO - 	 Train Loss: 0.106
2024-11-12 07:52 - INFO - 	 Val. Loss: 0.116
2024-11-12 07:52 - INFO - 	 ROC-AUC: 0.964
2024-11-12 07:52 - INFO - 	 PR-AUC: 0.545
2024-11-12 07:52 - INFO - 	 Best Val. Loss: 0.116
2024-11-12 07:52 - INFO - 	 Best ROC-AUC: 0.964
2024-11-12 07:52 - INFO - 	 Best PR-AUC: 0.545
2024-11-12 07:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-12 07:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-11-12 07:52 - INFO - ---------------------------------------------
2024-11-12 07:59 - INFO - ---------------------------------------------
2024-11-12 07:59 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-12 07:59 - INFO - 	 Train Loss: 0.101
2024-11-12 07:59 - INFO - 	 Val. Loss: 0.120
2024-11-12 07:59 - INFO - 	 ROC-AUC: 0.954
2024-11-12 07:59 - INFO - 	 PR-AUC: 0.512
2024-11-12 07:59 - INFO - 	 Best Val. Loss: 0.116
2024-11-12 07:59 - INFO - 	 Best ROC-AUC: 0.964
2024-11-12 07:59 - INFO - 	 Best PR-AUC: 0.545
2024-11-12 07:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-12 07:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-11-12 07:59 - INFO - ---------------------------------------------
2024-11-12 08:06 - INFO - ---------------------------------------------
2024-11-12 08:06 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-12 08:06 - INFO - 	 Train Loss: 0.099
2024-11-12 08:06 - INFO - 	 Val. Loss: 0.134
2024-11-12 08:06 - INFO - 	 ROC-AUC: 0.944
2024-11-12 08:06 - INFO - 	 PR-AUC: 0.491
2024-11-12 08:06 - INFO - 	 Best Val. Loss: 0.116
2024-11-12 08:06 - INFO - 	 Best ROC-AUC: 0.964
2024-11-12 08:06 - INFO - 	 Best PR-AUC: 0.545
2024-11-12 08:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-12 08:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.396
2024-11-12 08:06 - INFO - ---------------------------------------------
2024-11-12 08:13 - INFO - ---------------------------------------------
2024-11-12 08:13 - INFO - Epoch: 08 | Time: 7m 6s
2024-11-12 08:13 - INFO - 	 New best val_rocauc loss was found, current best value is 0.56664
2024-11-12 08:13 - INFO - 	 Train Loss: 0.099
2024-11-12 08:13 - INFO - 	 Val. Loss: 0.116
2024-11-12 08:13 - INFO - 	 ROC-AUC: 0.963
2024-11-12 08:13 - INFO - 	 PR-AUC: 0.567
2024-11-12 08:13 - INFO - 	 Best Val. Loss: 0.116
2024-11-12 08:13 - INFO - 	 Best ROC-AUC: 0.964
2024-11-12 08:13 - INFO - 	 Best PR-AUC: 0.567
2024-11-12 08:13 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-12 08:13 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.385
2024-11-12 08:13 - INFO - ---------------------------------------------
2024-11-12 08:20 - INFO - ---------------------------------------------
2024-11-12 08:20 - INFO - Epoch: 09 | Time: 7m 6s
2024-11-12 08:20 - INFO - 	 New best val_rocauc loss was found, current best value is 0.59543
2024-11-12 08:20 - INFO - 	 Train Loss: 0.094
2024-11-12 08:20 - INFO - 	 Val. Loss: 0.117
2024-11-12 08:20 - INFO - 	 ROC-AUC: 0.959
2024-11-12 08:20 - INFO - 	 PR-AUC: 0.595
2024-11-12 08:20 - INFO - 	 Best Val. Loss: 0.116
2024-11-12 08:20 - INFO - 	 Best ROC-AUC: 0.964
2024-11-12 08:20 - INFO - 	 Best PR-AUC: 0.595
2024-11-12 08:20 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-12 08:20 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.418
2024-11-12 08:20 - INFO - ---------------------------------------------
2024-11-12 08:27 - INFO - ---------------------------------------------
2024-11-12 08:27 - INFO - Epoch: 10 | Time: 7m 8s
2024-11-12 08:27 - INFO - 	 Train Loss: 0.095
2024-11-12 08:27 - INFO - 	 Val. Loss: 0.114
2024-11-12 08:27 - INFO - 	 ROC-AUC: 0.962
2024-11-12 08:27 - INFO - 	 PR-AUC: 0.564
2024-11-12 08:27 - INFO - 	 Best Val. Loss: 0.114
2024-11-12 08:27 - INFO - 	 Best ROC-AUC: 0.964
2024-11-12 08:27 - INFO - 	 Best PR-AUC: 0.595
2024-11-12 08:27 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.941
2024-11-12 08:27 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.418
2024-11-12 08:27 - INFO - ---------------------------------------------
2024-11-12 08:29 - INFO - Fit the preprocessing pipeline
2024-11-12 08:29 - INFO - Training using device: cuda
2024-11-12 08:29 - INFO - Creating generators
2024-11-12 08:29 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 08:29 - INFO - * Model:
2024-11-12 08:29 - INFO - * -----------
2024-11-12 08:29 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 08:29 - INFO - * -----------
2024-11-12 08:36 - INFO - ---------------------------------------------
2024-11-12 08:36 - INFO - Epoch: 01 | Time: 7m 6s
2024-11-12 08:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40644
2024-11-12 08:36 - INFO - 	 Train Loss: 0.144
2024-11-12 08:36 - INFO - 	 Val. Loss: 0.135
2024-11-12 08:36 - INFO - 	 ROC-AUC: 0.910
2024-11-12 08:36 - INFO - 	 PR-AUC: 0.406
2024-11-12 08:36 - INFO - 	 Best Val. Loss: 0.135
2024-11-12 08:36 - INFO - 	 Best ROC-AUC: 0.910
2024-11-12 08:36 - INFO - 	 Best PR-AUC: 0.406
2024-11-12 08:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.840
2024-11-12 08:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.235
2024-11-12 08:36 - INFO - ---------------------------------------------
2024-11-12 08:43 - INFO - ---------------------------------------------
2024-11-12 08:43 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 08:43 - INFO - 	 Train Loss: 0.131
2024-11-12 08:43 - INFO - 	 Val. Loss: 0.152
2024-11-12 08:43 - INFO - 	 ROC-AUC: 0.925
2024-11-12 08:43 - INFO - 	 PR-AUC: 0.403
2024-11-12 08:43 - INFO - 	 Best Val. Loss: 0.135
2024-11-12 08:43 - INFO - 	 Best ROC-AUC: 0.925
2024-11-12 08:43 - INFO - 	 Best PR-AUC: 0.406
2024-11-12 08:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.869
2024-11-12 08:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.235
2024-11-12 08:43 - INFO - ---------------------------------------------
2024-11-12 08:50 - INFO - ---------------------------------------------
2024-11-12 08:50 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-12 08:50 - INFO - 	 New best val_rocauc loss was found, current best value is 0.40658
2024-11-12 08:50 - INFO - 	 Train Loss: 0.119
2024-11-12 08:50 - INFO - 	 Val. Loss: 0.159
2024-11-12 08:50 - INFO - 	 ROC-AUC: 0.929
2024-11-12 08:50 - INFO - 	 PR-AUC: 0.407
2024-11-12 08:50 - INFO - 	 Best Val. Loss: 0.135
2024-11-12 08:50 - INFO - 	 Best ROC-AUC: 0.929
2024-11-12 08:50 - INFO - 	 Best PR-AUC: 0.407
2024-11-12 08:50 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.855
2024-11-12 08:50 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.190
2024-11-12 08:50 - INFO - ---------------------------------------------
2024-11-12 08:58 - INFO - ---------------------------------------------
2024-11-12 08:58 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-12 08:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45684
2024-11-12 08:58 - INFO - 	 Train Loss: 0.111
2024-11-12 08:58 - INFO - 	 Val. Loss: 0.149
2024-11-12 08:58 - INFO - 	 ROC-AUC: 0.949
2024-11-12 08:58 - INFO - 	 PR-AUC: 0.457
2024-11-12 08:58 - INFO - 	 Best Val. Loss: 0.135
2024-11-12 08:58 - INFO - 	 Best ROC-AUC: 0.949
2024-11-12 08:58 - INFO - 	 Best PR-AUC: 0.457
2024-11-12 08:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.898
2024-11-12 08:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-12 08:58 - INFO - ---------------------------------------------
2024-11-12 09:05 - INFO - ---------------------------------------------
2024-11-12 09:05 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-12 09:05 - INFO - 	 Train Loss: 0.109
2024-11-12 09:05 - INFO - 	 Val. Loss: 0.139
2024-11-12 09:05 - INFO - 	 ROC-AUC: 0.952
2024-11-12 09:05 - INFO - 	 PR-AUC: 0.420
2024-11-12 09:05 - INFO - 	 Best Val. Loss: 0.135
2024-11-12 09:05 - INFO - 	 Best ROC-AUC: 0.952
2024-11-12 09:05 - INFO - 	 Best PR-AUC: 0.457
2024-11-12 09:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.892
2024-11-12 09:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-12 09:05 - INFO - ---------------------------------------------
2024-11-12 09:12 - INFO - ---------------------------------------------
2024-11-12 09:12 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-12 09:12 - INFO - 	 Train Loss: 0.103
2024-11-12 09:12 - INFO - 	 Val. Loss: 0.153
2024-11-12 09:12 - INFO - 	 ROC-AUC: 0.954
2024-11-12 09:12 - INFO - 	 PR-AUC: 0.433
2024-11-12 09:12 - INFO - 	 Best Val. Loss: 0.135
2024-11-12 09:12 - INFO - 	 Best ROC-AUC: 0.954
2024-11-12 09:12 - INFO - 	 Best PR-AUC: 0.457
2024-11-12 09:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.900
2024-11-12 09:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.247
2024-11-12 09:12 - INFO - ---------------------------------------------
2024-11-12 09:19 - INFO - ---------------------------------------------
2024-11-12 09:19 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-12 09:19 - INFO - 	 New best val_rocauc loss was found, current best value is 0.58011
2024-11-12 09:19 - INFO - 	 Train Loss: 0.100
2024-11-12 09:19 - INFO - 	 Val. Loss: 0.102
2024-11-12 09:19 - INFO - 	 ROC-AUC: 0.960
2024-11-12 09:19 - INFO - 	 PR-AUC: 0.580
2024-11-12 09:19 - INFO - 	 Best Val. Loss: 0.102
2024-11-12 09:19 - INFO - 	 Best ROC-AUC: 0.960
2024-11-12 09:19 - INFO - 	 Best PR-AUC: 0.580
2024-11-12 09:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-12 09:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.369
2024-11-12 09:19 - INFO - ---------------------------------------------
2024-11-12 09:26 - INFO - ---------------------------------------------
2024-11-12 09:26 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-12 09:26 - INFO - 	 Train Loss: 0.097
2024-11-12 09:26 - INFO - 	 Val. Loss: 0.116
2024-11-12 09:26 - INFO - 	 ROC-AUC: 0.944
2024-11-12 09:26 - INFO - 	 PR-AUC: 0.528
2024-11-12 09:26 - INFO - 	 Best Val. Loss: 0.102
2024-11-12 09:26 - INFO - 	 Best ROC-AUC: 0.960
2024-11-12 09:26 - INFO - 	 Best PR-AUC: 0.580
2024-11-12 09:26 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.944
2024-11-12 09:26 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.369
2024-11-12 09:26 - INFO - ---------------------------------------------
2024-11-12 09:33 - INFO - ---------------------------------------------
2024-11-12 09:33 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-12 09:33 - INFO - 	 New best val_rocauc loss was found, current best value is 0.67991
2024-11-12 09:33 - INFO - 	 Train Loss: 0.095
2024-11-12 09:33 - INFO - 	 Val. Loss: 0.085
2024-11-12 09:33 - INFO - 	 ROC-AUC: 0.971
2024-11-12 09:33 - INFO - 	 PR-AUC: 0.680
2024-11-12 09:33 - INFO - 	 Best Val. Loss: 0.085
2024-11-12 09:33 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 09:33 - INFO - 	 Best PR-AUC: 0.680
2024-11-12 09:33 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-12 09:33 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.476
2024-11-12 09:33 - INFO - ---------------------------------------------
2024-11-12 09:40 - INFO - ---------------------------------------------
2024-11-12 09:40 - INFO - Epoch: 10 | Time: 7m 6s
2024-11-12 09:40 - INFO - 	 Train Loss: 0.097
2024-11-12 09:40 - INFO - 	 Val. Loss: 0.111
2024-11-12 09:40 - INFO - 	 ROC-AUC: 0.969
2024-11-12 09:40 - INFO - 	 PR-AUC: 0.532
2024-11-12 09:40 - INFO - 	 Best Val. Loss: 0.085
2024-11-12 09:40 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 09:40 - INFO - 	 Best PR-AUC: 0.680
2024-11-12 09:40 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.959
2024-11-12 09:40 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.476
2024-11-12 09:40 - INFO - ---------------------------------------------
2024-11-12 09:42 - INFO - Fit the preprocessing pipeline
2024-11-12 09:42 - INFO - Training using device: cuda
2024-11-12 09:42 - INFO - Creating generators
2024-11-12 09:42 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 09:42 - INFO - * Model:
2024-11-12 09:42 - INFO - * -----------
2024-11-12 09:42 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 09:42 - INFO - * -----------
2024-11-12 09:49 - INFO - ---------------------------------------------
2024-11-12 09:49 - INFO - Epoch: 01 | Time: 7m 5s
2024-11-12 09:49 - INFO - 	 New best val_rocauc loss was found, current best value is 0.38393
2024-11-12 09:49 - INFO - 	 Train Loss: 0.149
2024-11-12 09:49 - INFO - 	 Val. Loss: 0.163
2024-11-12 09:49 - INFO - 	 ROC-AUC: 0.895
2024-11-12 09:49 - INFO - 	 PR-AUC: 0.384
2024-11-12 09:49 - INFO - 	 Best Val. Loss: 0.163
2024-11-12 09:49 - INFO - 	 Best ROC-AUC: 0.895
2024-11-12 09:49 - INFO - 	 Best PR-AUC: 0.384
2024-11-12 09:49 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.827
2024-11-12 09:49 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-12 09:49 - INFO - ---------------------------------------------
2024-11-12 09:56 - INFO - ---------------------------------------------
2024-11-12 09:56 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 09:56 - INFO - 	 Train Loss: 0.128
2024-11-12 09:56 - INFO - 	 Val. Loss: 0.203
2024-11-12 09:56 - INFO - 	 ROC-AUC: 0.886
2024-11-12 09:56 - INFO - 	 PR-AUC: 0.367
2024-11-12 09:56 - INFO - 	 Best Val. Loss: 0.163
2024-11-12 09:56 - INFO - 	 Best ROC-AUC: 0.895
2024-11-12 09:56 - INFO - 	 Best PR-AUC: 0.384
2024-11-12 09:56 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.827
2024-11-12 09:56 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-12 09:56 - INFO - ---------------------------------------------
2024-11-12 10:03 - INFO - ---------------------------------------------
2024-11-12 10:03 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-12 10:03 - INFO - 	 Train Loss: 0.119
2024-11-12 10:03 - INFO - 	 Val. Loss: 0.219
2024-11-12 10:03 - INFO - 	 ROC-AUC: 0.865
2024-11-12 10:03 - INFO - 	 PR-AUC: 0.266
2024-11-12 10:03 - INFO - 	 Best Val. Loss: 0.163
2024-11-12 10:03 - INFO - 	 Best ROC-AUC: 0.895
2024-11-12 10:03 - INFO - 	 Best PR-AUC: 0.384
2024-11-12 10:03 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.827
2024-11-12 10:03 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-12 10:03 - INFO - ---------------------------------------------
2024-11-12 10:10 - INFO - ---------------------------------------------
2024-11-12 10:10 - INFO - Epoch: 04 | Time: 7m 6s
2024-11-12 10:10 - INFO - 	 Train Loss: 0.113
2024-11-12 10:10 - INFO - 	 Val. Loss: 0.195
2024-11-12 10:10 - INFO - 	 ROC-AUC: 0.897
2024-11-12 10:10 - INFO - 	 PR-AUC: 0.339
2024-11-12 10:10 - INFO - 	 Best Val. Loss: 0.163
2024-11-12 10:10 - INFO - 	 Best ROC-AUC: 0.897
2024-11-12 10:10 - INFO - 	 Best PR-AUC: 0.384
2024-11-12 10:10 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.917
2024-11-12 10:10 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.180
2024-11-12 10:10 - INFO - ---------------------------------------------
2024-11-12 10:18 - INFO - ---------------------------------------------
2024-11-12 10:18 - INFO - Epoch: 05 | Time: 7m 6s
2024-11-12 10:18 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42205
2024-11-12 10:18 - INFO - 	 Train Loss: 0.108
2024-11-12 10:18 - INFO - 	 Val. Loss: 0.173
2024-11-12 10:18 - INFO - 	 ROC-AUC: 0.940
2024-11-12 10:18 - INFO - 	 PR-AUC: 0.422
2024-11-12 10:18 - INFO - 	 Best Val. Loss: 0.163
2024-11-12 10:18 - INFO - 	 Best ROC-AUC: 0.940
2024-11-12 10:18 - INFO - 	 Best PR-AUC: 0.422
2024-11-12 10:18 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.935
2024-11-12 10:18 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.341
2024-11-12 10:18 - INFO - ---------------------------------------------
2024-11-12 10:25 - INFO - ---------------------------------------------
2024-11-12 10:25 - INFO - Epoch: 06 | Time: 7m 5s
2024-11-12 10:25 - INFO - 	 New best val_rocauc loss was found, current best value is 0.53954
2024-11-12 10:25 - INFO - 	 Train Loss: 0.103
2024-11-12 10:25 - INFO - 	 Val. Loss: 0.109
2024-11-12 10:25 - INFO - 	 ROC-AUC: 0.961
2024-11-12 10:25 - INFO - 	 PR-AUC: 0.540
2024-11-12 10:25 - INFO - 	 Best Val. Loss: 0.109
2024-11-12 10:25 - INFO - 	 Best ROC-AUC: 0.961
2024-11-12 10:25 - INFO - 	 Best PR-AUC: 0.540
2024-11-12 10:25 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 10:25 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-12 10:25 - INFO - ---------------------------------------------
2024-11-12 10:32 - INFO - ---------------------------------------------
2024-11-12 10:32 - INFO - Epoch: 07 | Time: 7m 7s
2024-11-12 10:32 - INFO - 	 Train Loss: 0.101
2024-11-12 10:32 - INFO - 	 Val. Loss: 0.144
2024-11-12 10:32 - INFO - 	 ROC-AUC: 0.933
2024-11-12 10:32 - INFO - 	 PR-AUC: 0.421
2024-11-12 10:32 - INFO - 	 Best Val. Loss: 0.109
2024-11-12 10:32 - INFO - 	 Best ROC-AUC: 0.961
2024-11-12 10:32 - INFO - 	 Best PR-AUC: 0.540
2024-11-12 10:32 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 10:32 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.388
2024-11-12 10:32 - INFO - ---------------------------------------------
2024-11-12 10:39 - INFO - ---------------------------------------------
2024-11-12 10:39 - INFO - Epoch: 08 | Time: 7m 7s
2024-11-12 10:39 - INFO - 	 New best val_rocauc loss was found, current best value is 0.60957
2024-11-12 10:39 - INFO - 	 Train Loss: 0.099
2024-11-12 10:39 - INFO - 	 Val. Loss: 0.110
2024-11-12 10:39 - INFO - 	 ROC-AUC: 0.941
2024-11-12 10:39 - INFO - 	 PR-AUC: 0.610
2024-11-12 10:39 - INFO - 	 Best Val. Loss: 0.109
2024-11-12 10:39 - INFO - 	 Best ROC-AUC: 0.961
2024-11-12 10:39 - INFO - 	 Best PR-AUC: 0.610
2024-11-12 10:39 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 10:39 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-11-12 10:39 - INFO - ---------------------------------------------
2024-11-12 10:46 - INFO - ---------------------------------------------
2024-11-12 10:46 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-12 10:46 - INFO - 	 Train Loss: 0.098
2024-11-12 10:46 - INFO - 	 Val. Loss: 0.107
2024-11-12 10:46 - INFO - 	 ROC-AUC: 0.952
2024-11-12 10:46 - INFO - 	 PR-AUC: 0.531
2024-11-12 10:46 - INFO - 	 Best Val. Loss: 0.107
2024-11-12 10:46 - INFO - 	 Best ROC-AUC: 0.961
2024-11-12 10:46 - INFO - 	 Best PR-AUC: 0.610
2024-11-12 10:46 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 10:46 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.443
2024-11-12 10:46 - INFO - ---------------------------------------------
2024-11-12 10:53 - INFO - ---------------------------------------------
2024-11-12 10:53 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-12 10:53 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62991
2024-11-12 10:53 - INFO - 	 Train Loss: 0.097
2024-11-12 10:53 - INFO - 	 Val. Loss: 0.098
2024-11-12 10:53 - INFO - 	 ROC-AUC: 0.958
2024-11-12 10:53 - INFO - 	 PR-AUC: 0.630
2024-11-12 10:53 - INFO - 	 Best Val. Loss: 0.098
2024-11-12 10:53 - INFO - 	 Best ROC-AUC: 0.961
2024-11-12 10:53 - INFO - 	 Best PR-AUC: 0.630
2024-11-12 10:53 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.950
2024-11-12 10:53 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.460
2024-11-12 10:53 - INFO - ---------------------------------------------
2024-11-12 10:55 - INFO - Fit the preprocessing pipeline
2024-11-12 10:55 - INFO - Training using device: cuda
2024-11-12 10:55 - INFO - Creating generators
2024-11-12 10:55 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 10:55 - INFO - * Model:
2024-11-12 10:55 - INFO - * -----------
2024-11-12 10:55 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 10:55 - INFO - * -----------
2024-11-12 11:02 - INFO - ---------------------------------------------
2024-11-12 11:02 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-12 11:02 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42162
2024-11-12 11:02 - INFO - 	 Train Loss: 0.145
2024-11-12 11:02 - INFO - 	 Val. Loss: 0.140
2024-11-12 11:02 - INFO - 	 ROC-AUC: 0.917
2024-11-12 11:02 - INFO - 	 PR-AUC: 0.422
2024-11-12 11:02 - INFO - 	 Best Val. Loss: 0.140
2024-11-12 11:02 - INFO - 	 Best ROC-AUC: 0.917
2024-11-12 11:02 - INFO - 	 Best PR-AUC: 0.422
2024-11-12 11:02 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.833
2024-11-12 11:02 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.220
2024-11-12 11:02 - INFO - ---------------------------------------------
2024-11-12 11:09 - INFO - ---------------------------------------------
2024-11-12 11:09 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 11:09 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45811
2024-11-12 11:09 - INFO - 	 Train Loss: 0.128
2024-11-12 11:09 - INFO - 	 Val. Loss: 0.149
2024-11-12 11:09 - INFO - 	 ROC-AUC: 0.935
2024-11-12 11:09 - INFO - 	 PR-AUC: 0.458
2024-11-12 11:09 - INFO - 	 Best Val. Loss: 0.140
2024-11-12 11:09 - INFO - 	 Best ROC-AUC: 0.935
2024-11-12 11:09 - INFO - 	 Best PR-AUC: 0.458
2024-11-12 11:09 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.878
2024-11-12 11:09 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.264
2024-11-12 11:09 - INFO - ---------------------------------------------
2024-11-12 11:16 - INFO - ---------------------------------------------
2024-11-12 11:16 - INFO - Epoch: 03 | Time: 7m 7s
2024-11-12 11:16 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48433
2024-11-12 11:16 - INFO - 	 Train Loss: 0.119
2024-11-12 11:16 - INFO - 	 Val. Loss: 0.133
2024-11-12 11:16 - INFO - 	 ROC-AUC: 0.960
2024-11-12 11:16 - INFO - 	 PR-AUC: 0.484
2024-11-12 11:16 - INFO - 	 Best Val. Loss: 0.133
2024-11-12 11:16 - INFO - 	 Best ROC-AUC: 0.960
2024-11-12 11:16 - INFO - 	 Best PR-AUC: 0.484
2024-11-12 11:16 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-12 11:16 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.286
2024-11-12 11:16 - INFO - ---------------------------------------------
2024-11-12 11:23 - INFO - ---------------------------------------------
2024-11-12 11:23 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-12 11:23 - INFO - 	 Train Loss: 0.111
2024-11-12 11:23 - INFO - 	 Val. Loss: 0.146
2024-11-12 11:23 - INFO - 	 ROC-AUC: 0.949
2024-11-12 11:23 - INFO - 	 PR-AUC: 0.451
2024-11-12 11:23 - INFO - 	 Best Val. Loss: 0.133
2024-11-12 11:23 - INFO - 	 Best ROC-AUC: 0.960
2024-11-12 11:23 - INFO - 	 Best PR-AUC: 0.484
2024-11-12 11:23 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.907
2024-11-12 11:23 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.286
2024-11-12 11:23 - INFO - ---------------------------------------------
2024-11-12 11:30 - INFO - ---------------------------------------------
2024-11-12 11:30 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-12 11:30 - INFO - 	 New best val_rocauc loss was found, current best value is 0.48721
2024-11-12 11:30 - INFO - 	 Train Loss: 0.109
2024-11-12 11:30 - INFO - 	 Val. Loss: 0.136
2024-11-12 11:30 - INFO - 	 ROC-AUC: 0.965
2024-11-12 11:30 - INFO - 	 PR-AUC: 0.487
2024-11-12 11:30 - INFO - 	 Best Val. Loss: 0.133
2024-11-12 11:30 - INFO - 	 Best ROC-AUC: 0.965
2024-11-12 11:30 - INFO - 	 Best PR-AUC: 0.487
2024-11-12 11:30 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-12 11:30 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.283
2024-11-12 11:30 - INFO - ---------------------------------------------
2024-11-12 11:38 - INFO - ---------------------------------------------
2024-11-12 11:38 - INFO - Epoch: 06 | Time: 7m 8s
2024-11-12 11:38 - INFO - 	 New best val_rocauc loss was found, current best value is 0.50833
2024-11-12 11:38 - INFO - 	 Train Loss: 0.102
2024-11-12 11:38 - INFO - 	 Val. Loss: 0.113
2024-11-12 11:38 - INFO - 	 ROC-AUC: 0.960
2024-11-12 11:38 - INFO - 	 PR-AUC: 0.508
2024-11-12 11:38 - INFO - 	 Best Val. Loss: 0.113
2024-11-12 11:38 - INFO - 	 Best ROC-AUC: 0.965
2024-11-12 11:38 - INFO - 	 Best PR-AUC: 0.508
2024-11-12 11:38 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-12 11:38 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.308
2024-11-12 11:38 - INFO - ---------------------------------------------
2024-11-12 11:45 - INFO - ---------------------------------------------
2024-11-12 11:45 - INFO - Epoch: 07 | Time: 7m 6s
2024-11-12 11:45 - INFO - 	 New best val_rocauc loss was found, current best value is 0.55262
2024-11-12 11:45 - INFO - 	 Train Loss: 0.099
2024-11-12 11:45 - INFO - 	 Val. Loss: 0.116
2024-11-12 11:45 - INFO - 	 ROC-AUC: 0.964
2024-11-12 11:45 - INFO - 	 PR-AUC: 0.553
2024-11-12 11:45 - INFO - 	 Best Val. Loss: 0.113
2024-11-12 11:45 - INFO - 	 Best ROC-AUC: 0.965
2024-11-12 11:45 - INFO - 	 Best PR-AUC: 0.553
2024-11-12 11:45 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.916
2024-11-12 11:45 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.333
2024-11-12 11:45 - INFO - ---------------------------------------------
2024-11-12 11:52 - INFO - ---------------------------------------------
2024-11-12 11:52 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-12 11:52 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5959
2024-11-12 11:52 - INFO - 	 Train Loss: 0.097
2024-11-12 11:52 - INFO - 	 Val. Loss: 0.120
2024-11-12 11:52 - INFO - 	 ROC-AUC: 0.966
2024-11-12 11:52 - INFO - 	 PR-AUC: 0.596
2024-11-12 11:52 - INFO - 	 Best Val. Loss: 0.113
2024-11-12 11:52 - INFO - 	 Best ROC-AUC: 0.966
2024-11-12 11:52 - INFO - 	 Best PR-AUC: 0.596
2024-11-12 11:52 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.915
2024-11-12 11:52 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.347
2024-11-12 11:52 - INFO - ---------------------------------------------
2024-11-12 11:59 - INFO - ---------------------------------------------
2024-11-12 11:59 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-12 11:59 - INFO - 	 New best val_rocauc loss was found, current best value is 0.6115
2024-11-12 11:59 - INFO - 	 Train Loss: 0.096
2024-11-12 11:59 - INFO - 	 Val. Loss: 0.100
2024-11-12 11:59 - INFO - 	 ROC-AUC: 0.971
2024-11-12 11:59 - INFO - 	 PR-AUC: 0.611
2024-11-12 11:59 - INFO - 	 Best Val. Loss: 0.100
2024-11-12 11:59 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 11:59 - INFO - 	 Best PR-AUC: 0.611
2024-11-12 11:59 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-12 11:59 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-11-12 11:59 - INFO - ---------------------------------------------
2024-11-12 12:06 - INFO - ---------------------------------------------
2024-11-12 12:06 - INFO - Epoch: 10 | Time: 7m 7s
2024-11-12 12:06 - INFO - 	 Train Loss: 0.093
2024-11-12 12:06 - INFO - 	 Val. Loss: 0.167
2024-11-12 12:06 - INFO - 	 ROC-AUC: 0.948
2024-11-12 12:06 - INFO - 	 PR-AUC: 0.502
2024-11-12 12:06 - INFO - 	 Best Val. Loss: 0.100
2024-11-12 12:06 - INFO - 	 Best ROC-AUC: 0.971
2024-11-12 12:06 - INFO - 	 Best PR-AUC: 0.611
2024-11-12 12:06 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.947
2024-11-12 12:06 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.431
2024-11-12 12:06 - INFO - ---------------------------------------------
2024-11-12 12:08 - INFO - Fit the preprocessing pipeline
2024-11-12 12:08 - INFO - Training using device: cuda
2024-11-12 12:08 - INFO - Creating generators
2024-11-12 12:08 - INFO - The model has 2,246,929 trainable parameters
2024-11-12 12:08 - INFO - * Model:
2024-11-12 12:08 - INFO - * -----------
2024-11-12 12:08 - INFO - CombinedModel(
  (upstream_model): TSTransformerEncoderCNN(
    (project_input): Linear(in_features=12, out_features=128, bias=True)
    (encoder): Linear(in_features=12, out_features=128, bias=True)
    (transformer_encoder): TransformerEncoder(
      (layers): ModuleList(
        (0-7): 8 x TransformerEncoderLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
          )
          (linear1): Linear(in_features=128, out_features=512, bias=True)
          (dropout): Dropout(p=0.4, inplace=False)
          (linear2): Linear(in_features=512, out_features=128, bias=True)
          (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          (dropout1): Dropout(p=0.4, inplace=False)
          (dropout2): Dropout(p=0.4, inplace=False)
        )
      )
    )
    (output_layer): Linear(in_features=128, out_features=12, bias=True)
    (dropout1): Dropout(p=0.4, inplace=False)
    (cnn): Conv1d(128, 12, kernel_size=(3,), stride=(1,), padding=(1,))
  )
  (downstream_model): DownstreamInception(
    (conv1): ConvBlock(
      (conv): Conv1d(12, 64, kernel_size=(7,), stride=(2,), padding=(3,))
      (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (conv2): ConvBlock(
      (conv): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
      (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (inception3a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(128, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 32, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception3b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(128, 192, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(256, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(32, 96, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4a): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(480, 192, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 96, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(96, 208, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(208, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(480, 16, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(16, 48, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(480, 64, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (inception4b): InceptionBlock(
      (branch1): ConvBlock(
        (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
        (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (branch2): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 112, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(112, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch3): Sequential(
        (0): ConvBlock(
          (conv): Conv1d(512, 24, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): ConvBlock(
          (conv): Conv1d(24, 64, kernel_size=(5,), stride=(1,), padding=(2,))
          (bn): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (branch4): Sequential(
        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
        (1): ConvBlock(
          (conv): Conv1d(512, 32, kernel_size=(1,), stride=(1,))
          (bn): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(0,))
    (dropout): Dropout(p=0.5, inplace=False)
    (fc): Linear(in_features=8480, out_features=1, bias=True)
    (sigmoid): Sigmoid()
  )
)
2024-11-12 12:08 - INFO - * -----------
2024-11-12 12:15 - INFO - ---------------------------------------------
2024-11-12 12:15 - INFO - Epoch: 01 | Time: 7m 7s
2024-11-12 12:15 - INFO - 	 New best val_rocauc loss was found, current best value is 0.42166
2024-11-12 12:15 - INFO - 	 Train Loss: 0.147
2024-11-12 12:15 - INFO - 	 Val. Loss: 0.148
2024-11-12 12:15 - INFO - 	 ROC-AUC: 0.906
2024-11-12 12:15 - INFO - 	 PR-AUC: 0.422
2024-11-12 12:15 - INFO - 	 Best Val. Loss: 0.148
2024-11-12 12:15 - INFO - 	 Best ROC-AUC: 0.906
2024-11-12 12:15 - INFO - 	 Best PR-AUC: 0.422
2024-11-12 12:15 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.832
2024-11-12 12:15 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.218
2024-11-12 12:15 - INFO - ---------------------------------------------
2024-11-12 12:22 - INFO - ---------------------------------------------
2024-11-12 12:22 - INFO - Epoch: 02 | Time: 7m 7s
2024-11-12 12:22 - INFO - 	 New best val_rocauc loss was found, current best value is 0.43062
2024-11-12 12:22 - INFO - 	 Train Loss: 0.127
2024-11-12 12:22 - INFO - 	 Val. Loss: 0.141
2024-11-12 12:22 - INFO - 	 ROC-AUC: 0.938
2024-11-12 12:22 - INFO - 	 PR-AUC: 0.431
2024-11-12 12:22 - INFO - 	 Best Val. Loss: 0.141
2024-11-12 12:22 - INFO - 	 Best ROC-AUC: 0.938
2024-11-12 12:22 - INFO - 	 Best PR-AUC: 0.431
2024-11-12 12:22 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.898
2024-11-12 12:22 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.280
2024-11-12 12:22 - INFO - ---------------------------------------------
2024-11-12 12:29 - INFO - ---------------------------------------------
2024-11-12 12:29 - INFO - Epoch: 03 | Time: 7m 6s
2024-11-12 12:29 - INFO - 	 New best val_rocauc loss was found, current best value is 0.45101
2024-11-12 12:29 - INFO - 	 Train Loss: 0.115
2024-11-12 12:29 - INFO - 	 Val. Loss: 0.148
2024-11-12 12:29 - INFO - 	 ROC-AUC: 0.943
2024-11-12 12:29 - INFO - 	 PR-AUC: 0.451
2024-11-12 12:29 - INFO - 	 Best Val. Loss: 0.141
2024-11-12 12:29 - INFO - 	 Best ROC-AUC: 0.943
2024-11-12 12:29 - INFO - 	 Best PR-AUC: 0.451
2024-11-12 12:29 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.893
2024-11-12 12:29 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.280
2024-11-12 12:29 - INFO - ---------------------------------------------
2024-11-12 12:36 - INFO - ---------------------------------------------
2024-11-12 12:36 - INFO - Epoch: 04 | Time: 7m 7s
2024-11-12 12:36 - INFO - 	 New best val_rocauc loss was found, current best value is 0.5333
2024-11-12 12:36 - INFO - 	 Train Loss: 0.107
2024-11-12 12:36 - INFO - 	 Val. Loss: 0.104
2024-11-12 12:36 - INFO - 	 ROC-AUC: 0.959
2024-11-12 12:36 - INFO - 	 PR-AUC: 0.533
2024-11-12 12:36 - INFO - 	 Best Val. Loss: 0.104
2024-11-12 12:36 - INFO - 	 Best ROC-AUC: 0.959
2024-11-12 12:36 - INFO - 	 Best PR-AUC: 0.533
2024-11-12 12:36 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-12 12:36 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-12 12:36 - INFO - ---------------------------------------------
2024-11-12 12:43 - INFO - ---------------------------------------------
2024-11-12 12:43 - INFO - Epoch: 05 | Time: 7m 7s
2024-11-12 12:43 - INFO - 	 Train Loss: 0.106
2024-11-12 12:43 - INFO - 	 Val. Loss: 0.138
2024-11-12 12:43 - INFO - 	 ROC-AUC: 0.931
2024-11-12 12:43 - INFO - 	 PR-AUC: 0.438
2024-11-12 12:43 - INFO - 	 Best Val. Loss: 0.104
2024-11-12 12:43 - INFO - 	 Best ROC-AUC: 0.959
2024-11-12 12:43 - INFO - 	 Best PR-AUC: 0.533
2024-11-12 12:43 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.937
2024-11-12 12:43 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-12 12:43 - INFO - ---------------------------------------------
2024-11-12 12:51 - INFO - ---------------------------------------------
2024-11-12 12:51 - INFO - Epoch: 06 | Time: 7m 7s
2024-11-12 12:51 - INFO - 	 Train Loss: 0.101
2024-11-12 12:51 - INFO - 	 Val. Loss: 0.134
2024-11-12 12:51 - INFO - 	 ROC-AUC: 0.962
2024-11-12 12:51 - INFO - 	 PR-AUC: 0.437
2024-11-12 12:51 - INFO - 	 Best Val. Loss: 0.104
2024-11-12 12:51 - INFO - 	 Best ROC-AUC: 0.962
2024-11-12 12:51 - INFO - 	 Best PR-AUC: 0.533
2024-11-12 12:51 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-12 12:51 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.363
2024-11-12 12:51 - INFO - ---------------------------------------------
2024-11-12 12:58 - INFO - ---------------------------------------------
2024-11-12 12:58 - INFO - Epoch: 07 | Time: 7m 8s
2024-11-12 12:58 - INFO - 	 New best val_rocauc loss was found, current best value is 0.57808
2024-11-12 12:58 - INFO - 	 Train Loss: 0.099
2024-11-12 12:58 - INFO - 	 Val. Loss: 0.099
2024-11-12 12:58 - INFO - 	 ROC-AUC: 0.959
2024-11-12 12:58 - INFO - 	 PR-AUC: 0.578
2024-11-12 12:58 - INFO - 	 Best Val. Loss: 0.099
2024-11-12 12:58 - INFO - 	 Best ROC-AUC: 0.962
2024-11-12 12:58 - INFO - 	 Best PR-AUC: 0.578
2024-11-12 12:58 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.928
2024-11-12 12:58 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.462
2024-11-12 12:58 - INFO - ---------------------------------------------
2024-11-12 13:05 - INFO - ---------------------------------------------
2024-11-12 13:05 - INFO - Epoch: 08 | Time: 7m 8s
2024-11-12 13:05 - INFO - 	 New best val_rocauc loss was found, current best value is 0.62243
2024-11-12 13:05 - INFO - 	 Train Loss: 0.096
2024-11-12 13:05 - INFO - 	 Val. Loss: 0.089
2024-11-12 13:05 - INFO - 	 ROC-AUC: 0.970
2024-11-12 13:05 - INFO - 	 PR-AUC: 0.622
2024-11-12 13:05 - INFO - 	 Best Val. Loss: 0.089
2024-11-12 13:05 - INFO - 	 Best ROC-AUC: 0.970
2024-11-12 13:05 - INFO - 	 Best PR-AUC: 0.622
2024-11-12 13:05 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-12 13:05 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.461
2024-11-12 13:05 - INFO - ---------------------------------------------
2024-11-12 13:12 - INFO - ---------------------------------------------
2024-11-12 13:12 - INFO - Epoch: 09 | Time: 7m 7s
2024-11-12 13:12 - INFO - 	 New best val_rocauc loss was found, current best value is 0.65416
2024-11-12 13:12 - INFO - 	 Train Loss: 0.097
2024-11-12 13:12 - INFO - 	 Val. Loss: 0.094
2024-11-12 13:12 - INFO - 	 ROC-AUC: 0.953
2024-11-12 13:12 - INFO - 	 PR-AUC: 0.654
2024-11-12 13:12 - INFO - 	 Best Val. Loss: 0.089
2024-11-12 13:12 - INFO - 	 Best ROC-AUC: 0.970
2024-11-12 13:12 - INFO - 	 Best PR-AUC: 0.654
2024-11-12 13:12 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-12 13:12 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.514
2024-11-12 13:12 - INFO - ---------------------------------------------
2024-11-12 13:19 - INFO - ---------------------------------------------
2024-11-12 13:19 - INFO - Epoch: 10 | Time: 7m 6s
2024-11-12 13:19 - INFO - 	 Train Loss: 0.096
2024-11-12 13:19 - INFO - 	 Val. Loss: 0.093
2024-11-12 13:19 - INFO - 	 ROC-AUC: 0.961
2024-11-12 13:19 - INFO - 	 PR-AUC: 0.652
2024-11-12 13:19 - INFO - 	 Best Val. Loss: 0.089
2024-11-12 13:19 - INFO - 	 Best ROC-AUC: 0.970
2024-11-12 13:19 - INFO - 	 Best PR-AUC: 0.654
2024-11-12 13:19 - INFO - 	 Test-ROC-AUC under Best Validation ROC-AUC: 0.964
2024-11-12 13:19 - INFO - 	 Test-PR-AUC under Best Validation Best PR-AUC: 0.514
2024-11-12 13:19 - INFO - ---------------------------------------------
